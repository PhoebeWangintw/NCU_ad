Gadgets information
============================================================
0x00000000001949c8 : adc ah, ah ; sti ; call qword ptr [rax]
0x00000000001876ec : adc ah, ch ; int1 ; jmp qword ptr [rax]
0x000000000019c75d : adc al, 0 ; add al, dh ; outsd dx, dword ptr [rsi] ; std ; call qword ptr [rcx]
0x000000000014695f : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001469c9 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001a7578 : adc al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x00000000001a7518 : adc al, 0 ; add byte ptr [rax], al ; ret 0
0x00000000000fc46e : adc al, 0 ; add byte ptr [rax], al ; sub eax, edx ; ret
0x00000000001a7560 : adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x000000000019c7b5 : adc al, 0 ; add byte ptr [rax], bh ; add ebp, ecx ; call qword ptr [rax]
0x000000000004b4d5 : adc al, 0 ; call 0x77734
0x000000000004b4d4 : adc al, 0 ; call 0x77735
0x0000000000047025 : adc al, 0 ; mov rax, rbx ; pop rbx ; ret
0x0000000000033285 : adc al, 0 ; movsxd rcx, dword ptr [rdi + rcx*4] ; add rcx, rdi ; jmp rcx
0x000000000012a7c5 : adc al, 0x10 ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000001ac5e4 : adc al, 0x13 ; add dword ptr [rax], eax ; js 0x1ac5c8 ; jmp qword ptr [rcx]
0x0000000000150925 : adc al, 0x13 ; jmp rdx
0x000000000009eb85 : adc al, 0x16 ; sub eax, edx ; ret
0x000000000019cce4 : adc al, 0x1a ; add byte ptr [rax], al ; call 0x2119b607
0x00000000000fcb6a : adc al, 0x24 ; add rsp, 0x18 ; mov eax, edx ; ret
0x0000000000039fb8 : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x00000000001ad9e4 : adc al, 0x27 ; add dword ptr [rax], eax ; test al, 0xf4 ; jmp qword ptr [rcx]
0x0000000000136ae1 : adc al, 0x29 ; add byte ptr [rbp + 0xa], dh ; jmp 0x136b13
0x00000000000a93b3 : adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000c197b : adc al, 0x31 ; rol byte ptr [rcx - 0x7d], cl ; clc ; add dword ptr [rdi], ecx ; sahf ; ret 0x1fbd
0x000000000019a1c8 : adc al, 0x35 ; stc ; jmp rsp
0x00000000001987a0 : adc al, 0x41 ; cmc ; call rsp
0x000000000007ed8a : adc al, 0x41 ; pop rsp ; ret
0x00000000000a6af0 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x14] ; ret
0x00000000000a7943 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x15] ; ret
0x000000000009e73b : adc al, 0x48 ; lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x0000000000020825 : adc al, 0x48 ; mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000019aa18 : adc al, 0x49 ; cli ; jmp rsp
0x0000000000197830 : adc al, 0x49 ; out dx, eax ; call rsp
0x00000000001983b0 : adc al, 0x6a ; jmp rsp
0x000000000008592a : adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x000000000002ec97 : adc al, 0x88 ; add rax, rdx ; jmp rax
0x00000000000f6e66 : adc al, 0x89 ; ret 0xdaf7
0x0000000000072e2e : adc al, 0x8a ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000005bf04 : adc al, 0x90 ; add rax, rdx ; jmp rax
0x0000000000063df7 : adc al, 0x91 ; add rcx, rdx ; jmp rcx
0x00000000000e07d4 : adc al, 0x91 ; add rdx, rcx ; jmp rdx
0x0000000000147df0 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000014651e : adc al, 0x91 ; sub eax, edx ; ret
0x0000000000150921 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000008486a : adc al, 0x98 ; add rax, rdx ; jmp rax
0x0000000000089367 : adc al, 0xa ; jmp r10
0x000000000009ecf3 : adc al, 0xa ; sub eax, edx ; ret
0x000000000005c0fa : adc al, 0xa0 ; add rax, rdx ; jmp rax
0x000000000019ad18 : adc al, 0xa7 ; cli ; jmp rsp
0x00000000000d9087 : adc al, 0xa8 ; add rax, rdx ; jmp rax
0x00000000000cd25d : adc al, 0xb0 ; add rax, rdx ; jmp rax
0x00000000001a64e4 : adc al, 0xb2 ; add byte ptr [rax], al ; or bl, bl ; out dx, al ; jmp qword ptr [rsi]
0x000000000010a2c4 : adc al, 0xb2 ; add eax, dword ptr [rdx + rcx] ; ret
0x0000000000047ff1 : adc al, 0xc0 ; mov qword ptr [rsi + rax*8], rdx ; xor eax, eax ; pop rbx ; ret
0x0000000000047ff5 : adc al, 0xc6 ; xor eax, eax ; pop rbx ; ret
0x0000000000035f34 : adc al, 0xc7 ; xor eax, eax ; ret
0x00000000001a8be4 : adc al, 0xd9 ; add byte ptr [rax], al ; sbb byte ptr [rbx], ah ; int1 ; call qword ptr [rcx]
0x00000000000ba822 : adc al, 0xe ; jne 0xba81d ; ret
0x0000000000144631 : adc al, 0xe ; sub eax, edx ; ret
0x00000000001a97e4 : adc al, 0xe5 ; add byte ptr [rax], al ; out 0xf1, al ; jmp qword ptr [rdi]
0x00000000001a98e4 : adc al, 0xe6 ; add byte ptr [rax], al ; clc ; out 0xf1, al ; jmp qword ptr [rdi]
0x0000000000002b87 : adc al, 0xe7 ; ret
0x000000000019cd31 : adc al, 0xe9 ; call qword ptr [rcx]
0x00000000000c0b25 : adc al, 0xe9 ; ret 0xffef
0x00000000000c1bdc : adc al, 0xe9 ; ret 0xfff9
0x0000000000173691 : adc al, 0xea ; test rdx, rdx ; je 0x1736a1 ; call rdx
0x00000000001a2249 : adc al, 0xed ; jmp qword ptr [rax]
0x0000000000199b28 : adc al, 0xf ; clc ; call rsp
0x00000000000a74b9 : adc al, 0xf ; test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x00000000001aa9e4 : adc al, 0xf7 ; add byte ptr [rax], al ; mov byte ptr [rdi], ah ; jmp qword ptr [rdi]
0x0000000000194b20 : adc al, 0xfb ; call rax
0x000000000013f8dd : adc al, 0xfc ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x0000000000194e7d : adc al, 0xfc ; jmp qword ptr [rax]
0x0000000000172048 : adc al, 1 ; add byte ptr [rax], al ; ret
0x00000000001ac6f5 : adc al, 1 ; add byte ptr [rax], bh ; fdiv st(3) ; call qword ptr [rdx]
0x000000000011da23 : adc al, 7 ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000009e186 : adc al, 7 ; cmp edx, esi ; je 0x9e187 ; ret
0x000000000009e0b2 : adc al, 7 ; test dl, dl ; jne 0x9e0af ; ret
0x0000000000197a74 : adc al, 9 ; add dword ptr [rax], eax ; add al, 0xfd ; out dx, eax ; call rsp
0x0000000000044dff : adc al, 9 ; ret 0x9f74
0x00000000001949c0 : adc al, ah ; sti ; call qword ptr [rax]
0x0000000000146b07 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146b71 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000057e8 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000007600 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 4
0x00000000000007ba : adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x0000000000021bdd : adc al, byte ptr [rax] ; mov rdi, rbx ; call r14
0x00000000000222bb : adc al, byte ptr [rax] ; mov rdi, rbx ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x0000000000063832 : adc al, byte ptr [rax] ; movsxd rax, dword ptr [rcx + rax*4] ; add rcx, rax ; jmp rcx
0x000000000005bf00 : adc al, byte ptr [rax] ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x0000000000063df3 : adc al, byte ptr [rax] ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rcx, rdx ; jmp rcx
0x000000000007d2c1 : adc al, byte ptr [rbp + 0x5b010034] ; ret
0x00000000000afb8d : adc al, byte ptr [rbx - 0x76b7cf05] ; call 0x4ccd90b0
0x00000000000b5035 : adc al, byte ptr [rbx - 0x76b7cf05] ; call 0x4ccde558
0x00000000001aadca : adc al, byte ptr [rbx] ; ret 0xa02
0x00000000001ac5cd : adc al, byte ptr [rcx] ; add byte ptr [rax - 0x29], ah ; jmp qword ptr [rcx]
0x00000000001ac5b5 : adc al, byte ptr [rcx] ; add byte ptr [rax - 0x29], cl ; jmp qword ptr [rcx]
0x00000000001ac505 : adc al, byte ptr [rcx] ; add byte ptr [rax], bl ; xlatb ; call qword ptr [rbx]
0x00000000001ac545 : adc al, byte ptr [rcx] ; add byte ptr [rax], bl ; xlatb ; call qword ptr [rsi]
0x00000000001ac585 : adc al, byte ptr [rcx] ; add byte ptr [rax], bl ; xlatb ; jmp qword ptr [rcx]
0x00000000001ac59d : adc al, byte ptr [rcx] ; add byte ptr [rax], dh ; xlatb ; jmp qword ptr [rcx]
0x00000000000a1fe4 : adc al, byte ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000fee0b : adc al, ch ; jmp rbx
0x0000000000140c07 : adc al, ch ; ret
0x0000000000194a90 : adc bh, 0xfb ; inc dword ptr [rax - 0x27] ; sti ; jmp qword ptr [rax]
0x00000000001ae1c0 : adc bh, bl ; hlt ; jmp qword ptr [rcx]
0x0000000000194605 : adc bh, bl ; jmp rax
0x0000000000194601 : adc bh, bl ; push rax ; adc bh, bl ; jmp rax
0x0000000000003afb : adc bh, byte ptr [rax] ; cwde ; ret
0x00000000000abdf0 : adc bh, byte ptr [rbx] ; ja 0xabe04 ; cmove rax, rcx ; ret
0x00000000000e1549 : adc bh, dh ; ret 0x30f
0x000000000011d8f4 : adc bh, dh ; ret 0x8080
0x00000000001945f9 : adc bl, bh ; call qword ptr [rax]
0x0000000000034f28 : adc bl, bl ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x000000000008ef35 : adc bl, ch ; call 0xffffffffc3d9788a
0x0000000000089045 : adc bl, ch ; call 0xffffffffc401199a
0x000000000008a845 : adc bl, ch ; call 0xffffffffc401319a
0x00000000001ae6e0 : adc bl, ch ; hlt ; jmp rdx
0x0000000000048942 : adc bl, ch ; jno 0x48998 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000008e854 : adc bl, dh ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x00000000000a60d6 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000a5446 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a54b7 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a5417 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000002da6a : adc bl, dh ; ret
0x00000000000a60d5 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000a5445 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000001406fc : adc bpl, byte ptr [rax] ; add bl, dh ; ret
0x0000000000079546 : adc byte ptr [r11 + 6], r14b ; movzx eax, byte ptr [rax] ; ret
0x00000000001148d1 : adc byte ptr [r13 - 0xcf68a40], r8b ; ret
0x0000000000088952 : adc byte ptr [r15], cl ; mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x000000000003736d : adc byte ptr [r15], cl ; xchg eax, ebx ; ret 0x3948
0x0000000000037eba : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3949
0x0000000000037366 : adc byte ptr [r8 + 0x39], r9b ; ret
0x0000000000142e27 : adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000000c7a89 : adc byte ptr [r8 - 0x77], cl ; out dx, al ; xor edx, edx ; jmp 0xc7a5d
0x000000000007ccac : adc byte ptr [r8 - 0x77], cl ; ret 0x348
0x00000000000ce9f5 : adc byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000a932c : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a934e : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a938c : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a940e : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x0000000000087e24 : adc byte ptr [r8], r8b ; mov rdx, rcx ; jmp 0x87df5
0x0000000000073fc3 : adc byte ptr [r9 + 0x2b], r9b ; or byte ptr [r8 + 0x29], r9b ; ret
0x000000000004853c : adc byte ptr [rax + 0x29], cl ; ret
0x0000000000052b6f : adc byte ptr [rax + 0x29], cl ; ret 0x8b48
0x0000000000037367 : adc byte ptr [rax + 0x39], cl ; ret
0x00000000001081df : adc byte ptr [rax + 0x39], cl ; ret 0x1b72
0x00000000000e1981 : adc byte ptr [rax + 0x39], cl ; ret 0x2575
0x00000000000e19a6 : adc byte ptr [rax + 0x39], cl ; ret 0xe474
0x000000000007e92b : adc byte ptr [rax + 0x39], cl ; ret 0xef75
0x00000000001081de : adc byte ptr [rax + 0x39], r9b ; ret 0x1b72
0x0000000000142e28 : adc byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x0000000000078a6b : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000108e3a : adc byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xf48
0x000000000012e38a : adc byte ptr [rax + 1], bh ; pop rbx ; ret
0x0000000000131b26 : adc byte ptr [rax + 1], bh ; ret
0x00000000000aa55e : adc byte ptr [rax + 1], cl ; clc ; ret
0x000000000004902e : adc byte ptr [rax + 1], cl ; ret
0x000000000009e736 : adc byte ptr [rax + 1], cl ; ret 0x147c
0x0000000000109968 : adc byte ptr [rax + 1], cl ; ret 0x3948
0x00000000001351ed : adc byte ptr [rax + 1], dil ; ret
0x00000000000d837f : adc byte ptr [rax + 2], bh ; ret
0x00000000000a9534 : adc byte ptr [rax - 0x12cfdfb1], cl ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a9432 : adc byte ptr [rax - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a93b0 : adc byte ptr [rax - 0x12cfeba9], cl ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000fd193 : adc byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000010a2c1 : adc byte ptr [rax - 0x73], cl ; adc al, 0xb2 ; add eax, dword ptr [rdx + rcx] ; ret
0x000000000002da63 : adc byte ptr [rax - 0x73], cl ; add al, 0xb7 ; mov eax, dword ptr [rax + rdx] ; ret
0x0000000000093ab4 : adc byte ptr [rax - 0x73], cl ; jg 0x93ad1 ; jne 0x93aa8 ; ret
0x000000000010a4e5 : adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000010a4e4 : adc byte ptr [rax - 0x73], r9b ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000020828 : adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000093eda : adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x00000000000a4e2c : adc byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000071bb7 : adc byte ptr [rax - 0x77], cl ; jo 0x71bd5 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000072eec : adc byte ptr [rax - 0x77], cl ; or cl, byte ptr [rax - 0x77] ; ret
0x00000000000c7a8a : adc byte ptr [rax - 0x77], cl ; out dx, al ; xor edx, edx ; jmp 0xc7a5c
0x000000000012b83b : adc byte ptr [rax - 0x77], cl ; out dx, eax ; call r14
0x0000000000071b77 : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000023654 : adc byte ptr [rax - 0x77], cl ; push rbp ; test al, 0xe8 ; ret 0xffff
0x00000000000887a2 : adc byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x00000000000392a3 : adc byte ptr [rax - 0x77], cl ; ret
0x000000000007ccad : adc byte ptr [rax - 0x77], cl ; ret 0x348
0x0000000000115416 : adc byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000061cb2 : adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x000000000003d6c4 : adc byte ptr [rax - 0x77], cl ; ret 0x875
0x00000000000824d9 : adc byte ptr [rax - 0x77], cl ; ret 0x8d4e
0x000000000012f334 : adc byte ptr [rax - 0x77], cl ; ret 0x948
0x00000000000e4c74 : adc byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000014d49f : adc byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000165027 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x0000000000165063 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000a0bd4 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 0x13
0x0000000000122c90 : adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rdx + rbp*2 + 0x48], 0x39 ; ret 0x5576
0x000000000005bc91 : adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000086863 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000002656a : adc byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000048d51 : adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000049569 : adc byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000fdf97 : adc byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000001b0760 : adc byte ptr [rax - 0xb], bh ; jmp qword ptr [rbx]
0x00000000000e9edb : adc byte ptr [rax - 1], bh ; ret
0x000000000019533c : adc byte ptr [rax - 4], bl ; call qword ptr [rax + 0x10fffc57]
0x00000000001aa7f0 : adc byte ptr [rax], ah ; jmp qword ptr [rcx]
0x00000000000fba6b : adc byte ptr [rax], al ; add bl, al ; nop ; xor eax, eax ; ret
0x000000000006ab7c : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000148d81 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146d11 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000003b18c : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000012d0ea : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x000000000012b785 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000aa293 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000008b12c : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000018a40d : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000006b404 : adc byte ptr [rax], al ; add byte ptr [rax], al ; test ecx, ecx ; je 0x6b419 ; ret
0x0000000000114e71 : adc byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000007e3ab : adc byte ptr [rax], al ; call 0x4a674
0x0000000000194c10 : adc byte ptr [rax], al ; cld ; call rax
0x0000000000087e25 : adc byte ptr [rax], al ; mov rdx, rcx ; jmp 0x87df4
0x0000000000084866 : adc byte ptr [rax], al ; movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x0000000000045aeb : adc byte ptr [rax], al ; ret
0x00000000000d83f5 : adc byte ptr [rax], bh ; ret 0x860f
0x00000000000d8318 : adc byte ptr [rax], bh ; ret 0x870f
0x00000000000a932d : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a934f : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a938d : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a940f : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a9511 : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000e7361 : adc byte ptr [rbp + 0x39], al ; enter -0x2e89, 0x39 ; ret
0x000000000007ed1a : adc byte ptr [rbp + 0x39], cl ; ret
0x00000000000484e5 : adc byte ptr [rbp + rcx*4 + 0x34], cl ; ret 0x8d4a
0x0000000000194840 : adc byte ptr [rbp + rdi*8 - 0x25b6f01], ah ; call qword ptr [rax]
0x00000000001a3580 : adc byte ptr [rbp - 0x13], dl ; call qword ptr [rax]
0x000000000008e9f8 : adc byte ptr [rbp - 0x1b], dh ; mov rax, rdi ; ret
0x0000000000093ab8 : adc byte ptr [rbp - 0x1b], dh ; ret
0x0000000000194848 : adc byte ptr [rbp - 0x5a6f0003], ah ; std ; call qword ptr [rax]
0x00000000000c3fc3 : adc byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x84 ; ret 1
0x00000000001023e7 : adc byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret 0
0x00000000001148d2 : adc byte ptr [rbp - 0xcf68a40], al ; ret
0x00000000000abf22 : adc byte ptr [rbp - 0xd], dh ; ret
0x0000000000195354 : adc byte ptr [rbp - 4], dl ; call qword ptr [rax + 0x10fffc54]
0x000000000007d68c : adc byte ptr [rbx + 0x34], bl ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000082610 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008463b : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000003ada0 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001a5673 : adc byte ptr [rbx + 0xa440202], al ; ret
0x00000000001a152d : adc byte ptr [rbx + 0xa], ch ; ret
0x00000000001a4d92 : adc byte ptr [rbx + 0xaa30202], al ; ret
0x000000000019fa94 : adc byte ptr [rbx + 0xaae0202], al ; ret
0x0000000000079547 : adc byte ptr [rbx + 6], dh ; movzx eax, byte ptr [rax] ; ret
0x000000000007c7c2 : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000075a17 : adc byte ptr [rbx - 0x3f7a8fb9], cl ; js 0x75a31 ; ret
0x0000000000195d04 : adc byte ptr [rbx - 0x5d6f0004], ah ; cld ; call qword ptr [rax]
0x00000000000a9f30 : adc byte ptr [rbx - 0x6bf0fd06], al ; ret 0x8444
0x000000000012351b : adc byte ptr [rbx - 0x73], al ; add dword ptr [rdx], r8d ; pop rbx ; ret
0x00000000000abf6f : adc byte ptr [rbx - 0x7cb703ba], cl ; ret
0x0000000000114a66 : adc byte ptr [rbx - 0x7d], bl ; loopne 0x114a7f ; pop rbp ; pop r12 ; ret
0x00000000001af880 : adc byte ptr [rbx - 0xb], cl ; jmp rax
0x00000000001946a4 : adc byte ptr [rbx - 5], dl ; push rax ; push rsp ; sti ; jmp qword ptr [rax]
0x0000000000194e78 : adc byte ptr [rbx], 0xfc ; call rax
0x00000000001a4550 : adc byte ptr [rbx], al ; std ; jmp rsp
0x00000000001945e4 : adc byte ptr [rbx], cl ; sti ; jmp rax
0x0000000000194e08 : adc byte ptr [rbx], dh ; cld ; call qword ptr [rax]
0x00000000001aa4c0 : adc byte ptr [rbx], dl ; jmp qword ptr [rcx]
0x000000000000c428 : adc byte ptr [rcx + 0x13], ch ; add byte ptr [rax], al ; ret
0x0000000000073fc4 : adc byte ptr [rcx + 0x2b], cl ; or byte ptr [r8 + 0x29], r9b ; ret
0x00000000000946f7 : adc byte ptr [rcx + 1], cl ; ret 0x1b8
0x00000000000ed3e0 : adc byte ptr [rcx + rcx*4 + 0x78], al ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000074f27 : adc byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000008562b : adc byte ptr [rcx + rcx*4 - 0x1a], cl ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000006c428 : adc byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001a6d70 : adc byte ptr [rcx - 0x11], dh ; call rax
0x00000000000a9492 : adc byte ptr [rcx - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000a9472 : adc byte ptr [rcx - 0x12cfe8b1], cl ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000001a3d30 : adc byte ptr [rcx - 0x13], bh ; call qword ptr [rsi]
0x0000000000195d14 : adc byte ptr [rcx - 0x5f6f0004], ah ; cld ; call qword ptr [rax]
0x000000000011d071 : adc byte ptr [rcx - 0x73], cl ; js 0x11d07e ; call 0x892e7
0x00000000001723a8 : adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000fdf62 : adc byte ptr [rcx - 0x77], cl ; ret
0x00000000000331a0 : adc byte ptr [rcx - 0x77], cl ; ret 0x1274
0x00000000000fdfe2 : adc byte ptr [rcx - 0x77], cl ; ret 0x8348
0x00000000000e324c : adc byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x00000000000b82c8 : adc byte ptr [rcx - 0x7cb7e8cc], cl ; ret 0x4804
0x00000000000b824c : adc byte ptr [rcx - 0x7cb7eecc], cl ; ret 0x4804
0x000000000007ecc7 : adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x000000000012f2f1 : adc byte ptr [rcx - 0x7d], cl ; ret
0x00000000000e31f7 : adc byte ptr [rcx - 0x7d], cl ; ret 0x4201
0x00000000000ec56e : adc byte ptr [rcx - 0x7d], cl ; ret 0x4808
0x00000000000b8d0b : adc byte ptr [rcx - 0x7d], cl ; ret 0x4810
0x00000000001446b3 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000012f51f : adc byte ptr [rcx - 0x7d], cl ; ret 0x8320
0x0000000000148257 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000000b98f4 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000194c74 : adc byte ptr [rcx], al ; cld ; jmp rax
0x000000000012e58d : adc byte ptr [rcx], bh ; ret
0x000000000003ad2e : adc byte ptr [rcx], ch ; ret 0xc269
0x000000000007c7c5 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000194e04 : adc byte ptr [rcx], dh ; cld ; call qword ptr [rax]
0x0000000000086049 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000123947 : adc byte ptr [rcx], dh ; rol byte ptr [rax + rcx*4 + 0x5e], 3 ; pop rbx ; ret
0x00000000000fc56d : adc byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd7 ; ja 0xfc5a9 ; ret
0x000000000010e623 : adc byte ptr [rdi + 0x2000004], bh ; call rax
0x000000000019d3a0 : adc byte ptr [rdi - 0x17], ah ; jmp rax
0x00000000000c6e56 : adc byte ptr [rdi - 0x36], bh ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000195344 : adc byte ptr [rdi - 4], dl ; call qword ptr [rax + 0x10fffc56]
0x000000000011d9fe : adc byte ptr [rdi], al ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000002de55 : adc byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x0000000000118b4a : adc byte ptr [rdi], cl ; mov bh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x0000000000088953 : adc byte ptr [rdi], cl ; mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x0000000000035d62 : adc byte ptr [rdi], cl ; ret 0x8b48
0x0000000000168108 : adc byte ptr [rdi], cl ; test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x0000000000170173 : adc byte ptr [rdi], cl ; test edx, esi ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x00000000001458a1 : adc byte ptr [rdi], cl ; xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000145991 : adc byte ptr [rdi], cl ; xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001457b1 : adc byte ptr [rdi], cl ; xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014d0cb : adc byte ptr [rdi], cl ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014bbcf : adc byte ptr [rdi], cl ; xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x000000000014cdcf : adc byte ptr [rdi], cl ; xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014c4cf : adc byte ptr [rdi], cl ; xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014c7cf : adc byte ptr [rdi], cl ; xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014bec7 : adc byte ptr [rdi], cl ; xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001461f9 : adc byte ptr [rdi], cl ; xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x0000000000145d51 : adc byte ptr [rdi], cl ; xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x00000000001454e1 : adc byte ptr [rdi], cl ; xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x0000000000145f31 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001456c1 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x0000000000146111 : adc byte ptr [rdi], cl ; xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000146021 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000145963 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145a53 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145873 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c174 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014cd74 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d074 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c774 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c474 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000014be6c : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001455d1 : adc byte ptr [rdi], cl ; xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x00000000001494fd : adc byte ptr [rdi], cl ; xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014931d : adc byte ptr [rdi], cl ; xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000149cf5 : adc byte ptr [rdi], cl ; xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000148c15 : adc byte ptr [rdi], cl ; xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000149b15 : adc byte ptr [rdi], cl ; xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000145783 : adc byte ptr [rdi], cl ; xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001455a3 : adc byte ptr [rdi], cl ; xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145693 : adc byte ptr [rdi], cl ; xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001454b3 : adc byte ptr [rdi], cl ; xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x0000000000035dd3 : adc byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5489
0x0000000000099cc8 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret
0x000000000003736e : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x0000000000037ebb : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3949
0x00000000000ed3e9 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5408
0x00000000000378dc : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3948
0x0000000000003955 : adc byte ptr [rdx + 0x71], bh ; xchg eax, ebx ; and cl, ah ; ret
0x0000000000150e19 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000061fe1 : adc byte ptr [rdx + rdx*8 - 0x76b7d08c], al ; ret
0x000000000019d760 : adc byte ptr [rdx - 0x17], bh ; call qword ptr [rax]
0x0000000000194838 : adc byte ptr [rdx - 0x5cef0003], ah ; std ; call qword ptr [rax]
0x0000000000195d0c : adc byte ptr [rdx - 0x5e6f0004], ah ; cld ; call qword ptr [rax]
0x000000000018b9c0 : adc byte ptr [rdx - 0x75ef0006], cl ; cli ; call qword ptr [rax]
0x000000000018b9e0 : adc byte ptr [rdx - 0x775f0006], cl ; cli ; call qword ptr [rax]
0x00000000001aa450 : adc byte ptr [rdx], 0xf2 ; call qword ptr [rdx]
0x00000000000007b6 : adc byte ptr [rdx], ah ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x0000000000127baf : adc byte ptr [rdx], al ; je 0x127bbc ; ret
0x00000000001878c0 : adc byte ptr [rdx], al ; jmp qword ptr [rax]
0x00000000001a44e4 : adc byte ptr [rdx], al ; pop rbp ; ret
0x0000000000194db4 : adc byte ptr [rdx], ch ; cld ; push rax ; sub edi, esp ; call rax
0x000000000016e85b : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000194d64 : adc byte ptr [rdx], dh ; cld ; call qword ptr [rax]
0x000000000014004d : adc byte ptr [rip - 0x3fcf0000], al ; pop rbx ; ret
0x000000000016e70a : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x000000000016dd05 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000894b5 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008f3fb : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000000a562b : adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000a562a : adc byte ptr [rsi + 0xf], r12b ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x0000000000194850 : adc byte ptr [rsi - 0x596f0003], ah ; std ; jmp qword ptr [rax]
0x000000000019534c : adc byte ptr [rsi - 4], dl ; call qword ptr [rax + 0x10fffc55]
0x000000000003afda : adc byte ptr [rsp + 8], al ; add rsp, 0x18 ; ret
0x0000000000000453 : adc byte ptr [rsp + rcx], bl ; ret 0x4412
0x0000000000195cfc : adc byte ptr [rsp + rdi*8 - 0x35c6f01], ah ; call qword ptr [rax]
0x0000000000194d68 : adc byte ptr [rsp + rdi*8], dh ; call qword ptr [rax]
0x00000000000baeca : adc byte ptr [rsp - 0x10], al ; ret
0x000000000004a14f : adc byte ptr [rsp - 4], al ; ret
0x000000000004a195 : adc byte ptr [rsp - 8], al ; ret
0x0000000000087e23 : adc byte ptr ds:[r8], r8b ; mov rdx, rcx ; jmp 0x87df6
0x000000000014c177 : adc byte ptr es:[rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001406fd : adc ch, byte ptr [rax] ; add bl, dh ; ret
0x0000000000036872 : adc cl, al ; cmp byte ptr [rax], al ; ret
0x000000000009eb15 : adc cl, byte ptr [rax + 0x29] ; ret
0x00000000000bbbbe : adc cl, byte ptr [rax + 0x29] ; ret 0x6948
0x00000000000bbb3f : adc cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00000000000a9e03 : adc cl, byte ptr [rax - 0x2f] ; call 0xffffffffc30f2b5f
0x000000000004acaf : adc cl, byte ptr [rax - 0x75] ; adc cl, byte ptr [rbx + rcx*4 + 0x74] ; ret 0x4c40
0x000000000009ee2d : adc cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000000fdd38 : adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x000000000004705d : adc cl, byte ptr [rax - 0x7d] ; call 0xffffffffc33db86d
0x00000000000ff10e : adc cl, byte ptr [rax - 0x7d] ; ret
0x00000000000e2fdc : adc cl, byte ptr [rax - 0x7d] ; ret 0x4001
0x000000000009acc4 : adc cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x0000000000089035 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x000000000004acb2 : adc cl, byte ptr [rbx + rcx*4 + 0x74] ; ret 0x4c40
0x00000000000b8044 : adc cl, byte ptr [rcx - 0x7cb7e8cc] ; ret 0x4804
0x0000000000049561 : adc cl, byte ptr [rcx - 0x7d] ; ret
0x0000000000072794 : adc cl, byte ptr [rcx - 0x7d] ; ret 0x4410
0x000000000005488f : adc cl, ch ; ret
0x000000000008e8e0 : adc dh, bh ; ret
0x0000000000198a61 : adc dh, dh ; call rsp
0x000000000012bf4e : adc dh, dh ; ret 0x7401
0x0000000000080dee : adc dh, dh ; ret 0xf0f
0x00000000001aa451 : adc dh, dl ; call qword ptr [rdx]
0x00000000000022e3 : adc dh, dl ; ret
0x00000000001949c4 : adc dl, ah ; sti ; call qword ptr [rax]
0x0000000000194af4 : adc dl, al ; sti ; jmp qword ptr [rax - 0x3d]
0x00000000000bc3da : adc dl, byte ptr [rdi - 0x6af0ffd0] ; ret 0xf748
0x0000000000187678 : adc dl, ch ; int1 ; jmp qword ptr [rax]
0x00000000000bf67f : adc dword ptr [rax + 0x148000c], ecx ; clc ; jmp rax
0x0000000000025946 : adc dword ptr [rax + 0x39], ecx ; ret 0x8840
0x0000000000048ed3 : adc dword ptr [rax + 1], ecx ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x0000000000073fb5 : adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x00000000000495ac : adc dword ptr [rax - 0x73], ecx ; add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x0000000000173bcb : adc dword ptr [rax - 0x75], ecx ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000003a50e : adc dword ptr [rax - 0x77], ecx ; ret
0x000000000007e115 : adc dword ptr [rax - 0x77], ecx ; ret 0x8348
0x000000000007c76c : adc dword ptr [rax - 0x77], ecx ; ret 0x8b48
0x00000000000b824f : adc dword ptr [rax - 0x7d], ecx ; ret 0x4804
0x00000000000d8546 : adc dword ptr [rax - 0x7d], ecx ; ret 0x8301
0x0000000000088957 : adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x000000000014a71b : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x000000000013e839 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000110b89 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000146ca7 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148c19 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000173b6b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; nop ; ret
0x000000000006584c : adc dword ptr [rax], eax ; add dh, dh ; ret
0x0000000000029c44 : adc dword ptr [rax], eax ; mov rdi, rbx ; call r12
0x000000000006bc32 : adc dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000006cb69 : adc dword ptr [rax], eax ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rcx, rdx ; jmp rcx
0x000000000006ca4b : adc dword ptr [rax], eax ; movsxd rsi, dword ptr [rdi + rsi*4] ; add rdi, rsi ; jmp rdi
0x00000000000968ea : adc dword ptr [rbp + 0x38], eax ; ror byte ptr [rdi], 1 ; xchg eax, esp ; ret
0x000000000003b162 : adc dword ptr [rbx], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000d8528 : adc dword ptr [rcx + 0x39], ecx ; ret 0xc76
0x000000000009f457 : adc dword ptr [rcx + 7], edi ; ret
0x000000000009f0f2 : adc dword ptr [rcx - 1], ebx ; ret
0x000000000009f0b6 : adc dword ptr [rcx - 1], edi ; ret
0x000000000013ba0e : adc dword ptr [rcx], eax ; ja 0x13ba42 ; mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000010c116 : adc dword ptr [rcx], esi ; rcr byte ptr [rbx - 0x77], cl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000009f5b9 : adc dword ptr [rdi - 8], edi ; ret
0x00000000000348b4 : adc dword ptr [rdi], ecx ; ret
0x000000000003487d : adc dword ptr [rdi], ecx ; subsd xmm0, xmm1 ; ret
0x0000000000034c12 : adc dword ptr [rdi], ecx ; subss xmm0, xmm1 ; ret
0x00000000000a9b8c : adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000013d3fa : adc dword ptr [rip + 0x5de80005], ebx ; ret
0x00000000000a9cbf : adc dword ptr [rsi + 3], edx ; ret
0x00000000000a9d5c : adc dword ptr [rsi + 7], edx ; ret
0x00000000000e0532 : adc dword ptr [rsi + rsi + 0x48], esi ; mov edx, eax ; jmp 0xe04d4
0x00000000000a9b5e : adc dword ptr [rsi - 1], edx ; ret
0x0000000000146ca6 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000aa55a : adc eax, 0x10ef8348 ; add rax, rdi ; ret
0x0000000000194ebd : adc eax, 0x1690fffc ; cld ; jmp rax
0x00000000000de1b7 : adc eax, 0x1fffffe ; ret 0x8b49
0x0000000000173b8b : adc eax, 0x251d38 ; je 0x173b9a ; ret
0x00000000001405a7 : adc eax, 0x283e64 ; add rsp, 8 ; ret
0x0000000000137a49 : adc eax, 0x2905b2 ; mov qword ptr fs:[rax], rdx ; ret
0x000000000012d5c2 : adc eax, 0x2955b9 ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x0000000000108cef : adc eax, 0x2ba54c ; je 0x108d00 ; pop rbp ; ret
0x00000000000ff19e : adc eax, 0x2c6fad ; add rsp, 8 ; ret
0x0000000000088b5a : adc eax, 0x33a3f9 ; mov qword ptr [rsp], rax ; call qword ptr [rdx]
0x0000000000087c71 : adc eax, 0x33dbf2 ; add rsp, 0x18 ; ret
0x000000000003ee75 : adc eax, 0x358d4800 ; call rsi
0x0000000000041bb2 : adc eax, 0x358d4800 ; ret 0x14a9
0x0000000000136bb2 : adc eax, 0x3609 ; mov rdi, rbx ; call qword ptr [rax]
0x000000000003689d : adc eax, 0x38c7e6 ; ret
0x000000000002e196 : adc eax, 0x394d95 ; mov qword ptr fs:[rdx], rax ; ret
0x000000000002cae9 : adc eax, 0x397faf ; ret
0x000000000001f929 : adc eax, 0x3a8a3a ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000000ab1ea : adc eax, 0x3b30478b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x0000000000115a2c : adc eax, 0x4012f ; cmove rax, rdx ; ret
0x00000000000f56d7 : adc eax, 0x48000000 ; add esp, 0x18 ; ret
0x00000000001339dd : adc eax, 0x48ffffff ; mov edi, ebp ; call rax
0x0000000000034aa6 : adc eax, 0x540f6600 ; ret 0xf66
0x0000000000034ccc : adc eax, 0x590ff300 ; enter 0x280f, -0x3f ; ret
0x00000000000a5dd8 : adc eax, 0x621850f ; add byte ptr [rax], al ; ret
0x00000000000a74ec : adc eax, 0x71d850f ; add byte ptr [rax], al ; ret
0x0000000000146831 : adc eax, 0x83480000 ; ret 0xe910
0x00000000000234fd : adc eax, 0x83489066 ; ret
0x00000000000e1127 : adc eax, 0x83fff4cb ; call qword ptr [rax]
0x000000000019a455 : adc eax, 0x86040002 ; stc ; call rsp
0x000000000003d239 : adc eax, 0xc1834900 ; add dword ptr [rax - 0x7d], ecx ; ret 0x6610
0x000000000008e767 : adc eax, 0xc7404 ; cmove rax, rdx ; ret
0x00000000000ab4ea : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x000000000006e451 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x00000000000c0ecf : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000014a47e : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148a39 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000000e458 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x16
0x00000000000091ba : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000004b5c0 : adc eax, dword ptr [rax] ; movsxd rax, dword ptr [rax + rdx*4] ; add rax, rdi ; jmp rax
0x00000000000fb19c : adc eax, dword ptr [rbx + 0x1674a1f8] ; neg eax ; pop rbx ; ret
0x00000000001ac62d : adc eax, dword ptr [rcx] ; add al, al ; xlatb ; jmp qword ptr [rcx]
0x00000000001ac6a5 : adc eax, dword ptr [rcx] ; add byte ptr [rax - 0x28], cl ; call qword ptr [rdi]
0x00000000001ac5e5 : adc eax, dword ptr [rcx] ; add byte ptr [rax - 0x29], bh ; jmp qword ptr [rcx]
0x000000000019b0ed : adc eax, dword ptr [rcx] ; add byte ptr [rsi + rdi*2 - 4], ah ; call rsp
0x00000000000a1fe8 : adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x000000000014be6f : adc eax, dword ptr cs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000482b9 : adc eax, eax ; ret
0x00000000000483f6 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x0000000000183605 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x0000000000117de0 : adc ebp, ebx ; ret 0x1f0f
0x000000000019cbc9 : adc ebp, ecx ; call qword ptr [rbx]
0x000000000019cd01 : adc ebp, ecx ; call qword ptr [rcx]
0x000000000019cbb1 : adc ebp, ecx ; call qword ptr [rdx]
0x000000000019cb21 : adc ebp, ecx ; call qword ptr [rsi]
0x000000000019cce9 : adc ebp, ecx ; jmp qword ptr [rax]
0x0000000000197731 : adc ebp, edi ; jmp rsp
0x0000000000088ca4 : adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000010a4ec : adc ebx, eax ; nop ; mov eax, edi ; ret
0x000000000013ceee : adc ecx, dword ptr [rax + 0x39] ; ret
0x000000000002cb2b : adc ecx, dword ptr [rax - 0x75] ; cli ; ret
0x000000000007b97a : adc ecx, dword ptr [rax - 0x7b] ; push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x0000000000024301 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000009903d : adc ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000abbd4 : adc ecx, dword ptr [rax - 0x7d] ; ret 0x8b04
0x00000000000e3495 : adc ecx, dword ptr [rbp + 0xf049044] ; xchg eax, esp ; ret 0x9848
0x00000000000ad2a9 : adc ecx, dword ptr [rcx - 0x77] ; ret 0x8b8
0x000000000012d690 : adc ecx, dword ptr [rdi] ; mov dh, 0x40 ; or dh, dh ; ret 0x8802
0x00000000000a21b4 : adc ecx, dword ptr [rdx + 5] ; mov rax, rdi ; ret
0x00000000000a21d4 : adc ecx, dword ptr [rdx + 6] ; mov rax, rdi ; ret
0x00000000000a21f4 : adc ecx, dword ptr [rdx + 7] ; mov rax, rdi ; ret
0x00000000000a203e : adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x000000000019c901 : adc ecx, ebp ; call qword ptr [rdi]
0x00000000000db41a : adc ecx, edx ; call 0x42d03d67
0x00000000000db46a : adc ecx, edx ; call 0x43d03db7
0x00000000001ba221 : adc edi, eax ; jmp qword ptr [rbx]
0x0000000000194609 : adc edi, ebx ; call rax
0x00000000001992a1 : adc edi, esi ; call rsp
0x0000000000194e79 : adc edi, esp ; call rax
0x0000000000041bb1 : adc edx, dword ptr [rip + 0x358d4800] ; ret 0x14a9
0x00000000001aa3c1 : adc edx, esi ; jmp qword ptr [rcx]
0x0000000000184b1e : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, 0xc7 ; ret 0xe71f
0x00000000001aa4c1 : adc esi, edx ; jmp qword ptr [rcx]
0x000000000006ed9a : adc esi, esi ; ret 0xf20
0x00000000001816bc : adc esp, dword ptr [rcx] ; jmp 0x1816c2
0x00000000001816c0 : adc esp, dword ptr [rcx] ; jmp 0x1816c6
0x00000000001816c4 : adc esp, dword ptr [rcx] ; jmp 0x1816ca
0x00000000001816c8 : adc esp, dword ptr [rcx] ; jmp 0x1816ce
0x00000000001816cc : adc esp, dword ptr [rcx] ; jmp 0x1816d2
0x00000000001816d0 : adc esp, dword ptr [rcx] ; jmp 0x1816d6
0x00000000001816d4 : adc esp, dword ptr [rcx] ; jmp 0x1816da
0x00000000001816d8 : adc esp, dword ptr [rcx] ; jmp 0x1816de
0x00000000001816e4 : adc esp, dword ptr [rcx] ; jmp 0x1816ea
0x00000000001816e8 : adc esp, dword ptr [rcx] ; jmp 0x1816ee
0x00000000001816ec : adc esp, dword ptr [rcx] ; jmp 0x1816f2
0x00000000001816f0 : adc esp, dword ptr [rcx] ; jmp 0x1816f6
0x00000000001816f4 : adc esp, dword ptr [rcx] ; jmp 0x1816fa
0x00000000001816f8 : adc esp, dword ptr [rcx] ; jmp 0x1816fe
0x00000000001816fc : adc esp, dword ptr [rcx] ; jmp 0x181702
0x0000000000181700 : adc esp, dword ptr [rcx] ; jmp 0x181706
0x0000000000181704 : adc esp, dword ptr [rcx] ; jmp 0x18170a
0x0000000000181708 : adc esp, dword ptr [rcx] ; jmp 0x18170e
0x000000000018170c : adc esp, dword ptr [rcx] ; jmp 0x181712
0x0000000000181710 : adc esp, dword ptr [rcx] ; jmp 0x181716
0x0000000000181714 : adc esp, dword ptr [rcx] ; jmp 0x18171a
0x0000000000181718 : adc esp, dword ptr [rcx] ; jmp 0x18171e
0x000000000018171c : adc esp, dword ptr [rcx] ; jmp 0x181722
0x0000000000181720 : adc esp, dword ptr [rcx] ; jmp 0x181726
0x0000000000181724 : adc esp, dword ptr [rcx] ; jmp 0x18172a
0x0000000000181728 : adc esp, dword ptr [rcx] ; jmp 0x18172e
0x000000000018172c : adc esp, dword ptr [rcx] ; jmp 0x181732
0x0000000000181730 : adc esp, dword ptr [rcx] ; jmp 0x181736
0x0000000000181734 : adc esp, dword ptr [rcx] ; jmp 0x18173a
0x0000000000181740 : adc esp, dword ptr [rcx] ; jmp 0x181746
0x0000000000181744 : adc esp, dword ptr [rcx] ; jmp 0x18174a
0x00000000001817b8 : adc esp, dword ptr [rcx] ; jmp 0x1817be
0x00000000001817bc : adc esp, dword ptr [rcx] ; jmp 0x1817c2
0x00000000001817c0 : adc esp, dword ptr [rcx] ; jmp 0x1817c6
0x00000000001817c4 : adc esp, dword ptr [rcx] ; jmp 0x1817ca
0x00000000001817c8 : adc esp, dword ptr [rcx] ; jmp 0x1817ce
0x00000000001817cc : adc esp, dword ptr [rcx] ; jmp 0x1817d2
0x00000000001817d0 : adc esp, dword ptr [rcx] ; jmp 0x1817d6
0x00000000001817d4 : adc esp, dword ptr [rcx] ; jmp 0x1817da
0x00000000001817d8 : adc esp, dword ptr [rcx] ; jmp 0x1817de
0x00000000001817dc : adc esp, dword ptr [rcx] ; jmp 0x1817e2
0x00000000001817e0 : adc esp, dword ptr [rcx] ; jmp 0x1817e6
0x00000000001817e4 : adc esp, dword ptr [rcx] ; jmp 0x1817ea
0x00000000001817e8 : adc esp, dword ptr [rcx] ; jmp 0x1817ee
0x00000000001817ec : adc esp, dword ptr [rcx] ; jmp 0x1817f2
0x00000000001817f0 : adc esp, dword ptr [rcx] ; jmp 0x1817f6
0x00000000001817f4 : adc esp, dword ptr [rcx] ; jmp 0x1817fa
0x00000000001817f8 : adc esp, dword ptr [rcx] ; jmp 0x1817fe
0x00000000001817fc : adc esp, dword ptr [rcx] ; jmp 0x181802
0x0000000000181800 : adc esp, dword ptr [rcx] ; jmp 0x181806
0x0000000000181804 : adc esp, dword ptr [rcx] ; jmp 0x18180a
0x0000000000181808 : adc esp, dword ptr [rcx] ; jmp 0x18180e
0x000000000018180c : adc esp, dword ptr [rcx] ; jmp 0x181812
0x0000000000181810 : adc esp, dword ptr [rcx] ; jmp 0x181816
0x0000000000181814 : adc esp, dword ptr [rcx] ; jmp 0x18181a
0x0000000000181818 : adc esp, dword ptr [rcx] ; jmp 0x18181e
0x000000000018181c : adc esp, dword ptr [rcx] ; jmp 0x181822
0x0000000000181820 : adc esp, dword ptr [rcx] ; jmp 0x181826
0x0000000000181824 : adc esp, dword ptr [rcx] ; jmp 0x18182a
0x0000000000181828 : adc esp, dword ptr [rcx] ; jmp 0x18182e
0x000000000018182c : adc esp, dword ptr [rcx] ; jmp 0x181832
0x0000000000181830 : adc esp, dword ptr [rcx] ; jmp 0x181836
0x0000000000181834 : adc esp, dword ptr [rcx] ; jmp 0x18183a
0x0000000000181838 : adc esp, dword ptr [rcx] ; jmp 0x18183e
0x000000000018183c : adc esp, dword ptr [rcx] ; jmp 0x181842
0x0000000000181840 : adc esp, dword ptr [rcx] ; jmp 0x181846
0x0000000000181844 : adc esp, dword ptr [rcx] ; jmp 0x18184a
0x0000000000181848 : adc esp, dword ptr [rcx] ; jmp 0x18184e
0x000000000018184c : adc esp, dword ptr [rcx] ; jmp 0x181852
0x0000000000181850 : adc esp, dword ptr [rcx] ; jmp 0x181856
0x0000000000181854 : adc esp, dword ptr [rcx] ; jmp 0x18185a
0x0000000000181858 : adc esp, dword ptr [rcx] ; jmp 0x18185e
0x000000000018185c : adc esp, dword ptr [rcx] ; jmp 0x181862
0x0000000000181860 : adc esp, dword ptr [rcx] ; jmp 0x181866
0x0000000000181864 : adc esp, dword ptr [rcx] ; jmp 0x18186a
0x0000000000181868 : adc esp, dword ptr [rcx] ; jmp 0x18186e
0x0000000000181874 : adc esp, dword ptr [rcx] ; jmp 0x18187a
0x0000000000181878 : adc esp, dword ptr [rcx] ; jmp 0x18187e
0x000000000018187c : adc esp, dword ptr [rcx] ; jmp 0x181882
0x0000000000181880 : adc esp, dword ptr [rcx] ; jmp 0x181886
0x0000000000181884 : adc esp, dword ptr [rcx] ; jmp 0x18188a
0x0000000000181888 : adc esp, dword ptr [rcx] ; jmp 0x18188e
0x000000000018188c : adc esp, dword ptr [rcx] ; jmp 0x181892
0x0000000000181890 : adc esp, dword ptr [rcx] ; jmp 0x181896
0x0000000000181894 : adc esp, dword ptr [rcx] ; jmp 0x18189a
0x0000000000181898 : adc esp, dword ptr [rcx] ; jmp 0x18189e
0x000000000018189c : adc esp, dword ptr [rcx] ; jmp 0x1818a2
0x00000000001818a0 : adc esp, dword ptr [rcx] ; jmp 0x1818a6
0x000000000014c052 : adc qword ptr [r8], rax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000009f456 : adc qword ptr [rcx + 7], rdi ; ret
0x000000000009f0f1 : adc qword ptr [rcx - 1], rbx ; ret
0x000000000009f0b5 : adc qword ptr [rcx - 1], rdi ; ret
0x000000000009f5b8 : adc qword ptr [rdi - 8], rdi ; ret
0x00000000000a9cbe : adc qword ptr [rsi + 3], rdx ; ret
0x00000000000a9d5b : adc qword ptr [rsi + 7], rdx ; ret
0x00000000000a9b5d : adc qword ptr [rsi - 1], rdx ; ret
0x000000000008e853 : adc r11b, r14b ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x0000000000197730 : adc r13d, edi ; jmp rsp
0x000000000006e450 : adc r8, qword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x0000000000148ba0 : adc r8b, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000483f5 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x000000000008e8df : adc sil, r15b ; ret
0x000000000019c7b3 : add ah, ah ; adc al, 0 ; add byte ptr [rax], bh ; add ebp, ecx ; call qword ptr [rax]
0x00000000001ac5b3 : add ah, ah ; adc al, byte ptr [rcx] ; add byte ptr [rax - 0x29], cl ; jmp qword ptr [rcx]
0x00000000001ab7b3 : add ah, ah ; add al, 1 ; add byte ptr [rax - 0x13], bl ; call rcx
0x000000000019d9b3 : add ah, ah ; add byte ptr es:[rax], al ; cwde ; jge 0x19d9ac ; jmp qword ptr [rcx]
0x00000000001ba5b3 : add ah, ah ; add dword ptr [rax], eax ; js 0x1ba5d9 ; clc ; jmp qword ptr [rcx]
0x00000000001bb8b3 : add ah, ah ; add eax, 0x88880002 ; sti ; call rcx
0x00000000001b01b3 : add ah, ah ; add qword ptr [rax], r8 ; fsubr dword ptr [rsi - 0xb] ; jmp qword ptr [rcx]
0x00000000001ad6b3 : add ah, ah ; and eax, dword ptr [rcx] ; add byte ptr [rax - 0x65], bl ; hlt ; jmp qword ptr [rcx]
0x0000000000199daf : add ah, ah ; clc ; call rsp
0x00000000001975bf : add ah, ah ; jns 0x1975b5 ; jmp rsp
0x0000000000196ec7 : add ah, ah ; mov bh, 0xed ; call rsp
0x000000000019748f : add ah, ah ; out dx, al ; jmp rsp
0x00000000001a0db3 : add ah, ah ; pop rdx ; add byte ptr [rax], al ; shr spl, 1 ; call qword ptr [rax]
0x00000000001a07b3 : add ah, ah ; push rsp ; add byte ptr [rax], al ; pop rax ; stosd dword ptr [rdi], eax ; in al, dx ; jmp qword ptr [rcx]
0x00000000001a76b3 : add ah, ah ; ret
0x0000000000196f47 : add ah, ah ; ret 0xffed
0x000000000019943f : add ah, ah ; sbb al, 0xf7 ; jmp rsp
0x000000000019ad47 : add ah, ah ; test al, 0xfa ; jmp rsp
0x00000000001a0293 : add ah, al ; add byte ptr [r8], r8b ; js 0x1a02fd ; jmp 0x1a02a3
0x0000000000199e2f : add ah, al ; clc ; jmp rsp
0x000000000019a96f : add ah, al ; cli ; call rsp
0x000000000019a987 : add ah, al ; cmp al, 0xfa ; call rsp
0x000000000019eb93 : add ah, al ; cmp byte ptr [rax], al ; add al, bh ; shr ecx, 1 ; call qword ptr [rax]
0x000000000019ee93 : add ah, al ; cmp eax, dword ptr [rax] ; add byte ptr [rax], bh ; xor edx, ebp ; jmp rax
0x00000000001a9f93 : add ah, al ; in al, dx ; add byte ptr [rax], al ; test al, 0 ; call rdi
0x0000000000198daf : add ah, al ; je 0x198dad ; call rsp
0x00000000001975d7 : add ah, al ; jl 0x1975cd ; call rsp
0x000000000019a7af : add ah, al ; or edi, edx ; jmp rsp
0x0000000000198347 : add ah, al ; pop rdi ; call rsp
0x000000000019aa97 : add ah, al ; push rbp ; cli ; call rsp
0x00000000001b0693 : add ah, al ; push rbx ; add dword ptr [rax], eax ; sbb byte ptr [rsi - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001a7593 : add ah, al ; ret 0
0x00000000001ac5cb : add ah, bh ; adc al, byte ptr [rcx] ; add byte ptr [rax - 0x29], ah ; jmp qword ptr [rcx]
0x00000000001a092b : add ah, bh ; add byte ptr [rax], al ; add byte ptr [rax], ah ; mov al, 0xec ; jmp qword ptr [rcx]
0x00000000000aa1ee : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000000aa20e : add ah, bh ; add eax, dword ptr [rax] ; ret
0x0000000000194c11 : add ah, bh ; call rax
0x0000000000194bf1 : add ah, bh ; inc dword ptr [rax] ; add bh, ah ; jmp rax
0x00000000000aa2a6 : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000000aa1cd : add ah, bh ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000001b96cb : add ah, bh ; jrcxz 0x1b96d8 ; add al, al ; div edi ; call qword ptr [rdx]
0x0000000000194bd1 : add ah, bh ; push qword ptr [rax] ; add bh, ah ; call qword ptr [rax]
0x00000000001b04cb : add ah, bh ; push rcx ; add dword ptr [rax], eax ; loopne 0x1b054c ; cmc ; call qword ptr [rsi]
0x00000000001b1dd8 : add ah, bh ; ret
0x00000000000191af : add ah, bh ; ret 0x18
0x00000000001afdab : add ah, bl ; add qword ptr [rax], rax ; push rax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x000000000019ebab : add ah, bl ; cmp byte ptr [rax], al ; add al, dh ; shr ecx, 1 ; call qword ptr [rdx]
0x00000000001aebab : add ah, bl ; cmp byte ptr [rcx], al ; add al, dh ; std ; hlt ; jmp rdi
0x00000000001a6bab : add ah, bl ; mov eax, 0xff800000 ; out dx, al ; jmp rsi
0x00000000001b06ab : add ah, bl ; push rbx ; add dword ptr [rax], eax ; xor byte ptr [rsi - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001a75ab : add ah, bl ; ret 0
0x0000000000194a18 : add ah, bl ; sti ; jmp rax
0x00000000001a376f : add ah, byte ptr [rbx + 0x41180e0a] ; ret
0x00000000001862c8 : add ah, byte ptr [rdi - 0x13] ; jmp rsp
0x00000000001a3940 : add ah, byte ptr [rdx + 0x41280e0a] ; ret
0x00000000000a9cba : add ah, byte ptr [rdx - 0xf] ; jl 0xa9d0f ; adc dword ptr [rsi + 3], edx ; ret
0x00000000000a203b : add ah, byte ptr [rsi + 0xf] ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00000000001ae1bb : add ah, ch ; add dword ptr cs:[rax], eax ; adc bh, bl ; hlt ; jmp qword ptr [rcx]
0x00000000001ad8bb : add ah, ch ; and eax, 0xa5000001 ; hlt ; call rax
0x00000000001aafbb : add ah, ch ; cld ; add byte ptr [rax], al ; loopne 0x1aaf6d ; call rdi
0x00000000001a92bb : add ah, ch ; fild word ptr [rax] ; add byte ptr [rax - 0x6d], dl ; int1 ; call qword ptr [rax]
0x00000000001aa4bb : add ah, ch ; int1 ; add byte ptr [rax], al ; adc byte ptr [rbx], dl ; jmp qword ptr [rcx]
0x00000000001876e8 : add ah, ch ; int1 ; call qword ptr [rax]
0x00000000001b23bb : add ah, ch ; jo 0x1b23c8 ; add al, ah ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001aa3bb : add ah, ch ; lock add byte ptr [rax], al ; adc edx, esi ; jmp qword ptr [rcx]
0x00000000001b60bb : add ah, ch ; lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; xor byte ptr [rdi - 9], al ; jmp qword ptr [rsi]
0x00000000001aa1bb : add ah, ch ; out dx, al ; add byte ptr [rax], al ; rol byte ptr [rdi], 1 ; call rsi
0x00000000001b0bbb : add ah, ch ; pop rax ; add dword ptr [rax], eax ; loopne 0x1b0b50 ; cmc ; jmp rax
0x000000000001914f : add ah, ch ; ret 0x18
0x00000000001ac59b : add ah, cl ; adc al, byte ptr [rcx] ; add byte ptr [rax], dh ; xlatb ; jmp qword ptr [rcx]
0x00000000001ad69b : add ah, cl ; and eax, dword ptr [rcx] ; add byte ptr [rax - 0x65], al ; hlt ; jmp qword ptr [rcx]
0x00000000001a509b : add ah, cl ; popfq ; add byte ptr [rax], al ; xor bh, bh ; in eax, dx ; call qword ptr [rsi]
0x00000000001b099b : add ah, cl ; push rsi ; add dword ptr [rax], eax ; xor byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x000000000019cc9b : add ah, cl ; sbb dword ptr [rax], eax ; add al, dh ; adc ebp, ecx ; call qword ptr [rbx]
0x000000000019fac3 : add ah, dh ; add byte ptr [r8], r8b ; call 0x2319e57f
0x00000000001af1c3 : add ah, dh ; add dword ptr ds:[rax], eax ; mov byte ptr [rdi], bl ; cmc ; jmp qword ptr [rdx]
0x00000000001b00c3 : add ah, dh ; add qword ptr [r8], r8 ; or byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x0000000000199c4f : add ah, dh ; and al, bh ; call rsp
0x000000000019ebc3 : add ah, dh ; cmp byte ptr [rax], al ; add al, bh ; shr ecx, 1 ; call rax
0x00000000001a63c3 : add ah, dh ; mov al, 0 ; add byte ptr [rax + 0x54], bl ; cli ; call qword ptr [rax]
0x0000000000197fff : add ah, dh ; pop rsp ; call rsp
0x00000000001b50c3 : add ah, dh ; popfq ; add dword ptr [rax], eax ; fdivr st(6), st(0) ; jmp rsi
0x00000000001b03c3 : add ah, dh ; push rax ; add dword ptr [rax], eax ; js 0x1b0443 ; cmc ; jmp qword ptr [rcx]
0x00000000001b08c3 : add ah, dh ; push rbp ; add dword ptr [rax], eax ; pop rax ; jp 0x1b08c8 ; jmp qword ptr [rcx]
0x00000000001a75c3 : add ah, dh ; ret 0
0x00000000001acfc3 : add ah, dh ; sbb al, 1 ; add byte ptr [rax + 0x67], bl ; stc ; call qword ptr [rax]
0x00000000001b5bc3 : add ah, dh ; test al, 1 ; add byte ptr [rax], cl ; jrcxz 0x1b5bce ; call rsi
0x00000000001ac6a3 : add ah, dl ; adc eax, dword ptr [rcx] ; add byte ptr [rax - 0x28], cl ; call qword ptr [rdi]
0x00000000001afaa3 : add ah, dl ; add dword ptr [r8], r8d ; cwde ; push rbx ; cmc ; call qword ptr [rdx]
0x00000000001ba6a3 : add ah, dl ; add dword ptr [rax], eax ; test al, 0x99 ; sti ; jmp qword ptr [rdx]
0x00000000001ae1a3 : add ah, dl ; add dword ptr cs:[rax], eax ; clc ; fdivrp st(4) ; jmp qword ptr [rcx]
0x00000000001ae9a3 : add ah, dl ; add dword ptr ss:[rax], eax ; fdiv st(3) ; hlt ; jmp qword ptr [rsi]
0x00000000001b02a3 : add ah, dl ; add qword ptr [r8], r8 ; clc ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ad5a3 : add ah, dl ; and al, byte ptr [rcx] ; add byte ptr [rax - 0x67], cl ; hlt ; jmp qword ptr [rcx]
0x0000000000197347 : add ah, dl ; cmp ch, dh ; call rsp
0x00000000001af0a3 : add ah, dl ; cmp eax, 0x1e080001 ; cmc ; jmp qword ptr [rcx]
0x00000000001a92a3 : add ah, dl ; fild word ptr [rax] ; add byte ptr [rax - 0x6d], bl ; int1 ; call qword ptr [rax]
0x00000000001b98a3 : add ah, dl ; in eax, 1 ; add byte ptr [rax], bl ; add eax, edi ; call qword ptr [rdx]
0x0000000000197e27 : add ah, dl ; jnp 0x197e20 ; jmp rsp
0x00000000001a2ea3 : add ah, dl ; jnp 0x1a2eaf ; add byte ptr [rax + 0x44], ch ; in eax, dx ; jmp qword ptr [rdi]
0x00000000001b23a3 : add ah, dl ; jo 0x1b23b0 ; add al, cl ; and dh, dh ; jmp qword ptr [rsi]
0x000000000019afa7 : add ah, dl ; loop 0x19afa9 ; call rsp
0x00000000001abea3 : add ah, dl ; or eax, dword ptr [rcx] ; add al, bh ; test dh, bl ; call qword ptr [rsi]
0x00000000001985cf : add ah, dl ; push rax ; hlt ; jmp rsp
0x000000000019adff : add ah, dl ; ret
0x00000000001acfa3 : add ah, dl ; sbb al, 1 ; add byte ptr [rax], bh ; xchg esp, esi ; call qword ptr [rax]
0x000000000004b298 : add al, 0 ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000f0a43 : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000047423 : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000001268e1 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000121d40 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x0000000000144ded : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000149939 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144e11 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014325f : add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000000b320 : add al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4f
0x0000000000102dd2 : add al, 0 ; add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x00000000000ab573 : add al, 0 ; add byte ptr [rax], al ; ret
0x00000000000d7cfc : add al, 0 ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00000000001342cb : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000006a91f : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001bc799 : add al, 0 ; add byte ptr [rbx + 1], al ; add byte ptr [rax], al ; ret
0x0000000000026e51 : add al, 0 ; add byte ptr [rcx - 0x73], cl ; add dword ptr [r8 + 0x39], r9d ; ret
0x0000000000066265 : add al, 0 ; add byte ptr [rcx - 0x77], cl ; ret 0x34c
0x00000000000804af : add al, 0 ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000010e625 : add al, 0 ; add byte ptr [rdx], al ; call rax
0x0000000000040f73 : add al, 0 ; add cl, ch ; ret 0xffec
0x000000000007ef46 : add al, 0 ; add dh, dh ; ret
0x0000000000122193 : add al, 0 ; add dh, dh ; ret 0xf04
0x0000000000115a2f : add al, 0 ; cmove rax, rdx ; ret
0x000000000009e064 : add al, 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000009dfd4 : add al, 0 ; mov rax, rdi ; ret
0x0000000000045aea : add al, 0x10 ; add bl, dh ; ret
0x000000000012fb50 : add al, 0x10 ; mov byte ptr [rdi + 7], al ; ret
0x000000000002da69 : add al, 0x10 ; ret
0x000000000010a415 : add al, 0x10 ; shr eax, cl ; and eax, 1 ; ret
0x000000000010a4eb : add al, 0x11 ; ret
0x00000000000aa23d : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x000000000004e5d9 : add al, 0x13 ; add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x00000000001ac8d4 : add al, 0x16 ; add dword ptr [rax], eax ; sar dword ptr [rcx], -0x19 ; jmp qword ptr [rax]
0x000000000009eb81 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000008a6fa : add al, 0x17 ; sub eax, ecx ; ret
0x000000000013a1aa : add al, 0x24 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x0000000000116efd : add al, 0x24 ; add byte ptr [rax - 0x76b80000], al ; ret 0x4875
0x00000000000c92df : add al, 0x24 ; add byte ptr [rax - 0x7af10000], al ; ret
0x00000000000962b0 : add al, 0x24 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000be7b5 : add al, 0x24 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0xbe786
0x00000000000cb841 : add al, 0x24 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000f608d : add al, 0x24 ; add rsp, 0x18 ; ret
0x0000000000109ae4 : add al, 0x24 ; add rsp, 0x38 ; ret
0x0000000000109b45 : add al, 0x24 ; add rsp, 0x40 ; ret
0x000000000004696a : add al, 0x24 ; and byte ptr [rax - 0x77], cl ; ret 0x8949
0x0000000000088b61 : add al, 0x24 ; call qword ptr [rdx]
0x00000000000abc43 : add al, 0x24 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000020bea : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000106b53 : add al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x00000000000cc7a5 : add al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x000000000002084c : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000035311 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000002f6d2 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x000000000004d357 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; xor esi, esi ; call rax
0x000000000002a21d : add al, 0x29 ; ret 0x8941
0x00000000001ae1d4 : add al, 0x2f ; add dword ptr [rax], eax ; sub bh, bl ; hlt ; jmp qword ptr [rcx]
0x00000000000a91e9 : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a91fb : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x000000000008cbbe : add al, 0x31 ; ret
0x0000000000121a24 : add al, 0x31 ; ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000008caba : add al, 0x37 ; ret
0x00000000000f536d : add al, 0x39 ; ret
0x00000000000d6f0f : add al, 0x39 ; ret 0xec7f
0x0000000000072c9f : add al, 0x3a ; ret
0x0000000000096924 : add al, 0x3c ; cmp eax, 0x89482e75 ; clc ; pop rbx ; ret
0x0000000000198720 : add al, 0x3e ; cmc ; jmp rsp
0x000000000005c414 : add al, 0x41 ; cmp ah, 0x49 ; cmove esi, ecx ; jmp 0x5c3e9
0x00000000000abee6 : add al, 0x41 ; mov dword ptr [rcx + 8], esi ; ret
0x00000000000208f2 : add al, 0x48 ; add edi, ebp ; call rax
0x00000000000f53a3 : add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000009e075 : add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x000000000009e085 : add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a778b : add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; ret
0x000000000009e025 : add al, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x000000000012399e : add al, 0x48 ; lea eax, dword ptr [rdi + rsi + 8] ; ret
0x000000000016a879 : add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x000000000016a88b : add al, 0x48 ; lea eax, dword ptr [rdx + 5] ; ret
0x00000000000720a3 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000070508 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x0000000000071fe3 : add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000015acda : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x000000000007100c : add al, 0x48 ; mov dword ptr [rdx + 0x20], eax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x00000000000711b2 : add al, 0x48 ; mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x0000000000071ec4 : add al, 0x48 ; mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000009dfe5 : add al, 0x48 ; mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000009df75 : add al, 0x48 ; mov eax, edi ; ret
0x000000000008ae94 : add al, 0x48 ; xor eax, eax ; ret
0x00000000001afcd4 : add al, 0x4a ; add dword ptr [rax], eax ; js 0x1afd3b ; cmc ; jmp qword ptr [rcx]
0x00000000000ac6f0 : add al, 0x4c ; lea ecx, dword ptr [rsp + 0x20] ; call rbx
0x0000000000114164 : add al, 0x50 ; shr ax, 0xe ; and eax, 1 ; ret
0x000000000019adf4 : add al, 0x57 ; add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000001fc05 : add al, 0x5b ; pop rbp ; pop r12 ; ret
0x000000000016a887 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x00000000000a20cc : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000003511d : add al, 0x66 ; nop ; fstp st(1) ; add rsp, 8 ; ret
0x00000000001ba457 : add al, 0x66 ; ret
0x00000000001b23d4 : add al, 0x71 ; add dword ptr [rax], eax ; clc ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001a6a97 : add al, 0x71 ; ret
0x0000000000029ae2 : add al, 0x72 ; jns 0x29d4cced ; ret
0x000000000002da7d : add al, 0x72 ; or bl, dh ; ret
0x00000000001a8587 : add al, 0x72 ; ret
0x0000000000081a74 : add al, 0x74 ; and al, 0x89 ; ret 0xb48b
0x000000000008e768 : add al, 0x74 ; or al, 0 ; cmove rax, rdx ; ret
0x00000000000abee4 : add al, 0x75 ; add al, 0x41 ; mov dword ptr [rcx + 8], esi ; ret
0x00000000000cf174 : add al, 0x75 ; jae 0xcf190 ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000e467a : add al, 0x75 ; mov bl, 0x8b ; pop rax ; or bh, dh ; ret
0x00000000000ab622 : add al, 0x75 ; ret
0x0000000000085b07 : add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x00000000000face2 : add al, 0x77 ; or esp, dword ptr [rsi - 0x77] ; push rsi ; xor ax, ax ; ret
0x000000000002de30 : add al, 0x78 ; and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002de50 : add al, 0x78 ; and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002dd90 : add al, 0x78 ; and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002de10 : add al, 0x78 ; and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002dd30 : add al, 0x78 ; and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002ddd0 : add al, 0x78 ; and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002dd70 : add al, 0x78 ; and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002ddb0 : add al, 0x78 ; and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000002ded0 : add al, 0x78 ; and eax, 1 ; ret
0x000000000002dd50 : add al, 0x78 ; and eax, 2 ; movzx eax, ax ; ret
0x000000000002ddf0 : add al, 0x78 ; and eax, 4 ; movzx eax, ax ; ret
0x000000000002dd10 : add al, 0x78 ; and eax, 8 ; movzx eax, ax ; ret
0x00000000001a38ff : add al, 0x79 ; ret
0x00000000001a69bf : add al, 0x7b ; ret
0x0000000000063836 : add al, 0x81 ; add rcx, rax ; jmp rcx
0x00000000000aa393 : add al, 0x81 ; je 0xaa375 ; ret
0x000000000014651b : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000000aa38f : add al, 0x81 ; sub eax, dword ptr [rcx + r8*4] ; je 0xaa379 ; ret
0x0000000000147df3 : add al, 0x81 ; sub eax, edx ; ret
0x000000000009de99 : add al, 0x82 ; add r10, rax ; jmp r10
0x00000000000c282a : add al, 0x82 ; add rdx, r8 ; jmp rdx
0x00000000000210b5 : add al, 0x82 ; add rdx, rax ; jmp rdx
0x00000000000aa348 : add al, 0x82 ; sub eax, dword ptr [rdx + rcx*4] ; je 0xaa338 ; ret
0x0000000000091247 : add al, 0x82 ; sub eax, ecx ; ret
0x0000000000026483 : add al, 0x83 ; cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x00000000000758f2 : add al, 0x83 ; loop 0x758fd ; mov eax, edx ; ret
0x0000000000077e34 : add al, 0x83 ; loopne 0x77e3d ; ret
0x00000000000ada3b : add al, 0x83 ; ret 0x4101
0x00000000000db502 : add al, 0x83 ; ret 0x4801
0x0000000000035d4b : add al, 0x83 ; ret 0xf701
0x0000000000117dd9 : add al, 0x84 ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rbx] ; jmp 0x117dae
0x00000000000ddff8 : add al, 0x85 ; fisttp dword ptr [rcx + 0x7e10245c] ; ret 0x8b48
0x00000000000aa3e2 : add al, 0x85 ; leave ; mov dword ptr [rdx], ecx ; jne 0xaa3e0 ; ret
0x00000000000abf1e : add al, 0x85 ; ror byte ptr [rcx - 0xc0c8af0], cl ; ret
0x00000000000ad099 : add al, 0x85 ; sal byte ptr [rbp - 0xe], cl ; ret
0x000000000002ebb9 : add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000006c184 : add al, 0x86 ; add rax, rsi ; jmp rax
0x000000000006c2b3 : add al, 0x86 ; add rsi, rax ; jmp rsi
0x000000000019a458 : add al, 0x86 ; stc ; call rsp
0x00000000000d3523 : add al, 0x87 ; add rax, rdi ; jmp rax
0x00000000000abbee : add al, 0x87 ; test r8d, r8d ; jne 0xabbc8 ; ret
0x000000000016a876 : add al, 0x88 ; add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x00000000000a20ab : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x000000000003917a : add al, 0x89 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000009df17 : add al, 0x89 ; cld ; mov rax, rdi ; ret
0x0000000000055651 : add al, 0x89 ; ret 0x2944
0x000000000009df62 : add al, 0x8a ; add r10, rax ; jmp r10
0x00000000000aa34b : add al, 0x8a ; je 0xaa335 ; ret
0x00000000000a2094 : add al, 0x8b ; add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x00000000000f6237 : add al, 0x8b ; and al, 0xc ; add rsp, 0x18 ; ret
0x00000000000abbd8 : add al, 0x8b ; or al, byte ptr [rbp - 0xc0e8a37] ; ret
0x0000000000054cf0 : add al, 0x8b ; or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x00000000000ddfb2 : add al, 0x8d ; add dword ptr [r8 - 0x7d], ecx ; ret
0x000000000003d38d : add al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000001a7690 : add al, 0x8e ; add ecx, dword ptr [rdi + 0x380e4402] ; ret
0x00000000001a6796 : add al, 0x8e ; add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x00000000001bad1b : add al, 0x8e ; add ecx, dword ptr [rdi + 0x80e7002] ; ret
0x000000000002e8ef : add al, 0x8e ; add rsi, rax ; jmp rsi
0x000000000004b5c4 : add al, 0x90 ; add rax, rdi ; jmp rax
0x000000000010a2c7 : add al, 0xa ; ret
0x0000000000002315 : add al, 0xaa ; ret
0x00000000001979e0 : add al, 0xb5 ; out dx, eax ; call rsp
0x000000000002da66 : add al, 0xb7 ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000013b9c3 : add al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000002e0b8 : add al, 0xb8 ; ret
0x00000000000aa199 : add al, 0xbe ; add rsi, rax ; jmp rsi
0x000000000012d5c9 : add al, 0xc2 ; jmp rax
0x000000000019adf0 : add al, 0xc3 ; cli ; inc dword ptr [rdi + rdx*2] ; add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000abe0b : add al, 0xc3 ; nop dword ptr [rax] ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000035f14 : add al, 0xcf ; setne al ; movzx eax, al ; ret
0x00000000000c6f53 : add al, 0xd0 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000035f57 : add al, 0xd7 ; xor eax, eax ; ret
0x000000000004834d : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x483a9
0x0000000000049f2d : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x49f89
0x0000000000199880 : add al, 0xe3 ; idiv edi ; push rsp ; ret 1
0x0000000000197a20 : add al, 0xe3 ; out dx, eax ; jmp rsp
0x000000000002dd35 : add al, 0xf ; mov bh, 0xc0 ; ret
0x000000000014462d : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x0000000000149e9b : add al, 0xf ; sub rax, r8 ; ret
0x00000000000d71b9 : add al, 0xf ; test ah, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x0000000000066366 : add al, 0xf ; test byte ptr [rbp - 0x7cfffffe], ah ; ret 0x3901
0x00000000000f03fa : add al, 0xf ; test byte ptr [rbx - 0x76000004], ah ; ret 0xdb31
0x00000000000d6cd7 : add al, 0xf ; test dword ptr [rax], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8341
0x00000000000ab0f5 : add al, 0xf ; test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x00000000000a5bab : add al, 0xf ; test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x00000000000e3b23 : add al, 0xf ; test eax, edx ; add byte ptr [rax], al ; add dh, dh ; ret 0x7408
0x00000000000fd259 : add al, 0xf ; xchg eax, ebp ; ret 0xdaf7
0x00000000000e3499 : add al, 0xf ; xchg eax, esp ; ret 0x9848
0x0000000000048188 : add al, 0xf0 ; mov qword ptr [rcx + rsi*8], rax ; xor eax, eax ; pop rbx ; ret
0x000000000002b020 : add al, 0xf0 ; test rax, rax ; je 0x2b030 ; call rax
0x000000000004818c : add al, 0xf1 ; xor eax, eax ; pop rbx ; ret
0x000000000015b043 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000006b40b : add al, 0xf3 ; ret
0x000000000019a750 : add al, 0xf4 ; stc ; jmp rsp
0x000000000008e9b9 : add al, 0xf6 ; ret 0x7408
0x0000000000196b30 : add al, 0xf9 ; jmp 0x196b36
0x0000000000197e90 : add al, 0xfb ; int1 ; call rsp
0x0000000000194bb9 : add al, 0xfc ; call qword ptr [rax]
0x0000000000194b79 : add al, 0xfc ; inc dword ptr [rax + 6] ; cld ; jmp qword ptr [rax]
0x0000000000197a78 : add al, 0xfd ; out dx, eax ; call rsp
0x000000000002f33d : add al, 0xff ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000001ab7b5 : add al, 1 ; add byte ptr [rax - 0x13], bl ; call rcx
0x00000000001230db : add al, 1 ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000000ab128 : add al, 1 ; add byte ptr [rax], al ; ret
0x000000000005cb08 : add al, 1 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00000000000d5163 : add al, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006b3c9 : add al, 1 ; ret
0x000000000006b42a : add al, 1 ; xor eax, eax ; ret
0x000000000019afa5 : add al, 2 ; add ah, dl ; loop 0x19afab ; call rsp
0x000000000019afa4 : add al, 2 ; add ah, dl ; loop 0x19afac ; call rsp
0x00000000001a37d7 : add al, 2 ; hlt ; ret
0x00000000001ac1df : add al, 2 ; jle 0x1ac1f1 ; ret
0x000000000009ea6c : add al, 3 ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0xc6e8
0x000000000016ef67 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000004b7 : add al, 4 ; ret 0x6080
0x00000000000d7ef2 : add al, 6 ; add dword ptr [rbx - 0x7cb7fe40], eax ; ret 0x4801
0x00000000000a5cf8 : add al, 7 ; add byte ptr [rax], al ; ret
0x00000000000890cd : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000000d46d1 : add al, 7 ; mov r12, rdi ; xor eax, eax ; mov rdx, r8 ; jmp 0xd4700
0x0000000000095d78 : add al, 7 ; ret
0x000000000009e14f : add al, 7 ; test r8b, r8b ; jne 0x9e138 ; ret
0x0000000000077343 : add al, 8 ; add byte ptr [rax], al ; ret
0x000000000009ecef : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x000000000019cc6f : add al, ah ; adc ebp, ecx ; call qword ptr [rbx]
0x00000000001ba21f : add al, ah ; adc edi, eax ; jmp qword ptr [rbx]
0x00000000001b23bf : add al, ah ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001a1c0f : add al, ah ; cld ; in al, dx ; call qword ptr [rsi]
0x00000000001b04cf : add al, ah ; jb 0x1b04cc ; call qword ptr [rsi]
0x00000000001bbdc9 : add al, ah ; or ch, byte ptr [rsi] ; ret 0xb
0x00000000001bbe21 : add al, ah ; or dword ptr [rsi], ebp ; ret 0xa
0x00000000001b028f : add al, ah ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x000000000019d16f : add al, ah ; push rdx ; jmp 0x1b947b
0x00000000000051c7 : add al, ah ; ret
0x0000000000004ccf : add al, ah ; ret 0xc
0x00000000001b0bbf : add al, ah ; xchg ch, dh ; jmp rax
0x000000000019cc0f : add al, al ; adc ebp, ecx ; call qword ptr [rbx]
0x00000000001b217f : add al, al ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001b96cf : add al, al ; div edi ; call qword ptr [rdx]
0x00000000001a712f : add al, al ; jl 0x1a7126 ; call qword ptr [rdi]
0x000000000019d5ef : add al, al ; jne 0x19d5e0 ; call qword ptr [rdx]
0x00000000001a5c5f : add al, al ; out dx, al ; call qword ptr [rdx]
0x00000000001b019f : add al, al ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001a01df : add al, al ; pop rax ; jmp 0x1a01e7
0x000000000017cc47 : add al, al ; sldt word ptr [rax] ; ret
0x00000000001ad38f : add al, al ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000001ac62f : add al, al ; xlatb ; jmp qword ptr [rcx]
0x000000000019cd17 : add al, bh ; adc ebp, ecx ; call qword ptr [rcx]
0x00000000001b23d7 : add al, bh ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001ae1a7 : add al, bh ; fdivrp st(4) ; jmp qword ptr [rcx]
0x00000000001a0d37 : add al, bh ; iretd ; in al, dx ; jmp qword ptr [rax]
0x00000000001ae367 : add al, bh ; loop 0x1ae363 ; call qword ptr [rsi]
0x0000000000185937 : add al, bh ; loope 0x18593e ; jmp qword ptr [rdi]
0x00000000001859b7 : add al, bh ; loope 0x1859be ; jmp qword ptr [rdi]
0x0000000000185a37 : add al, bh ; loope 0x185a3e ; jmp qword ptr [rdi]
0x00000000001a6337 : add al, bh ; mov esi, gs ; call qword ptr [rax]
0x00000000001a98e7 : add al, bh ; out 0xf1, al ; jmp qword ptr [rdi]
0x00000000001b02a7 : add al, bh ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x000000000019eb37 : add al, bh ; shr ecx, 1 ; call qword ptr [rax]
0x000000000019ebc7 : add al, bh ; shr ecx, 1 ; call rax
0x00000000001abea7 : add al, bh ; test dh, bl ; call qword ptr [rsi]
0x000000000019cc57 : add al, bl ; adc ebp, ecx ; call qword ptr [rdx]
0x00000000001b2197 : add al, bl ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001ba7a7 : add al, bl ; cwde ; sti ; jmp qword ptr [rdx]
0x00000000001ae9a7 : add al, bl ; hlt ; jmp qword ptr [rsi]
0x00000000001b0577 : add al, bl ; jae 0x1b0574 ; jmp qword ptr [rcx]
0x00000000001b03f7 : add al, bl ; jno 0x1b03f4 ; jmp qword ptr [rcx]
0x000000000019b997 : add al, bl ; jnp 0x19b99c ; jmp qword ptr [rdx]
0x00000000001bb677 : add al, bl ; jo 0x1bb677 ; call qword ptr [rax]
0x00000000000a5ffb : add al, bl ; nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000001b01b7 : add al, bl ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001afd37 : add al, bl ; pop rdx ; cmc ; jmp qword ptr [rcx]
0x00000000001b5d77 : add al, bl ; xor bh, dh ; call rcx
0x00000000000f8826 : add al, bpl ; ret
0x000000000014cf52 : add al, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000007e66c : add al, byte ptr [r8] ; add byte ptr [rcx - 0xa], al ; ret
0x000000000019abfd : add al, byte ptr [r8] ; insd dword ptr [rdi], dx ; cli ; jmp rsp
0x000000000019aac5 : add al, byte ptr [r8] ; movsb byte ptr [rdi], byte ptr [rsi] ; push rdi ; cli ; jmp rsp
0x0000000000089031 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x000000000019aa16 : add al, byte ptr [rax] ; adc al, 0x49 ; cli ; jmp rsp
0x000000000019ad16 : add al, byte ptr [rax] ; adc al, 0xa7 ; cli ; jmp rsp
0x000000000019a456 : add al, byte ptr [rax] ; add al, 0x86 ; stc ; call rsp
0x000000000019a74e : add al, byte ptr [rax] ; add al, 0xf4 ; stc ; jmp rsp
0x000000000002de87 : add al, byte ptr [rax] ; add bl, dh ; ret
0x000000000007f37d : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000106b56 : add al, byte ptr [rax] ; add byte ptr [rax + 0x5f], bl ; call rax
0x000000000008dec3 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000074095 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x000000000013d83d : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000876d2 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 6] ; call rax
0x0000000000083861 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000d6cdb : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8341
0x000000000008dbb9 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000001096de : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000094c0b : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x000000000010dc9b : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call 0xffffffffc34a24af
0x0000000000085425 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000020d31 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000003b4ed : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000144f8d : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147bb1 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000d6cc5 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb04
0x0000000000144fb1 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000063ca : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001325ff : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x000000000013507f : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x00000000001347df : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x000000000005f7bd : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x5baa6
0x0000000000067444 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x636b2
0x0000000000101fc2 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x00000000000cc352 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000137a99 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00000000000eb674 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x78] ; call r12
0x0000000000103242 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000102fb5 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000102e81 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000102df9 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x000000000013a1ac : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x0000000000108d75 : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000ab553 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000c76aa : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000071850 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000036dd9 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000e523a : add al, byte ptr [rax] ; add byte ptr [rbx + 0xf4801e1], al ; ret
0x00000000000b9069 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x76b6f020], al ; ret
0x00000000000e6b43 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x76f72cac], cl ; push rsp ; ret
0x0000000000171774 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00000000000d777e : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x3d01
0x000000000005e73e : add al, byte ptr [rax] ; add byte ptr [rcx - 0x73], cl ; dec dword ptr [r8 + 0x39] ; ret
0x00000000000f3043 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000814b5 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret 0x854d
0x000000000007e66d : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x00000000000803e1 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x0000000000124ede : add al, byte ptr [rax] ; add byte ptr [rcx], bh ; ret
0x0000000000024c24 : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x000000000002426c : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x00000000000c2099 : add al, byte ptr [rax] ; add byte ptr [rdi], cl ; mov bh, 5 ; ret
0x00000000000e024d : add al, byte ptr [rax] ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xddeb
0x000000000019a76e : add al, byte ptr [rax] ; add edx, r15d ; jmp rsp
0x00000000000558e0 : add al, byte ptr [rax] ; add rsp, 0xd8 ; ret
0x00000000001bb81e : add al, byte ptr [rax] ; and byte ptr [rbp - 8], dh ; call qword ptr [rdi]
0x00000000001bba6e : add al, byte ptr [rax] ; and byte ptr [rbx - 8], bh ; call qword ptr [rcx]
0x00000000001bb676 : add al, byte ptr [rax] ; fdiv dword ptr [rax - 8] ; call qword ptr [rax]
0x000000000019ad46 : add al, byte ptr [rax] ; in al, -0x58 ; cli ; jmp rsp
0x000000000019a526 : add al, byte ptr [rax] ; in al, -0x5f ; stc ; call rsp
0x000000000019abfe : add al, byte ptr [rax] ; insd dword ptr [rdi], dx ; cli ; jmp rsp
0x000000000019a27e : add al, byte ptr [rax] ; je 0x19a2d8 ; stc ; call rsp
0x000000000019a2ee : add al, byte ptr [rax] ; je 0x19a350 ; stc ; jmp rsp
0x000000000019a906 : add al, byte ptr [rax] ; je 0x19a93a ; cli ; call rsp
0x00000000001235f2 : add al, byte ptr [rax] ; jne 0x123646 ; mov eax, r8d ; ret
0x000000000009e045 : add al, byte ptr [rax] ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000019a386 : add al, byte ptr [rax] ; mov ah, 0x71 ; stc ; call rsp
0x000000000019afb6 : add al, byte ptr [rax] ; mov ah, 0xe3 ; cli ; jmp rsp
0x000000000009dfb5 : add al, byte ptr [rax] ; mov rax, rdi ; ret
0x000000000019ab3e : add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rbx ; cli ; jmp rsp
0x000000000019aac6 : add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; push rdi ; cli ; jmp rsp
0x000000000019adf6 : add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000016dc7b : add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000011c819 : add al, byte ptr [rax] ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000105572 : add al, byte ptr [rax] ; pop rbx ; ret
0x000000000019ab06 : add al, byte ptr [rax] ; pop rcx ; cli ; call rsp
0x000000000019a2be : add al, byte ptr [rax] ; push rsp ; push rsp ; stc ; call rsp
0x00000000001bbb87 : add al, byte ptr [rax] ; ret
0x00000000001bbba7 : add al, byte ptr [rax] ; ret 0x503
0x000000000019a86e : add al, byte ptr [rax] ; test byte ptr [rcx], ah ; cli ; call rsp
0x000000000019ae56 : add al, byte ptr [rax] ; xchg eax, esp ; leave ; cli ; jmp rsp
0x000000000019a5b6 : add al, byte ptr [rax] ; xchg eax, esp ; ret 0xfff9
0x00000000000998c9 : add al, byte ptr [rbp + 0x38] ; ret
0x00000000001adf01 : add al, byte ptr [rcx + 0x283100e] ; push rsp ; ret
0x000000000011481e : add al, byte ptr [rcx + 0x39] ; ret
0x000000000019c8a8 : add al, byte ptr [rcx + 0xa] ; ret
0x0000000000035d5c : add al, byte ptr [rcx + 0xe1] ; adc byte ptr [rdi], cl ; ret 0x8b48
0x00000000000eb00d : add al, byte ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8944
0x000000000005a689 : add al, byte ptr [rcx - 0x77] ; ret 0x144
0x00000000000db88d : add al, byte ptr [rcx - 0x7d] ; ret 0x4101
0x0000000000110de5 : add al, byte ptr [rcx - 1] ; push rbp ; sub byte ptr [rax - 0x77], cl ; ret
0x0000000000123118 : add al, byte ptr [rcx] ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x0000000000123137 : add al, byte ptr [rcx] ; add byte ptr [rax], al ; ret
0x00000000001a1790 : add al, byte ptr [rdi + 0xa] ; ret
0x00000000001954c0 : add al, byte ptr [rdi - 0x796d0004] ; cld ; jmp qword ptr [rdx]
0x000000000019f5b6 : add al, byte ptr [rdx] ; outsd dx, dword ptr [rsi] ; ret
0x00000000001a200d : add al, byte ptr [rdx] ; pop rsi ; ret
0x00000000001a1de5 : add al, byte ptr [rdx] ; push rsi ; ret
0x00000000001a6ee5 : add al, byte ptr [rdx] ; ret
0x00000000001b530d : add al, byte ptr [rdx] ; xchg eax, ecx ; ret
0x000000000006e4b5 : add al, byte ptr [rip + 0x5b000000] ; ret
0x00000000001a7694 : add al, byte ptr [rsi + rcx + 0x38] ; ret
0x00000000000a5dfa : add al, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x000000000019aa15 : add al, byte ptr ds:[rax] ; adc al, 0x49 ; cli ; jmp rsp
0x000000000019a905 : add al, byte ptr ss:[rax] ; je 0x19a93b ; cli ; call rsp
0x00000000000e1125 : add al, ch ; adc eax, 0x83fff4cb ; call qword ptr [rax]
0x000000000019cc87 : add al, ch ; adc ebp, ecx ; call qword ptr [rbx]
0x000000000019cce7 : add al, ch ; adc ebp, ecx ; jmp qword ptr [rax]
0x000000000011da6b : add al, ch ; call rax
0x00000000001ad987 : add al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; hlt ; jmp qword ptr [rcx]
0x000000000013c53e : add al, ch ; in al, dx ; xor al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000883ed : add al, ch ; int 0xc3
0x00000000001b0957 : add al, ch ; jp 0x1b0954 ; jmp qword ptr [rcx]
0x00000000001b1157 : add al, ch ; lahf ; cmc ; call rdi
0x0000000000134591 : add al, ch ; mov dword ptr [rax - 0x76b70011], esp ; ret 0x8d48
0x000000000008cfaf : add al, ch ; mov ebx, 0x39fffa98 ; ret
0x000000000013d3fd : add al, ch ; pop rbp ; ret
0x0000000000050231 : add al, ch ; pop rcx ; ret
0x00000000001b71b7 : add al, ch ; push 0xf7 ; jmp rsi
0x0000000000130643 : add al, ch ; push rdi ; out dx, al ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000088496 : add al, ch ; push rsp ; ret
0x000000000004b4d6 : add al, ch ; push rsp ; ret 2
0x00000000000703f7 : add al, ch ; ret
0x000000000012fba8 : add al, ch ; ret 0xb1
0x000000000003a8f8 : add al, ch ; ret 0xd9e
0x0000000000174ae0 : add al, ch ; ret 0xeaad
0x000000000013b858 : add al, ch ; ret 0xef2d
0x000000000011be28 : add al, ch ; ret 0xf039
0x0000000000101ca8 : add al, ch ; ret 0xf1db
0x000000000004d978 : add al, ch ; ret 0xfe02
0x00000000000836e8 : add al, ch ; ret 0xff9c
0x00000000000f9fbf : add al, ch ; sub ecx, dword ptr [rip + 0x3948fff9] ; ret
0x000000000009502c : add al, ch ; test al, 0xf8 ; dec dword ptr [rax - 0x77] ; ret
0x00000000001bab27 : add al, ch ; xchg eax, ebp ; sti ; jmp qword ptr [rdx]
0x00000000001ad277 : add al, ch ; xchg eax, edx ; hlt ; jmp qword ptr [rcx]
0x00000000001a5b67 : add al, ch ; xor al, 0xee ; jmp qword ptr [rdx]
0x00000000001a2247 : add al, cl ; adc al, 0xed ; jmp qword ptr [rax]
0x000000000019cc27 : add al, cl ; adc ebp, ecx ; call qword ptr [rbx]
0x00000000001b23a7 : add al, cl ; and dh, dh ; jmp qword ptr [rsi]
0x000000000019f187 : add al, cl ; cli ; jmp qword ptr [rcx]
0x00000000001a9ad7 : add al, cl ; in al, dx ; int1 ; jmp rcx
0x00000000001b0277 : add al, cl ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x000000000019cc9f : add al, dh ; adc ebp, ecx ; call qword ptr [rbx]
0x000000000019ccff : add al, dh ; adc ebp, ecx ; call qword ptr [rcx]
0x00000000001a240f : add al, dh ; and ebp, ebp ; call rdx
0x00000000001b21af : add al, dh ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001affaf : add al, dh ; insb byte ptr [rdi], dx ; cmc ; call qword ptr [rax]
0x00000000001b00af : add al, dh ; insd dword ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00000000001a600f : add al, dh ; jnp 0x1a6005 ; jmp qword ptr [rcx]
0x00000000001ae2af : add al, dh ; loope 0x1ae2ab ; jmp qword ptr [rcx]
0x00000000001a634f : add al, dh ; mov esi, gs ; jmp qword ptr [rsi]
0x00000000001ae51f : add al, dh ; out 0xf4, al ; jmp qword ptr [rcx]
0x00000000001b01cf : add al, dh ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x000000000019c75f : add al, dh ; outsd dx, dword ptr [rsi] ; std ; call qword ptr [rcx]
0x000000000000676f : add al, dh ; ret
0x000000000019eb4f : add al, dh ; shr ecx, 1 ; call qword ptr [rdx]
0x00000000001aebaf : add al, dh ; std ; hlt ; jmp rdi
0x000000000018a8cf : add al, dh ; sub dl, bh ; call rax
0x000000000019cc3f : add al, dl ; adc ebp, ecx ; call qword ptr [rbx]
0x00000000001aec8f : add al, dl ; add dh, ch ; call qword ptr [rdi]
0x00000000001ad96f : add al, dl ; cmpsd dword ptr [rsi], dword ptr [rdi] ; hlt ; jmp qword ptr [rcx]
0x00000000001a568f : add al, dl ; in al, -4 ; call qword ptr [rdx]
0x00000000001aff7f : add al, dl ; insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00000000001ad25f : add al, dl ; xchg eax, edx ; hlt ; jmp qword ptr [rcx]
0x0000000000194bd5 : add bh, ah ; call qword ptr [rax]
0x0000000000194bf5 : add bh, ah ; jmp rax
0x0000000000194bb5 : add bh, ah ; push qword ptr [rax] ; add al, 0xfc ; call qword ptr [rax]
0x000000000012a7c2 : add bh, al ; adc al, 0x10 ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000000218ff : add bh, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000ed31d : add bh, al ; or byte ptr [rsi], cl ; add byte ptr [rax], al ; add cl, ch ; ret
0x000000000017496f : add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000001406f9 : add bh, bh ; and eax, 0x281240 ; ret
0x00000000001bbce4 : add bh, bh ; inc dword ptr [rcx] ; or ch, byte ptr [rdi + 5] ; ret
0x0000000000187838 : add bh, bh ; int1 ; call qword ptr [rax]
0x0000000000187828 : add bh, bh ; int1 ; push qword ptr [rax] ; push rcx ; jmp rax
0x0000000000131a6c : add bh, bh ; loope 0x131a05 ; ret
0x000000000007a30a : add bh, bh ; nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000000ba7ba : add bh, bh ; ret
0x0000000000019c77 : add bh, bl ; ret
0x00000000000f6022 : add bh, byte ptr [rax + 0x16] ; jbe 0xf6039 ; ret
0x000000000004a040 : add bh, byte ptr [rax + 1] ; ret
0x0000000000078892 : add bh, byte ptr [rax - 1] ; pop rbx ; ret
0x000000000003544b : add bh, byte ptr [rax - 1] ; ret
0x00000000001a228c : add bh, byte ptr [rbp + 0x41380e0a] ; ret
0x0000000000171b42 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x00000000001095df : add bh, byte ptr [rcx] ; ret
0x00000000001ac1e0 : add bh, byte ptr [rsi + 0xa] ; ret
0x00000000001bc797 : add bh, cl ; add al, 0 ; add byte ptr [rbx + 1], al ; add byte ptr [rax], al ; ret
0x00000000000d3d65 : add bh, dh ; dec byte ptr [rbx - 0x7c97dba4] ; ret 0x8d01
0x00000000000ce119 : add bh, dh ; ret
0x000000000009cac1 : add bh, dh ; ret 0
0x0000000000019197 : add bh, dh ; ret 0x18
0x00000000001ae380 : add bl, ah ; hlt ; jmp qword ptr [rcx]
0x00000000000ab269 : add bl, al ; lea rax, qword ptr [rip + 0xc236e] ; ret
0x00000000000abe4d : add bl, al ; lea rax, qword ptr [rip + 0xc5d0a] ; ret
0x000000000008e1ad : add bl, al ; lea rax, qword ptr [rip + 0xe223a] ; ret
0x000000000012312e : add bl, al ; mov eax, 0x100 ; ret
0x0000000000123134 : add bl, al ; mov eax, 0x102 ; ret
0x00000000000cdfbc : add bl, al ; mov eax, 0xffffffff ; ret
0x00000000000ad071 : add bl, al ; mov eax, 2 ; ret
0x00000000000d8afd : add bl, al ; mov eax, 3 ; ret
0x00000000000d8af7 : add bl, al ; mov eax, 4 ; ret
0x0000000000086d74 : add bl, al ; mov rsi, rbx ; mov rdi, rax ; call rcx
0x00000000000757fc : add bl, al ; nop ; and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x00000000000ccf8c : add bl, al ; nop ; mov eax, 0xfffa ; ret
0x00000000000fba6d : add bl, al ; nop ; xor eax, eax ; ret
0x0000000000131c71 : add bl, al ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000142d2a : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000019c47 : add bl, al ; ret
0x000000000013495e : add bl, al ; xor eax, eax ; ret
0x0000000000189d37 : add bl, bh ; inc ebx ; add dh, bh ; jmp rdi
0x00000000001a95e7 : add bl, byte ptr [rax + 0x41180e0a] ; ret
0x000000000019d335 : add bl, byte ptr [rax + 0xa] ; ret
0x00000000001b1fcd : add bl, byte ptr [rbp + 0xa] ; ret
0x00000000000734ea : add bl, byte ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001a1db7 : add bl, byte ptr [rcx + 0xa] ; ret
0x00000000001b5078 : add bl, byte ptr [rdi + 0x41280e0a] ; ret
0x0000000000194fd4 : add bl, byte ptr [rdi - 4] ; call qword ptr [rdx + 0x22fffc5e]
0x00000000001a96a5 : add bl, byte ptr [rdx + 0xa] ; ret
0x00000000001bc467 : add bl, ch ; add eax, 0x690000 ; add byte ptr [rax], al ; ret
0x0000000000126284 : add bl, ch ; leave ; mov eax, 0x200000 ; jmp 0x126259
0x00000000000be7ba : add bl, ch ; ret 0x1f0f
0x000000000012628b : add bl, ch ; ret 0xb8
0x00000000000a63af : add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x00000000000a63bf : add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x0000000000034ccd : add bl, dh ; mulps xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x0000000000020582 : add bl, dh ; ret
0x00000000000330ae : add bl, sil ; ret
0x00000000001a97e3 : add byte ptr [0xffffffffe6480000], dl ; int1 ; jmp qword ptr [rdi]
0x00000000000cd0f7 : add byte ptr [r15 - 0x48], sil ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000051fb7 : add byte ptr [r8 - 0x7d], r9b ; call 0xffffffffc23e67c9
0x0000000000023de5 : add byte ptr [r8 - 0x7d], r9b ; ret 0x4901
0x000000000019fe3d : add byte ptr [r8], al ; jo 0x19fe76 ; jmp 0x19fe49
0x0000000000036e7d : add byte ptr [r8], r8b ; add rsp, 8 ; ret
0x000000000019fac5 : add byte ptr [r8], r8b ; call 0x2319e57d
0x00000000000745d6 : add byte ptr [r8], r8b ; cmp eax, 0xff ; jne 0x745e9 ; pop rbx ; ret
0x00000000001a0295 : add byte ptr [r8], r8b ; js 0x1a02fb ; jmp 0x1a02a1
0x00000000001aa3bf : add byte ptr [rax + 0x11], al ; jmp qword ptr [rcx]
0x0000000000086d6f : add byte ptr [rax + 0x16], bh ; ret
0x00000000001ba5b7 : add byte ptr [rax + 0x17], bh ; clc ; jmp qword ptr [rcx]
0x00000000001aa5a7 : add byte ptr [rax + 0x17], cl ; jmp qword ptr [rcx]
0x00000000001bbe1c : add byte ptr [rax + 0x1809], dh ; loopne 0x1bbe36 ; ret 0xa
0x00000000001bbdc4 : add byte ptr [rax + 0x180a], dh ; loopne 0x1bbddf ; ret 0xb
0x00000000001a89d7 : add byte ptr [rax + 0x1d], bl ; int1 ; call qword ptr [rsi]
0x00000000001af0d7 : add byte ptr [rax + 0x1e], ch ; cmc ; jmp qword ptr [rcx]
0x0000000000034b9b : add byte ptr [rax + 0x1fe8c17f], al ; ret
0x00000000001aa8f7 : add byte ptr [rax + 0x21], ch ; jmp qword ptr [rcx]
0x00000000001aa87f : add byte ptr [rax + 0x21], dl ; jmp qword ptr [rcx]
0x00000000001722af : add byte ptr [rax + 0x27201fa], al ; mov byte ptr [rdi], cl ; ret
0x00000000001a56ef : add byte ptr [rax + 0x27], ah ; out dx, al ; jmp qword ptr [rdi]
0x0000000000032857 : add byte ptr [rax + 0x29], cl ; ret
0x00000000000e2f72 : add byte ptr [rax + 0x29], cl ; ret 0x148
0x00000000000c0ad4 : add byte ptr [rax + 0x29], cl ; ret 0x2948
0x000000000002944a : add byte ptr [rax + 0x29], cl ; ret 0x349
0x000000000007ef05 : add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x0000000000028552 : add byte ptr [rax + 0x29], cl ; ret 0xe183
0x00000000001a754f : add byte ptr [rax + 0x2b], al ; cli ; call qword ptr [rdi]
0x000000000019fe3f : add byte ptr [rax + 0x2e], dh ; jmp 0x19fe47
0x000000000019fe8f : add byte ptr [rax + 0x2f], al ; jmp 0x19fe97
0x000000000012f58d : add byte ptr [rax + 0x31], cl ; ror dword ptr [rbp + 0x39], 1 ; ret 0x850f
0x00000000001aab37 : add byte ptr [rax + 0x33], cl ; call qword ptr [rax]
0x0000000000045b5c : add byte ptr [rax + 0x39], cl ; ret
0x00000000000f0bec : add byte ptr [rax + 0x39], cl ; ret 0x3c76
0x000000000007dba6 : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000000bd253 : add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000002bdbe : add byte ptr [rax + 0x39], cl ; ret 0x860f
0x000000000007db67 : add byte ptr [rax + 0x39], cl ; ret 0x8948
0x0000000000114a21 : add byte ptr [rax + 0x39], cl ; ret 0xd975
0x0000000000114ae0 : add byte ptr [rax + 0x39], cl ; ret 0xda75
0x0000000000087d0b : add byte ptr [rax + 0x39], cl ; sal byte ptr [rbp - 0x51], 1 ; xor eax, eax ; pop rbx ; ret
0x0000000000193e55 : add byte ptr [rax + 0x43], dl ; pop rcx ; clc ; ret 0x6e1f
0x00000000001a2ea7 : add byte ptr [rax + 0x44], ch ; in eax, dx ; jmp qword ptr [rdi]
0x0000000000075ec6 : add byte ptr [rax + 0x4740000], al ; mov eax, edx ; pop rbx ; ret
0x00000000001a2fdf : add byte ptr [rax + 0x47], dl ; in eax, dx ; jmp qword ptr [rax]
0x00000000001a5bdf : add byte ptr [rax + 0x4b], al ; out dx, al ; call qword ptr [rax]
0x00000000001a341f : add byte ptr [rax + 0x4e], dl ; in eax, dx ; jmp qword ptr [rsi]
0x00000000001a63c7 : add byte ptr [rax + 0x54], bl ; cli ; call qword ptr [rax]
0x00000000001bb027 : add byte ptr [rax + 0x55], ch ; clc ; jmp qword ptr [rcx]
0x000000000018687f : add byte ptr [rax + 0x55], dl ; out dx, al ; push qword ptr [rax + 0x55] ; out dx, al ; call rax
0x00000000000705b5 : add byte ptr [rax + 0x5740000], al ; mov eax, esi ; pop rbx ; ret
0x00000000001afcd7 : add byte ptr [rax + 0x5a], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001a0297 : add byte ptr [rax + 0x5b], bh ; jmp 0x1a029f
0x000000000001f92d : add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x000000000006e017 : add byte ptr [rax + 0x5b], dh ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000001afdaf : add byte ptr [rax + 0x5b], dl ; cmc ; jmp qword ptr [rcx]
0x0000000000106b58 : add byte ptr [rax + 0x5f], bl ; call rax
0x000000000002ec94 : add byte ptr [rax + 0x63], cl ; adc al, 0x88 ; add rax, rdx ; jmp rax
0x000000000005bf01 : add byte ptr [rax + 0x63], cl ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x0000000000063df4 : add byte ptr [rax + 0x63], cl ; adc al, 0x91 ; add rcx, rdx ; jmp rcx
0x0000000000084867 : add byte ptr [rax + 0x63], cl ; adc al, 0x98 ; add rax, rdx ; jmp rax
0x0000000000063833 : add byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rcx, rax ; jmp rcx
0x000000000006bc33 : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x000000000006c8fb : add byte ptr [rax + 0x63], cl ; add al, 0x86 ; add rax, rsi ; jmp rax
0x000000000002e8ec : add byte ptr [rax + 0x63], cl ; add al, 0x8e ; add rsi, rax ; jmp rsi
0x000000000004b5c1 : add byte ptr [rax + 0x63], cl ; add al, 0x90 ; add rax, rdi ; jmp rax
0x00000000000aa196 : add byte ptr [rax + 0x63], cl ; add al, 0xbe ; add rsi, rax ; jmp rsi
0x00000000000f25ab : add byte ptr [rax + 0x63], cl ; or al, 0x8a ; add rdx, rcx ; jmp rdx
0x0000000000033286 : add byte ptr [rax + 0x63], cl ; or al, 0x8f ; add rcx, rdi ; jmp rcx
0x000000000004b29a : add byte ptr [rax + 0x63], cl ; ret
0x000000000006bd1a : add byte ptr [rax + 0x63], cl ; ret 0x3948
0x00000000001127b5 : add byte ptr [rax + 0x63], cl ; ret 0x4864
0x00000000000b23ff : add byte ptr [rax + 0x63], cl ; ret 0x8348
0x0000000000072c6f : add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x000000000004616d : add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret
0x000000000004b60c : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x000000000006ca4c : add byte ptr [rax + 0x63], cl ; xor al, 0xb7 ; add rdi, rsi ; jmp rdi
0x00000000000cc7bf : add byte ptr [rax + 0x66], bh ; syscall ; ret
0x00000000001acfc7 : add byte ptr [rax + 0x67], bl ; stc ; call qword ptr [rax]
0x00000000000cc7df : add byte ptr [rax + 0x68], bh ; syscall ; ret
0x00000000000cc7cf : add byte ptr [rax + 0x6b], bh ; syscall ; ret
0x00000000001aff07 : add byte ptr [rax + 0x6c], bh ; cmc ; jmp qword ptr [rcx]
0x00000000000cc7ef : add byte ptr [rax + 0x6c], bh ; syscall ; ret
0x00000000001b013f : add byte ptr [rax + 0x6e], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001b0157 : add byte ptr [rax + 0x6e], bh ; cmc ; jmp qword ptr [rcx]
0x00000000000cc7af : add byte ptr [rax + 0x6e], bh ; syscall ; ret
0x00000000001a5e57 : add byte ptr [rax + 0x6e], ch ; out dx, al ; jmp qword ptr [rdx]
0x00000000001b0127 : add byte ptr [rax + 0x6e], cl ; cmc ; jmp qword ptr [rcx]
0x00000000000cc7ae : add byte ptr [rax + 0x6e], dil ; syscall ; ret
0x00000000000cc9ff : add byte ptr [rax + 0x6f], bh ; syscall ; ret
0x00000000001b0217 : add byte ptr [rax + 0x6f], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001b02ef : add byte ptr [rax + 0x70], al ; cmc ; jmp qword ptr [rcx]
0x00000000001b0307 : add byte ptr [rax + 0x70], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001b03af : add byte ptr [rax + 0x71], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001b03c7 : add byte ptr [rax + 0x71], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001a5f07 : add byte ptr [rax + 0x71], cl ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a6dff : add byte ptr [rax + 0x73], dh ; out dx, eax ; jmp qword ptr [rax]
0x000000000008902f : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x0000000000071263 : add byte ptr [rax + 0x7740000], al ; mov eax, edx ; pop rbx ; ret
0x0000000000070433 : add byte ptr [rax + 0x7740000], al ; mov eax, esi ; pop rbx ; ret
0x00000000000a68ff : add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000001b08c7 : add byte ptr [rax + 0x7a], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001b08df : add byte ptr [rax + 0x7a], dh ; cmc ; jmp qword ptr [rcx]
0x00000000000ccf87 : add byte ptr [rax + 0x7e], bh ; ret
0x00000000000cceda : add byte ptr [rax + 0x7f], bh ; ret
0x000000000006d7da : add byte ptr [rax + 0x8740000], al ; mov eax, edx ; pop rbx ; ret
0x0000000000075fea : add byte ptr [rax + 0x8740000], al ; mov eax, esi ; pop rbx ; ret
0x0000000000075ac1 : add byte ptr [rax + 0x9740000], al ; mov eax, edx ; pop rbx ; ret
0x00000000000bb93f : add byte ptr [rax + 0xc9], bh ; syscall ; ret
0x0000000000106f2f : add byte ptr [rax + 0xe4], bh ; syscall ; ret
0x00000000000710cc : add byte ptr [rax + 0xe740000], al ; mov eax, edx ; pop rbx ; ret
0x000000000007612c : add byte ptr [rax + 0xe740000], al ; mov eax, esi ; pop rbx ; ret
0x000000000002ddd4 : add byte ptr [rax + 0xf], al ; mov bh, 0xc0 ; ret
0x00000000001a2037 : add byte ptr [rax + 0xf], bl ; in eax, dx ; call rsi
0x000000000008ca25 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x00000000000c8b6c : add byte ptr [rax + 0xf], cl ; ret
0x0000000000078c0b : add byte ptr [rax + 0xf], cl ; ret 0x294d
0x000000000008dc1b : add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000140084 : add byte ptr [rax + 0xf], cl ; ret 0x8348
0x000000000010e74b : add byte ptr [rax + 0xf], cl ; ret 0x8349
0x000000000005178b : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000f8e46 : add byte ptr [rax + 0xf], cl ; ret 0x8b48
0x00000000000bd636 : add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x000000000008e76b : add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000000f8dbc : add byte ptr [rax + 0xf], cl ; ret 0xc3f6
0x0000000000025b98 : add byte ptr [rax + 0xf], cl ; ret 0xc985
0x0000000000025397 : add byte ptr [rax + 0xf], cl ; ret 0xdb85
0x0000000000028094 : add byte ptr [rax + 0xf], cl ; ret 0xed85
0x00000000000cb54d : add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000125edc : add byte ptr [rax + 0xf], cl ; ret 0xff81
0x00000000000ccf9f : add byte ptr [rax + 0xfc17], bh ; ret
0x00000000001ad313 : add byte ptr [rax + 1], al ; add byte ptr [rax], bl ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x000000000012a85f : add byte ptr [rax + 1], bh ; pop rbx ; ret
0x000000000004a075 : add byte ptr [rax + 1], bh ; ret
0x00000000001ad32b : add byte ptr [rax + 1], bl ; add byte ptr [rax], dh ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x000000000008dec5 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00000000000bf682 : add byte ptr [rax + 1], cl ; clc ; jmp rax
0x000000000003c026 : add byte ptr [rax + 1], cl ; ret
0x000000000003beff : add byte ptr [rax + 1], cl ; ret 0x1a75
0x00000000000babcc : add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000494d0 : add byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x000000000007732e : add byte ptr [rax + 1], dil ; ret
0x000000000012d89f : add byte ptr [rax + 2], bh ; ret
0x00000000000cd176 : add byte ptr [rax + 7], bh ; ret
0x00000000000ebf7f : add byte ptr [rax + 9], cl ; ret 0x8949
0x00000000000eae13 : add byte ptr [rax + 9], cl ; ret 0x8b48
0x000000000017bbeb : add byte ptr [rax + rax + 0xbf0000], bh ; add byte ptr [rax], al ; ret 0
0x00000000001a88c3 : add byte ptr [rax + rax*4 + 0x19a80000], dl ; int1 ; jmp qword ptr [rcx]
0x0000000000196177 : add byte ptr [rax + rax*4 - 0x17], dh ; jmp rsp
0x00000000001a7383 : add byte ptr [rax + rax*8 - 0x4a980000], dh ; sti ; call qword ptr [rax]
0x00000000001a7353 : add byte ptr [rax + rax*8 - 0x6bb80000], al ; sti ; call qword ptr [rax]
0x00000000000a5f7c : add byte ptr [rax + rax], 0 ; ret
0x00000000000f0a42 : add byte ptr [rax + rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000000b31f : add byte ptr [rax + rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4f
0x000000000006a91e : add byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000081cdb : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x0000000000082459 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001a75bf : add byte ptr [rax + rax], dh ; add ah, dh ; ret 0
0x000000000000d7af : add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x00000000001a7577 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x00000000001a7517 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret 0
0x00000000001a755f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00000000000abb35 : add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, dword ptr [rdi - 0x10] ; ret
0x00000000001a5b63 : add byte ptr [rax + rbp*4 + 0x34e80000], dl ; out dx, al ; jmp qword ptr [rdx]
0x0000000000196e27 : add byte ptr [rax + rbp*4 - 0x13], dl ; jmp rsp
0x00000000001b0b23 : add byte ptr [rax + rbx*2 + 1], dl ; add byte ptr [rax], ch ; test esi, ebp ; jmp rax
0x00000000001a4b53 : add byte ptr [rax + rbx*4 - 0x26e80000], al ; in eax, dx ; call qword ptr [rsi]
0x00000000001a8b63 : add byte ptr [rax + rbx*8 + 0x23180000], dl ; int1 ; jmp qword ptr [rcx]
0x0000000000196ff7 : add byte ptr [rax + rbx*8], ah ; in eax, dx ; jmp rsp
0x00000000001a8afb : add byte ptr [rax + rbx*8], ch ; add byte ptr [rax], al ; and byte ptr [rdx], ah ; int1 ; jmp rcx
0x00000000000709b5 : add byte ptr [rax + rcx + 0x5b], dh ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000000ff55d : add byte ptr [rax + rcx - 9], dh ; ret 0xfc07
0x0000000000045cd6 : add byte ptr [rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x77], cl ; ret 0xde8
0x00000000001bab23 : add byte ptr [rax + rdi*8 + 1], dl ; add al, ch ; xchg eax, ebp ; sti ; jmp qword ptr [rdx]
0x000000000019889f : add byte ptr [rax + rdi*8 - 0xb], ah ; jmp rsp
0x00000000001aab33 : add byte ptr [rax + rdi*8], ah ; add byte ptr [rax + 0x33], cl ; call qword ptr [rax]
0x000000000019eb33 : add byte ptr [rax + rdi], ah ; add al, bh ; shr ecx, 1 ; call qword ptr [rax]
0x0000000000197c57 : add byte ptr [rax + rdi], ah ; int1 ; jmp rsp
0x000000000019eb4b : add byte ptr [rax + rdi], bh ; add al, dh ; shr ecx, 1 ; call qword ptr [rdx]
0x000000000017cd97 : add byte ptr [rax + rdx + 0x10bf0000], bh ; add byte ptr [rax], al ; ret 0x10
0x00000000001b037b : add byte ptr [rax + rdx*2 + 0x71000001], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001b02eb : add byte ptr [rax + rdx*2], bl ; add dword ptr [rax], eax ; jo 0x1b02f0 ; jmp qword ptr [rcx]
0x00000000001b0303 : add byte ptr [rax + rdx*2], dh ; add dword ptr [rax], eax ; pop rax ; jo 0x1b0308 ; jmp qword ptr [rcx]
0x0000000000197397 : add byte ptr [rax + rdx*2], dh ; out dx, al ; call rsp
0x00000000001a4383 : add byte ptr [rax + rdx*4 - 0x74d80000], dh ; in eax, dx ; call qword ptr [rsi]
0x00000000001ae37b : add byte ptr [rax + rsi - 0x1cffffff], ch ; hlt ; jmp qword ptr [rcx]
0x00000000001ae363 : add byte ptr [rax + rsi - 0x1d07ffff], dl ; hlt ; call qword ptr [rsi]
0x00000000001a6333 : add byte ptr [rax + rsi*4], ah ; add al, bh ; mov esi, gs ; call qword ptr [rax]
0x00000000001a634b : add byte ptr [rax + rsi*4], bh ; add al, dh ; mov esi, gs ; jmp qword ptr [rsi]
0x00000000001a6303 : add byte ptr [rax + rsi*4], dh ; add byte ptr [rax], al ; test al, 0x3e ; cli ; call qword ptr [rax]
0x00000000001ab7b7 : add byte ptr [rax - 0x13], bl ; call rcx
0x00000000001333dd : add byte ptr [rax - 0x168b7f80], 0x89 ; ret 0x48bf
0x00000000000302f9 : add byte ptr [rax - 0x188b7f80], 0x89 ; ret 0x8948
0x00000000000f0bb4 : add byte ptr [rax - 0x188b7f80], 0x89 ; ret 0x8b48
0x00000000001ae5ff : add byte ptr [rax - 0x18], al ; hlt ; jmp qword ptr [rcx]
0x0000000000032c09 : add byte ptr [rax - 0x18], al ; push rax ; ret 5
0x00000000001ae617 : add byte ptr [rax - 0x18], bl ; hlt ; jmp qword ptr [rcx]
0x00000000001ae56f : add byte ptr [rax - 0x19], al ; hlt ; jmp qword ptr [rcx]
0x00000000001a9817 : add byte ptr [rax - 0x1a], cl ; int1 ; call qword ptr [rbx]
0x00000000001a97e7 : add byte ptr [rax - 0x1a], cl ; int1 ; jmp qword ptr [rdi]
0x00000000001a982f : add byte ptr [rax - 0x1a], dl ; int1 ; call qword ptr [rbx]
0x00000000001a6607 : add byte ptr [rax - 0x1c], cl ; out dx, al ; call qword ptr [rax]
0x00000000001a745f : add byte ptr [rax - 0x1f], dh ; out dx, eax ; call rsp
0x00000000001ae1ef : add byte ptr [rax - 0x21], al ; hlt ; call qword ptr [rbx]
0x00000000001a7447 : add byte ptr [rax - 0x25], bl ; out dx, eax ; jmp qword ptr [rbx]
0x00000000001ac6a7 : add byte ptr [rax - 0x28], cl ; call qword ptr [rdi]
0x00000000001ac5cf : add byte ptr [rax - 0x29], ah ; jmp qword ptr [rcx]
0x00000000001ac5e7 : add byte ptr [rax - 0x29], bh ; jmp qword ptr [rcx]
0x00000000001ac5b7 : add byte ptr [rax - 0x29], cl ; jmp qword ptr [rcx]
0x0000000000036071 : add byte ptr [rax - 0x2d], cl ; loopne 0x360c7 ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000001a0db7 : add byte ptr [rax - 0x30], cl ; in al, dx ; call qword ptr [rax]
0x0000000000033db7 : add byte ptr [rax - 0x39], cl ; ret
0x0000000000086c4e : add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000005c4a9 : add byte ptr [rax - 0x39], cl ; ret 0xfffe
0x00000000000740b7 : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000ab55f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00000000000ab53f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000000ab59f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000000ab54f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000000ab58f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x00000000001a0ae7 : add byte ptr [rax - 0x3a], cl ; in al, dx ; jmp rax
0x0000000000034f05 : add byte ptr [rax - 0x3f000001], al ; shr eax, 0x1f ; ret
0x00000000000519b0 : add byte ptr [rax - 0x3f7cb7f0], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000034bfa : add byte ptr [rax - 0x3f91f09a], al ; ret
0x00000000001ab2ef : add byte ptr [rax - 0x3f], al ; jmp qword ptr [rdi]
0x00000000000c99f9 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000000c97bf : add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x00000000001a4a5f : add byte ptr [rax - 0x40], dh ; in eax, dx ; jmp qword ptr [rsi]
0x000000000003c922 : add byte ptr [rax - 0x48], cl ; ret 0xffff
0x00000000001a7387 : add byte ptr [rax - 0x4b], ch ; sti ; call qword ptr [rax]
0x00000000001a07b7 : add byte ptr [rax - 0x55], bl ; in al, dx ; jmp qword ptr [rcx]
0x00000000001ad9e7 : add byte ptr [rax - 0x58], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001ad69f : add byte ptr [rax - 0x65], al ; hlt ; jmp qword ptr [rcx]
0x00000000001ad6b7 : add byte ptr [rax - 0x65], bl ; hlt ; jmp qword ptr [rcx]
0x00000000001ad5a7 : add byte ptr [rax - 0x67], cl ; hlt ; jmp qword ptr [rcx]
0x00000000000ff0ff : add byte ptr [rax - 0x6af0dc06], al ; ret 0xc084
0x00000000001ad38b : add byte ptr [rax - 0x6c3fffff], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001ad373 : add byte ptr [rax - 0x6c57ffff], ah ; hlt ; jmp qword ptr [rcx]
0x00000000001a7357 : add byte ptr [rax - 0x6c], cl ; sti ; call qword ptr [rax]
0x00000000001a92a7 : add byte ptr [rax - 0x6d], bl ; int1 ; call qword ptr [rax]
0x00000000001a92bf : add byte ptr [rax - 0x6d], dl ; int1 ; call qword ptr [rax]
0x00000000001a8a07 : add byte ptr [rax - 0x6f], bl ; cld ; jmp qword ptr [rbx]
0x0000000000037363 : add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x39], r9b ; ret
0x0000000000026b0f : add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000026af3 : add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], ecx ; ret
0x000000000002cb37 : add byte ptr [rax - 0x73], cl ; add eax, 0x15f826 ; ret
0x000000000002092f : add byte ptr [rax - 0x73], cl ; add eax, 0x16b574 ; ret
0x000000000002093f : add byte ptr [rax - 0x73], cl ; add eax, 0x16d443 ; ret
0x00000000000fda6c : add byte ptr [rax - 0x73], cl ; add eax, 0x2c8584 ; ret
0x00000000000fd8ac : add byte ptr [rax - 0x73], cl ; add eax, 0x2c8744 ; ret
0x000000000012a8ff : add byte ptr [rax - 0x73], cl ; add eax, 0x61a5e ; ret
0x0000000000026b2b : add byte ptr [rax - 0x73], cl ; add ecx, dword ptr [rax + 0x39] ; ret
0x00000000000abb7f : add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000abb8f : add byte ptr [rax - 0x73], cl ; cld ; ret
0x000000000011fe4f : add byte ptr [rax - 0x73], cl ; cmp eax, 0x2a7905 ; call rax
0x00000000000abb6f : add byte ptr [rax - 0x73], cl ; hlt ; ret
0x0000000000080dea : add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x00000000000450cd : add byte ptr [rax - 0x73], cl ; xor eax, 0x1cb ; call rax
0x000000000006f158 : add byte ptr [rax - 0x73], cl ; xor eax, 0x30 ; call rax
0x000000000007c678 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffe1e0 ; call rax
0x000000000007c228 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffe630 ; call rax
0x000000000007be38 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffea20 ; call rax
0x000000000007add8 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffa80 ; call rax
0x000000000007ab68 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffcf0 ; call rax
0x000000000006f451 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffd37 ; call rax
0x000000000012d5c6 : add byte ptr [rax - 0x75], cl ; add al, 0xc2 ; jmp rax
0x00000000000ef687 : add byte ptr [rax - 0x75], cl ; add byte ptr [rax + 0x39], cl ; ret 0x860f
0x000000000003a711 : add byte ptr [rax - 0x75], cl ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x0000000000140752 : add byte ptr [rax - 0x75], cl ; add eax, 0x283cb6 ; call qword ptr [rax]
0x000000000014013f : add byte ptr [rax - 0x75], cl ; add eax, 0x2842c9 ; call qword ptr [rax]
0x000000000007ca3f : add byte ptr [rax - 0x75], cl ; add eax, 0x347ad9 ; ret
0x0000000000029c8f : add byte ptr [rax - 0x75], cl ; add eax, 0x39ac59 ; ret
0x0000000000021a4f : add byte ptr [rax - 0x75], cl ; add eax, 0x3a6919 ; ret
0x0000000000021a3f : add byte ptr [rax - 0x75], cl ; add eax, 0x3a6939 ; ret
0x00000000000fd58e : add byte ptr [rax - 0x75], cl ; and al, 0xb0 ; ret
0x0000000000073c58 : add byte ptr [rax - 0x75], cl ; cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x0000000000083b5f : add byte ptr [rax - 0x75], cl ; je 0x83b8e ; call rax
0x0000000000083b5e : add byte ptr [rax - 0x75], cl ; je 0x83b8f ; call rax
0x00000000000eb677 : add byte ptr [rax - 0x75], cl ; jge 0xeb60a ; call r12
0x00000000000eb796 : add byte ptr [rax - 0x75], cl ; jge 0xeb729 ; call r12
0x000000000007b636 : add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000072f26 : add byte ptr [rax - 0x75], cl ; jp 0x72f71 ; jmp 0x72ef6
0x0000000000074eaf : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x00000000000d678f : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 + 0x63], r9b ; ret 0xf53
0x000000000013b377 : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x75], r9b ; jmp rax
0x000000000002342f : add byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000001059b7 : add byte ptr [rax - 0x75], cl ; or byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x00000000001059af : add byte ptr [rax - 0x75], cl ; pop rax ; ret
0x000000000015224f : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000083e67 : add byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x68 ; call rax
0x00000000000e9755 : add byte ptr [rax - 0x75], cl ; sbb al, ch ; ret 0xf44e
0x00000000000c915f : add byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000010910e : add byte ptr [rax - 0x75], cl ; sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x0000000000104aa5 : add byte ptr [rax - 0x75], cl ; xor al, ch ; ret 0xf6bf
0x000000000005be07 : add byte ptr [rax - 0x75], cl ; xor eax, 0x367161 ; call rax
0x000000000005b7b1 : add byte ptr [rax - 0x75], cl ; xor eax, 0x3677b7 ; call rax
0x0000000000050009 : add byte ptr [rax - 0x75], cl ; xor eax, 0x372f5f ; call rax
0x000000000004d38d : add byte ptr [rax - 0x75], cl ; xor eax, 0x375bdb ; call rax
0x000000000012343f : add byte ptr [rax - 0x76acfe07], al ; ror dword ptr [rdi], cl ; xchg eax, esi ; ret 0xfb83
0x00000000000feb94 : add byte ptr [rax - 0x76b7ffc8], al ; ret
0x00000000000ff272 : add byte ptr [rax - 0x76b80000], al ; ret
0x0000000000116eff : add byte ptr [rax - 0x76b80000], al ; ret 0x4875
0x0000000000142e24 : add byte ptr [rax - 0x77], cl ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000088ca1 : add byte ptr [rax - 0x77], cl ; adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000088b5e : add byte ptr [rax - 0x77], cl ; add al, 0x24 ; call qword ptr [rdx]
0x000000000014304f : add byte ptr [rax - 0x77], cl ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x0000000000033620 : add byte ptr [rax - 0x77], cl ; and al, 0x28 ; call 0x1f8a8
0x00000000000887ee : add byte ptr [rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x0000000000115baf : add byte ptr [rax - 0x77], cl ; clc ; add rsp, 8 ; ret
0x000000000003a68f : add byte ptr [rax - 0x77], cl ; clc ; cqo ; idiv rsi ; ret
0x000000000007ca6f : add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000007a291 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000006ab7e : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000083a61 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x000000000007215c : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000071fa4 : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x0000000000033c37 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x39] ; ret
0x0000000000142909 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x000000000009ea6e : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0xc6e8
0x00000000000876d4 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 6] ; call rax
0x00000000000bdff6 : add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000103695 : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe8
0x0000000000103595 : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe9
0x00000000000b9f65 : add byte ptr [rax - 0x77], cl ; imul eax ; ret 0xf66b
0x00000000000700df : add byte ptr [rax - 0x77], cl ; jmp 0x48f58a38
0x00000000000bdaa5 : add byte ptr [rax - 0x77], cl ; jmp 0xffffffffbece63fb
0x000000000006dc65 : add byte ptr [rax - 0x77], cl ; mov dh, byte ptr [rax] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x00000000000783e3 : add byte ptr [rax - 0x77], cl ; mov edx, 0x130 ; pop rbx ; ret
0x00000000000bcff6 : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call 0x892e9
0x0000000000088145 : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x000000000012db5c : add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x0000000000103251 : add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000012c2d3 : add byte ptr [rax - 0x77], cl ; out dx, eax ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000113e41 : add byte ptr [rax - 0x77], cl ; push rbp ; nop ; mov rdx, r13 ; call rax
0x0000000000084125 : add byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x000000000002ad35 : add byte ptr [rax - 0x77], cl ; ret
0x000000000007db92 : add byte ptr [rax - 0x77], cl ; ret 0x18eb
0x000000000012785f : add byte ptr [rax - 0x77], cl ; ret 0x1be
0x000000000007d364 : add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x000000000007dd09 : add byte ptr [rax - 0x77], cl ; ret 0x21e9
0x00000000000af228 : add byte ptr [rax - 0x77], cl ; ret 0x2944
0x0000000000047425 : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000066295 : add byte ptr [rax - 0x77], cl ; ret 0x348
0x000000000006e453 : add byte ptr [rax - 0x77], cl ; ret 0x38b
0x000000000003412a : add byte ptr [rax - 0x77], cl ; ret 0x394d
0x0000000000046eb4 : add byte ptr [rax - 0x77], cl ; ret 0x3dbe
0x00000000000be88f : add byte ptr [rax - 0x77], cl ; ret 0x3e9
0x0000000000116f02 : add byte ptr [rax - 0x77], cl ; ret 0x4875
0x00000000000d6cdd : add byte ptr [rax - 0x77], cl ; ret 0x8341
0x000000000002fa5f : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000010cad3 : add byte ptr [rax - 0x77], cl ; ret 0x850f
0x000000000007fa2f : add byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000052289 : add byte ptr [rax - 0x77], cl ; ret 0x858b
0x000000000002c03d : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000bc310 : add byte ptr [rax - 0x77], cl ; ret 0x8949
0x0000000000096680 : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000002c537 : add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x000000000006f008 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000c8db6 : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000000fdc3a : add byte ptr [rax - 0x77], cl ; ret 0x8feb
0x00000000000c850e : add byte ptr [rax - 0x77], cl ; ret 0x9ce9
0x00000000000fd795 : add byte ptr [rax - 0x77], cl ; ret 0xb6e9
0x0000000000105615 : add byte ptr [rax - 0x77], cl ; ret 0xbc41
0x000000000008dbbb : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x0000000000044dda : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000528af : add byte ptr [rax - 0x77], cl ; ret 0xd5e9
0x0000000000045cda : add byte ptr [rax - 0x77], cl ; ret 0xde8
0x00000000000e013f : add byte ptr [rax - 0x77], cl ; ret 0xe283
0x0000000000061c87 : add byte ptr [rax - 0x77], cl ; ret 0xe8
0x00000000000947c5 : add byte ptr [rax - 0x77], cl ; ret 0xf748
0x0000000000088732 : add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000007a310 : add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000011a414 : add byte ptr [rax - 0x77], cl ; ror dword ptr [rdi], -0x7b ; ret 0xfffe
0x0000000000142ddc : add byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000131b3c : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x131b54 ; ret
0x00000000001348ac : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x1348c4 ; ret
0x00000000001348c4 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x1348dc ; ret
0x00000000001350fc : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x135114 ; ret
0x0000000000135114 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x13512c ; ret
0x0000000000135144 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x13515c ; ret
0x0000000000118a9f : add byte ptr [rax - 0x77], cl ; xor eax, eax ; ret
0x00000000001a4137 : add byte ptr [rax - 0x79], bh ; in eax, dx ; jmp qword ptr [rbx]
0x00000000001acf67 : add byte ptr [rax - 0x79], ch ; hlt ; call qword ptr [rax]
0x00000000001acf1f : add byte ptr [rax - 0x79], dh ; hlt ; call qword ptr [rsi]
0x00000000000c92e1 : add byte ptr [rax - 0x7af10000], al ; ret
0x000000000008ae8f : add byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x00000000000fee06 : add byte ptr [rax - 0x7b], cl ; push qword ptr [rax + rdx - 0x18] ; jmp rbx
0x0000000000072a4a : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x0000000000063640 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 3
0x00000000000a28a3 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000ffb21 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x89 ; ret 0xfffe
0x0000000000138753 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x19], 0x5b ; ret
0x000000000016c437 : add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x0000000000051fb8 : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc23e67c8
0x000000000010dc9d : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc34a24ad
0x00000000000828e6 : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000061cae : add byte ptr [rax - 0x7d], cl ; clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x000000000006ad40 : add byte ptr [rax - 0x7d], cl ; clc ; add dword ptr [rax - 0x77], ecx ; ret 0x2b76
0x0000000000086e9d : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x000000000002db94 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000004d691 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000004ed4d : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x00000000000f693f : add byte ptr [rax - 0x7d], cl ; in al, dx ; or dh, dh ; ret 0x7540
0x0000000000173de6 : add byte ptr [rax - 0x7d], cl ; inc dword ptr [rcx] ; ja 0x173df7 ; ret
0x0000000000084162 : add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000020c2c : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f153a : add byte ptr [rax - 0x7d], cl ; ret 0x3101
0x00000000001263df : add byte ptr [rax - 0x7d], cl ; ret 0x3108
0x0000000000122654 : add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x00000000000a971f : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000fe1ef : add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x0000000000121d42 : add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x0000000000082479 : add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x00000000000be3ef : add byte ptr [rax - 0x7d], cl ; ret 0x4401
0x0000000000121eca : add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x0000000000021905 : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000e4e1f : add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000017421f : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000001086ba : add byte ptr [rax - 0x7d], cl ; ret 0x4814
0x00000000000569b7 : add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000009e5ff : add byte ptr [rax - 0x7d], cl ; ret 0x4840
0x0000000000023de6 : add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x0000000000029016 : add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x00000000001446af : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000072967 : add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000000d717f : add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x000000000008e0bf : add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000008e04f : add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x00000000000343a9 : add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00000000000af25f : add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00000000000d8287 : add byte ptr [rax - 0x7d], cl ; ret 0x8304
0x00000000000242b7 : add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x00000000000e61df : add byte ptr [rax - 0x7d], cl ; ret 0x8908
0x000000000006c90f : add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x000000000006099f : add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x000000000010dd97 : add byte ptr [rax - 0x7d], cl ; ret 0xc601
0x000000000011ee75 : add byte ptr [rax - 0x7d], cl ; ret 0xe801
0x000000000008d450 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000146693 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000d6cc7 : add byte ptr [rax - 0x7d], cl ; ret 0xeb04
0x00000000001446d3 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000034207 : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000009ec2f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000008afcf : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x00000000000297fc : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x000000000006ed94 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0xf20
0x000000000004604f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x00000000000af4e7 : add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x4801
0x00000000001b0a8f : add byte ptr [rax - 0x7e], dl ; cmc ; jmp qword ptr [rcx]
0x00000000000bbb59 : add byte ptr [rax - 0x7f], cl ; cli ; ret 0x10
0x000000000003a8f1 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0xd9e
0x00000000000717ac : add byte ptr [rax - 0x7f], cl ; ret
0x000000000015886b : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000006f0ff : add byte ptr [rax - 0x7f], cl ; ret 0xe8
0x00000000001ae917 : add byte ptr [rax - 0xe], cl ; hlt ; jmp qword ptr [rsi]
0x0000000000197d2f : add byte ptr [rax - 0xf], dl ; call rsp
0x0000000000118ccb : add byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000033efd : add byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000003547d : add byte ptr [rax - 1], bh ; ret
0x00000000000368b6 : add byte ptr [rax - 1], dil ; ret
0x000000000019aca7 : add byte ptr [rax - 6], ah ; call rsp
0x00000000000883ea : add byte ptr [rax], 0 ; add al, ch ; int 0xc3
0x0000000000088493 : add byte ptr [rax], 0 ; add al, ch ; push rsp ; ret
0x00000000000703f4 : add byte ptr [rax], 0 ; add al, ch ; ret
0x000000000003a8f5 : add byte ptr [rax], 0 ; add al, ch ; ret 0xd9e
0x000000000006b46b : add byte ptr [rax], 0 ; add bl, dh ; ret
0x0000000000073e19 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000b9f62 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; imul eax ; ret 0xf66b
0x000000000003ea7d : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007a30d : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000017496b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000013b98b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x000000000015b04b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000009599b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000002bd53 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x0000000000082463 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00000000000aa353 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000095d1b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000006fd4b : add byte ptr [rax], 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000362b6 : add byte ptr [rax], 0 ; add byte ptr [rcx + 0xf], al ; xchg eax, esi ; ret 0x394c
0x0000000000070f73 : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x000000000007e072 : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x00000000000b51e3 : add byte ptr [rax], 0 ; add byte ptr [rcx - 0x7d], al ; ret
0x000000000016df81 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000002b0ae : add byte ptr [rax], 0 ; add cl, ch ; ret 0xfffb
0x0000000000065842 : add byte ptr [rax], 0 ; add dh, dh ; ret
0x000000000006d7db : add byte ptr [rax], 0 ; je 0x6d7f0 ; mov eax, edx ; pop rbx ; ret
0x000000000006fd00 : add byte ptr [rax], 0 ; je 0x6fd19 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000070434 : add byte ptr [rax], 0 ; je 0x70448 ; mov eax, esi ; pop rbx ; ret
0x00000000000705b6 : add byte ptr [rax], 0 ; je 0x705c8 ; mov eax, esi ; pop rbx ; ret
0x0000000000070f2a : add byte ptr [rax], 0 ; je 0x70f41 ; mov eax, r8d ; pop rbx ; ret
0x00000000000710cd : add byte ptr [rax], 0 ; je 0x710e8 ; mov eax, edx ; pop rbx ; ret
0x0000000000071264 : add byte ptr [rax], 0 ; je 0x71278 ; mov eax, edx ; pop rbx ; ret
0x0000000000075ac2 : add byte ptr [rax], 0 ; je 0x75ad8 ; mov eax, edx ; pop rbx ; ret
0x0000000000075ec7 : add byte ptr [rax], 0 ; je 0x75ed8 ; mov eax, edx ; pop rbx ; ret
0x0000000000075feb : add byte ptr [rax], 0 ; je 0x76000 ; mov eax, esi ; pop rbx ; ret
0x000000000007612d : add byte ptr [rax], 0 ; je 0x76148 ; mov eax, esi ; pop rbx ; ret
0x0000000000076412 : add byte ptr [rax], 0 ; je 0x76428 ; mov eax, edx ; pop rbx ; ret
0x0000000000076db7 : add byte ptr [rax], 0 ; je 0x76dc8 ; mov eax, edx ; pop rbx ; ret
0x0000000000077fb3 : add byte ptr [rax], 0 ; je 0x77fc8 ; mov eax, edx ; pop rbx ; ret
0x00000000001a88c5 : add byte ptr [rax], 0 ; test al, 0x19 ; int1 ; jmp qword ptr [rcx]
0x0000000000126289 : add byte ptr [rax], ah ; add bl, ch ; ret 0xb8
0x00000000001a8aff : add byte ptr [rax], ah ; and dh, cl ; jmp rcx
0x00000000001b21df : add byte ptr [rax], ah ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001ae73f : add byte ptr [rax], ah ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001b043f : add byte ptr [rax], ah ; jb 0x1b043c ; jmp qword ptr [rcx]
0x000000000010de8e : add byte ptr [rax], ah ; jmp 0x10de58
0x00000000001bb81f : add byte ptr [rax], ah ; jne 0x1bb81f ; call qword ptr [rdi]
0x00000000001bba6f : add byte ptr [rax], ah ; jnp 0x1bba6f ; call qword ptr [rcx]
0x00000000001a092f : add byte ptr [rax], ah ; mov al, 0xec ; jmp qword ptr [rcx]
0x00000000001b15cf : add byte ptr [rax], ah ; mov ch, 0xf5 ; call rdi
0x000000000002de14 : add byte ptr [rax], ah ; movzx eax, ax ; ret
0x00000000001b00df : add byte ptr [rax], ah ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001afd7f : add byte ptr [rax], ah ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00000000001ad19f : add byte ptr [rax], ah ; xchg eax, ecx ; hlt ; jmp qword ptr [rsi]
0x00000000001a5a0f : add byte ptr [rax], ah ; xor ch, dh ; jmp qword ptr [rcx]
0x00000000001a7576 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x00000000001a7516 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret 0
0x00000000001a755e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00000000001ac5e2 : add byte ptr [rax], al ; adc al, 0x13 ; add dword ptr [rax], eax ; js 0x1ac5ca ; jmp qword ptr [rcx]
0x000000000019cce2 : add byte ptr [rax], al ; adc al, 0x1a ; add byte ptr [rax], al ; call 0x2119b609
0x00000000001ad9e2 : add byte ptr [rax], al ; adc al, 0x27 ; add dword ptr [rax], eax ; test al, 0xf4 ; jmp qword ptr [rcx]
0x000000000019782e : add byte ptr [rax], al ; adc al, 0x49 ; out dx, eax ; call rsp
0x00000000001a64e2 : add byte ptr [rax], al ; adc al, 0xb2 ; add byte ptr [rax], al ; or bl, bl ; out dx, al ; jmp qword ptr [rsi]
0x00000000001a8be2 : add byte ptr [rax], al ; adc al, 0xd9 ; add byte ptr [rax], al ; sbb byte ptr [rbx], ah ; int1 ; call qword ptr [rcx]
0x00000000001a97e2 : add byte ptr [rax], al ; adc al, 0xe5 ; add byte ptr [rax], al ; out 0xf1, al ; jmp qword ptr [rdi]
0x00000000001a98e2 : add byte ptr [rax], al ; adc al, 0xe6 ; add byte ptr [rax], al ; clc ; out 0xf1, al ; jmp qword ptr [rdi]
0x000000000019cd2f : add byte ptr [rax], al ; adc al, 0xe9 ; call qword ptr [rcx]
0x00000000001aa9e2 : add byte ptr [rax], al ; adc al, 0xf7 ; add byte ptr [rax], al ; mov byte ptr [rdi], ah ; jmp qword ptr [rdi]
0x00000000000007b8 : add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x00000000001aa7ee : add byte ptr [rax], al ; adc byte ptr [rax], ah ; jmp qword ptr [rcx]
0x00000000001a357e : add byte ptr [rax], al ; adc byte ptr [rbp - 0x13], dl ; call qword ptr [rax]
0x00000000001a454e : add byte ptr [rax], al ; adc byte ptr [rbx], al ; std ; jmp rsp
0x00000000001aa4be : add byte ptr [rax], al ; adc byte ptr [rbx], dl ; jmp qword ptr [rcx]
0x00000000001a6d6e : add byte ptr [rax], al ; adc byte ptr [rcx - 0x11], dh ; call rax
0x00000000001a3d2e : add byte ptr [rax], al ; adc byte ptr [rcx - 0x13], bh ; call qword ptr [rsi]
0x000000000019d39e : add byte ptr [rax], al ; adc byte ptr [rdi - 0x17], ah ; jmp rax
0x0000000000035d60 : add byte ptr [rax], al ; adc byte ptr [rdi], cl ; ret 0x8b48
0x000000000019d75e : add byte ptr [rax], al ; adc byte ptr [rdx - 0x17], bh ; call qword ptr [rax]
0x00000000001aa44e : add byte ptr [rax], al ; adc byte ptr [rdx], 0xf2 ; call qword ptr [rdx]
0x00000000001878be : add byte ptr [rax], al ; adc byte ptr [rdx], al ; jmp qword ptr [rax]
0x00000000001aa3be : add byte ptr [rax], al ; adc edx, esi ; jmp qword ptr [rcx]
0x000000000019772e : add byte ptr [rax], al ; adc r13d, edi ; jmp rsp
0x00000000001a76b1 : add byte ptr [rax], al ; add ah, ah ; ret
0x00000000001a7591 : add byte ptr [rax], al ; add ah, al ; ret 0
0x00000000000191ad : add byte ptr [rax], al ; add ah, bh ; ret 0x18
0x00000000001a75a9 : add byte ptr [rax], al ; add ah, bl ; ret 0
0x000000000001914d : add byte ptr [rax], al ; add ah, ch ; ret 0x18
0x00000000001a75c1 : add byte ptr [rax], al ; add ah, dh ; ret 0
0x00000000001ac8d2 : add byte ptr [rax], al ; add al, 0x16 ; add dword ptr [rax], eax ; sar dword ptr [rcx], -0x19 ; jmp qword ptr [rax]
0x00000000001ae1d2 : add byte ptr [rax], al ; add al, 0x2f ; add dword ptr [rax], eax ; sub bh, bl ; hlt ; jmp qword ptr [rcx]
0x00000000001afcd2 : add byte ptr [rax], al ; add al, 0x4a ; add dword ptr [rax], eax ; js 0x1afd3d ; cmc ; jmp qword ptr [rcx]
0x00000000001b23d2 : add byte ptr [rax], al ; add al, 0x71 ; add dword ptr [rax], eax ; clc ; and dh, dh ; jmp qword ptr [rsi]
0x0000000000196b2e : add byte ptr [rax], al ; add al, 0xf9 ; jmp 0x196b38
0x0000000000185935 : add byte ptr [rax], al ; add al, bh ; loope 0x185940 ; jmp qword ptr [rdi]
0x00000000001859b5 : add byte ptr [rax], al ; add al, bh ; loope 0x1859c0 ; jmp qword ptr [rdi]
0x0000000000185a35 : add byte ptr [rax], al ; add al, bh ; loope 0x185a40 ; jmp qword ptr [rdi]
0x00000000001adeff : add byte ptr [rax], al ; add al, byte ptr [rcx + 0x283100e] ; push rsp ; ret
0x0000000000110de3 : add byte ptr [rax], al ; add al, byte ptr [rcx - 1] ; push rbp ; sub byte ptr [rax - 0x77], cl ; ret
0x000000000011da69 : add byte ptr [rax], al ; add al, ch ; call rax
0x00000000000883eb : add byte ptr [rax], al ; add al, ch ; int 0xc3
0x000000000008cfad : add byte ptr [rax], al ; add al, ch ; mov ebx, 0x39fffa98 ; ret
0x000000000005022f : add byte ptr [rax], al ; add al, ch ; pop rcx ; ret
0x0000000000088494 : add byte ptr [rax], al ; add al, ch ; push rsp ; ret
0x00000000000703f5 : add byte ptr [rax], al ; add al, ch ; ret
0x000000000012fba6 : add byte ptr [rax], al ; add al, ch ; ret 0xb1
0x000000000003a8f6 : add byte ptr [rax], al ; add al, ch ; ret 0xd9e
0x0000000000174ade : add byte ptr [rax], al ; add al, ch ; ret 0xeaad
0x000000000013b856 : add byte ptr [rax], al ; add al, ch ; ret 0xef2d
0x0000000000101ca6 : add byte ptr [rax], al ; add al, ch ; ret 0xf1db
0x000000000018a8cd : add byte ptr [rax], al ; add al, dh ; sub dl, bh ; call rax
0x000000000017496d : add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000131a6a : add byte ptr [rax], al ; add bh, bh ; loope 0x131a07 ; ret
0x0000000000019c75 : add byte ptr [rax], al ; add bh, bl ; ret
0x00000000000d67db : add byte ptr [rax], al ; add bh, dh ; ret
0x0000000000019195 : add byte ptr [rax], al ; add bh, dh ; ret 0x18
0x00000000000cdfba : add byte ptr [rax], al ; add bl, al ; mov eax, 0xffffffff ; ret
0x00000000000ad06f : add byte ptr [rax], al ; add bl, al ; mov eax, 2 ; ret
0x00000000000d8afb : add byte ptr [rax], al ; add bl, al ; mov eax, 3 ; ret
0x00000000000d8af5 : add byte ptr [rax], al ; add bl, al ; mov eax, 4 ; ret
0x000000000013520b : add byte ptr [rax], al ; add bl, al ; nop ; xor eax, eax ; ret
0x0000000000019c45 : add byte ptr [rax], al ; add bl, al ; ret
0x000000000013495c : add byte ptr [rax], al ; add bl, al ; xor eax, eax ; ret
0x00000000000be7b8 : add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x00000000000a63ad : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x00000000000a63bd : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x000000000002bd55 : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000001424db : add byte ptr [rax], al ; add byte ptr [rax + 0x16], bh ; ret
0x0000000000055b3b : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000e2f70 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x148
0x00000000000c0ad2 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x2948
0x000000000002bdbc : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x860f
0x0000000000193e53 : add byte ptr [rax], al ; add byte ptr [rax + 0x43], dl ; pop rcx ; clc ; ret 0x6e1f
0x00000000000afbf9 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000072c6d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x000000000004b60a : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x00000000000a68fd : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000000cced8 : add byte ptr [rax], al ; add byte ptr [rax + 0x7f], bh ; ret
0x00000000000c8b6a : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000140082 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8348
0x000000000010e749 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8349
0x00000000000fecaf : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000f8e44 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8b48
0x00000000000f8dba : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f6
0x0000000000025b96 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc985
0x0000000000025395 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xdb85
0x0000000000028092 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xed85
0x00000000000cb54b : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000ccf9d : add byte ptr [rax], al ; add byte ptr [rax + 0xfc17], bh ; ret
0x000000000012a85d : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; pop rbx ; ret
0x000000000004a073 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000000000aa490 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x000000000003c024 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x000000000003befd : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x1a75
0x000000000012d8ad : add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x00000000000cd174 : add byte ptr [rax], al ; add byte ptr [rax + 7], bh ; ret
0x00000000001a75bd : add byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add ah, dh ; ret 0
0x00000000001a7575 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x00000000001a7515 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret 0
0x00000000001a755d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00000000000abb33 : add byte ptr [rax], al ; add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, dword ptr [rdi - 0x10] ; ret
0x000000000003c2b7 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000073e1a : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000034bf8 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f91f09a], al ; ret
0x000000000001f919 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000000c97bd : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x00000000000ff0fd : add byte ptr [rax], al ; add byte ptr [rax - 0x6af0dc06], al ; ret 0xc084
0x00000000000abb7d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000abb8d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x00000000000abb6d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x00000000000fd58c : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; and al, 0xb0 ; ret
0x00000000000eb675 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0xeb60c ; call r12
0x00000000000eb794 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0xeb72b ; call r12
0x000000000007b634 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000072f24 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jp 0x72f73 ; jmp 0x72ef8
0x000000000002342d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000e9753 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; sbb al, ch ; ret 0xf44e
0x00000000000c915d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000007ca6d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000bdff4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000103693 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe8
0x0000000000103593 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe9
0x00000000000b9f63 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; imul eax ; ret 0xf66b
0x0000000000088143 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x000000000012db5a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x000000000010324f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000003ea10 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007d362 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x00000000000af226 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2944
0x00000000000ef7bd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000002c03b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000cd571 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000006f006 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000105613 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xbc41
0x000000000005708d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000061c85 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xe8
0x00000000000947c3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x000000000007a30e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000006363e : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 3
0x0000000000138751 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x19], 0x5b ; ret
0x00000000000f693d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; in al, dx ; or dh, dh ; ret 0x7540
0x00000000000320dd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001263dd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3108
0x00000000000a971d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000fe2ad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x000000000013dd1d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x0000000000021903 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000e4e1d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000017421d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000001086b8 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4814
0x00000000000569b5 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x0000000000029014 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x00000000001461d3 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000d717d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x000000000008e0bd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000008e04d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x00000000000af25d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x000000000002519d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x00000000000e61dd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8908
0x000000000006099d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x000000000010dd95 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xc601
0x0000000000147d51 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001461fd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000bbd0d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000009ec2d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x0000000000029abe : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x000000000004604d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x000000000015a064 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000033efb : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000003547b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000001a092d : add byte ptr [rax], al ; add byte ptr [rax], ah ; mov al, 0xec ; jmp qword ptr [rcx]
0x00000000001a7574 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x00000000001a7514 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret 0
0x00000000001a755c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00000000001878bc : add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rdx], al ; jmp qword ptr [rax]
0x00000000000191ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add ah, bh ; ret 0x18
0x000000000001914b : add byte ptr [rax], al ; add byte ptr [rax], al ; add ah, ch ; ret 0x18
0x0000000000185933 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; loope 0x185942 ; jmp qword ptr [rdi]
0x00000000001859b3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; loope 0x1859c2 ; jmp qword ptr [rdi]
0x0000000000185a33 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; loope 0x185a42 ; jmp qword ptr [rdi]
0x0000000000019c73 : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bl ; ret
0x0000000000019193 : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, dh ; ret 0x18
0x0000000000019c43 : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, al ; ret
0x00000000000a63bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x000000000007580b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000072c6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x00000000000abb7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000abb8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x00000000000abb6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x000000000007ca6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000007d360 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x00000000000bf51b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000005708b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000061c83 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xe8
0x00000000000320db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000a971b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000fe2ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x000000000013dd1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x000000000017421b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000000d717b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x000000000008e0bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000008e04b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x00000000000af25b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x000000000002519b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x00000000000e61db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8908
0x000000000006162b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x00000000000bf61b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000001878ba : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rdx], al ; jmp qword ptr [rax]
0x00000000000191a9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add ah, bh ; ret 0x18
0x0000000000019149 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add ah, ch ; ret 0x18
0x0000000000019c71 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bl ; ret
0x0000000000019191 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, dh ; ret 0x18
0x0000000000019c41 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, al ; ret
0x00000000000e9ebd : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000001be5b0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000191c1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], al ; ret
0x0000000000019221 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], ah ; ret
0x0000000000019239 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], ch ; ret
0x00000000000185a9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi], bh ; ret 0x18
0x0000000000019209 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi], bl ; ret
0x00000000000190a1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add ch, al ; ret 0x18
0x0000000000019119 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add ch, bl ; ret 0x18
0x0000000000019ca1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add ch, ch ; ret
0x00000000000190d1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add ch, cl ; ret 0x18
0x0000000000019d19 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add ch, dh ; ret
0x0000000000019101 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add ch, dl ; ret 0x18
0x0000000000019089 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, al ; ret 0x18
0x00000000000190b9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, cl ; ret 0x18
0x0000000000019d01 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, dh ; ret
0x0000000000019c59 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, dl ; ret
0x00000000000190e9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, dl ; ret 0x18
0x0000000000019131 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, ah ; ret 0x18
0x0000000000019179 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, dh ; ret 0x18
0x00000000000093a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rsi]
0x0000000000019be2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cdq ; ret
0x0000000000185932 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x185943 ; jmp qword ptr [rdi]
0x00000000001859b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x1859c3 ; jmp qword ptr [rdi]
0x0000000000185a32 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x185a43 ; jmp qword ptr [rdi]
0x00000000000191aa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cld ; ret 0x18
0x0000000000019d1a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cmc ; ret
0x000000000001914a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; in al, dx ; ret 0x18
0x0000000000019ca2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; in eax, dx ; ret
0x0000000000018f3a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 0x18
0x0000000000019d02 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; int1 ; ret
0x00000000000190ba : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; leave ; ret 0x18
0x0000000000019012 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lodsd eax, dword ptr [rsi] ; ret 0x18
0x0000000000018fe2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x18
0x0000000000018ec2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret 0x18
0x0000000000193aca : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x0000000000018eda : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rsp ; ret 0x18
0x0000000000018e92 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; ret 0x18
0x000000000001929a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rsp ; ret
0x0000000000018eaa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rsp ; ret 0x18
0x0000000000018fca : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pushfq ; ret 0x18
0x000000000000404a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001bc2aa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000000e45a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x16
0x00000000000185aa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18
0x0000000000003fea : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x23
0x000000000017da72 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000005ec2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x26
0x0000000000000548 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2800
0x0000000000010e8a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x30
0x000000000000d7b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x000000000017df62 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x000000000000b322 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4f
0x0000000000008652 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x53
0x000000000000b532 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x56
0x00000000001bea92 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000001be712 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x0000000000007602 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 4
0x00000000001bce86 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x000000000000dd9a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 6
0x000000000001824a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x0000000000018fb2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, ebp ; ret 0x18
0x00000000000a917b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x00000000001878bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; add dh, dl ; jmp qword ptr [rax]
0x000000000003a889 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x000000000010117b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x00000000000191c3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], al ; ret
0x00000000000a995b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000010f86b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4d30
0x000000000014468b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000008946b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000193acb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x0000000000019223 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], ah ; ret
0x000000000007a54b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000001923b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], ch ; ret
0x00000000000185ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi], bh ; ret 0x18
0x000000000001920b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi], bl ; ret
0x00000000000190a3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add ch, al ; ret 0x18
0x000000000001911b : add byte ptr [rax], al ; add byte ptr [rax], al ; add ch, bl ; ret 0x18
0x0000000000019ca3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add ch, ch ; ret
0x00000000000190d3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add ch, cl ; ret 0x18
0x0000000000019d1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add ch, dh ; ret
0x0000000000019103 : add byte ptr [rax], al ; add byte ptr [rax], al ; add ch, dl ; ret 0x18
0x000000000001908b : add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, al ; ret 0x18
0x00000000000190bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, cl ; ret 0x18
0x0000000000019d03 : add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, dh ; ret
0x0000000000019c5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, dl ; ret
0x00000000000190eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, dl ; ret 0x18
0x0000000000019133 : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, ah ; ret 0x18
0x0000000000116b4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x7420
0x000000000001917b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, dh ; ret 0x18
0x00000000000ab51c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x0000000000059cac : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, rcx ; jmp rax
0x000000000004dace : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x00000000000fdb7c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000077e1c : add byte ptr [rax], al ; add byte ptr [rax], al ; and dword ptr [rdi], 0xffffffcf ; ret
0x00000000000ecda6 : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x89086
0x00000000000ef611 : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0xcb916
0x000000000017496c : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x00000000000093a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rsi]
0x000000000014321c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rcx
0x000000000017fa9c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000017ec4c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x0000000000019be4 : add byte ptr [rax], al ; add byte ptr [rax], al ; cdq ; ret
0x0000000000185934 : add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x185941 ; jmp qword ptr [rdi]
0x00000000001859b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x1859c1 ; jmp qword ptr [rdi]
0x0000000000185a34 : add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x185a41 ; jmp qword ptr [rdi]
0x00000000000191ac : add byte ptr [rax], al ; add byte ptr [rax], al ; cld ; ret 0x18
0x0000000000019d1c : add byte ptr [rax], al ; add byte ptr [rax], al ; cmc ; ret
0x00000000000fafc7 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmova eax, edx ; ret
0x00000000001081f7 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovae rax, rsi ; ret
0x00000000000d617d : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove eax, esi ; ret
0x00000000000fd3d5 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rbx ; pop rbx ; ret
0x00000000000cb54a : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000096a56 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdi ; ret
0x000000000001914c : add byte ptr [rax], al ; add byte ptr [rax], al ; in al, dx ; ret 0x18
0x0000000000019ca4 : add byte ptr [rax], al ; add byte ptr [rax], al ; in eax, dx ; ret
0x0000000000018f3c : add byte ptr [rax], al ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 0x18
0x0000000000019d04 : add byte ptr [rax], al ; add byte ptr [rax], al ; int1 ; ret
0x00000000001a75bc : add byte ptr [rax], al ; add byte ptr [rax], al ; je 0x1a75cb ; add byte ptr [rax], al ; hlt ; ret 0
0x00000000000607fe : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x5ca4d
0x00000000000bece1 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0xbaf17
0x0000000000058dc9 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000017039c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000001703ac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000001703bc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000001703cc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000001703dc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000017031c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000017032c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000017033c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000017034c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000017035c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000017036c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000017037c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000017038c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000abb6c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0xc] ; ret
0x00000000000abb8c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 4] ; ret
0x00000000000abb7c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 8] ; ret
0x000000000017030c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x00000000000190bc : add byte ptr [rax], al ; add byte ptr [rax], al ; leave ; ret 0x18
0x0000000000019014 : add byte ptr [rax], al ; add byte ptr [rax], al ; lodsd eax, dword ptr [rsi] ; ret 0x18
0x00000000001684bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x00000000000a68fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00000000000a52fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000000a62cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x00000000000a5fcc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000001684fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x000000000016851c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x00000000001684ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00000000000f56bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x00000000000a62ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x00000000000a630c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a62fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x00000000000ccf9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xfc17 ; ret
0x000000000007216c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000004a072 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000012d8ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x000000000013b98c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000000d677c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x0000000000117ddb : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rbx] ; jmp 0x117dac
0x000000000015b04c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000016852c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x000000000013bd48 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000a632c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x00000000000a633c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000012d1ca : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000c7e1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x20] ; ret
0x000000000007ca5c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000007ca6c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000001684cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x00000000000a62dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x00000000000a63ac : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00000000000a63bc : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000018fe4 : add byte ptr [rax], al ; add byte ptr [rax], al ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x18
0x000000000007a54c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000015b19c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000002058b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x0000000000132f78 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x000000000013bb49 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000018ec4 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret 0x18
0x00000000000962b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x0000000000108d68 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000003a88a : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000007b8e0 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002a6d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000193acc : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x0000000000018edc : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rsp ; ret 0x18
0x0000000000193e52 : add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; pop r9 ; clc ; ret 0x6e1f
0x0000000000018e94 : add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; ret 0x18
0x000000000001929c : add byte ptr [rax], al ; add byte ptr [rax], al ; push rsp ; ret
0x0000000000018eac : add byte ptr [rax], al ; add byte ptr [rax], al ; push rsp ; ret 0x18
0x0000000000018fcc : add byte ptr [rax], al ; add byte ptr [rax], al ; pushfq ; ret 0x18
0x000000000000404c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001bc2ac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000000e45c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x16
0x00000000000185ac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18
0x000000000017ea6c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x000000000017f204 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x0000000000003fec : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x23
0x000000000017da74 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000005ec4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x26
0x000000000000054a : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2800
0x0000000000010e8c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x30
0x000000000000d7b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x000000000017df64 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x000000000000b324 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4f
0x0000000000008654 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x53
0x000000000000b534 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x56
0x00000000001bea94 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000001be714 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x0000000000007604 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 4
0x00000000001bce88 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x000000000000dd9c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 6
0x000000000001824c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x0000000000018fb4 : add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, ebp ; ret 0x18
0x00000000000a917c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x000000000003a792 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00000000000781cc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000095d1c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000000939f2 : add byte ptr [rax], al ; add byte ptr [rax], cl ; add byte ptr [rax], al ; je 0x93a03 ; ret
0x00000000000a917d : add byte ptr [rax], al ; add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x00000000001878bd : add byte ptr [rax], al ; add byte ptr [rax], dl ; add dh, dl ; jmp qword ptr [rax]
0x0000000000029a6f : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x00000000000c26eb : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x7d], cl ; ret
0x0000000000094501 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx - 0x39], cl ; ret
0x0000000000054d4c : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x0000000000070aaf : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000012c777 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x30 ; call qword ptr [rax]
0x00000000000a9eb1 : add byte ptr [rax], al ; add byte ptr [rbp - 0x6bf0be13], al ; ret 0xfe83
0x000000000006c31d : add byte ptr [rax], al ; add byte ptr [rbp - 0x76bb7ffc], cl ; ret 0xf229
0x0000000000024aae : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret 3
0x00000000000da773 : add byte ptr [rax], al ; add byte ptr [rbp - 0x7cb7fead], cl ; ret
0x00000000000d526d : add byte ptr [rax], al ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x000000000006b405 : add byte ptr [rax], al ; add byte ptr [rbp - 0xcfb8b37], al ; ret
0x00000000000aa209 : add byte ptr [rax], al ; add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x00000000000939b3 : add byte ptr [rax], al ; add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000cc996 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000015a92d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000029da9 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000035a84 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000358c6 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000003a9ed : add byte ptr [rax], al ; add byte ptr [rbx + 0xf48fffa], al ; ret
0x00000000001700b8 : add byte ptr [rax], al ; add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x000000000019e649 : add byte ptr [rax], al ; add byte ptr [rbx + rsi], bh ; add byte ptr [rax], al ; ret
0x000000000019e5f9 : add byte ptr [rax], al ; add byte ptr [rbx + rsi], ch ; add byte ptr [rax], al ; push rax ; ret 0xffe9
0x000000000005a32c : add byte ptr [rax], al ; add byte ptr [rbx - 0x109743], al ; call qword ptr [rax]
0x00000000000571cc : add byte ptr [rax], al ; add byte ptr [rbx - 0x4e343], al ; call qword ptr [rax]
0x000000000003a88b : add byte ptr [rax], al ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x00000000000479ce : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000000e093d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7af0f71a], al ; ret
0x000000000013be3d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb703b6], cl ; ret 0x4808
0x00000000000e0d2d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7fe3f], al ; ret 0x4404
0x00000000000e8cfd : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x4108
0x000000000010117d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x0000000000072f14 : add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x00000000000191c5 : add byte ptr [rax], al ; add byte ptr [rbx], al ; ret
0x00000000000b4d46 : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret 0x8341
0x000000000016851d : add byte ptr [rax], al ; add byte ptr [rcx + 0x3518911], cl ; ret
0x000000000012f359 : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0x850f
0x000000000006f717 : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x000000000011614e : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; ret
0x00000000001684fd : add byte ptr [rax], al ; add byte ptr [rcx + 0x4518811], cl ; ret
0x00000000000a630d : add byte ptr [rax], al ; add byte ptr [rcx + 0x4578817], cl ; ret
0x0000000000075450 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5bd089c2], cl ; ret
0x00000000000c3f60 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; fiadd word ptr [r9] ; ret
0x00000000000567b2 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0x83 ; ret
0x0000000000056735 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x00000000000362b7 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esi ; ret 0x394c
0x00000000000a9ed0 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000004dbde : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], cl ; ret
0x00000000000a995d : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x00000000001bc431 : add byte ptr [rax], al ; add byte ptr [rcx + 6], dl ; add byte ptr [rax], al ; ret 2
0x00000000001adc11 : add byte ptr [rax], al ; add byte ptr [rcx + rbp + 1], al ; add byte ptr [rax], bh ; ret
0x000000000019cd2e : add byte ptr [rax], al ; add byte ptr [rcx + rbp*8], dl ; call qword ptr [rcx]
0x00000000000e3cc1 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0x3944
0x000000000002f6d5 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x0000000000102e91 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x0000000000102fc5 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00000000000882cd : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbp ; call rax
0x00000000000d8d48 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x3e], cl ; jmp 0xd8d5f
0x0000000000070f74 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x000000000007e073 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x0000000000102dfa : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000102e09 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x000000000007c4cf : add byte ptr [rax], al ; add byte ptr [rcx - 0x3ac27c38], cl ; ret 0x34
0x00000000000f56bd : add byte ptr [rax], al ; add byte ptr [rcx - 0x3fcefb89], cl ; ret
0x0000000000045f73 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret
0x0000000000047d27 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc083
0x00000000000dd2e7 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc141
0x000000000008d7b1 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000005aea4 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x00000000000b51e4 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x000000000005130c : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000010eeed : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000009456f : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x00000000000e0fc4 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4801
0x00000000000d48c0 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x000000000010f86d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4d30
0x000000000014468d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000008946d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000000bce3d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7f], cl ; ret
0x0000000000193acd : add byte ptr [rax], al ; add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x000000000008e1e0 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x000000000008e206 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x00000000000d50d5 : add byte ptr [rax], al ; add byte ptr [rcx], al ; setg dl ; jmp 0xd5066
0x00000000000b93c5 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x00000000000da782 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8d0f
0x00000000000dfd05 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x00000000000da61b : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x947c
0x000000000008cfc4 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret
0x00000000000c1e3f : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x2941
0x00000000000c55b1 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x748d
0x00000000000c37cd : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8d41
0x00000000000c1e02 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xbe0f
0x000000000014a05b : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xca39
0x0000000000053fca : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd089
0x00000000000c5cfd : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd129
0x00000000000c1a2e : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd629
0x00000000000c5521 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xf889
0x00000000000fc46f : add byte ptr [rax], al ; add byte ptr [rcx], ch ; sal bl, 1 ; ret
0x00000000000dfc6d : add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0xb60f
0x000000000003a25a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000adad5 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax + 1], cl ; ret 0xe974
0x00000000000ab232 : add byte ptr [rax], al ; add byte ptr [rdi + 2], bh ; neg eax ; ret
0x0000000000172162 : add byte ptr [rax], al ; add byte ptr [rdi + 9], bh ; neg eax ; ret
0x00000000000e7768 : add byte ptr [rax], al ; add byte ptr [rdi - 0xa], dh ; ret
0x0000000000019225 : add byte ptr [rax], al ; add byte ptr [rdi], ah ; ret
0x00000000001150f5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x89c78944 ; ret
0x00000000000aa165 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000015b12d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000015b19d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000025c55 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000d0e5d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4b ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000006cdd5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x000000000007a54d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000008e0fd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00000000000c48b4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret
0x00000000000c4bce : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x144
0x000000000013cc7b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x3145
0x00000000000bbc75 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x3bba
0x000000000002a84e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x4389
0x00000000000de69a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x833b
0x000000000004569c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8539
0x000000000014238c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8941
0x00000000000464d4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8b48
0x00000000000fafc8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x90c3
0x00000000000ea1fd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xb9e9
0x00000000000b5abc : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc3f3
0x00000000000d6dde : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc689
0x00000000000c2b1f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xd801
0x00000000000ec00c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000000dfc5b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8488
0x0000000000149fa5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xf40
0x00000000000619ed : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000000d83ec : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x4422
0x000000000001923d : add byte ptr [rax], al ; add byte ptr [rdx], ch ; ret
0x000000000016df82 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008e012 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000102dd3 : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; call rbx
0x00000000000f6025 : add byte ptr [rax], al ; add byte ptr [rsi + 6], dh ; ret
0x00000000001ba426 : add byte ptr [rax], al ; add byte ptr [rsi + rcx + 0x10], bl ; add dword ptr [rdx], 0x51 ; ret
0x00000000000185ad : add byte ptr [rax], al ; add byte ptr [rsi], bh ; ret 0x18
0x000000000001920d : add byte ptr [rax], al ; add byte ptr [rsi], bl ; ret
0x00000000001a8cde : add byte ptr [rax], al ; add byte ptr [rsi], ch ; int1 ; jmp qword ptr [rcx]
0x00000000000f5697 : add byte ptr [rax], al ; add byte ptr [rsp + rax - 0xd], dh ; ret
0x00000000001b8741 : add byte ptr [rax], al ; add byte ptr [rsp + rdx*8 + 1], dh ; add byte ptr [rax], ch ; ret 0xfff7
0x00000000000190a5 : add byte ptr [rax], al ; add ch, al ; ret 0x18
0x000000000001911d : add byte ptr [rax], al ; add ch, bl ; ret 0x18
0x0000000000019ca5 : add byte ptr [rax], al ; add ch, ch ; ret
0x00000000000190d5 : add byte ptr [rax], al ; add ch, cl ; ret 0x18
0x0000000000019d1d : add byte ptr [rax], al ; add ch, dh ; ret
0x0000000000019105 : add byte ptr [rax], al ; add ch, dl ; ret 0x18
0x00000000000e41d5 : add byte ptr [rax], al ; add cl, al ; call 0x66d0caed
0x000000000001908d : add byte ptr [rax], al ; add cl, al ; ret 0x18
0x0000000000067445 : add byte ptr [rax], al ; add cl, ch ; pop rdi ; ret 0xffff
0x000000000002d2c5 : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000104386 : add byte ptr [rax], al ; add cl, ch ; ret 0xf76d
0x00000000000601d6 : add byte ptr [rax], al ; add cl, ch ; ret 0xffb8
0x00000000000676e2 : add byte ptr [rax], al ; add cl, ch ; ret 0xffbf
0x000000000009ddb5 : add byte ptr [rax], al ; add cl, ch ; ret 0xffd3
0x000000000009dc81 : add byte ptr [rax], al ; add cl, ch ; ret 0xfff5
0x000000000002b0af : add byte ptr [rax], al ; add cl, ch ; ret 0xfffb
0x00000000000f0381 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x00000000000607ff : add byte ptr [rax], al ; add cl, ch ; ret 0xffff
0x00000000000190bd : add byte ptr [rax], al ; add cl, cl ; ret 0x18
0x0000000000019d05 : add byte ptr [rax], al ; add cl, dh ; ret
0x0000000000019c5d : add byte ptr [rax], al ; add cl, dl ; ret
0x00000000000190ed : add byte ptr [rax], al ; add cl, dl ; ret 0x18
0x0000000000019135 : add byte ptr [rax], al ; add dh, ah ; ret 0x18
0x00000000001a4e3e : add byte ptr [rax], al ; add dh, ch ; in eax, dx ; call rsi
0x0000000000065843 : add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000023ff4 : add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000000e3b27 : add byte ptr [rax], al ; add dh, dh ; ret 0x7408
0x00000000000e3b36 : add byte ptr [rax], al ; add dh, dh ; ret 0x7420
0x00000000001715d1 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x0000000000061b52 : add byte ptr [rax], al ; add dh, dh ; ret 0x7504
0x00000000000a0880 : add byte ptr [rax], al ; add dh, dh ; ret 0xf20
0x00000000000a0889 : add byte ptr [rax], al ; add dh, dh ; ret 0xf40
0x000000000001917d : add byte ptr [rax], al ; add dl, dh ; ret 0x18
0x00000000000e3be9 : add byte ptr [rax], al ; add dword ptr [rbp - 0x7cb7febd], ecx ; ret
0x00000000000d50d6 : add byte ptr [rax], al ; add dword ptr [rdi], ecx ; lahf ; ret 0x82eb
0x00000000001af11a : add byte ptr [rax], al ; add dword ptr ds:[rax], eax ; mov al, 0x1e ; cmc ; jmp qword ptr [rcx]
0x00000000001ae912 : add byte ptr [rax], al ; add dword ptr ss:[rax], eax ; hlt ; jmp qword ptr [rsi]
0x00000000001a341a : add byte ptr [rax], al ; add qword ptr [rax], -0x12b1b000 ; jmp qword ptr [rsi]
0x00000000001afd32 : add byte ptr [rax], al ; add qword ptr fs:[rax], rax ; fcomp dword ptr [rdx - 0xb] ; jmp qword ptr [rcx]
0x00000000001bb81a : add byte ptr [rax], al ; add rax, 0x75200002 ; clc ; call qword ptr [rdi]
0x00000000000ab51e : add byte ptr [rax], al ; add rax, 3 ; ret
0x00000000000597d0 : add byte ptr [rax], al ; add rax, rcx ; jmp rax
0x000000000008dec4 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x000000000004da0e : add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x0000000000132601 : add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x0000000000135081 : add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x00000000001347e1 : add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x0000000000131a64 : add byte ptr [rax], al ; add rdi, 0xc8 ; jmp rcx
0x000000000012e365 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000143b6e : add byte ptr [rax], al ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00000000000359ca : add byte ptr [rax], al ; add rsp, 0x108 ; ret
0x0000000000035398 : add byte ptr [rax], al ; add rsp, 0x148 ; ret
0x000000000013a751 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000f56d9 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x0000000000020b8b : add byte ptr [rax], al ; add rsp, 0x28 ; jmp rax
0x000000000007aadc : add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000034b10 : add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000000000012f02d : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000209ac : add byte ptr [rax], al ; add rsp, 0x98 ; ret
0x0000000000035687 : add byte ptr [rax], al ; add rsp, 0xd0 ; ret
0x0000000000045ce1 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x000000000008ce2a : add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x0000000000021aa7 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000035168 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000001ac6f2 : add byte ptr [rax], al ; and al, 0x14 ; add dword ptr [rax], eax ; cmp al, bl ; call qword ptr [rdx]
0x00000000001b03f2 : add byte ptr [rax], al ; and al, 0x51 ; add dword ptr [rax], eax ; fdiv dword ptr [rcx - 0xb] ; jmp qword ptr [rcx]
0x00000000001b08f2 : add byte ptr [rax], al ; and al, 0x56 ; add dword ptr [rax], eax ; mov byte ptr [rdx - 0xb], bh ; jmp qword ptr [rcx]
0x00000000001b56f2 : add byte ptr [rax], al ; and al, 0xa4 ; add dword ptr [rax], eax ; test al, 0xf2 ; sti ; call rcx
0x0000000000196ff6 : add byte ptr [rax], al ; and al, 0xd8 ; in eax, dx ; jmp rsp
0x0000000000126288 : add byte ptr [rax], al ; and byte ptr [rax], al ; jmp 0x126255
0x00000000001a90de : add byte ptr [rax], al ; and byte ptr [rcx + rsi*8 - 1], dl ; ret
0x00000000001aa90e : add byte ptr [rax], al ; and byte ptr [rcx], 0xf2 ; jmp qword ptr [rcx]
0x00000000001ad312 : add byte ptr [rax], al ; and byte ptr [rcx], r8b ; add byte ptr [rax], bl ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000001a8afe : add byte ptr [rax], al ; and byte ptr [rdx], ah ; int1 ; jmp rcx
0x00000000001a5a0e : add byte ptr [rax], al ; and byte ptr [rdx], dh ; out dx, al ; jmp qword ptr [rcx]
0x0000000000077e1e : add byte ptr [rax], al ; and dword ptr [rdi], 0xffffffcf ; ret
0x000000000002e0eb : add byte ptr [rax], al ; and eax, esi ; ret
0x000000000008e0fe : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x000000000008ad70 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000008ca24 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x00000000001a8456 : add byte ptr [rax], al ; call 0x111a7537
0x00000000001a9226 : add byte ptr [rax], al ; call 0x131a8393
0x000000000019cc86 : add byte ptr [rax], al ; call 0x1419b5a5
0x0000000000133636 : add byte ptr [rax], al ; call 0x1f874
0x000000000019cce6 : add byte ptr [rax], al ; call 0x2119b605
0x000000000019fac6 : add byte ptr [rax], al ; call 0x2319e57c
0x00000000001a5b66 : add byte ptr [rax], al ; call 0x231a49a6
0x0000000000021956 : add byte ptr [rax], al ; call 0x2dc44
0x00000000000ecda8 : add byte ptr [rax], al ; call 0x89084
0x00000000000ef613 : add byte ptr [rax], al ; call 0xcb914
0x00000000000ef9b9 : add byte ptr [rax], al ; call 0xcbc94
0x000000000017496e : add byte ptr [rax], al ; call qword ptr [rbx]
0x00000000000093a6 : add byte ptr [rax], al ; call qword ptr [rsi]
0x00000000000bb7dd : add byte ptr [rax], al ; call r12
0x0000000000020850 : add byte ptr [rax], al ; call rax
0x0000000000102dd9 : add byte ptr [rax], al ; call rbx
0x000000000014321e : add byte ptr [rax], al ; call rcx
0x000000000017fa9e : add byte ptr [rax], al ; call rdi
0x0000000000039fbc : add byte ptr [rax], al ; call rdx
0x000000000017ec4e : add byte ptr [rax], al ; call rsp
0x0000000000019be6 : add byte ptr [rax], al ; cdq ; ret
0x000000000019cd16 : add byte ptr [rax], al ; clc ; adc ebp, ecx ; call qword ptr [rcx]
0x00000000001aab32 : add byte ptr [rax], al ; clc ; add byte ptr [rax], al ; xor rsi, rdx ; call qword ptr [rax]
0x00000000001a0d36 : add byte ptr [rax], al ; clc ; iretd ; in al, dx ; jmp qword ptr [rax]
0x0000000000185936 : add byte ptr [rax], al ; clc ; loope 0x18593f ; jmp qword ptr [rdi]
0x00000000001859b6 : add byte ptr [rax], al ; clc ; loope 0x1859bf ; jmp qword ptr [rdi]
0x0000000000185a36 : add byte ptr [rax], al ; clc ; loope 0x185a3f ; jmp qword ptr [rdi]
0x00000000001a6336 : add byte ptr [rax], al ; clc ; mov esi, gs ; call qword ptr [rax]
0x00000000001a98e6 : add byte ptr [rax], al ; clc ; out 0xf1, al ; jmp qword ptr [rdi]
0x000000000019eb36 : add byte ptr [rax], al ; clc ; shr ecx, 1 ; call qword ptr [rax]
0x000000000019ebc6 : add byte ptr [rax], al ; clc ; shr ecx, 1 ; call rax
0x00000000001ac5ca : add byte ptr [rax], al ; cld ; adc al, byte ptr [rcx] ; add byte ptr [rax - 0x29], ah ; jmp qword ptr [rcx]
0x00000000001a092a : add byte ptr [rax], al ; cld ; add byte ptr [rax], al ; add byte ptr [rax], ah ; mov al, 0xec ; jmp qword ptr [rcx]
0x00000000001b96ca : add byte ptr [rax], al ; cld ; jrcxz 0x1b96d9 ; add al, al ; div edi ; call qword ptr [rdx]
0x00000000001b04ca : add byte ptr [rax], al ; cld ; push rcx ; add dword ptr [rax], eax ; loopne 0x1b054d ; cmc ; call qword ptr [rsi]
0x00000000000191ae : add byte ptr [rax], al ; cld ; ret 0x18
0x0000000000019d1e : add byte ptr [rax], al ; cmc ; ret
0x00000000000fafc9 : add byte ptr [rax], al ; cmova eax, edx ; ret
0x00000000001081f9 : add byte ptr [rax], al ; cmovae rax, rsi ; ret
0x00000000000b5abd : add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000000d617f : add byte ptr [rax], al ; cmove eax, esi ; ret
0x00000000000fd3d7 : add byte ptr [rax], al ; cmove rax, rbx ; pop rbx ; ret
0x00000000000cb54c : add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000114f49 : add byte ptr [rax], al ; cmovne eax, edx ; ret
0x0000000000096a58 : add byte ptr [rax], al ; cmovne rax, rdi ; ret
0x00000000000ccf2d : add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x000000000010e44f : add byte ptr [rax], al ; cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x000000000019cc0a : add byte ptr [rax], al ; cmp al, 0x19 ; add byte ptr [rax], al ; rcl byte ptr [rbx], 0xe9 ; call qword ptr [rbx]
0x00000000001a1c0a : add byte ptr [rax], al ; cmp al, 0x69 ; add byte ptr [rax], al ; loopne 0x1a1c17 ; in al, dx ; call qword ptr [rsi]
0x00000000001b220a : add byte ptr [rax], al ; cmp al, 0x6f ; add dword ptr [rax], eax ; push rax ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001a5a0a : add byte ptr [rax], al ; cmp al, 0xa7 ; add byte ptr [rax], al ; and byte ptr [rdx], dh ; out dx, al ; jmp qword ptr [rcx]
0x00000000001a9a0a : add byte ptr [rax], al ; cmp al, 0xe7 ; add byte ptr [rax], al ; xor cl, ch ; int1 ; call rdi
0x00000000001aa90a : add byte ptr [rax], al ; cmp al, 0xf6 ; add byte ptr [rax], al ; and byte ptr [rcx], 0xf2 ; jmp qword ptr [rcx]
0x00000000001a6bae : add byte ptr [rax], al ; cmp bh, 0xee ; jmp rsi
0x000000000016c436 : add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000019d706 : add byte ptr [rax], al ; cmp byte ptr [rcx - 0x17], bh ; call qword ptr [rcx]
0x00000000001aa866 : add byte ptr [rax], al ; cmp byte ptr [rcx], ah ; jmp qword ptr [rcx]
0x000000000019eb32 : add byte ptr [rax], al ; cmp byte ptr fs:[rax], al ; add al, bh ; shr ecx, 1 ; call qword ptr [rax]
0x00000000000745d7 : add byte ptr [rax], al ; cmp eax, 0xff ; jne 0x745e8 ; pop rbx ; ret
0x00000000000cbc70 : add byte ptr [rax], al ; cmp eax, 0xfffff001 ; jae 0xcbc83 ; ret
0x00000000000ac1e7 : add byte ptr [rax], al ; cmp edi, 0x7f ; ja 0xac201 ; mov eax, edi ; ret
0x00000000000729e5 : add byte ptr [rax], al ; cmp qword ptr [rax + 0x30], 0 ; je 0x729f9 ; ret
0x00000000000cd014 : add byte ptr [rax], al ; cmp rdx, rcx ; jne 0xcd047 ; ret
0x00000000001aa926 : add byte ptr [rax], al ; cwde ; and edx, esi ; jmp qword ptr [rcx]
0x000000000019d9b6 : add byte ptr [rax], al ; cwde ; jge 0x19d9a9 ; jmp qword ptr [rcx]
0x000000000019d5a6 : add byte ptr [rax], al ; cwde ; jne 0x19d599 ; jmp qword ptr [rcx]
0x000000000019c466 : add byte ptr [rax], al ; cwde ; jno 0x19c46d ; jmp qword ptr [rdi]
0x000000000019e626 : add byte ptr [rax], al ; cwde ; ret 0xffe9
0x00000000001aaa66 : add byte ptr [rax], al ; cwde ; sub edx, esi ; jmp rcx
0x00000000001a78c6 : add byte ptr [rax], al ; enter -0xfc3, -1 ; ret
0x00000000001b03aa : add byte ptr [rax], al ; fcom qword ptr [rax + 1] ; add byte ptr [rax + 0x71], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001b06aa : add byte ptr [rax], al ; fcom qword ptr [rbx + 1] ; add byte ptr [rax], dh ; jbe 0x1b06b1 ; jmp qword ptr [rcx]
0x000000000019b996 : add byte ptr [rax], al ; fdivr dword ptr [rbx - 3] ; jmp qword ptr [rdx]
0x00000000001a6baa : add byte ptr [rax], al ; fdivr qword ptr [rax - 0x800000] ; out dx, al ; jmp rsi
0x00000000001b00aa : add byte ptr [rax], al ; fmul qword ptr [rbp + 1] ; add al, dh ; insd dword ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00000000001a42aa : add byte ptr [rax], al ; fmul qword ptr [rdi - 0x77800000] ; in eax, dx ; jmp qword ptr [rax]
0x00000000001afdaa : add byte ptr [rax], al ; fmul qword ptr [rdx + 1] ; add byte ptr [rax + 0x5b], dl ; cmc ; jmp qword ptr [rcx]
0x00000000000350c6 : add byte ptr [rax], al ; fstp st(1) ; ret
0x00000000001b21aa : add byte ptr [rax], al ; fsubr qword ptr [rsi + 1] ; add al, dh ; and esi, esi ; jmp qword ptr [rsi]
0x000000000019fac2 : add byte ptr [rax], al ; hlt ; add byte ptr [r8], r8b ; call 0x2319e580
0x00000000001af1c2 : add byte ptr [rax], al ; hlt ; add dword ptr ds:[rax], eax ; mov byte ptr [rdi], bl ; cmc ; jmp qword ptr [rdx]
0x00000000001b00c2 : add byte ptr [rax], al ; hlt ; add qword ptr [r8], r8 ; or byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x000000000019ebc2 : add byte ptr [rax], al ; hlt ; cmp byte ptr [rax], al ; add al, bh ; shr ecx, 1 ; call rax
0x00000000001a63c2 : add byte ptr [rax], al ; hlt ; mov al, 0 ; add byte ptr [rax + 0x54], bl ; cli ; call qword ptr [rax]
0x00000000001b50c2 : add byte ptr [rax], al ; hlt ; popfq ; add dword ptr [rax], eax ; fdivr st(6), st(0) ; jmp rsi
0x00000000001b03c2 : add byte ptr [rax], al ; hlt ; push rax ; add dword ptr [rax], eax ; js 0x1b0444 ; cmc ; jmp qword ptr [rcx]
0x00000000001b08c2 : add byte ptr [rax], al ; hlt ; push rbp ; add dword ptr [rax], eax ; pop rax ; jp 0x1b08c9 ; jmp qword ptr [rcx]
0x00000000001a75c2 : add byte ptr [rax], al ; hlt ; ret 0
0x00000000001acfc2 : add byte ptr [rax], al ; hlt ; sbb al, 1 ; add byte ptr [rax + 0x67], bl ; stc ; call qword ptr [rax]
0x00000000001b5bc2 : add byte ptr [rax], al ; hlt ; test al, 1 ; add byte ptr [rax], cl ; jrcxz 0x1b5bcf ; call rsi
0x00000000001a6606 : add byte ptr [rax], al ; in al, -0x12 ; call qword ptr [rax]
0x0000000000196b9e : add byte ptr [rax], al ; in al, -0x2b ; in al, dx ; call rsp
0x00000000001b71b2 : add byte ptr [rax], al ; in al, -0x42 ; add dword ptr [rax], eax ; call 0xffffffffe71b6930
0x0000000000196ec6 : add byte ptr [rax], al ; in al, -0x49 ; in eax, dx ; call rsp
0x00000000001ba5b2 : add byte ptr [rax], al ; in al, -0xe ; add dword ptr [rax], eax ; js 0x1ba5da ; clc ; jmp qword ptr [rcx]
0x00000000001ac5b2 : add byte ptr [rax], al ; in al, 0x12 ; add dword ptr [rax], eax ; xlatb ; jmp qword ptr [rcx]
0x00000000001ad4b2 : add byte ptr [rax], al ; in al, 0x21 ; add dword ptr [rax], eax ; test al, 0x95 ; hlt ; jmp qword ptr [rcx]
0x00000000001ad6b2 : add byte ptr [rax], al ; in al, 0x23 ; add dword ptr [rax], eax ; pop rax ; wait ; hlt ; jmp qword ptr [rcx]
0x000000000019d9b2 : add byte ptr [rax], al ; in al, 0x26 ; add byte ptr [rax], al ; cwde ; jge 0x19d9ad ; jmp qword ptr [rcx]
0x00000000001b01b2 : add byte ptr [rax], al ; in al, 0x4e ; add dword ptr [rax], eax ; fsubr dword ptr [rsi - 0xb] ; jmp qword ptr [rcx]
0x00000000001a07b2 : add byte ptr [rax], al ; in al, 0x54 ; add byte ptr [rax], al ; pop rax ; stosd dword ptr [rdi], eax ; in al, dx ; jmp qword ptr [rcx]
0x00000000001a0db2 : add byte ptr [rax], al ; in al, 0x5a ; add byte ptr [rax], al ; shr spl, 1 ; call qword ptr [rax]
0x000000000019748e : add byte ptr [rax], al ; in al, 0x65 ; out dx, al ; jmp rsp
0x00000000001975be : add byte ptr [rax], al ; in al, 0x79 ; out dx, al ; jmp rsp
0x00000000001ab7b2 : add byte ptr [rax], al ; in al, 4 ; add dword ptr [rax], eax ; pop rax ; in eax, dx ; call rcx
0x00000000001ae1ba : add byte ptr [rax], al ; in al, dx ; add dword ptr cs:[rax], eax ; adc bh, bl ; hlt ; jmp qword ptr [rcx]
0x00000000001ad8ba : add byte ptr [rax], al ; in al, dx ; and eax, 0xa5000001 ; hlt ; call rax
0x00000000001aafba : add byte ptr [rax], al ; in al, dx ; cld ; add byte ptr [rax], al ; loopne 0x1aaf6e ; call rdi
0x00000000001a92ba : add byte ptr [rax], al ; in al, dx ; fild word ptr [rax] ; add byte ptr [rax - 0x6d], dl ; int1 ; call qword ptr [rax]
0x00000000001aa4ba : add byte ptr [rax], al ; in al, dx ; int1 ; add byte ptr [rax], al ; adc byte ptr [rbx], dl ; jmp qword ptr [rcx]
0x00000000001b23ba : add byte ptr [rax], al ; in al, dx ; jo 0x1b23c9 ; add al, ah ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001aa3ba : add byte ptr [rax], al ; in al, dx ; lock add byte ptr [rax], al ; adc edx, esi ; jmp qword ptr [rcx]
0x00000000001b60ba : add byte ptr [rax], al ; in al, dx ; lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; xor byte ptr [rdi - 9], al ; jmp qword ptr [rsi]
0x00000000001aa1ba : add byte ptr [rax], al ; in al, dx ; out dx, al ; add byte ptr [rax], al ; rol byte ptr [rdi], 1 ; call rsi
0x00000000001b0bba : add byte ptr [rax], al ; in al, dx ; pop rax ; add dword ptr [rax], eax ; loopne 0x1b0b51 ; cmc ; jmp rax
0x000000000001914e : add byte ptr [rax], al ; in al, dx ; ret 0x18
0x00000000001a9812 : add byte ptr [rax], al ; in eax, 0 ; add byte ptr [rax - 0x1a], cl ; int1 ; call qword ptr [rbx]
0x0000000000019ca6 : add byte ptr [rax], al ; in eax, dx ; ret
0x000000000019fe3a : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add byte ptr [r8], al ; jo 0x19fe79 ; jmp 0x19fe4c
0x00000000001b043a : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; push rcx ; add dword ptr [rax], eax ; and byte ptr [rdx - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001a763a : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x0000000000018f3e : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 0x18
0x000000000019cc3a : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sbb dword ptr [rax], eax ; add al, dl ; adc ebp, ecx ; call qword ptr [rbx]
0x00000000001baa3a : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; test dword ptr [rcx], 0xfb96a000 ; jmp qword ptr [rdx]
0x00000000001a4e3a : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; wait ; add byte ptr [rax], al ; add dh, ch ; in eax, dx ; call rsi
0x00000000001ae73a : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; xor al, 1 ; add byte ptr [rax], ah ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001a8cdf : add byte ptr [rax], al ; int1 ; jmp qword ptr [rcx]
0x00000000001bbc7e : add byte ptr [rax], al ; int1 ; or byte ptr [rbx], al ; ret
0x0000000000019d06 : add byte ptr [rax], al ; int1 ; ret
0x00000000000f6026 : add byte ptr [rax], al ; jbe 0xf6035 ; ret
0x0000000000196cd6 : add byte ptr [rax], al ; je 0x196d59 ; in eax, dx ; jmp rsp
0x0000000000197136 : add byte ptr [rax], al ; je 0x197149 ; out dx, al ; jmp rsp
0x0000000000197646 : add byte ptr [rax], al ; je 0x197619 ; out dx, al ; jmp rsp
0x000000000019768e : add byte ptr [rax], al ; je 0x19767b ; out dx, al ; call rsp
0x00000000001a7442 : add byte ptr [rax], al ; je 0x1a7410 ; add byte ptr [rax], al ; pop rax ; fucomi st(7) ; jmp qword ptr [rbx]
0x00000000001a75be : add byte ptr [rax], al ; je 0x1a75c9 ; add byte ptr [rax], al ; hlt ; ret 0
0x00000000001a7636 : add byte ptr [rax], al ; je 0x1a7641 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x00000000001ac542 : add byte ptr [rax], al ; je 0x1ac561 ; add dword ptr [rax], eax ; sbb bh, dl ; call qword ptr [rsi]
0x00000000001b0242 : add byte ptr [rax], al ; je 0x1b029e ; add dword ptr [rax], eax ; cwde ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b0542 : add byte ptr [rax], al ; je 0x1b05a1 ; add dword ptr [rax], eax ; test al, 0x73 ; cmc ; jmp qword ptr [rcx]
0x000000000006d7dc : add byte ptr [rax], al ; je 0x6d7ef ; mov eax, edx ; pop rbx ; ret
0x000000000006fd01 : add byte ptr [rax], al ; je 0x6fd18 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000070435 : add byte ptr [rax], al ; je 0x70447 ; mov eax, esi ; pop rbx ; ret
0x00000000000705b7 : add byte ptr [rax], al ; je 0x705c7 ; mov eax, esi ; pop rbx ; ret
0x0000000000070f2b : add byte ptr [rax], al ; je 0x70f40 ; mov eax, r8d ; pop rbx ; ret
0x00000000000710ce : add byte ptr [rax], al ; je 0x710e7 ; mov eax, edx ; pop rbx ; ret
0x0000000000071265 : add byte ptr [rax], al ; je 0x71277 ; mov eax, edx ; pop rbx ; ret
0x0000000000075ac3 : add byte ptr [rax], al ; je 0x75ad7 ; mov eax, edx ; pop rbx ; ret
0x0000000000075ec8 : add byte ptr [rax], al ; je 0x75ed7 ; mov eax, edx ; pop rbx ; ret
0x0000000000075fec : add byte ptr [rax], al ; je 0x75fff ; mov eax, esi ; pop rbx ; ret
0x000000000007612e : add byte ptr [rax], al ; je 0x76147 ; mov eax, esi ; pop rbx ; ret
0x0000000000076413 : add byte ptr [rax], al ; je 0x76427 ; mov eax, edx ; pop rbx ; ret
0x0000000000076db8 : add byte ptr [rax], al ; je 0x76dc7 ; mov eax, edx ; pop rbx ; ret
0x0000000000077fb4 : add byte ptr [rax], al ; je 0x77fc7 ; mov eax, edx ; pop rbx ; ret
0x0000000000086bd7 : add byte ptr [rax], al ; je 0x86be4 ; ret
0x00000000000884f6 : add byte ptr [rax], al ; je 0x88504 ; ret
0x00000000000939f6 : add byte ptr [rax], al ; je 0x939ff ; ret
0x00000000000abb34 : add byte ptr [rax], al ; je 0xabba8 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000cd03b : add byte ptr [rax], al ; je 0xcd08e ; mov eax, 0x20 ; ret
0x00000000000e79d6 : add byte ptr [rax], al ; je 0xe7a16 ; xor eax, eax ; ret
0x00000000000f5698 : add byte ptr [rax], al ; je 0xf56a5 ; ret
0x0000000000172163 : add byte ptr [rax], al ; jg 0x172176 ; neg eax ; ret
0x00000000000ab233 : add byte ptr [rax], al ; jg 0xab23f ; neg eax ; ret
0x00000000001700b9 : add byte ptr [rax], al ; jl 0x1700c6 ; neg eax ; ret
0x00000000001a454a : add byte ptr [rax], al ; jl 0x1a44e9 ; add byte ptr [rax], al ; adc byte ptr [rbx], al ; std ; jmp rsp
0x00000000001a754a : add byte ptr [rax], al ; jl 0x1a7519 ; add byte ptr [rax], al ; sub edi, edx ; call qword ptr [rdi]
0x00000000001aa44a : add byte ptr [rax], al ; jl 0x1aa448 ; add byte ptr [rax], al ; adc byte ptr [rdx], 0xf2 ; call qword ptr [rdx]
0x00000000001aac4a : add byte ptr [rax], al ; jl 0x1aac50 ; add byte ptr [rax], al ; loopne 0x1aac98 ; call rbx
0x00000000001af14a : add byte ptr [rax], al ; jl 0x1af195 ; add dword ptr [rax], eax ; loopne 0x1af179 ; cmc ; jmp qword ptr [rcx]
0x00000000001b214a : add byte ptr [rax], al ; jl 0x1b21c5 ; add dword ptr [rax], eax ; nop ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001b334a : add byte ptr [rax], al ; jl 0x1b32d7 ; add dword ptr [rax], eax ; add byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00000000001b914a : add byte ptr [rax], al ; jl 0x1b9135 ; add dword ptr [rax], eax ; sub ah, 0xf7 ; call rax
0x00000000001735c6 : add byte ptr [rax], al ; jmp 0x1f8ac
0x000000000005f7bf : add byte ptr [rax], al ; jmp 0x5baa4
0x0000000000060800 : add byte ptr [rax], al ; jmp 0x5ca4b
0x0000000000067446 : add byte ptr [rax], al ; jmp 0x636b0
0x00000000000bece3 : add byte ptr [rax], al ; jmp 0xbaf15
0x00000000000be7b9 : add byte ptr [rax], al ; jmp 0xbe782
0x00000000000cd701 : add byte ptr [rax], al ; jmp 0xcd61f
0x0000000000035315 : add byte ptr [rax], al ; jmp rax
0x0000000000131a6b : add byte ptr [rax], al ; jmp rcx
0x00000000000ccf0f : add byte ptr [rax], al ; jne 0xccee0 ; ret
0x00000000000cd11e : add byte ptr [rax], al ; jne 0xcd101 ; xor eax, eax ; ret
0x00000000001a5f06 : add byte ptr [rax], al ; jno 0x1a5efe ; jmp qword ptr [rdx]
0x00000000001b037f : add byte ptr [rax], al ; jno 0x1b037c ; jmp qword ptr [rcx]
0x00000000001b096f : add byte ptr [rax], al ; jnp 0x1b096c ; jmp qword ptr [rcx]
0x000000000019fe3e : add byte ptr [rax], al ; jo 0x19fe75 ; jmp 0x19fe48
0x00000000001a4a5e : add byte ptr [rax], al ; jo 0x1a4a27 ; in eax, dx ; jmp qword ptr [rsi]
0x00000000001a6dfe : add byte ptr [rax], al ; jo 0x1a6e7a ; out dx, eax ; jmp qword ptr [rax]
0x00000000001a745e : add byte ptr [rax], al ; jo 0x1a7448 ; out dx, eax ; call rsp
0x00000000001ae37f : add byte ptr [rax], al ; jrcxz 0x1ae37b ; jmp qword ptr [rcx]
0x00000000001a0296 : add byte ptr [rax], al ; js 0x1a02fa ; jmp 0x1a02a0
0x00000000001a4136 : add byte ptr [rax], al ; js 0x1a40c6 ; in eax, dx ; jmp qword ptr [rbx]
0x00000000000cd175 : add byte ptr [rax], al ; js 0xcd185 ; ret
0x00000000001a7812 : add byte ptr [rax], al ; lds r8d, ptr [rax] ; add byte ptr [rax], bh ; cmp dh, al ; jmp qword ptr [rbx]
0x00000000001bbe14 : add byte ptr [rax], al ; lea eax, dword ptr [rdi] ; rol byte ptr [rcx], cl ; ret 0xa
0x00000000001bbdbc : add byte ptr [rax], al ; lea ecx, dword ptr [rax] ; rol byte ptr [rcx], cl ; ret 0xb
0x000000000012c391 : add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000012c778 : add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x000000000017039e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000001703ae : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000001703be : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000001703ce : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000001703de : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000001702fd : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000017031e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000017032e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000017033e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000017034e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000017035e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000017036e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000001702aa : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000017037e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000017038e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000aba0b : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000abb6e : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0xc] ; ret
0x00000000000abb8e : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 4] ; ret
0x00000000000abb7e : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 8] ; ret
0x000000000017030e : add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000002092e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x16b574] ; ret
0x000000000002093e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x16d443] ; ret
0x000000000012a8fe : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x61a5e] ; ret
0x000000000011fe4e : add byte ptr [rax], al ; lea rdi, qword ptr [rip + 0x2a7905] ; call rax
0x00000000000450cc : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x1cb] ; call rax
0x000000000006f157 : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x30] ; call rax
0x000000000007be37 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x15e0] ; call rax
0x000000000007c227 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x19d0] ; call rax
0x000000000007c677 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x1e20] ; call rax
0x000000000006f450 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x2c9] ; call rax
0x000000000007ab67 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x310] ; call rax
0x000000000007add7 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x580] ; call rax
0x00000000000190be : add byte ptr [rax], al ; leave ; ret 0x18
0x00000000001af87a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add dword ptr [r8], r8d ; adc byte ptr [rbx - 0xb], cl ; jmp rax
0x00000000001afd7a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add qword ptr [rax], rax ; and byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x00000000001aa87a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; cmc ; add byte ptr [rax], al ; push rax ; and edx, esi ; jmp qword ptr [rcx]
0x000000000019eb7a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; cmp byte ptr [rax], al ; add al, dh ; shr ecx, 1 ; call qword ptr [rdx]
0x00000000001b217a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; shl byte ptr [rcx], 0xf6 ; jmp qword ptr [rsi]
0x00000000001b037a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; push rax ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001a757a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x00000000001ae37a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; jrcxz 0x1ae380 ; jmp qword ptr [rcx]
0x0000000000019016 : add byte ptr [rax], al ; lodsd eax, dword ptr [rsi] ; ret 0x18
0x000000000019c416 : add byte ptr [rax], al ; loop 0x19c408 ; call qword ptr [rdx]
0x000000000019d16e : add byte ptr [rax], al ; loopne 0x19d1ca ; jmp 0x1b947c
0x00000000001a1c0e : add byte ptr [rax], al ; loopne 0x1a1c13 ; in al, dx ; call qword ptr [rsi]
0x00000000001aac4e : add byte ptr [rax], al ; loopne 0x1aac94 ; call rbx
0x00000000001aafbe : add byte ptr [rax], al ; loopne 0x1aaf6a ; call rdi
0x00000000001bbdc8 : add byte ptr [rax], al ; loopne 0x1bbddb ; ret 0xb
0x00000000001bbe20 : add byte ptr [rax], al ; loopne 0x1bbe32 ; ret 0xa
0x00000000001ac582 : add byte ptr [rax], al ; mov ah, 0x12 ; add dword ptr [rax], eax ; sbb bh, dl ; jmp qword ptr [rcx]
0x000000000019cc82 : add byte ptr [rax], al ; mov ah, 0x19 ; add byte ptr [rax], al ; call 0x1419b5a9
0x00000000001acf82 : add byte ptr [rax], al ; mov ah, 0x1c ; add dword ptr [rax], eax ; mov byte ptr [rdi - 7], ah ; call qword ptr [rax]
0x00000000001ad982 : add byte ptr [rax], al ; mov ah, 0x26 ; add dword ptr [rax], eax ; call 0x221ace3d
0x00000000001add82 : add byte ptr [rax], al ; mov ah, 0x2a ; add dword ptr [rax], eax ; cmp cl, dl ; hlt ; jmp rcx
0x00000000001adf82 : add byte ptr [rax], al ; mov ah, 0x2c ; add dword ptr [rax], eax ; fcomp st(2) ; hlt ; call qword ptr [rbx]
0x00000000001b0182 : add byte ptr [rax], al ; mov ah, 0x4e ; add dword ptr [rax], eax ; test al, 0x6e ; cmc ; jmp qword ptr [rcx]
0x00000000001b0482 : add byte ptr [rax], al ; mov ah, 0x51 ; add dword ptr [rax], eax ; cwde ; jb 0x1b0489 ; jmp qword ptr [rcx]
0x0000000000196c56 : add byte ptr [rax], al ; mov ah, 0x55 ; in eax, dx ; jmp rsp
0x00000000001b0982 : add byte ptr [rax], al ; mov ah, 0x56 ; add dword ptr [rax], eax ; sbb byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x000000000019758e : add byte ptr [rax], al ; mov ah, 0x74 ; out dx, al ; call rsp
0x00000000001b2c82 : add byte ptr [rax], al ; mov ah, 0x79 ; add dword ptr [rax], eax ; or byte ptr [rsi + rsi*8], bh ; call qword ptr [rax]
0x0000000000196e8e : add byte ptr [rax], al ; mov ah, 0xb3 ; in eax, dx ; jmp rsp
0x0000000000196fd6 : add byte ptr [rax], al ; mov ah, 0xd3 ; in eax, dx ; inc esp ; ret 0
0x00000000001a0c06 : add byte ptr [rax], al ; mov ah, cl ; in al, dx ; jmp rbx
0x00000000001a6332 : add byte ptr [rax], al ; mov al, 0 ; add al, bh ; mov esi, gs ; call qword ptr [rax]
0x000000000016a81e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x00000000001664ee : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000001684be : add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x00000000000d4e4e : add byte ptr [rax], al ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x000000000009df8e : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000001aa9e6 : add byte ptr [rax], al ; mov byte ptr [rdi], ah ; jmp qword ptr [rdi]
0x00000000000a68fe : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00000000000a52fe : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000000a62ce : add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x000000000007e3a6 : add byte ptr [rax], al ; mov byte ptr [rsp + 0x10], 0 ; call 0x4a679
0x00000000000a5fce : add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000072abb : add byte ptr [rax], al ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001684fe : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x000000000016851e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x000000000016850e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x00000000001684ee : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00000000000f56be : add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x00000000000a62ee : add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x000000000009dfbe : add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x00000000000a630e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a631e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a62fe : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x0000000000055715 : add byte ptr [rax], al ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000012d18e : add byte ptr [rax], al ; mov dword ptr [rsi], 0xa ; ret
0x000000000012d17e : add byte ptr [rax], al ; mov dword ptr [rsi], 0xb ; ret
0x000000000012d1ae : add byte ptr [rax], al ; mov dword ptr [rsi], 0xc ; ret
0x000000000012d19e : add byte ptr [rax], al ; mov dword ptr [rsi], 8 ; ret
0x00000000000f5f44 : add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000133620 : add byte ptr [rax], al ; mov dword ptr [rsp + 0xc], edx ; call 0x1f8a8
0x00000000000c93a0 : add byte ptr [rax], al ; mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x00000000000a530e : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000086d6e : add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x00000000000cc7be : add byte ptr [rax], al ; mov eax, 0x66 ; syscall ; ret
0x00000000000cc7de : add byte ptr [rax], al ; mov eax, 0x68 ; syscall ; ret
0x00000000000cc7ce : add byte ptr [rax], al ; mov eax, 0x6b ; syscall ; ret
0x00000000000cc7ee : add byte ptr [rax], al ; mov eax, 0x6c ; syscall ; ret
0x00000000000cc9fe : add byte ptr [rax], al ; mov eax, 0x6f ; syscall ; ret
0x00000000000cced9 : add byte ptr [rax], al ; mov eax, 0x7f ; ret
0x00000000000bb93e : add byte ptr [rax], al ; mov eax, 0xc9 ; syscall ; ret
0x0000000000106f2e : add byte ptr [rax], al ; mov eax, 0xe4 ; syscall ; ret
0x00000000000ccf9e : add byte ptr [rax], al ; mov eax, 0xfc17 ; ret
0x0000000000118cca : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000033efc : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000003547c : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000012a85e : add byte ptr [rax], al ; mov eax, 1 ; pop rbx ; ret
0x000000000004a074 : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000012d8ae : add byte ptr [rax], al ; mov eax, 2 ; ret
0x000000000010570a : add byte ptr [rax], al ; mov eax, dword ptr [rax + 0x38] ; test eax, eax ; cmove eax, edx ; ret
0x000000000016dc0e : add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000007c78e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000012d0dc : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x20] ; mov dword ptr [rsi + 8], eax ; ret
0x000000000013b98e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000000d677e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x00000000000f56ae : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000007736e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x000000000007733e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x0000000000072f6e : add byte ptr [rax], al ; mov eax, dword ptr [rdx] ; ret
0x000000000003686e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x38c812] ; ret
0x000000000006f718 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003595f : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000002122c : add byte ptr [rax], al ; mov eax, edi ; ret
0x000000000010c6fb : add byte ptr [rax], al ; mov eax, edx ; add rsp, 8 ; ret
0x0000000000054e02 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x00000000000218a3 : add byte ptr [rax], al ; mov eax, edx ; ret
0x000000000011614f : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116328 : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000006b5e1 : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; ret
0x0000000000070f75 : add byte ptr [rax], al ; mov eax, r8d ; pop rbx ; ret
0x000000000013283a : add byte ptr [rax], al ; mov ebp, eax ; call 0x12eb16
0x00000000000a533e : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000001a745a : add byte ptr [rax], al ; mov ecx, es ; add byte ptr [rax], al ; jo 0x1a744c ; out dx, eax ; call rsp
0x0000000000117ddd : add byte ptr [rax], al ; mov edx, dword ptr [rbx] ; jmp 0x117daa
0x000000000015a92e : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000a532e : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000070043 : add byte ptr [rax], al ; mov edx, eax ; je 0x70059 ; mov eax, edx ; pop rbx ; ret
0x0000000000071135 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x710cd
0x00000000000712c6 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x71264
0x0000000000075b21 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x75ac2
0x0000000000076471 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x76412
0x0000000000075451 : add byte ptr [rax], al ; mov edx, eax ; mov eax, edx ; pop rbx ; ret
0x00000000001a4132 : add byte ptr [rax], al ; mov es, word ptr fs:[rax] ; add byte ptr [rax - 0x79], bh ; in eax, dx ; jmp qword ptr [rbx]
0x0000000000102dd4 : add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x00000000001a618a : add byte ptr [rax], al ; mov esp, 0x800000ae ; xchg dh, ch ; jmp rbx
0x00000000001bac8a : add byte ptr [rax], al ; mov esp, 0x800001f9 ; clc ; call qword ptr [rbx]
0x00000000001af48a : add byte ptr [rax], al ; mov esp, 0xa0000141 ; sub ch, dh ; jmp qword ptr [rbx]
0x00000000001b238a : add byte ptr [rax], al ; mov esp, 0xb0000170 ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001ad38a : add byte ptr [rax], al ; mov esp, 0xc0000120 ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000001a568a : add byte ptr [rax], al ; mov esp, 0xd00000a3 ; in al, -4 ; call qword ptr [rdx]
0x00000000001aec8a : add byte ptr [rax], al ; mov esp, 0xd0000139 ; add dh, ch ; call qword ptr [rdi]
0x00000000001b028a : add byte ptr [rax], al ; mov esp, 0xe000014f ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x000000000004d60b : add byte ptr [rax], al ; mov qword ptr [rbp - 0x4e8], rsi ; jmp rax
0x0000000000113e40 : add byte ptr [rax], al ; mov qword ptr [rbp - 0x70], rdx ; mov rdx, r13 ; call rax
0x0000000000142e23 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000142ddb : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000014304e : add byte ptr [rax], al ; mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000088ca0 : add byte ptr [rax], al ; mov qword ptr [rbx], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000016853e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x000000000016855e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x000000000016856e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x000000000016857e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x000000000016858e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x000000000016859e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x00000000001685ae : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x000000000016854e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x000000000016852e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x000000000009429e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000013bd4a : add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000a632e : add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x00000000000a634e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a636e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a637e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000a638e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a639e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a635e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000a633e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000004a060 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000007621c : add byte ptr [rax], al ; mov qword ptr [rdx], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000131b3b : add byte ptr [rax], al ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x000000000012d11c : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000003b283 : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x00000000000f55dc : add byte ptr [rax], al ; mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x000000000012d0ec : add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x0000000000118a9e : add byte ptr [rax], al ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x000000000003361f : add byte ptr [rax], al ; mov qword ptr [rsp + 0x28], rcx ; call 0x1f8a9
0x000000000007d9c9 : add byte ptr [rax], al ; mov qword ptr fs:[r9], rdx ; mov rax, rdx ; ret
0x000000000003a5e6 : add byte ptr [rax], al ; mov qword ptr fs:[rbp], rdx ; call rax
0x0000000000137a9b : add byte ptr [rax], al ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00000000000353d4 : add byte ptr [rax], al ; mov rax, -1 ; ret
0x00000000000ab53e : add byte ptr [rax], al ; mov rax, 1 ; ret
0x00000000000ab54e : add byte ptr [rax], al ; mov rax, 2 ; ret
0x00000000000ab55e : add byte ptr [rax], al ; mov rax, 3 ; ret
0x00000000000ab56e : add byte ptr [rax], al ; mov rax, 4 ; ret
0x00000000000ab57e : add byte ptr [rax], al ; mov rax, 5 ; ret
0x00000000000ab58e : add byte ptr [rax], al ; mov rax, 6 ; ret
0x00000000000ab59e : add byte ptr [rax], al ; mov rax, 7 ; ret
0x000000000007b169 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x00000000000745f0 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000114116 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x30] ; ret
0x000000000007b635 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x00000000001059a6 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000003a710 : add byte ptr [rax], al ; mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000000c7e1e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x20] ; ret
0x0000000000074eae : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000007ca5e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x0000000000140751 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x283cb6] ; call qword ptr [rax]
0x000000000014013e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2842c9] ; call qword ptr [rax]
0x000000000007ca3e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x347ad9] ; ret
0x0000000000021a4e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3a6919] ; ret
0x0000000000021a3e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3a6939] ; ret
0x00000000000fd58d : add byte ptr [rax], al ; mov rax, qword ptr [rsp - 0x50] ; ret
0x000000000007e074 : add byte ptr [rax], al ; mov rax, r8 ; ret
0x000000000006dbb5 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000102896 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006ab7d : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000003aa9c : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x0000000000033e94 : add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000007ca6e : add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000001408ca : add byte ptr [rax], al ; mov rax, rdx ; add rsp, 8 ; ret
0x0000000000084124 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006e479 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x00000000000eb676 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x78] ; call r12
0x0000000000072f25 : add byte ptr [rax], al ; mov rdi, qword ptr [rdx + 0x40] ; jmp 0x72ef7
0x0000000000102fc6 : add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x000000000002f6d6 : add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x0000000000102e92 : add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000102e0a : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000102dfb : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x000000000012db5b : add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rbx]
0x0000000000103250 : add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x0000000000136bb5 : add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [rax]
0x000000000006caf6 : add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x000000000006c3e3 : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000000876d3 : add byte ptr [rax], al ; mov rdi, rbx ; mov rdx, r15 ; call rax
0x000000000013a1ae : add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x00000000000a536e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000871c0 : add byte ptr [rax], al ; mov rdx, r12 ; mov rdi, r15 ; call rax
0x00000000000d8d49 : add byte ptr [rax], al ; mov rdx, r8 ; jmp 0xd8d5e
0x000000000007db91 : add byte ptr [rax], al ; mov rdx, rax ; jmp 0x7dbb4
0x000000000005be06 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x367161] ; call rax
0x000000000005b7b0 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x3677b7] ; call rax
0x0000000000050008 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x372f5f] ; call rax
0x000000000004d38c : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x375bdb] ; call rax
0x00000000000882ce : add byte ptr [rax], al ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000087430 : add byte ptr [rax], al ; mov rsi, r12 ; mov rdi, rbx ; call rax
0x0000000000086fa2 : add byte ptr [rax], al ; mov rsi, r14 ; call rax
0x0000000000088144 : add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000019d75a : add byte ptr [rax], al ; mov word ptr [rax + rax], fs ; add byte ptr [rax], dl ; jp 0x19d755 ; call qword ptr [rax]
0x000000000019c75a : add byte ptr [rax], al ; mov word ptr [rax + rax], ss ; add al, dh ; outsd dx, dword ptr [rsi] ; std ; call qword ptr [rcx]
0x00000000001a5c5a : add byte ptr [rax], al ; mov word ptr [rcx + 0x4cc00000], gs ; out dx, al ; call qword ptr [rdx]
0x00000000001b075a : add byte ptr [rax], al ; mov word ptr [rcx + rax], ss ; adc byte ptr [rax - 0xb], bh ; jmp qword ptr [rbx]
0x00000000001684de : add byte ptr [rax], al ; mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x00000000001684ce : add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x00000000001a4a5a : add byte ptr [rax], al ; mov word ptr [rdi - 0x3f900000], ss ; in eax, dx ; jmp qword ptr [rsi]
0x00000000000a62de : add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x000000000009e02e : add byte ptr [rax], al ; mov word ptr [rdi], si ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000009df9e : add byte ptr [rax], al ; mov word ptr [rdi], si ; mov rax, rdi ; ret
0x000000000003b2cd : add byte ptr [rax], al ; mov word ptr [rsi + 0xc], ax ; xor eax, eax ; ret
0x000000000003b314 : add byte ptr [rax], al ; mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x00000000001a615a : add byte ptr [rax], al ; mov word ptr [rsi - 0x79800000], gs ; out dx, al ; call qword ptr [rsi]
0x0000000000034e4e : add byte ptr [rax], al ; movaps xmm0, xmm1 ; add rsp, 0x28 ; ret
0x00000000000e024e : add byte ptr [rax], al ; movdqa xmm0, xmm2 ; jmp 0xe0238
0x00000000000a63ae : add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00000000000a63be : add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000001bb672 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add eax, dword ptr [rdx] ; add al, bl ; jo 0x1bb67c ; call qword ptr [rax]
0x00000000001afe72 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add qword ptr [r8], rax ; fsubr dword ptr [rbx - 0xb] ; jmp qword ptr [rcx]
0x000000000019affe : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; hlt ; cli ; call rsp
0x00000000001b0572 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; push rdx ; add dword ptr [rax], eax ; fdiv dword ptr [rbx - 0xb] ; jmp qword ptr [rcx]
0x00000000001b7572 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 1
0x00000000001ad8bf : add byte ptr [rax], al ; movsd dword ptr [rdi], dword ptr [rsi] ; hlt ; call rax
0x0000000000018fe6 : add byte ptr [rax], al ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x18
0x000000000006c8fa : add byte ptr [rax], al ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x0000000000047c4f : add byte ptr [rax], al ; movsxd rcx, dword ptr [r11 + rcx*4] ; add rcx, r11 ; jmp rcx
0x000000000007a54e : add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000015aabe : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000015b19e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000015b12e : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000001a302e : add byte ptr [rax], al ; nop ; in eax, dx ; call rbx
0x00000000001a3d9e : add byte ptr [rax], al ; nop ; jnp 0x1a3d95 ; call qword ptr [rcx]
0x0000000000118add : add byte ptr [rax], al ; nop ; mov eax, edi ; ror ax, 8 ; ret
0x000000000002058d : add byte ptr [rax], al ; nop ; ret
0x00000000001a0dfe : add byte ptr [rax], al ; nop ; shr ah, 1 ; call rsp
0x000000000013b599 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; ret
0x0000000000132f7a : add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x000000000013bb4b : add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000001ae6da : add byte ptr [rax], al ; or al, 0x34 ; add dword ptr [rax], eax ; adc bl, ch ; hlt ; jmp rdx
0x00000000001b00da : add byte ptr [rax], al ; or al, 0x4e ; add dword ptr [rax], eax ; and byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b08da : add byte ptr [rax], al ; or al, 0x56 ; add dword ptr [rax], eax ; jo 0x1b0965 ; cmc ; jmp qword ptr [rcx]
0x00000000001a2fda : add byte ptr [rax], al ; or al, 0x7d ; add byte ptr [rax], al ; push rax ; in eax, dx ; jmp qword ptr [rax]
0x00000000001a5bda : add byte ptr [rax], al ; or al, 0xa9 ; add byte ptr [rax], al ; out dx, al ; call qword ptr [rax]
0x00000000001a8cda : add byte ptr [rax], al ; or al, 0xda ; add byte ptr [rax], al ; add byte ptr [rsi], ch ; int1 ; jmp qword ptr [rcx]
0x00000000001aa8da : add byte ptr [rax], al ; or al, 0xf6 ; add byte ptr [rax], al ; push rax ; and edx, esi ; jmp qword ptr [rcx]
0x00000000001a64e6 : add byte ptr [rax], al ; or bl, bl ; out dx, al ; jmp qword ptr [rsi]
0x0000000000035d52 : add byte ptr [rax], al ; or byte ptr [rdi], cl ; ret 0xc289
0x00000000000fbd38 : add byte ptr [rax], al ; or byte ptr [rip - 0x80000000], 0x39 ; ret 0x8e75
0x0000000000106c94 : add byte ptr [rax], al ; or eax, edi ; ret
0x00000000001a9816 : add byte ptr [rax], al ; out 0xf1, al ; call qword ptr [rbx]
0x00000000001a97e6 : add byte ptr [rax], al ; out 0xf1, al ; jmp qword ptr [rdi]
0x00000000001bc906 : add byte ptr [rax], al ; out 1, eax ; add byte ptr [rax], al ; ret 4
0x00000000001a5bde : add byte ptr [rax], al ; out dx, al ; call qword ptr [rax]
0x00000000001a4e3f : add byte ptr [rax], al ; out dx, al ; in eax, dx ; call rsi
0x00000000001ba21a : add byte ptr [rax], al ; out dx, eax ; add dword ptr [rax], eax ; loopne 0x1ba23e ; clc ; jmp qword ptr [rbx]
0x0000000000196b16 : add byte ptr [rax], al ; out dx, eax ; jmp 0x196b20
0x0000000000034e5e : add byte ptr [rax], al ; pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x00000000001a7446 : add byte ptr [rax], al ; pop rax ; fucomi st(7) ; jmp qword ptr [rbx]
0x000000000019d7a6 : add byte ptr [rax], al ; pop rax ; jp 0x19d799 ; jmp qword ptr [rsi]
0x0000000000106b57 : add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x00000000001a63c6 : add byte ptr [rax], al ; pop rax ; push rsp ; cli ; call qword ptr [rax]
0x0000000000018ec6 : add byte ptr [rax], al ; pop rax ; ret 0x18
0x00000000001a07b6 : add byte ptr [rax], al ; pop rax ; stosd dword ptr [rdi], eax ; in al, dx ; jmp qword ptr [rcx]
0x00000000001a92a6 : add byte ptr [rax], al ; pop rax ; xchg eax, ebx ; int1 ; call qword ptr [rax]
0x00000000001a8a06 : add byte ptr [rax], al ; pop rax ; xchg eax, ecx ; cld ; jmp qword ptr [rbx]
0x0000000000054c7d : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000054d4d : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000070ab0 : add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x0000000000108d6a : add byte ptr [rax], al ; pop rbp ; ret
0x00000000000aa20a : add byte ptr [rax], al ; pop rbx ; and eax, 0x3fc00 ; ret
0x000000000003a88c : add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000000479cf : add byte ptr [rax], al ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000001164d5 : add byte ptr [rax], al ; pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x0000000000052c3c : add byte ptr [rax], al ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x000000000006fbc0 : add byte ptr [rax], al ; pop rbx ; mov rax, rsi ; pop rbp ; pop r12 ; ret
0x00000000000cc997 : add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000029daa : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000001fb0e : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000358c7 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000002a6d6 : add byte ptr [rax], al ; pop rbx ; ret
0x00000000000939b4 : add byte ptr [rax], al ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000193ace : add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x00000000001a0d32 : add byte ptr [rax], al ; pop rdx ; add byte ptr [rax], al ; clc ; iretd ; in al, dx ; jmp qword ptr [rax]
0x00000000001ac62a : add byte ptr [rax], al ; pop rsp ; adc eax, dword ptr [rcx] ; add al, al ; xlatb ; jmp qword ptr [rcx]
0x00000000001ad32a : add byte ptr [rax], al ; pop rsp ; and byte ptr [rcx], al ; add byte ptr [rax], dh ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000001a8e2a : add byte ptr [rax], al ; pop rsp ; fild dword ptr [rax] ; add byte ptr [rax], dh ; xor esi, ecx ; jmp rdi
0x00000000001a982a : add byte ptr [rax], al ; pop rsp ; in eax, 0 ; add byte ptr [rax - 0x1a], dl ; int1 ; call qword ptr [rbx]
0x00000000001a3d2a : add byte ptr [rax], al ; pop rsp ; mov al, byte ptr [rax] ; add byte ptr [rax], dl ; jns 0x1a3d29 ; call qword ptr [rsi]
0x00000000001a712a : add byte ptr [rax], al ; pop rsp ; mov esi, 0x7cc00000 ; out dx, eax ; call qword ptr [rdi]
0x00000000001b052a : add byte ptr [rax], al ; pop rsp ; push rdx ; add dword ptr [rax], eax ; nop ; jae 0x1b0531 ; jmp qword ptr [rcx]
0x0000000000018ede : add byte ptr [rax], al ; pop rsp ; ret 0x18
0x000000000019cd2a : add byte ptr [rax], al ; pop rsp ; sbb al, byte ptr [rax] ; add byte ptr [rax], al ; adc al, 0xe9 ; call qword ptr [rcx]
0x000000000019ed2e : add byte ptr [rax], al ; push rax ; add ebp, edx ; call rax
0x00000000001aa87e : add byte ptr [rax], al ; push rax ; and edx, esi ; jmp qword ptr [rcx]
0x00000000001a2fde : add byte ptr [rax], al ; push rax ; in eax, dx ; jmp qword ptr [rax]
0x00000000001a341e : add byte ptr [rax], al ; push rax ; in eax, dx ; jmp qword ptr [rsi]
0x00000000001a982e : add byte ptr [rax], al ; push rax ; out 0xf1, al ; call qword ptr [rbx]
0x0000000000193e54 : add byte ptr [rax], al ; push rax ; pop r9 ; clc ; ret 0x6e1f
0x000000000018687e : add byte ptr [rax], al ; push rax ; push rbp ; out dx, al ; push qword ptr [rax + 0x55] ; out dx, al ; call rax
0x0000000000018e96 : add byte ptr [rax], al ; push rax ; ret 0x18
0x000000000019e5fe : add byte ptr [rax], al ; push rax ; ret 0xffe9
0x000000000019dd2e : add byte ptr [rax], al ; push rax ; test ebp, ecx ; jmp rsp
0x00000000001a92be : add byte ptr [rax], al ; push rax ; xchg eax, ebx ; int1 ; call qword ptr [rax]
0x000000000011510e : add byte ptr [rax], al ; push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x00000000001b0122 : add byte ptr [rax], al ; push rsp ; add qword ptr [rax], r8 ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001bab22 : add byte ptr [rax], al ; push rsp ; clc ; add dword ptr [rax], eax ; call 0x231ba6cb
0x0000000000196e46 : add byte ptr [rax], al ; push rsp ; lodsb al, byte ptr [rsi] ; in eax, dx ; jmp rsp
0x00000000001a7a22 : add byte ptr [rax], al ; push rsp ; mov dword ptr [rax], 0xf044d800 ; jmp qword ptr [rdi]
0x00000000001b0422 : add byte ptr [rax], al ; push rsp ; push rcx ; add dword ptr [rax], eax ; or byte ptr [rdx - 0xb], dh ; jmp qword ptr [rcx]
0x000000000001929e : add byte ptr [rax], al ; push rsp ; ret
0x0000000000018eae : add byte ptr [rax], al ; push rsp ; ret 0x18
0x000000000019cc22 : add byte ptr [rax], al ; push rsp ; sbb dword ptr [rax], eax ; add al, cl ; adc ebp, ecx ; call qword ptr [rbx]
0x0000000000196e26 : add byte ptr [rax], al ; push rsp ; test al, 0xed ; jmp rsp
0x00000000001aa922 : add byte ptr [rax], al ; push rsp ; test byte ptr [rax], 0 ; cwde ; and edx, esi ; jmp qword ptr [rcx]
0x00000000001a5c22 : add byte ptr [rax], al ; push rsp ; test eax, 0x4c280000 ; out dx, al ; jmp qword ptr [rdx]
0x00000000001ae722 : add byte ptr [rax], al ; push rsp ; xor al, 1 ; add byte ptr [rax], cl ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001ba56a : add byte ptr [rax], al ; pushfq ; add dword ptr [rax], eax ; and byte ptr [rdi], dl ; clc ; call qword ptr [rdx]
0x00000000001b016a : add byte ptr [rax], al ; pushfq ; add qword ptr [rax], r8 ; nop ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001a6d6a : add byte ptr [rax], al ; pushfq ; mov edx, 0x71100000 ; out dx, eax ; call rax
0x00000000001b096a : add byte ptr [rax], al ; pushfq ; push rsi ; add dword ptr [rax], eax ; add byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x0000000000018fce : add byte ptr [rax], al ; pushfq ; ret 0x18
0x000000000019cc6a : add byte ptr [rax], al ; pushfq ; sbb dword ptr [rax], eax ; add al, ah ; adc ebp, ecx ; call qword ptr [rbx]
0x00000000001ae56a : add byte ptr [rax], al ; pushfq ; xor al, byte ptr [rcx] ; add byte ptr [rax - 0x19], al ; hlt ; jmp qword ptr [rcx]
0x000000000019cc0e : add byte ptr [rax], al ; rcl byte ptr [rbx], 0xe9 ; call qword ptr [rbx]
0x0000000000000977 : add byte ptr [rax], al ; ret
0x0000000000175e26 : add byte ptr [rax], al ; ret 0
0x000000000017cd9e : add byte ptr [rax], al ; ret 0x10
0x000000000000e45e : add byte ptr [rax], al ; ret 0x16
0x00000000000185ae : add byte ptr [rax], al ; ret 0x18
0x000000000017ea6e : add byte ptr [rax], al ; ret 0x1d4
0x000000000017f206 : add byte ptr [rax], al ; ret 0x1d5
0x0000000000003fee : add byte ptr [rax], al ; ret 0x23
0x000000000017da76 : add byte ptr [rax], al ; ret 0x24
0x0000000000005ec6 : add byte ptr [rax], al ; ret 0x26
0x000000000000054c : add byte ptr [rax], al ; ret 0x2800
0x0000000000010e8e : add byte ptr [rax], al ; ret 0x30
0x000000000000d7b6 : add byte ptr [rax], al ; ret 0x31
0x000000000017df66 : add byte ptr [rax], al ; ret 0x33
0x0000000000000886 : add byte ptr [rax], al ; ret 0x440c
0x000000000000b326 : add byte ptr [rax], al ; ret 0x4f
0x0000000000008656 : add byte ptr [rax], al ; ret 0x53
0x000000000000b536 : add byte ptr [rax], al ; ret 0x56
0x000000000017c59e : add byte ptr [rax], al ; ret 0xa
0x000000000017c99e : add byte ptr [rax], al ; ret 0xd
0x000000000001f6ba : add byte ptr [rax], al ; ret 1
0x0000000000180042 : add byte ptr [rax], al ; ret 2
0x00000000000011c6 : add byte ptr [rax], al ; ret 3
0x0000000000007606 : add byte ptr [rax], al ; ret 4
0x000000000000156e : add byte ptr [rax], al ; ret 5
0x000000000000dd9e : add byte ptr [rax], al ; ret 6
0x000000000001824e : add byte ptr [rax], al ; ret 7
0x0000000000001a8a : add byte ptr [rax], al ; ret 8
0x0000000000180e42 : add byte ptr [rax], al ; ret 9
0x000000000000138e : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret
0x000000000018043e : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x00000000001aa1be : add byte ptr [rax], al ; rol byte ptr [rdi], 1 ; call rsi
0x000000000017c846 : add byte ptr [rax], al ; ror byte ptr [rax + rax], 0 ; ret
0x00000000001ae1ea : add byte ptr [rax], al ; sbb al, 0x2f ; add dword ptr [rax], eax ; fcompi st(4) ; call qword ptr [rbx]
0x00000000001af0ea : add byte ptr [rax], al ; sbb al, 0x3e ; add dword ptr [rax], eax ; sbb byte ptr [rsi], 0xf5 ; jmp qword ptr [rcx]
0x00000000001afcea : add byte ptr [rax], al ; sbb al, 0x4a ; add dword ptr [rax], eax ; nop ; pop rdx ; cmc ; jmp qword ptr [rcx]
0x00000000001afeea : add byte ptr [rax], al ; sbb al, 0x4c ; add dword ptr [rax], eax ; jne 0x1aff67 ; cmc ; call qword ptr [rcx]
0x00000000001b02ea : add byte ptr [rax], al ; sbb al, 0x50 ; add dword ptr [rax], eax ; jo 0x1b02f1 ; jmp qword ptr [rcx]
0x00000000001b4fea : add byte ptr [rax], al ; sbb al, 0x9d ; add dword ptr [rax], eax ; push rax ; fdiv st(6) ; jmp qword ptr [rdi]
0x0000000000196956 : add byte ptr [rax], al ; sbb al, 0xeb ; jmp rsp
0x00000000001aa7ea : add byte ptr [rax], al ; sbb al, 0xf5 ; add byte ptr [rax], al ; adc byte ptr [rax], ah ; jmp qword ptr [rcx]
0x00000000001aefdf : add byte ptr [rax], al ; sbb al, 0xf5 ; call qword ptr [rdx]
0x00000000001bafea : add byte ptr [rax], al ; sbb al, 0xfd ; add dword ptr [rax], eax ; xor byte ptr [rbp - 8], dl ; call qword ptr [rax]
0x00000000001acf1a : add byte ptr [rax], al ; sbb al, 1 ; add byte ptr [rax - 0x79], dh ; hlt ; call qword ptr [rsi]
0x00000000001a9d66 : add byte ptr [rax], al ; sbb bh, dh ; int1 ; call rsi
0x00000000001a8be6 : add byte ptr [rax], al ; sbb byte ptr [rbx], ah ; int1 ; call qword ptr [rcx]
0x00000000001a8b66 : add byte ptr [rax], al ; sbb byte ptr [rbx], ah ; int1 ; jmp qword ptr [rcx]
0x00000000001a4b56 : add byte ptr [rax], al ; sbb cl, bl ; in eax, dx ; call qword ptr [rsi]
0x000000000019cd12 : add byte ptr [rax], al ; sbb r8b, byte ptr [rax] ; add al, bh ; adc ebp, ecx ; call qword ptr [rcx]
0x00000000001a568e : add byte ptr [rax], al ; shl ah, 1 ; cld ; call qword ptr [rdx]
0x00000000000f5546 : add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000001a0db6 : add byte ptr [rax], al ; shr spl, 1 ; call qword ptr [rax]
0x00000000001ac5fa : add byte ptr [rax], al ; sub al, 0x13 ; add dword ptr [rax], eax ; nop ; xlatb ; jmp qword ptr [rcx]
0x000000000019e5fa : add byte ptr [rax], al ; sub al, 0x33 ; add byte ptr [rax], al ; push rax ; ret 0xffe9
0x00000000001b04fa : add byte ptr [rax], al ; sub al, 0x52 ; add dword ptr [rax], eax ; xor byte ptr [rbx - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001a0dfa : add byte ptr [rax], al ; sub al, 0x5b ; add byte ptr [rax], al ; nop ; shr ah, 1 ; call rsp
0x00000000001b24fa : add byte ptr [rax], al ; sub al, 0x72 ; add dword ptr [rax], eax ; rcl byte ptr [rdi], 0xfc ; jmp qword ptr [rsi]
0x00000000001a6dfa : add byte ptr [rax], al ; sub al, 0xbb ; add byte ptr [rax], al ; jo 0x1a6e7e ; out dx, eax ; jmp qword ptr [rax]
0x00000000001a8afa : add byte ptr [rax], al ; sub al, 0xd8 ; add byte ptr [rax], al ; and byte ptr [rdx], ah ; int1 ; jmp rcx
0x00000000001a7536 : add byte ptr [rax], al ; sub byte ptr [rdx], ch ; cli ; jmp qword ptr [rdi]
0x00000000001a6f66 : add byte ptr [rax], al ; sub dl, bl ; cld ; call qword ptr [rax]
0x00000000001adc12 : add byte ptr [rax], al ; sub dword ptr [rcx], r8d ; add byte ptr [rax], bh ; ret
0x000000000016e9cc : add byte ptr [rax], al ; sub eax, ecx ; ret
0x00000000000fc470 : add byte ptr [rax], al ; sub eax, edx ; ret
0x00000000001a754e : add byte ptr [rax], al ; sub edi, edx ; call qword ptr [rdi]
0x0000000000034eed : add byte ptr [rax], al ; sub edx, eax ; mov eax, edx ; sar eax, 0x10 ; ret
0x000000000007bf46 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000008a911 : add byte ptr [rax], al ; sub rax, rdx ; ret
0x00000000000fd265 : add byte ptr [rax], al ; syscall ; mov eax, edx ; ret
0x00000000000f605b : add byte ptr [rax], al ; syscall ; neg eax ; ret
0x0000000000114805 : add byte ptr [rax], al ; syscall ; pop rdx ; pop rsi ; ret
0x00000000000bb943 : add byte ptr [rax], al ; syscall ; ret
0x00000000001a9f96 : add byte ptr [rax], al ; test al, 0 ; call rdi
0x00000000001a88c6 : add byte ptr [rax], al ; test al, 0x19 ; int1 ; jmp qword ptr [rcx]
0x00000000001a6306 : add byte ptr [rax], al ; test al, 0x3e ; cli ; call qword ptr [rax]
0x00000000001a4436 : add byte ptr [rax], al ; test al, 0x8b ; in eax, dx ; call qword ptr [rdx]
0x00000000001a7352 : add byte ptr [rax], al ; test al, al ; add byte ptr [rax], al ; xchg rax, rsp ; sti ; call qword ptr [rax]
0x00000000001a4b52 : add byte ptr [rax], al ; test byte ptr [rax - 0x26e80000], bl ; in eax, dx ; call qword ptr [rsi]
0x00000000001a5e52 : add byte ptr [rax], al ; test byte ptr [rbx + 0x6e680000], ch ; out dx, al ; jmp qword ptr [rdx]
0x00000000001970de : add byte ptr [rax], al ; test byte ptr [rdx], al ; out dx, al ; call rsp
0x00000000001972d6 : add byte ptr [rax], al ; test byte ptr [rdx], ch ; out dx, al ; jmp rsp
0x00000000001b1152 : add byte ptr [rax], al ; test byte ptr [rsi + 1], bl ; add al, ch ; lahf ; cmc ; call rdi
0x00000000001b0152 : add byte ptr [rax], al ; test byte ptr [rsi + 1], cl ; add byte ptr [rax + 0x6e], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001b0952 : add byte ptr [rax], al ; test byte ptr [rsi + 1], dl ; add al, ch ; jp 0x1b0959 ; jmp qword ptr [rcx]
0x00000000001a8452 : add byte ptr [rax], al ; test dl, cl ; add byte ptr [rax], al ; call 0x111a753b
0x000000000012d03f : add byte ptr [rax], al ; test eax, eax ; je 0x12d058 ; xor eax, eax ; ret
0x00000000000ae1a3 : add byte ptr [rax], al ; test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xae1c1
0x00000000000b0ac4 : add byte ptr [rax], al ; test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xb0ae1
0x00000000000b327b : add byte ptr [rax], al ; test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xb32a1
0x000000000006b406 : add byte ptr [rax], al ; test ecx, ecx ; je 0x6b417 ; ret
0x0000000000114fad : add byte ptr [rax], al ; test rax, rax ; je 0x114fe7 ; call rax
0x0000000000138752 : add byte ptr [rax], al ; test rax, rax ; jne 0x138748 ; pop rbx ; ret
0x0000000000018fb6 : add byte ptr [rax], al ; xchg eax, ebp ; ret 0x18
0x00000000001a4432 : add byte ptr [rax], al ; xchg eax, ecx ; add byte ptr [rax], al ; test al, 0x8b ; in eax, dx ; call qword ptr [rdx]
0x00000000001a88c2 : add byte ptr [rax], al ; xchg eax, esp ; add byte ptr [rax], 0 ; test al, 0x19 ; int1 ; jmp qword ptr [rcx]
0x00000000001afd62 : add byte ptr [rax], al ; xchg eax, esp ; add qword ptr [rax], rax ; or byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x00000000001aa862 : add byte ptr [rax], al ; xchg eax, esp ; cmc ; add byte ptr [rax], al ; cmp byte ptr [rcx], ah ; jmp qword ptr [rcx]
0x000000000019eb62 : add byte ptr [rax], al ; xchg eax, esp ; cmp byte ptr [rax], al ; add al, bh ; shr ecx, 1 ; call qword ptr [rax]
0x00000000001a8b62 : add byte ptr [rax], al ; xchg eax, esp ; fadd dword ptr [rax] ; add byte ptr [rax], bl ; and esi, ecx ; jmp qword ptr [rcx]
0x00000000001a6f62 : add byte ptr [rax], al ; xchg eax, esp ; mov esp, 0xda280000 ; cld ; call qword ptr [rax]
0x00000000001b7662 : add byte ptr [rax], al ; xchg eax, esp ; ret
0x00000000001a7562 : add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00000000001acf62 : add byte ptr [rax], al ; xchg eax, esp ; sbb al, 1 ; add byte ptr [rax - 0x79], ch ; hlt ; call qword ptr [rax]
0x00000000001a5b62 : add byte ptr [rax], al ; xchg eax, esp ; test al, 0 ; add al, ch ; xor al, 0xee ; jmp qword ptr [rdx]
0x00000000001aaa62 : add byte ptr [rax], al ; xchg eax, esp ; test dword ptr [rax], 0xf2299800 ; jmp rcx
0x00000000001ae362 : add byte ptr [rax], al ; xchg eax, esp ; xor byte ptr [rcx], al ; add al, bh ; loop 0x1ae368 ; call qword ptr [rsi]
0x00000000001a7356 : add byte ptr [rax], al ; xchg rax, rsp ; sti ; call qword ptr [rax]
0x00000000001ac502 : add byte ptr [rax], al ; xor al, 0x12 ; add dword ptr [rax], eax ; sbb bh, dl ; call qword ptr [rbx]
0x00000000001971e6 : add byte ptr [rax], al ; xor al, 0x19 ; out dx, al ; call rsp
0x000000000019d702 : add byte ptr [rax], al ; xor al, 0x24 ; add byte ptr [rax], al ; cmp byte ptr [rcx - 0x17], bh ; call qword ptr [rcx]
0x00000000001977ae : add byte ptr [rax], al ; xor al, 0x29 ; out dx, eax ; jmp rsp
0x00000000001aff02 : add byte ptr [rax], al ; xor al, 0x4c ; add dword ptr [rax], eax ; js 0x1aff7f ; cmc ; jmp qword ptr [rcx]
0x00000000001b0302 : add byte ptr [rax], al ; xor al, 0x50 ; add dword ptr [rax], eax ; pop rax ; jo 0x1b0309 ; jmp qword ptr [rcx]
0x0000000000197396 : add byte ptr [rax], al ; xor al, 0x50 ; out dx, al ; call rsp
0x00000000001b2102 : add byte ptr [rax], al ; xor al, 0x6e ; add dword ptr [rax], eax ; and rsi, rsi ; jmp qword ptr [rsi]
0x0000000000196d8e : add byte ptr [rax], al ; xor al, 0x91 ; in eax, dx ; call rsp
0x00000000001b5202 : add byte ptr [rax], al ; xor al, 0x9f ; add dword ptr [rax], eax ; cwde ; jrcxz 0x1b520a ; call rcx
0x00000000001a5f02 : add byte ptr [rax], al ; xor al, 0xac ; add byte ptr [rax], al ; jno 0x1a5f02 ; jmp qword ptr [rdx]
0x00000000001a6302 : add byte ptr [rax], al ; xor al, 0xb0 ; add byte ptr [rax], al ; test al, 0x3e ; cli ; call qword ptr [rax]
0x00000000001a6602 : add byte ptr [rax], al ; xor al, 0xb3 ; add byte ptr [rax], al ; in al, -0x12 ; call qword ptr [rax]
0x00000000001a8a02 : add byte ptr [rax], al ; xor al, 0xd7 ; add byte ptr [rax], al ; pop rax ; xchg eax, ecx ; cld ; jmp qword ptr [rbx]
0x00000000001a509e : add byte ptr [rax], al ; xor bh, bh ; in eax, dx ; call qword ptr [rsi]
0x00000000001a8e2e : add byte ptr [rax], al ; xor byte ptr [rbx], dh ; int1 ; jmp rdi
0x00000000000fbb0a : add byte ptr [rax], al ; xor byte ptr [rcx], 0xc0 ; ret
0x000000000019cfbe : add byte ptr [rax], al ; xor byte ptr [rsi], 0xe9 ; call qword ptr [rsi]
0x00000000001969ee : add byte ptr [rax], al ; xor ch, bl ; jmp rsp
0x00000000000a917e : add byte ptr [rax], al ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x00000000001a9a0e : add byte ptr [rax], al ; xor cl, ch ; int1 ; call rdi
0x000000000011e226 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000000000143636 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x38 ; ret
0x00000000000baddc : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x000000000012d94e : add byte ptr [rax], al ; xor eax, eax ; jmp rcx
0x000000000012d906 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000003a25b : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c7695 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000039ed3 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000039ef6 : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000007a2be : add byte ptr [rax], al ; xor eax, eax ; test rdx, rdx ; jne 0x7a2d9 ; ret
0x000000000003afac : add byte ptr [rax], al ; xor eax, ecx ; ret
0x00000000001123cf : add byte ptr [rax], al ; xor edi, edi ; call 0x2e626
0x000000000008cd81 : add byte ptr [rax], al ; xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x000000000004d35b : add byte ptr [rax], al ; xor esi, esi ; call rax
0x0000000000102d46 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x0000000000102d6b : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000102d8f : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000102daf : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000001ae51a : add byte ptr [rax], al ; xor r8b, byte ptr [rcx] ; add al, dh ; out 0xf4, al ; jmp qword ptr [rcx]
0x00000000001ae612 : add byte ptr [rax], al ; xor r8d, dword ptr [rcx] ; add byte ptr [rax - 0x18], bl ; hlt ; jmp qword ptr [rcx]
0x0000000000029a70 : add byte ptr [rax], al ; xor r9d, r9d ; call r15
0x000000000008e0ad : add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000001aab36 : add byte ptr [rax], al ; xor rsi, rdx ; call qword ptr [rax]
0x000000000019c7b7 : add byte ptr [rax], bh ; add ebp, ecx ; call qword ptr [rax]
0x00000000001b21f7 : add byte ptr [rax], bh ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001aa867 : add byte ptr [rax], bh ; and edx, esi ; jmp qword ptr [rcx]
0x00000000001a7817 : add byte ptr [rax], bh ; cmp dh, al ; jmp qword ptr [rbx]
0x00000000001ac6f7 : add byte ptr [rax], bh ; fdiv st(3) ; call qword ptr [rdx]
0x000000000019d707 : add byte ptr [rax], bh ; jns 0x19d6f8 ; call qword ptr [rcx]
0x00000000001adc17 : add byte ptr [rax], bh ; ret
0x000000000019e5e7 : add byte ptr [rax], bh ; ret 0xffe9
0x00000000001add87 : add byte ptr [rax], bh ; sal esp, 1 ; jmp rcx
0x00000000001acfa7 : add byte ptr [rax], bh ; xchg esp, esi ; call qword ptr [rax]
0x000000000019ee97 : add byte ptr [rax], bh ; xor edx, ebp ; jmp rax
0x00000000001b98a7 : add byte ptr [rax], bl ; add eax, edi ; call qword ptr [rdx]
0x00000000001a8be7 : add byte ptr [rax], bl ; and esi, ecx ; call qword ptr [rcx]
0x00000000001a8b67 : add byte ptr [rax], bl ; and esi, ecx ; jmp qword ptr [rcx]
0x00000000001b20d7 : add byte ptr [rax], bl ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001b1287 : add byte ptr [rax], bl ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; call rsi
0x00000000001a9d67 : add byte ptr [rax], bl ; div ecx ; call rsi
0x00000000001a4b57 : add byte ptr [rax], bl ; fldln2 ; call qword ptr [rsi]
0x00000000001b0697 : add byte ptr [rax], bl ; jbe 0x1b0694 ; jmp qword ptr [rcx]
0x00000000001b0987 : add byte ptr [rax], bl ; jnp 0x1b0984 ; jmp qword ptr [rcx]
0x000000000019dd57 : add byte ptr [rax], bl ; mov cl, ch ; jmp rsp
0x00000000001a74a7 : add byte ptr [rax], bl ; or eax, esi ; jmp rbx
0x00000000001ad9b7 : add byte ptr [rax], bl ; test al, 0xf4 ; jmp qword ptr [rcx]
0x00000000001ad317 : add byte ptr [rax], bl ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000001ac507 : add byte ptr [rax], bl ; xlatb ; call qword ptr [rbx]
0x00000000001ac547 : add byte ptr [rax], bl ; xlatb ; call qword ptr [rsi]
0x00000000001ac587 : add byte ptr [rax], bl ; xlatb ; jmp qword ptr [rcx]
0x00000000001b2407 : add byte ptr [rax], ch ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001ae1d7 : add byte ptr [rax], ch ; fcompi st(4) ; jmp qword ptr [rcx]
0x00000000001a4387 : add byte ptr [rax], ch ; mov ebp, ebp ; call qword ptr [rsi]
0x00000000001a5c27 : add byte ptr [rax], ch ; out dx, al ; jmp qword ptr [rdx]
0x00000000001b8747 : add byte ptr [rax], ch ; ret 0xfff7
0x00000000001a63f7 : add byte ptr [rax], ch ; scasd eax, dword ptr [rdi] ; out dx, al ; call qword ptr [rax]
0x00000000001a7537 : add byte ptr [rax], ch ; sub bh, dl ; jmp qword ptr [rdi]
0x00000000001b0b27 : add byte ptr [rax], ch ; test esi, ebp ; jmp rax
0x00000000000939f4 : add byte ptr [rax], cl ; add byte ptr [rax], al ; je 0x93a01 ; ret
0x00000000001b21c7 : add byte ptr [rax], cl ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001b2c87 : add byte ptr [rax], cl ; cmp al, 0xf6 ; call qword ptr [rax]
0x00000000001a64e7 : add byte ptr [rax], cl ; fucomi st(6) ; jmp qword ptr [rsi]
0x00000000001ae727 : add byte ptr [rax], cl ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001b0427 : add byte ptr [rax], cl ; jb 0x1b0424 ; jmp qword ptr [rcx]
0x00000000001b5bc7 : add byte ptr [rax], cl ; jrcxz 0x1b5bca ; call rsi
0x00000000001b8cd7 : add byte ptr [rax], cl ; loopne 0x1b8cd6 ; jmp rdi
0x000000000002dd74 : add byte ptr [rax], cl ; movzx eax, ax ; ret
0x00000000001b00c7 : add byte ptr [rax], cl ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001afd67 : add byte ptr [rax], cl ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00000000001ad187 : add byte ptr [rax], cl ; xchg eax, ecx ; hlt ; jmp qword ptr [rcx]
0x00000000001b20ef : add byte ptr [rax], dh ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001ba87f : add byte ptr [rax], dh ; cwde ; sti ; jmp qword ptr [rdx]
0x00000000000a917f : add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x00000000001b04ff : add byte ptr [rax], dh ; jae 0x1b04fc ; jmp qword ptr [rcx]
0x00000000001b06af : add byte ptr [rax], dh ; jbe 0x1b06ac ; jmp qword ptr [rcx]
0x00000000001b099f : add byte ptr [rax], dh ; jnp 0x1b099c ; jmp qword ptr [rcx]
0x00000000001bafef : add byte ptr [rax], dh ; push rbp ; clc ; call qword ptr [rax]
0x000000000000b257 : add byte ptr [rax], dh ; ret
0x00000000001ad9cf : add byte ptr [rax], dh ; test al, 0xf4 ; jmp qword ptr [rcx]
0x00000000001ad32f : add byte ptr [rax], dh ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000001ac59f : add byte ptr [rax], dh ; xlatb ; jmp qword ptr [rcx]
0x00000000001a8e2f : add byte ptr [rax], dh ; xor esi, ecx ; jmp rdi
0x000000000019c8ff : add byte ptr [rax], dl ; adc ecx, ebp ; call qword ptr [rdi]
0x00000000001aa4bf : add byte ptr [rax], dl ; adc esi, edx ; jmp qword ptr [rcx]
0x0000000000114e70 : add byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006acd5 : add byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000006ace3 : add byte ptr [rax], dl ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00000000001878bf : add byte ptr [rax], dl ; add dh, dl ; jmp qword ptr [rax]
0x00000000001a454f : add byte ptr [rax], dl ; add edi, ebp ; jmp rsp
0x00000000001aa7ef : add byte ptr [rax], dl ; and dl, dh ; jmp qword ptr [rcx]
0x00000000001b23ef : add byte ptr [rax], dl ; and esi, esi ; jmp qword ptr [rsi]
0x000000000000742f : add byte ptr [rax], dl ; call qword ptr [rbx]
0x00000000001af87f : add byte ptr [rax], dl ; cmc ; jmp rax
0x00000000001ae1bf : add byte ptr [rax], dl ; fcompi st(4) ; jmp qword ptr [rcx]
0x00000000001a6d6f : add byte ptr [rax], dl ; jno 0x1a6d66 ; call rax
0x00000000001a3d2f : add byte ptr [rax], dl ; jns 0x1a3d24 ; call qword ptr [rsi]
0x000000000019d75f : add byte ptr [rax], dl ; jp 0x19d750 ; call qword ptr [rax]
0x00000000001b075f : add byte ptr [rax], dl ; js 0x1b075c ; jmp qword ptr [rbx]
0x000000000002de54 : add byte ptr [rax], dl ; movzx eax, ax ; ret
0x00000000001a357f : add byte ptr [rax], dl ; push rbp ; in eax, dx ; call qword ptr [rax]
0x000000000000fc1f : add byte ptr [rax], dl ; ret
0x000000000000c427 : add byte ptr [rax], dl ; test eax, 0x13 ; add byte ptr [rax], al ; ret
0x00000000001adc10 : add byte ptr [rax], r8b ; add byte ptr [rcx + rbp + 1], al ; add byte ptr [rax], bh ; ret
0x00000000001b8740 : add byte ptr [rax], r8b ; add byte ptr [rsp + rdx*8 + 1], dh ; add byte ptr [rax], ch ; ret 0xfff7
0x00000000000350c5 : add byte ptr [rax], r8b ; fstp st(1) ; ret
0x00000000001735c5 : add byte ptr [rax], r8b ; jmp 0x1f8ad
0x00000000000d4e4d : add byte ptr [rax], r8b ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x000000000009df8d : add byte ptr [rax], r8b ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x000000000009dfbd : add byte ptr [rax], r8b ; mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x0000000000086d6d : add byte ptr [rax], r8b ; mov eax, 0x16 ; ret
0x0000000000087c7d : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; ret
0x00000000000cdfb5 : add byte ptr [rax], r8b ; mov eax, 1 ; ret
0x000000000013875d : add byte ptr [rax], r8b ; mov eax, 2 ; ret
0x0000000000072f6d : add byte ptr [rax], r8b ; mov eax, dword ptr [rdx] ; ret
0x0000000000070095 : add byte ptr [rax], r8b ; mov eax, edi ; ret
0x00000000000a532d : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000076470 : add byte ptr [rax], r8b ; mov edx, eax ; jmp 0x76413
0x000000000009429d : add byte ptr [rax], r8b ; mov qword ptr [rdi + 0x38], r9 ; ret
0x0000000000118a9d : add byte ptr [rax], r8b ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x0000000000114115 : add byte ptr [rax], r8b ; mov rax, qword ptr [rax + 0x30] ; ret
0x00000000001059a5 : add byte ptr [rax], r8b ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000033e9d : add byte ptr [rax], r8b ; mov rax, rcx ; ret
0x00000000000a659d : add byte ptr [rax], r8b ; mov rax, rdi ; ret
0x00000000000a536d : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000012bd9d : add byte ptr [rax], r8b ; pop rbx ; ret
0x0000000000045a25 : add byte ptr [rax], r8b ; ret
0x0000000000143635 : add byte ptr [rax], r8b ; xor eax, eax ; add rsp, 0x38 ; ret
0x000000000003a7ed : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; ret
0x0000000000039ef5 : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x00000000000ab23d : add byte ptr [rax], r8b ; xor rax, rax ; ret
0x0000000000142fd7 : add byte ptr [rbp + 0x16], dh ; add rsp, 0x38 ; ret
0x000000000004a55f : add byte ptr [rbp + 0x29], cl ; ret 0xc149
0x0000000000142e9c : add byte ptr [rbp + 0x29], dh ; xor eax, eax ; add rsp, 0x48 ; ret
0x00000000000b93e7 : add byte ptr [rbp + 0x29dc75db], al ; ret
0x000000000011246d : add byte ptr [rbp + 0x2f], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000053943 : add byte ptr [rbp + 0x310c75c0], al ; div dh ; ret 0x4050
0x0000000000029a71 : add byte ptr [rbp + 0x31], al ; leave ; call r15
0x00000000000c26ed : add byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x7d], cl ; ret
0x0000000000094503 : add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx - 0x39], cl ; ret
0x000000000011510f : add byte ptr [rbp + 0x31], dl ; ror byte ptr [rax - 0x77], 0xe5 ; pop rbp ; ret
0x00000000000b943b : add byte ptr [rbp + 0x390a74db], al ; ret
0x0000000000101dba : add byte ptr [rbp + 0x395374c0], al ; ret
0x0000000000080efe : add byte ptr [rbp + 0x39], cl ; ret 0x8948
0x0000000000081076 : add byte ptr [rbp + 0x39], cl ; ret 0x976
0x00000000000203df : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000054d4e : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x0000000000070ab1 : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000008cdfe : add byte ptr [rbp + 0x480d75c0], al ; add esp, 8 ; ret
0x000000000006ac6e : add byte ptr [rbp + 0x480d75c0], al ; mov eax, ebx ; pop rbx ; ret
0x00000000001235f3 : add byte ptr [rbp + 0x49], dh ; mov eax, r8d ; ret
0x00000000001afeef : add byte ptr [rbp + 0x6c], dh ; cmc ; call qword ptr [rcx]
0x0000000000136ae3 : add byte ptr [rbp + 0xa], dh ; jmp 0x136b11
0x0000000000052c17 : add byte ptr [rbp + 0xa], dh ; jmp 0x52c45
0x0000000000083052 : add byte ptr [rbp + 0xa], dh ; jmp 0x83080
0x0000000000083152 : add byte ptr [rbp + 0xa], dh ; jmp 0x83180
0x0000000000048aaf : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x000000000004899f : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000003a6ba : add byte ptr [rbp + 3], dh ; pop rbx ; ret
0x0000000000142f64 : add byte ptr [rbp + 9], dh ; xor eax, eax ; add rsp, 0x48 ; ret
0x00000000001bb81b : add byte ptr [rbp + rax + 2], cl ; add byte ptr [rax], ah ; jne 0x1bb823 ; call qword ptr [rdi]
0x00000000001af87b : add byte ptr [rbp + rax*2 + 0x4b100001], ch ; cmc ; jmp rax
0x00000000001a7813 : add byte ptr [rbp + rax*8], al ; add byte ptr [rax], bh ; cmp dh, al ; jmp qword ptr [rbx]
0x000000000019a92f : add byte ptr [rbp + rbp - 6], dl ; jmp rsp
0x000000000019abff : add byte ptr [rbp + rbp*2 - 6], ah ; jmp rsp
0x00000000001a2033 : add byte ptr [rbp + rbp*2], ah ; add byte ptr [rax + 0xf], bl ; in eax, dx ; call rsi
0x00000000001a6063 : add byte ptr [rbp + rbp*4 + 0x7db80000], dl ; out dx, al ; call qword ptr [rax]
0x000000000019a69f : add byte ptr [rbp + rbx*8 - 7], ah ; call rsp
0x000000000017c997 : add byte ptr [rbp + rcx + 0xdbf0000], bh ; add byte ptr [rax], al ; ret 0xd
0x000000000019920f : add byte ptr [rbp + rcx - 9], ah ; jmp rsp
0x0000000000156a66 : add byte ptr [rbp + rcx*4 + 0x1d], cl ; ret 0x3e2
0x00000000000ac536 : add byte ptr [rbp + rcx*4 + 0x35], cl ; ret 0x314c
0x00000000000750e1 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; mov rdi, r12 ; call rbx
0x000000000012c392 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; call qword ptr [rax]
0x0000000000074ffe : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x000000000012c779 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x30 ; call qword ptr [rax]
0x00000000001af08b : add byte ptr [rbp + rdi + 0x1df00001], bh ; cmc ; jmp qword ptr [rcx]
0x000000000019b167 : add byte ptr [rbp + rdi*4 - 3], al ; jmp rsp
0x00000000001bb023 : add byte ptr [rbp + rdi*8 + 1], dl ; add byte ptr [rax + 0x55], ch ; clc ; jmp qword ptr [rcx]
0x00000000001971b7 : add byte ptr [rbp + rdx - 0x12], dl ; jmp rsp
0x000000000019934f : add byte ptr [rbp + rdx - 9], al ; jmp rsp
0x0000000000196fdf : add byte ptr [rbp + rdx*8 - 0x13], ah ; call qword ptr [rbx + rax*8]
0x00000000001aa863 : add byte ptr [rbp + rsi*8 + 0x21380000], dl ; jmp qword ptr [rcx]
0x00000000001aa87b : add byte ptr [rbp + rsi*8 + 0x21500000], ch ; jmp qword ptr [rcx]
0x00000000001ba87b : add byte ptr [rbp + rsi*8 - 0x67cfffff], ch ; sti ; jmp qword ptr [rdx]
0x0000000000197787 : add byte ptr [rbp - 0x11], ah ; jmp rsp
0x0000000000173b54 : add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x00000000000ae1a4 : add byte ptr [rbp - 0x276b213], al ; setne dl ; jmp 0xae1c0
0x00000000000b0ac5 : add byte ptr [rbp - 0x276b213], al ; setne dl ; jmp 0xb0ae0
0x00000000000b327c : add byte ptr [rbp - 0x276b213], al ; setne dl ; jmp 0xb32a0
0x00000000000cd11f : add byte ptr [rbp - 0x27], dh ; xor eax, eax ; ret
0x00000000000ccf10 : add byte ptr [rbp - 0x38], dh ; ret
0x000000000017cc43 : add byte ptr [rbp - 0x3ffffff1], bh ; sldt word ptr [rax] ; ret
0x00000000000cd082 : add byte ptr [rbp - 0x46], dh ; mov eax, 0x40 ; ret
0x00000000000a9eb3 : add byte ptr [rbp - 0x6bf0be13], al ; ret 0xfe83
0x000000000006c31f : add byte ptr [rbp - 0x76bb7ffc], cl ; ret 0xf229
0x0000000000188dec : add byte ptr [rbp - 0x791d000c], al ; hlt ; jmp rdx
0x0000000000195414 : add byte ptr [rbp - 0x7b6f0004], al ; cld ; jmp qword ptr [rax]
0x00000000000e2eac : add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x84 ; ret 0xfffd
0x00000000000c3962 : add byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], 0x84 ; ret
0x0000000000039947 : add byte ptr [rbp - 0x7b], cl ; dec dword ptr [rax - 0x77] ; ret
0x0000000000024ab0 : add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret 3
0x000000000009e3db : add byte ptr [rbp - 0x7c], al ; sal byte ptr [rcx + 0x44], 0x38 ; ret 0x4153
0x000000000005beaf : add byte ptr [rbp - 0x7cb776f4], cl ; ret 0x8d01
0x00000000000da775 : add byte ptr [rbp - 0x7cb7fead], cl ; ret
0x00000000000d526f : add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x000000000012219e : add byte ptr [rbp - 0x9f38b2e], al ; ret 0xc602
0x0000000000047017 : add byte ptr [rbp - 0xa], dh ; mov rax, rbx ; pop rbx ; ret
0x0000000000084de5 : add byte ptr [rbp - 0xcf98740], al ; ret
0x00000000000352f5 : add byte ptr [rbp - 0xcf98a40], al ; ret
0x000000000006b407 : add byte ptr [rbp - 0xcfb8b37], al ; ret
0x0000000000194f28 : add byte ptr [rbp - 4], bl ; call qword ptr [rax + 0x26fffc5c]
0x00000000001994df : add byte ptr [rbp - 9], ah ; call rsp
0x00000000001a600b : add byte ptr [rbp*4 + 0x7bf00000], bh ; out dx, al ; jmp qword ptr [rcx]
0x00000000001a9813 : add byte ptr [rbp], al ; add byte ptr [rax - 0x1a], cl ; int1 ; call qword ptr [rbx]
0x00000000001a982b : add byte ptr [rbp], bl ; add byte ptr [rax - 0x1a], dl ; int1 ; call qword ptr [rbx]
0x0000000000146519 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x00000000001304c9 : add byte ptr [rbx + 0x149fce0], al ; ret 0x8b41
0x000000000007736f : add byte ptr [rbx + 0x2002507], cl ; add byte ptr [rax], al ; ret
0x00000000000aa20b : add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x00000000000745d8 : add byte ptr [rbx + 0x275fff8], al ; pop rbx ; ret
0x00000000000939b5 : add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000081067 : add byte ptr [rbx + 0x342ab615], cl ; add dh, dh ; ret 0xf02
0x000000000007cad7 : add byte ptr [rbx + 0x348c8505], al ; add byte ptr [rcx], al ; ret
0x00000000000cc998 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000052c3d : add byte ptr [rbx + 0x44], bl ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000a533f : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x000000000016a85f : add byte ptr [rbx + 0x48028901], cl ; lea eax, dword ptr [rdx + 3] ; ret
0x000000000016dc0f : add byte ptr [rbx + 0x48028901], cl ; mov eax, edi ; ret
0x00000000000a775f : add byte ptr [rbx + 0x48178916], cl ; lea eax, dword ptr [rdi + 4] ; ret
0x000000000009e43c : add byte ptr [rbx + 0x48], bl ; mov dword ptr [rdi], edx ; ret
0x000000000006fbc1 : add byte ptr [rbx + 0x48], bl ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x0000000000085e07 : add byte ptr [rbx + 0x4c], bl ; mov esi, esp ; pop rbp ; pop r12 ; jmp rax
0x000000000015a92f : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x00000000000d5160 : add byte ptr [rbx + 0x5b010443], al ; pop rbp ; pop r12 ; ret
0x0000000000084227 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; jmp rax
0x00000000000202e0 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000029dab : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000001fb0f : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000358c8 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000077e3f : add byte ptr [rbx + 0x5e8c107], cl ; and eax, 1 ; ret
0x00000000000a5a29 : add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000e9b96 : add byte ptr [rbx + 0x65058900], cl ; ret
0x00000000000f56af : add byte ptr [rbx + 0x6890447], cl ; xor eax, eax ; ret
0x00000000000e9b87 : add byte ptr [rbx + 0x70058903], cl ; ret
0x000000000007733f : add byte ptr [rbx + 0x8042507], cl ; add byte ptr [rax], al ; ret
0x00000000000ac1e8 : add byte ptr [rbx + 0xa777fff], al ; mov eax, edi ; ret
0x00000000001a5670 : add byte ptr [rbx + 0xe], cl ; adc byte ptr [rbx + 0xa440202], al ; ret
0x00000000000e523c : add byte ptr [rbx + 0xf4801e1], al ; ret
0x000000000003a9ef : add byte ptr [rbx + 0xf48fffa], al ; ret
0x00000000001bc79b : add byte ptr [rbx + 1], al ; add byte ptr [rax], al ; ret
0x00000000000007bc : add byte ptr [rbx + 1], al ; ret 0x102
0x00000000001bb673 : add byte ptr [rbx + rax + 0x70d80002], ah ; clc ; call qword ptr [rax]
0x000000000019891f : add byte ptr [rbx + rax - 0xa], dl ; jmp rsp
0x00000000001700ba : add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x000000000019a907 : add byte ptr [rbx + rbp - 6], dh ; call rsp
0x00000000001a5e53 : add byte ptr [rbx + rbp*4 + 0x6e680000], al ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a0dfb : add byte ptr [rbx + rbx*2], ch ; add byte ptr [rax], al ; nop ; shr ah, 1 ; call rsp
0x00000000001a4e3b : add byte ptr [rbx + rbx*4], ch ; add byte ptr [rax], al ; out dx, al ; in eax, dx ; call rsi
0x00000000001a8e2b : add byte ptr [rbx + rbx*8], bl ; add byte ptr [rax], dh ; xor esi, ecx ; jmp rdi
0x000000000010c0da : add byte ptr [rbx + rcx + 0x5b], dh ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000006fd02 : add byte ptr [rbx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x000000000011418a : add byte ptr [rbx + rcx - 0xd], dh ; ret
0x000000000019fe8b : add byte ptr [rbx + rcx*2 + 0x2f400000], bh ; jmp 0x19fe9b
0x00000000001afe5b : add byte ptr [rbx + rcx*2 + 0x6bc00001], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001afe73 : add byte ptr [rbx + rcx*2 + 0x6bd80001], ah ; cmc ; jmp qword ptr [rcx]
0x000000000019fe3b : add byte ptr [rbx + rcx*2], ch ; add byte ptr [rax + 0x2e], dh ; jmp 0x19fe4b
0x0000000000049fc7 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x00000000000483e7 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x000000000007d8c6 : add byte ptr [rbx + rcx*4 + 0xd], cl ; ret 0x3454
0x00000000001a6dfb : add byte ptr [rbx + rdi*4], ch ; add byte ptr [rax], al ; jo 0x1a6e7d ; out dx, eax ; jmp qword ptr [rax]
0x0000000000197e8f : add byte ptr [rbx + rdi*8], al ; int1 ; call rsp
0x00000000001ac62b : add byte ptr [rbx + rdx + 1], bl ; add al, al ; xlatb ; jmp qword ptr [rcx]
0x000000000019772f : add byte ptr [rbx + rdx - 0x11], al ; jmp rsp
0x00000000001ac5fb : add byte ptr [rbx + rdx], ch ; add dword ptr [rax], eax ; nop ; xlatb ; jmp qword ptr [rcx]
0x00000000001ac5e3 : add byte ptr [rbx + rdx], dl ; add dword ptr [rax], eax ; js 0x1ac5c9 ; jmp qword ptr [rcx]
0x00000000001ae613 : add byte ptr [rbx + rsi + 1], al ; add byte ptr [rax - 0x18], bl ; hlt ; jmp qword ptr [rcx]
0x00000000001ae673 : add byte ptr [rbx + rsi - 0x16e7ffff], ah ; hlt ; jmp qword ptr [rcx]
0x00000000001a6603 : add byte ptr [rbx + rsi*4], dh ; add byte ptr [rax], al ; in al, -0x12 ; call qword ptr [rax]
0x000000000019e64b : add byte ptr [rbx + rsi], bh ; add byte ptr [rax], al ; ret
0x000000000019e5fb : add byte ptr [rbx + rsi], ch ; add byte ptr [rax], al ; push rax ; ret 0xffe9
0x000000000005a32e : add byte ptr [rbx - 0x109743], al ; call qword ptr [rax]
0x00000000001a568b : add byte ptr [rbx - 0x1b300000], bh ; cld ; call qword ptr [rdx]
0x00000000000cc777 : add byte ptr [rbx - 0x2f76ff06], al ; jle 0xcc791 ; ret
0x000000000007456f : add byte ptr [rbx - 0x3b7cb7fe], cl ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000aa28f : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x10 ; pop rbx ; ret
0x00000000000aa288 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x00000000000aa281 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x00000000000aa27a : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x00000000000aa273 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x00000000000aa26c : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x80 ; pop rbx ; ret
0x000000000010570b : add byte ptr [rbx - 0x3f7ac7c0], cl ; cmove eax, edx ; ret
0x0000000000127f86 : add byte ptr [rbx - 0x3f7ae7c0], cl ; jne 0x127f98 ; ret
0x00000000001148cf : add byte ptr [rbx - 0x3f7aefb9], cl ; jne 0x1148e9 ; ret
0x00000000000571ce : add byte ptr [rbx - 0x4e343], al ; call qword ptr [rax]
0x00000000000a9fc9 : add byte ptr [rbx - 0x50f0fe40], al ; ret 0x74e9
0x00000000000a9fb4 : add byte ptr [rbx - 0x50f0fe40], al ; ret 0xaf0f
0x00000000001ad66b : add byte ptr [rbx - 0x651fffff], bl ; hlt ; jmp qword ptr [rcx]
0x00000000001ad653 : add byte ptr [rbx - 0x6537ffff], al ; hlt ; jmp qword ptr [rcx]
0x000000000003a714 : add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x000000000010eded : add byte ptr [rbx - 0x76b3fe18], al ; ret 0x2b49
0x00000000000b906b : add byte ptr [rbx - 0x76b6f020], al ; ret
0x00000000000b8c41 : add byte ptr [rbx - 0x76b6f020], al ; ret 0xc149
0x000000000002b769 : add byte ptr [rbx - 0x76be0008], al ; ret
0x00000000000e6b45 : add byte ptr [rbx - 0x76f72cac], cl ; push rsp ; ret
0x00000000000479d0 : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000002076f : add byte ptr [rbx - 0x7a2dcf00], cl ; ror byte ptr [rdi], 0x94 ; ret 0x8d48
0x0000000000057ce8 : add byte ptr [rbx - 0x7af00008], al ; ret
0x00000000000e093f : add byte ptr [rbx - 0x7af0f71a], al ; ret
0x0000000000073dd4 : add byte ptr [rbx - 0x7af0fd03], al ; ret 0
0x0000000000171776 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x000000000006cde4 : add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x000000000013be3f : add byte ptr [rbx - 0x7cb703b6], cl ; ret 0x4808
0x00000000000d0d57 : add byte ptr [rbx - 0x7cb7f3b5], cl ; ret
0x00000000000d62a7 : add byte ptr [rbx - 0x7cb7fe3b], al ; ret
0x00000000000e0d2f : add byte ptr [rbx - 0x7cb7fe3f], al ; ret 0x4404
0x00000000000d7780 : add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x3d01
0x00000000000e8cff : add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x4108
0x000000000010117f : add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x00000000001b3350 : add byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00000000001b0970 : add byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x00000000001152af : add byte ptr [rbx - 0xd8a0008], al ; xor eax, eax ; leave ; ret
0x0000000000072f16 : add byte ptr [rbx - 0xd], bl ; ret
0x0000000000195364 : add byte ptr [rbx - 4], dl ; push qword ptr [rax + 0x52] ; cld ; jmp rax
0x0000000000124dd4 : add byte ptr [rbx], 0 ; add byte ptr [rcx], bh ; ret
0x0000000000199887 : add byte ptr [rbx], ah ; idiv edi ; insb byte ptr [rdi], dx ; ret 1
0x00000000001878fc : add byte ptr [rbx], al ; call qword ptr [rax]
0x000000000019987f : add byte ptr [rbx], al ; idiv edi ; push rsp ; ret 1
0x0000000000197a1f : add byte ptr [rbx], al ; out dx, eax ; jmp rsp
0x00000000000191c7 : add byte ptr [rbx], al ; ret
0x00000000001bc903 : add byte ptr [rbx], bh ; add eax, 0x1e70000 ; add byte ptr [rax], al ; ret 4
0x0000000000055716 : add byte ptr [rcx + 0x1b802], cl ; add byte ptr [rax], al ; ret
0x00000000000b4d48 : add byte ptr [rcx + 0x29], al ; ret 0x8341
0x000000000002c2bf : add byte ptr [rcx + 0x29], cl ; ror dword ptr [rcx + 1], 1 ; ret 0x854d
0x00000000000bcd28 : add byte ptr [rcx + 0x308de90d], cl ; add byte ptr [rcx + 1], cl ; ret
0x000000000016851f : add byte ptr [rcx + 0x3518911], cl ; ret
0x000000000008afff : add byte ptr [rcx + 0x39], cl ; ret
0x000000000012f35b : add byte ptr [rcx + 0x39], cl ; ret 0x850f
0x000000000003ce5a : add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x0000000000046060 : add byte ptr [rcx + 0x39], cl ; ret 0xea75
0x000000000008eaf6 : add byte ptr [rcx + 0x39], cl ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x000000000005b723 : add byte ptr [rcx + 0x415d5bc8], cl ; pop rsp ; pop r13 ; ret
0x00000000000f6bee : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; ret
0x000000000006f719 : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x0000000000070122 : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x0000000000116150 : add byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; ret
0x00000000001684ff : add byte ptr [rcx + 0x4518811], cl ; ret
0x00000000000a630f : add byte ptr [rcx + 0x4578817], cl ; ret
0x000000000007b936 : add byte ptr [rcx + 0x48d231d1], cl ; mov eax, dword ptr [rax + 0x48] ; jmp rax
0x00000000000aa217 : add byte ptr [rcx + 0x58d48ca], cl ; ret
0x00000000000e9bd6 : add byte ptr [rcx + 0x5b595a0a], cl ; ret
0x000000000010167a : add byte ptr [rcx + 0x5b], bl ; pop rbp ; pop r12 ; ret
0x0000000000075452 : add byte ptr [rcx + 0x5bd089c2], cl ; ret
0x0000000000072abc : add byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x000000000015091e : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000009de96 : add byte ptr [rcx + 0x63], cl ; add al, 0x82 ; add r10, rax ; jmp r10
0x0000000000047c50 : add byte ptr [rcx + 0x63], cl ; or al, 0x8b ; add rcx, r11 ; jmp rcx
0x000000000016dc7c : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x00000000000a51b8 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000002df1f : add byte ptr [rcx + 0x7fe083f8], cl ; ret
0x0000000000034c47 : add byte ptr [rcx + 0x7fffff], ch ; je 0x34c42 ; ret
0x00000000000ff26f : add byte ptr [rcx + 0x800008], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000c3f62 : add byte ptr [rcx + 0xf], al ; fiadd word ptr [r9] ; ret
0x00000000001025e5 : add byte ptr [rcx + 0xf], al ; lahf ; ret
0x00000000000e2fd7 : add byte ptr [rcx + 0xf], al ; mov dh, 0x34 ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4001
0x00000000000d3b38 : add byte ptr [rcx + 0xf], al ; mov dh, 0x55 ; add byte ptr [rcx], bh ; ret 0x840f
0x00000000000567b4 : add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0x83 ; ret
0x0000000000056737 : add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x000000000005e54b : add byte ptr [rcx + 0xf], al ; mov dh, 0x75 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000080b44 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x00000000000362b9 : add byte ptr [rcx + 0xf], al ; xchg eax, esi ; ret 0x394c
0x00000000000a9ed2 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000004dbe0 : add byte ptr [rcx + 0xf], cl ; ret
0x00000000000e4147 : add byte ptr [rcx + 1], al ; ret
0x00000000000a995f : add byte ptr [rcx + 1], cl ; ret
0x0000000000000881 : add byte ptr [rcx + 4], cl ; or al, 1 ; add byte ptr [rax], al ; ret 0x440c
0x00000000001bc433 : add byte ptr [rcx + 6], dl ; add byte ptr [rax], al ; ret 2
0x0000000000084b18 : add byte ptr [rcx + rax - 0x18], cl ; jmp rax
0x000000000019a76f : add byte ptr [rcx + rax - 6], al ; jmp rsp
0x00000000001af48b : add byte ptr [rcx + rax*2 + 0x28a00001], bh ; cmc ; jmp qword ptr [rbx]
0x000000000019879f : add byte ptr [rcx + rax*2], dl ; cmc ; call rsp
0x00000000001a341b : add byte ptr [rcx + rax*4], cl ; add byte ptr [rax + 0x4e], dl ; in eax, dx ; jmp qword ptr [rsi]
0x00000000001a745b : add byte ptr [rcx + rax*8 - 0x1e900000], cl ; out dx, eax ; call rsp
0x000000000019906f : add byte ptr [rcx + rax*8 - 0xa], al ; call rsp
0x00000000001a7443 : add byte ptr [rcx + rax*8], dh ; add byte ptr [rax - 0x25], bl ; out dx, eax ; jmp qword ptr [rbx]
0x00000000001adc13 : add byte ptr [rcx + rbp + 1], al ; add byte ptr [rax], bh ; ret
0x00000000001a1c0b : add byte ptr [rcx + rbp*2], bh ; add byte ptr [rax], al ; loopne 0x1a1c16 ; in al, dx ; call qword ptr [rsi]
0x00000000001a5c5b : add byte ptr [rcx + rbp*4 + 0x4cc00000], cl ; out dx, al ; call qword ptr [rdx]
0x00000000001a5bdb : add byte ptr [rcx + rbp*4], cl ; add byte ptr [rax], al ; out dx, al ; call qword ptr [rax]
0x00000000001a5c23 : add byte ptr [rcx + rbp*4], dl ; add byte ptr [rax], ch ; out dx, al ; jmp qword ptr [rdx]
0x000000000019cd30 : add byte ptr [rcx + rbp*8], dl ; call qword ptr [rcx]
0x00000000001977af : add byte ptr [rcx + rbp], dh ; out dx, eax ; jmp rsp
0x000000000019ab07 : add byte ptr [rcx + rbx*2 - 6], ah ; call rsp
0x000000000019a2ef : add byte ptr [rcx + rbx*2 - 7], dh ; jmp rsp
0x00000000001a8c4b : add byte ptr [rcx + rbx*8], bh ; add cl, al ; sub al, 0xf1 ; jmp qword ptr [rax]
0x00000000001a8be3 : add byte ptr [rcx + rbx*8], dl ; add byte ptr [rax], al ; sbb byte ptr [rbx], ah ; int1 ; call qword ptr [rcx]
0x000000000019cc0b : add byte ptr [rcx + rbx], bh ; add byte ptr [rax], al ; rcl byte ptr [rbx], 0xe9 ; call qword ptr [rbx]
0x000000000019cc3b : add byte ptr [rcx + rbx], ch ; add al, dl ; adc ebp, ecx ; call qword ptr [rbx]
0x00000000001971e7 : add byte ptr [rcx + rbx], dh ; out dx, al ; call rsp
0x000000000019cc23 : add byte ptr [rcx + rbx], dl ; add al, cl ; adc ebp, ecx ; call qword ptr [rbx]
0x0000000000070f2c : add byte ptr [rcx + rcx + 0x44], dh ; mov eax, eax ; pop rbx ; ret
0x000000000019aa17 : add byte ptr [rcx + rcx*2], dl ; cli ; jmp rsp
0x000000000019782f : add byte ptr [rcx + rcx*2], dl ; out dx, eax ; call rsp
0x0000000000137c01 : add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8e0f
0x00000000000c93a1 : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 0x18 ; ret
0x00000000000c946b : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 8 ; ret
0x00000000000e3cc3 : add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0x3944
0x00000000000811cf : add byte ptr [rcx + rcx*4 + 0x44], cl ; and al, 0x10 ; xor edi, edi ; call qword ptr [rax]
0x000000000009429f : add byte ptr [rcx + rcx*4 + 0x4f], cl ; cmp bl, dh ; ret
0x000000000002f6d7 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x0000000000102e93 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x0000000000102fc7 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00000000000882cf : add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbp ; call rax
0x0000000000087431 : add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbx ; call rax
0x00000000000871c1 : add byte ptr [rcx + rcx*4 - 0x1e], cl ; mov rdi, r15 ; call rax
0x00000000000d8d4a : add byte ptr [rcx + rcx*4 - 0x3e], cl ; jmp 0xd8d5d
0x000000000009e302 : add byte ptr [rcx + rcx*4 - 0x3f], cl ; mov qword ptr [rdx], rcx ; ret
0x0000000000070f76 : add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x000000000007e075 : add byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x0000000000086fa3 : add byte ptr [rcx + rcx*4 - 0xa], cl ; call rax
0x0000000000102dfc : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x00000000001378cd : add byte ptr [rcx + rcx*4 - 1], cl ; lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x00000000000810e5 : add byte ptr [rcx + rcx*4 - 9], cl ; call qword ptr [rax]
0x0000000000102e0b : add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x000000000012c1e1 : add byte ptr [rcx + rcx*4 - 9], cl ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000012cd28 : add byte ptr [rcx + rcx*4 - 9], cl ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x00000000001aec8b : add byte ptr [rcx + rdi + 0x2d00001], bh ; cmc ; call qword ptr [rdi]
0x00000000001bac8b : add byte ptr [rcx + rdi*8 + 0x48800001], bh ; clc ; call qword ptr [rbx]
0x0000000000196b2f : add byte ptr [rcx + rdi*8], al ; jmp 0x196b37
0x000000000019c463 : add byte ptr [rcx + rdx + 0x71980000], dl ; std ; jmp qword ptr [rdi]
0x00000000001b0483 : add byte ptr [rcx + rdx*2 + 0x72980001], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001b043b : add byte ptr [rcx + rdx*2 + 1], ch ; add byte ptr [rax], ah ; jb 0x1b0440 ; jmp qword ptr [rcx]
0x00000000001b0423 : add byte ptr [rcx + rdx*2 + 1], dl ; add byte ptr [rax], cl ; jb 0x1b0428 ; jmp qword ptr [rcx]
0x000000000019a27f : add byte ptr [rcx + rdx*2 - 7], dh ; call rsp
0x00000000001b03f3 : add byte ptr [rcx + rdx*2], ah ; add dword ptr [rax], eax ; fdiv dword ptr [rcx - 0xb] ; jmp qword ptr [rcx]
0x0000000000196d8f : add byte ptr [rcx + rdx*4], dh ; in eax, dx ; call rsp
0x00000000001b23d3 : add byte ptr [rcx + rsi*2], al ; add dword ptr [rax], eax ; clc ; and dh, dh ; jmp qword ptr [rsi]
0x000000000000247b : add byte ptr [rcx - 0x23], al ; out 0xa9, al ; ret 0xbd07
0x000000000004241b : add byte ptr [rcx - 0x39], cl ; ret 0xc001
0x000000000003f4c3 : add byte ptr [rcx - 0x39], cl ; ret 0xfc01
0x000000000003c203 : add byte ptr [rcx - 0x39], cl ; ret 0xff81
0x00000000000acb99 : add byte ptr [rcx - 0x39], cl ; ret 0xffff
0x00000000000fea78 : add byte ptr [rcx - 0x3a], al ; inc dword ptr [rax] ; ret
0x000000000007c4d1 : add byte ptr [rcx - 0x3ac27c38], cl ; ret 0x34
0x00000000000f56bf : add byte ptr [rcx - 0x3fcefb89], cl ; ret
0x0000000000040f6f : add byte ptr [rcx - 0x43], al ; add eax, dword ptr [rax + rax] ; add cl, ch ; ret 0xffec
0x00000000000b221a : add byte ptr [rcx - 0x44], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000032964 : add byte ptr [rcx - 0x55551e], al ; call rcx
0x0000000000195b24 : add byte ptr [rcx - 0x576f0004], ch ; cld ; jmp qword ptr [rax]
0x0000000000026e53 : add byte ptr [rcx - 0x73], cl ; add dword ptr [r8 + 0x39], r9d ; ret
0x0000000000026e70 : add byte ptr [rcx - 0x73], cl ; add r9b, byte ptr [r8 + 0x39] ; ret
0x0000000000026e8d : add byte ptr [rcx - 0x73], cl ; add r9d, dword ptr [r8 + 0x39] ; ret
0x000000000005e740 : add byte ptr [rcx - 0x73], cl ; dec dword ptr [r8 + 0x39] ; ret
0x00000000001028ff : add byte ptr [rcx - 0x75], cl ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000f1bca : add byte ptr [rcx - 0x75], cl ; push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000045f75 : add byte ptr [rcx - 0x75], cl ; ret
0x0000000000118427 : add byte ptr [rcx - 0x76f3dba4], cl ; ret 0x6ae9
0x000000000009dfbf : add byte ptr [rcx - 0x776b7f1], cl ; ret
0x00000000000d1743 : add byte ptr [rcx - 0x77], al ; ret
0x00000000000dd334 : add byte ptr [rcx - 0x77], al ; ret 0x3945
0x0000000000047d29 : add byte ptr [rcx - 0x77], al ; ret 0xc083
0x00000000000dd2e9 : add byte ptr [rcx - 0x77], al ; ret 0xc141
0x00000000000cea78 : add byte ptr [rcx - 0x77], cl ; cld ; je 0xcea9b ; call 0x8acf8
0x0000000000059731 : add byte ptr [rcx - 0x77], cl ; ret
0x0000000000066267 : add byte ptr [rcx - 0x77], cl ; ret 0x34c
0x00000000000814b7 : add byte ptr [rcx - 0x77], cl ; ret 0x854d
0x000000000005aea6 : add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x0000000000118fdb : add byte ptr [rcx - 0x77], cl ; ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x000000000006f6b7 : add byte ptr [rcx - 0x77], dh ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000074e53 : add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x00000000000e2826 : add byte ptr [rcx - 0x7d], al ; cld ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xb60f
0x00000000000642d6 : add byte ptr [rcx - 0x7d], al ; in al, dx ; add dword ptr [rax + 1], ecx ; ret
0x00000000000b51e6 : add byte ptr [rcx - 0x7d], al ; ret
0x00000000000d1037 : add byte ptr [rcx - 0x7d], al ; ret 0x4901
0x000000000005130e : add byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000022d7e : add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000094571 : add byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x00000000000ed925 : add byte ptr [rcx - 0x7d], cl ; ret 0x4118
0x000000000006652b : add byte ptr [rcx - 0x7d], cl ; ret 0x4504
0x00000000000e0fc6 : add byte ptr [rcx - 0x7d], cl ; ret 0x4801
0x0000000000022cf7 : add byte ptr [rcx - 0x7d], cl ; ret 0x4901
0x00000000000d48c2 : add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x000000000010f86f : add byte ptr [rcx - 0x7d], cl ; ret 0x4d30
0x000000000014468f : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000085960 : add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x000000000008946f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000003af8c : add byte ptr [rcx - 0x7e37763a], cl ; ret 0x3039
0x00000000000bce3f : add byte ptr [rcx - 0x7f], cl ; ret
0x00000000000f3fe0 : add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdi]
0x00000000000f3f5f : add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdx]
0x000000000012a40f : add byte ptr [rcx - 0x80], al ; stc ; cmp cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8041
0x0000000000026556 : add byte ptr [rcx - 0xa], al ; ret
0x00000000000803e3 : add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000010fa83 : add byte ptr [rcx - 0xa], al ; ret 0xf10
0x00000000001b0380 : add byte ptr [rcx - 0xb], dh ; jmp qword ptr [rcx]
0x00000000000cc77a : add byte ptr [rcx - 0xcf68130], cl ; ret
0x0000000000193acf : add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x0000000000195100 : add byte ptr [rcx - 4], ah ; call qword ptr [rax + 0x20fffc60]
0x000000000008e1e2 : add byte ptr [rcx - 9], cl ; ret 1
0x000000000008e208 : add byte ptr [rcx - 9], cl ; ret 2
0x00000000000ce116 : add byte ptr [rcx], 0 ; add bh, dh ; ret
0x00000000001b334d : add byte ptr [rcx], 0 ; add byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x0000000000198bed : add byte ptr [rcx], 0 ; test byte ptr [rdx - 0xa], bl ; call rsp
0x000000000018a40b : add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000001ab2ed : add byte ptr [rcx], al ; add byte ptr [rax - 0x3f], al ; jmp qword ptr [rdi]
0x0000000000087a53 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000002e0e9 : add byte ptr [rcx], al ; add byte ptr [rax], al ; and eax, esi ; ret
0x0000000000136ea1 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008dd11 : add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000008a90f : add byte ptr [rcx], al ; add byte ptr [rax], al ; sub rax, rdx ; ret
0x00000000001978d5 : add byte ptr [rcx], al ; add byte ptr [rdx + rsi*2], dh ; out dx, eax ; jmp rsp
0x0000000000119b10 : add byte ptr [rcx], al ; jmp 0x1198db
0x0000000000119ed0 : add byte ptr [rcx], al ; jmp 0x119cab
0x0000000000187884 : add byte ptr [rcx], al ; jmp qword ptr [rax]
0x000000000002de34 : add byte ptr [rcx], al ; movzx eax, ax ; ret
0x000000000007d2c4 : add byte ptr [rcx], al ; pop rbx ; ret
0x000000000013b97f : add byte ptr [rcx], al ; push rdi ; sub byte ptr [rax + 1], bh ; ret
0x000000000007cadd : add byte ptr [rcx], al ; ret
0x00000000000d9f97 : add byte ptr [rcx], al ; ret 0x8b48
0x00000000000db72a : add byte ptr [rcx], al ; ret 0xc083
0x00000000000dde2e : add byte ptr [rcx], al ; ret 0xda39
0x00000000000d50d7 : add byte ptr [rcx], al ; setg dl ; jmp 0xd5064
0x00000000000b93c7 : add byte ptr [rcx], bh ; ret
0x0000000000036890 : add byte ptr [rcx], bh ; ret 0x237f
0x00000000000d3b3d : add byte ptr [rcx], bh ; ret 0x840f
0x00000000000da784 : add byte ptr [rcx], bh ; ret 0x8d0f
0x00000000000dfd07 : add byte ptr [rcx], bh ; ret 0x8f0f
0x00000000000da61d : add byte ptr [rcx], bh ; ret 0x947c
0x00000000001bc46b : add byte ptr [rcx], ch ; add byte ptr [rax], al ; ret
0x0000000000110347 : add byte ptr [rcx], ch ; clc ; ret
0x000000000008cfc6 : add byte ptr [rcx], ch ; ret
0x00000000000c1e41 : add byte ptr [rcx], ch ; ret 0x2941
0x00000000000bcca6 : add byte ptr [rcx], ch ; ret 0x428d
0x00000000000c55b3 : add byte ptr [rcx], ch ; ret 0x748d
0x00000000000c37cf : add byte ptr [rcx], ch ; ret 0x8d41
0x00000000000c1e04 : add byte ptr [rcx], ch ; ret 0xbe0f
0x000000000014a05d : add byte ptr [rcx], ch ; ret 0xca39
0x0000000000034eee : add byte ptr [rcx], ch ; ret 0xd089
0x00000000000c5cff : add byte ptr [rcx], ch ; ret 0xd129
0x00000000000c1a30 : add byte ptr [rcx], ch ; ret 0xd629
0x00000000000c5523 : add byte ptr [rcx], ch ; ret 0xf889
0x00000000000fc471 : add byte ptr [rcx], ch ; sal bl, 1 ; ret
0x0000000000118b61 : add byte ptr [rcx], cl ; clc ; bswap eax ; ret
0x0000000000106c95 : add byte ptr [rcx], cl ; clc ; ret
0x0000000000079c5a : add byte ptr [rcx], cl ; ret 0x8948
0x00000000000dfc6f : add byte ptr [rcx], cl ; ret 0xb60f
0x00000000000640d2 : add byte ptr [rcx], dh ; div dh ; ret
0x0000000000141c96 : add byte ptr [rcx], dh ; imul al ; ret 0xfb4d
0x0000000000034a5f : add byte ptr [rcx], dh ; leave ; mov dword ptr [rdi], ecx ; ret
0x00000000001372f8 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000bab37 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x000000000003a25c : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000002df2f : add byte ptr [rcx], dh ; rol byte ptr [rbx - 0x6bf07f19], 0xc0 ; ret
0x000000000003bf17 : add byte ptr [rcx], dh ; ror byte ptr [rax + 1], cl ; ret 0xe974
0x00000000000ce8bf : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x75], 0x54 ; ret
0x000000000007a2bf : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x7a2d8 ; ret
0x000000000003a07b : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000008cd82 : add byte ptr [rcx], dh ; ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x0000000000024c26 : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x0000000000023dc3 : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2576
0x000000000002426e : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x00000000000fa403 : add byte ptr [rcx], dh ; sal byte ptr [rcx], cl ; div byte ptr [rcx] ; shr al, 0x71 ; ret
0x00000000000ce8be : add byte ptr [rcx], sil ; ror byte ptr [rax - 0x75], 0x54 ; ret
0x00000000001aefdb : add byte ptr [rdi + 0x1c000001], cl ; cmc ; call qword ptr [rdx]
0x000000000015877a : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x00000000000ab234 : add byte ptr [rdi + 2], bh ; neg eax ; ret
0x0000000000172164 : add byte ptr [rdi + 9], bh ; neg eax ; ret
0x00000000001bba6b : add byte ptr [rdi + rax + 0x7b200002], bl ; clc ; call qword ptr [rcx]
0x00000000001b226b : add byte ptr [rdi + rbp*2 + 0x19a00001], bl ; stc ; jmp qword ptr [rsi]
0x00000000001b220b : add byte ptr [rdi + rbp*2], bh ; add dword ptr [rax], eax ; push rax ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001ba21b : add byte ptr [rdi + rbp*8 + 1], cl ; add al, ah ; adc edi, eax ; jmp qword ptr [rbx]
0x0000000000196b17 : add byte ptr [rdi + rbp*8 - 0x15], al ; jmp rsp
0x000000000019820f : add byte ptr [rdi + rbp], ah ; call rsp
0x00000000001ae1d3 : add byte ptr [rdi + rbp], al ; add dword ptr [rax], eax ; sub bh, bl ; hlt ; jmp qword ptr [rcx]
0x00000000001ae1eb : add byte ptr [rdi + rbp], bl ; add dword ptr [rax], eax ; fcompi st(4) ; call qword ptr [rbx]
0x00000000001ad273 : add byte ptr [rdi + rbx - 0x6d17ffff], ah ; hlt ; jmp qword ptr [rcx]
0x00000000001ad25b : add byte ptr [rdi + rbx - 0x6d2fffff], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001b1283 : add byte ptr [rdi + rbx*2 - 0x58e7ffff], dh ; cmc ; call rsi
0x00000000001b5203 : add byte ptr [rdi + rbx*4], dh ; add dword ptr [rax], eax ; cwde ; jrcxz 0x1b5209 ; call rcx
0x0000000000053f1a : add byte ptr [rdi + rcx + 0x44], cl ; ret 0xf4c
0x0000000000052ea3 : add byte ptr [rdi + rcx + 0x45], cl ; ret 0xf4c
0x0000000000118cd7 : add byte ptr [rdi + rcx - 0x42], cl ; ret 0xf643
0x00000000001b025b : add byte ptr [rdi + rcx*2 + 0x6fb00001], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001b0273 : add byte ptr [rdi + rcx*2 + 0x6fc80001], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001b028b : add byte ptr [rdi + rcx*2 + 0x6fe00001], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001b0213 : add byte ptr [rdi + rcx*2 + 1], al ; add byte ptr [rax + 0x6f], ch ; cmc ; jmp qword ptr [rcx]
0x0000000000198eef : add byte ptr [rdi + rcx*4 - 0xa], dl ; jmp rsp
0x000000000002dd34 : add byte ptr [rdi + rcx], al ; mov bh, 0xc0 ; ret
0x0000000000199b27 : add byte ptr [rdi + rcx], dl ; clc ; call rsp
0x00000000001b0a8b : add byte ptr [rdi + rdx*2 - 0x7dafffff], bh ; cmc ; jmp qword ptr [rcx]
0x0000000000199de7 : add byte ptr [rdi + rdx*2 - 8], dh ; jmp rsp
0x00000000001a4a5b : add byte ptr [rdi + rdx*4 - 0x3f900000], cl ; in eax, dx ; jmp qword ptr [rsi]
0x00000000001a8a03 : add byte ptr [rdi + rdx*8], dh ; add byte ptr [rax], al ; pop rax ; xchg eax, ecx ; cld ; jmp qword ptr [rbx]
0x00000000001aaa63 : add byte ptr [rdi + rsi*8 + 0x29980000], dl ; jmp rcx
0x00000000001aa9e3 : add byte ptr [rdi + rsi*8], dl ; add byte ptr [rax], al ; mov byte ptr [rdi], ah ; jmp qword ptr [rdi]
0x00000000000cd0f8 : add byte ptr [rdi - 0x48], dh ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000195d24 : add byte ptr [rdi - 0x618f0004], bl ; cld ; jmp rax
0x00000000000e776a : add byte ptr [rdi - 0xa], dh ; ret
0x00000000001a2fdb : add byte ptr [rdi*2 + 0x47500000], cl ; in eax, dx ; jmp qword ptr [rax]
0x00000000001bafeb : add byte ptr [rdi*8 + 0x55300001], bl ; clc ; call qword ptr [rax]
0x0000000000019227 : add byte ptr [rdi], ah ; ret
0x00000000001bcd34 : add byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x00000000001945d0 : add byte ptr [rdi], al ; sti ; call rax
0x00000000001a5a0b : add byte ptr [rdi], bh ; add byte ptr [rax], al ; and byte ptr [rdx], dh ; out dx, al ; jmp qword ptr [rcx]
0x00000000001a9a0b : add byte ptr [rdi], bh ; add byte ptr [rax], al ; xor cl, ch ; int1 ; call rdi
0x0000000000034dc0 : add byte ptr [rdi], bh ; movd xmm0, eax ; mov dword ptr [rdi], edx ; ret
0x0000000000194e20 : add byte ptr [rdi], ch ; cld ; call rax
0x00000000001150f7 : add byte ptr [rdi], cl ; add eax, 0x89c78944 ; ret
0x000000000015a0f6 : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000000aa167 : add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000015b12f : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000001081b1 : add byte ptr [rdi], cl ; mov bh, 0xff ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000109d04 : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x109c95 ; loopne 0x109d15 ; ret
0x000000000002decd : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x2de5e ; loopne 0x2dede ; ret
0x00000000000c209b : add byte ptr [rdi], cl ; mov bh, 5 ; ret
0x000000000015b19f : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x00000000000ce105 : add byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x000000000012861f : add byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000025c57 : add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000d0e5f : add byte ptr [rdi], cl ; mov dh, 0x4b ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000006cdd7 : add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x000000000008a70f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x00000000000ac0d0 : add byte ptr [rdi], cl ; mov dh, 0xf3 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000007a54f : add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000016dc8f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000008e28f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000009e6bf : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000009e6cf : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x000000000009e6af : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000009e20f : add byte ptr [rdi], cl ; mov esi, 0x74c08407 ; and al, 0x39 ; ret 0x2574
0x000000000009e0cf : add byte ptr [rdi], cl ; mov esi, 0x74c08407 ; sub edi, dword ptr [rcx] ; ret 0x2774
0x0000000000095cdf : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000008e11f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000008e10f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000008e0ff : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x0000000000034bb7 : add byte ptr [rdi], cl ; push rsp ; ret
0x0000000000034de6 : add byte ptr [rdi], cl ; push rsp ; ret 0x2e0f
0x00000000000c48b6 : add byte ptr [rdi], cl ; ret
0x00000000000c4bd0 : add byte ptr [rdi], cl ; ret 0x144
0x000000000013cc7d : add byte ptr [rdi], cl ; ret 0x3145
0x00000000000bbc77 : add byte ptr [rdi], cl ; ret 0x3bba
0x000000000002a850 : add byte ptr [rdi], cl ; ret 0x4389
0x00000000000de69c : add byte ptr [rdi], cl ; ret 0x833b
0x000000000004569e : add byte ptr [rdi], cl ; ret 0x8539
0x000000000014238e : add byte ptr [rdi], cl ; ret 0x8941
0x00000000000464d6 : add byte ptr [rdi], cl ; ret 0x8b48
0x00000000001333f1 : add byte ptr [rdi], cl ; ret 0x8d48
0x0000000000030316 : add byte ptr [rdi], cl ; ret 0x8d49
0x00000000000fafca : add byte ptr [rdi], cl ; ret 0x90c3
0x00000000000ea1ff : add byte ptr [rdi], cl ; ret 0xb9e9
0x00000000000b5abe : add byte ptr [rdi], cl ; ret 0xc3f3
0x00000000000d6de0 : add byte ptr [rdi], cl ; ret 0xc689
0x00000000000c2b21 : add byte ptr [rdi], cl ; ret 0xd801
0x000000000012311b : add byte ptr [rdi], cl ; ret 0xf3c3
0x00000000001230c0 : add byte ptr [rdi], cl ; ret 0xfc3
0x00000000001230fb : add byte ptr [rdi], cl ; ret 0xff83
0x0000000000034e4f : add byte ptr [rdi], cl ; sub cl, al ; add rsp, 0x28 ; ret
0x0000000000026550 : add byte ptr [rdi], cl ; test byte ptr [rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x000000000003b4e9 : add byte ptr [rdi], cl ; test dword ptr [rbx], esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000003b9b9 : add byte ptr [rdi], cl ; test dword ptr [rdx], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000573fb : add byte ptr [rdi], cl ; xchg dword ptr [rbx + rcx], esi ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000045ee6 : add byte ptr [rdi], cl ; xchg dword ptr [rbx - 0x76fffff8], esp ; ret 0x348
0x00000000000ec00e : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000000dfc5d : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8488
0x00000000000bc471 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x00000000000777e4 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf44
0x00000000000bc3dd : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf748
0x000000000013668b : add byte ptr [rdi], cl ; xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x1366f8 ; ret
0x0000000000149fa7 : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xf40
0x00000000000619ef : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000000d83ee : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x4422
0x00000000001ad9e3 : add byte ptr [rdi], dl ; add dword ptr [rax], eax ; test al, 0xf4 ; jmp qword ptr [rcx]
0x000000000019ad17 : add byte ptr [rdi], dl ; cli ; jmp rsp
0x000000000012bcbb : add byte ptr [rdx + 0x19], ch ; call qword ptr [rax]
0x0000000000021971 : add byte ptr [rdx + 0x2c], bh ; call 0x2dc48
0x000000000016a81f : add byte ptr [rdx + 0x48028801], cl ; lea eax, dword ptr [rdx] ; ret
0x00000000001664ef : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x00000000000a771f : add byte ptr [rdx + 0x48178816], cl ; lea eax, dword ptr [rdi + 1] ; ret
0x0000000000021952 : add byte ptr [rdx + 0x4a], bh ; call 0x2dc48
0x00000000000d111d : add byte ptr [rdx + 0x63], cl ; adc al, 0xb0 ; add rax, rdx ; jmp rax
0x0000000000009207 : add byte ptr [rdx + 1], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001bd02f : add byte ptr [rdx + 4], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000002189f : add byte ptr [rdx + 8], bh ; mov eax, edx ; ret
0x0000000000108cf3 : add byte ptr [rdx + rax + 0x5d], dh ; ret
0x00000000001a357b : add byte ptr [rdx + rax*4 + 0x55100000], ch ; in eax, dx ; call qword ptr [rax]
0x00000000001a7533 : add byte ptr [rdx + rax*8], ah ; add byte ptr [rax], ch ; sub bh, dl ; jmp qword ptr [rdi]
0x00000000001a754b : add byte ptr [rdx + rax*8], bh ; add byte ptr [rax + 0x2b], al ; cli ; call qword ptr [rdi]
0x00000000001add83 : add byte ptr [rdx + rbp - 0x2ec7ffff], dh ; hlt ; jmp rcx
0x00000000001983af : add byte ptr [rdx + rbp*2], dl ; jmp rsp
0x00000000001a9d63 : add byte ptr [rdx + rbp*8 - 0x8e80000], dl ; int1 ; call rsi
0x0000000000034c4c : add byte ptr [rdx + rbp*8 - 0xd], dh ; ret
0x0000000000197cef : add byte ptr [rdx + rbx*2 - 0xf], al ; jmp rsp
0x00000000001a0d33 : add byte ptr [rdx + rbx*2], ah ; add al, bh ; iretd ; in al, dx ; jmp qword ptr [rax]
0x00000000001a8cdb : add byte ptr [rdx + rbx*8], cl ; add byte ptr [rax], al ; add byte ptr [rsi], ch ; int1 ; jmp qword ptr [rcx]
0x000000000019cd13 : add byte ptr [rdx + rbx], al ; add al, bh ; adc ebp, ecx ; call qword ptr [rcx]
0x000000000019cd2b : add byte ptr [rdx + rbx], bl ; add byte ptr [rax], al ; adc al, 0xe9 ; call qword ptr [rcx]
0x000000000019cce3 : add byte ptr [rdx + rbx], dl ; add byte ptr [rax], al ; call 0x2119b608
0x000000000011648b : add byte ptr [rdx + rcx + 0x5b], dh ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x0000000000096243 : add byte ptr [rdx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x000000000017c597 : add byte ptr [rdx + rcx + 0xabf0000], bh ; add byte ptr [rax], al ; ret 0xa
0x0000000000197137 : add byte ptr [rdx + rcx - 0x12], dh ; jmp rsp
0x00000000001afd63 : add byte ptr [rdx + rcx*2 + 0x5b080001], dl ; cmc ; jmp qword ptr [rcx]
0x00000000001afd7b : add byte ptr [rdx + rcx*2 + 0x5b200001], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001afd33 : add byte ptr [rdx + rcx*2 + 1], ah ; add al, bl ; pop rdx ; cmc ; jmp qword ptr [rcx]
0x0000000000199657 : add byte ptr [rdx + rcx*2 - 9], ah ; jmp rsp
0x00000000001afcd3 : add byte ptr [rdx + rcx*2], al ; add dword ptr [rax], eax ; js 0x1afd3c ; cmc ; jmp qword ptr [rcx]
0x00000000001afceb : add byte ptr [rdx + rcx*2], bl ; add dword ptr [rax], eax ; nop ; pop rdx ; cmc ; jmp qword ptr [rcx]
0x0000000000198ea7 : add byte ptr [rdx + rcx*4 - 0xa], dl ; jmp rsp
0x00000000001a3d2b : add byte ptr [rdx + rcx*4], bl ; add byte ptr [rax], dl ; jns 0x1a3d28 ; call qword ptr [rsi]
0x0000000000197647 : add byte ptr [rdx + rcx*8 - 0x12], dh ; jmp rsp
0x0000000000199fef : add byte ptr [rdx + rcx*8 - 8], dl ; jmp rsp
0x0000000000196cd7 : add byte ptr [rdx + rdi*2 - 0x13], dh ; jmp rsp
0x00000000001a6d6b : add byte ptr [rdx + rdi*4 + 0x71100000], bl ; out dx, eax ; call rax
0x00000000001ac543 : add byte ptr [rdx + rdx + 1], dh ; add byte ptr [rax], bl ; xlatb ; call qword ptr [rsi]
0x00000000001ac583 : add byte ptr [rdx + rdx - 0x28e7ffff], dh ; jmp qword ptr [rcx]
0x00000000001b0573 : add byte ptr [rdx + rdx*2 + 0x73d80001], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001b04fb : add byte ptr [rdx + rdx*2], ch ; add dword ptr [rax], eax ; xor byte ptr [rbx - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001a454b : add byte ptr [rdx + rdx*4], bh ; add byte ptr [rax], dl ; add edi, ebp ; jmp rsp
0x00000000001ac503 : add byte ptr [rdx + rdx], dh ; add dword ptr [rax], eax ; sbb bh, dl ; call qword ptr [rbx]
0x00000000001ae51b : add byte ptr [rdx + rsi + 1], cl ; add al, dh ; out 0xf4, al ; jmp qword ptr [rcx]
0x00000000001969ef : add byte ptr [rdx + rsi - 0x15], ah ; jmp rsp
0x00000000001ae56b : add byte ptr [rdx + rsi - 0x18bfffff], bl ; hlt ; jmp qword ptr [rcx]
0x00000000001b24fb : add byte ptr [rdx + rsi*2], ch ; add dword ptr [rax], eax ; rcl byte ptr [rdi], 0xfc ; jmp qword ptr [rsi]
0x00000000001978d7 : add byte ptr [rdx + rsi*2], dh ; out dx, eax ; jmp rsp
0x00000000001a64e3 : add byte ptr [rdx + rsi*4], dl ; add byte ptr [rax], al ; or bl, bl ; out dx, al ; jmp qword ptr [rsi]
0x00000000001ba56b : add byte ptr [rdx + rsi*8 + 0x17200001], bl ; clc ; call qword ptr [rdx]
0x000000000019912f : add byte ptr [rdx + rsi*8 - 0xa], al ; call rsp
0x00000000000be132 : add byte ptr [rdx - 0x73], cl ; or al, 0x20 ; mov rdx, rax ; jmp 0xbe147
0x000000000010c707 : add byte ptr [rdx - 1], bh ; mov eax, edx ; ret
0x000000000010c706 : add byte ptr [rdx - 1], dil ; mov eax, edx ; ret
0x0000000000189284 : add byte ptr [rdx], 0xf5 ; call rax
0x000000000003c2b5 : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000002de86 : add byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x0000000000127b66 : add byte ptr [rdx], al ; add rsp, 8 ; ret
0x000000000010e627 : add byte ptr [rdx], al ; call rax
0x0000000000194bf4 : add byte ptr [rdx], al ; cld ; jmp rax
0x00000000001878a4 : add byte ptr [rdx], al ; jmp qword ptr [rax]
0x000000000002dd94 : add byte ptr [rdx], al ; movzx eax, ax ; ret
0x00000000001adf00 : add byte ptr [rdx], al ; or dword ptr [rsi], 0x54028310 ; ret
0x00000000000025af : add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x00000000001bc42f : add byte ptr [rdx], bh ; add byte ptr [rax], al ; add byte ptr [rcx + 6], dl ; add byte ptr [rax], al ; ret 2
0x000000000001923f : add byte ptr [rdx], ch ; ret
0x000000000010436f : add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000194600 : add byte ptr [rdx], dl ; sti ; push rax ; adc bh, bl ; jmp rax
0x0000000000000450 : add byte ptr [rip + 0xc1c107c], al ; ret 0x4412
0x000000000012f2fa : add byte ptr [rip - 0x76b40000], al ; ret
0x00000000000cbc71 : add byte ptr [rip - 0xfff], bh ; jae 0xcbc82 ; ret
0x00000000001374f7 : add byte ptr [rsi + 0xe], bh ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000149e65 : add byte ptr [rsi + 0xf], ah ; cmp ah, byte ptr [rbx - 0x35] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x000000000016df84 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000e024f : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xddeb
0x00000000000e0232 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4101
0x0000000000034aa7 : add byte ptr [rsi + 0xf], ah ; push rsp ; ret 0xf66
0x0000000000034b1f : add byte ptr [rsi + 0xf], ah ; sub cl, al ; add rsp, 0x28 ; ret
0x000000000009e5cc : add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000008e014 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000008fc7 : add byte ptr [rsi + 1], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000102dd5 : add byte ptr [rsi + 1], bh ; call rbx
0x0000000000102fc2 : add byte ptr [rsi + 1], bh ; mov rdi, r12 ; call rbx
0x0000000000102e8e : add byte ptr [rsi + 1], bh ; mov rdi, r13 ; call rbx
0x0000000000102e06 : add byte ptr [rsi + 1], bh ; mov rdi, r14 ; call rbx
0x000000000000699f : add byte ptr [rsi + 1], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000103240 : add byte ptr [rsi + 2], bh ; mov rdi, r12 ; call rbx
0x0000000000102fb3 : add byte ptr [rsi + 2], bh ; mov rdi, r13 ; call rbx
0x0000000000102e7f : add byte ptr [rsi + 2], bh ; mov rdi, r14 ; call rbx
0x0000000000102df7 : add byte ptr [rsi + 2], bh ; mov rdi, r15 ; call rbx
0x00000000000f6027 : add byte ptr [rsi + 6], dh ; ret
0x0000000000101c2f : add byte ptr [rsi + rax + 0x5b], dh ; ret
0x00000000000cd03c : add byte ptr [rsi + rax*2 - 0x48], dh ; and byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000019a457 : add byte ptr [rsi + rax*4], al ; stc ; call rsp
0x00000000001b2103 : add byte ptr [rsi + rbp*2], dh ; add dword ptr [rax], eax ; and rsi, rsi ; jmp qword ptr [rsi]
0x00000000001a618b : add byte ptr [rsi + rbp*4 - 0x79800000], bh ; out dx, al ; jmp rbx
0x00000000001a615b : add byte ptr [rsi + rbp*4 - 0x79800000], cl ; out dx, al ; call qword ptr [rsi]
0x000000000019d16b : add byte ptr [rsi + rbx + 0x52e00000], bl ; jmp 0x1b947f
0x00000000001ad183 : add byte ptr [rsi + rbx - 0x6ef7ffff], dh ; hlt ; jmp qword ptr [rcx]
0x00000000001b1153 : add byte ptr [rsi + rbx*2 - 0x6017ffff], al ; cmc ; call rdi
0x00000000001a90db : add byte ptr [rsi + rbx*8], cl ; add byte ptr [rax], al ; and byte ptr [rcx + rsi*8 - 1], dl ; ret
0x00000000001ba428 : add byte ptr [rsi + rcx + 0x10], bl ; add dword ptr [rdx], 0x51 ; ret
0x00000000001b0153 : add byte ptr [rsi + rcx*2 + 0x6e780001], al ; cmc ; jmp qword ptr [rcx]
0x00000000001b016b : add byte ptr [rsi + rcx*2 + 0x6e900001], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001b0183 : add byte ptr [rsi + rcx*2 + 0x6ea80001], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001b013b : add byte ptr [rsi + rcx*2 + 1], ch ; add byte ptr [rax + 0x6e], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001b0123 : add byte ptr [rsi + rcx*2 + 1], dl ; add byte ptr [rax + 0x6e], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001b00db : add byte ptr [rsi + rcx*2], cl ; add dword ptr [rax], eax ; and byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001a4133 : add byte ptr [rsi + rcx*4], ah ; add byte ptr [rax - 0x79], bh ; in eax, dx ; jmp qword ptr [rbx]
0x00000000001af163 : add byte ptr [rsi + rdi + 0x1ef80001], dl ; cmc ; jmp qword ptr [rcx]
0x000000000019f183 : add byte ptr [rsi + rdi + 0x44c80000], dh ; cli ; jmp qword ptr [rcx]
0x000000000019b0ef : add byte ptr [rsi + rdi*2 - 4], ah ; call rsp
0x000000000019a5a7 : add byte ptr [rsi + rdi*4 - 7], ah ; jmp rsp
0x00000000001a712b : add byte ptr [rsi + rdi*4], bl ; add al, al ; jl 0x1a712a ; call qword ptr [rdi]
0x000000000019871f : add byte ptr [rsi + rdi], al ; cmc ; jmp rsp
0x00000000001af0eb : add byte ptr [rsi + rdi], bl ; add dword ptr [rax], eax ; sbb byte ptr [rsi], 0xf5 ; jmp qword ptr [rcx]
0x00000000001b0953 : add byte ptr [rsi + rdx*2 + 0x7ae80001], al ; cmc ; jmp qword ptr [rcx]
0x00000000001b096b : add byte ptr [rsi + rdx*2 + 0x7b000001], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001b0983 : add byte ptr [rsi + rdx*2 + 0x7b180001], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001b08f3 : add byte ptr [rsi + rdx*2], ah ; add dword ptr [rax], eax ; mov byte ptr [rdx - 0xb], bh ; jmp qword ptr [rcx]
0x00000000001b08db : add byte ptr [rsi + rdx*2], cl ; add dword ptr [rax], eax ; jo 0x1b0964 ; cmc ; jmp qword ptr [rcx]
0x0000000000199f0f : add byte ptr [rsi + rdx*4 - 8], dl ; jmp rsp
0x00000000001ac8d3 : add byte ptr [rsi + rdx], al ; add dword ptr [rax], eax ; sar dword ptr [rcx], -0x19 ; jmp qword ptr [rax]
0x00000000001ae913 : add byte ptr [rsi + rsi + 1], al ; add byte ptr [rax - 0xe], cl ; hlt ; jmp qword ptr [rsi]
0x00000000001aa90b : add byte ptr [rsi + rsi*8], bh ; add byte ptr [rax], al ; and byte ptr [rcx], 0xf2 ; jmp qword ptr [rcx]
0x00000000001aa8db : add byte ptr [rsi + rsi*8], cl ; add byte ptr [rax], al ; push rax ; and edx, esi ; jmp qword ptr [rcx]
0x00000000001ad983 : add byte ptr [rsi - 0x5817ffff], dh ; hlt ; jmp qword ptr [rcx]
0x00000000001ad96b : add byte ptr [rsi - 0x582fffff], bl ; hlt ; jmp qword ptr [rcx]
0x00000000001ad953 : add byte ptr [rsi - 0x5847ffff], al ; hlt ; jmp qword ptr [rcx]
0x0000000000021a2d : add byte ptr [rsi - 0x70], ah ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003685d : add byte ptr [rsi - 0x70], ah ; mov eax, dword ptr [rip + 0x38c826] ; ret
0x00000000001aa7eb : add byte ptr [rsi*8 + 0x20100000], bl ; jmp qword ptr [rcx]
0x000000000001fb0c : add byte ptr [rsi], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000185af : add byte ptr [rsi], bh ; ret 0x18
0x000000000001920f : add byte ptr [rsi], bl ; ret
0x0000000000032c22 : add byte ptr [rsi], ch ; call 0x8ee64
0x0000000000194d9c : add byte ptr [rsi], ch ; cld ; jmp rax
0x00000000001a8ce0 : add byte ptr [rsi], ch ; int1 ; jmp qword ptr [rcx]
0x00000000000fc172 : add byte ptr [rsi], dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000001a98e3 : add byte ptr [rsi], dl ; add byte ptr [rax], al ; clc ; out 0xf1, al ; jmp qword ptr [rdi]
0x00000000001bb763 : add byte ptr [rsp + rax + 0x70b80002], dl ; clc ; call rcx
0x00000000000f5699 : add byte ptr [rsp + rax - 0xd], dh ; ret
0x00000000001be70f : add byte ptr [rsp + rax], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x00000000001adf83 : add byte ptr [rsp + rbp - 0x2527ffff], dh ; hlt ; call qword ptr [rbx]
0x000000000019952f : add byte ptr [rsp + rbp - 9], dh ; jmp rsp
0x00000000001983f7 : add byte ptr [rsp + rbp*2 - 0xd], al ; call rsp
0x0000000000196e47 : add byte ptr [rsp + rbp*4 - 0x13], dl ; jmp rsp
0x00000000001a5f03 : add byte ptr [rsp + rbp*4], dh ; add byte ptr [rax], al ; jno 0x1a5f01 ; jmp qword ptr [rdx]
0x0000000000197a47 : add byte ptr [rsp + rbp*8], dh ; out dx, eax ; jmp rsp
0x00000000001acf83 : add byte ptr [rsp + rbx + 0x67880001], dh ; stc ; call qword ptr [rax]
0x00000000001acf1b : add byte ptr [rsp + rbx + 1], cl ; add byte ptr [rax - 0x79], dh ; hlt ; call qword ptr [rsi]
0x0000000000196957 : add byte ptr [rsp + rbx - 0x15], al ; jmp rsp
0x00000000001acf63 : add byte ptr [rsp + rbx - 0x7897ffff], dl ; hlt ; call qword ptr [rax]
0x0000000000199bef : add byte ptr [rsp + rbx], ah ; clc ; jmp rsp
0x0000000000100903 : add byte ptr [rsp + rcx - 9], dh ; ret 0xfc07
0x00000000001aff63 : add byte ptr [rsp + rcx*2 + 0x6cb80001], dl ; cmc ; jmp qword ptr [rcx]
0x00000000001aff7b : add byte ptr [rsp + rcx*2 + 0x6cd00001], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001afeeb : add byte ptr [rsp + rcx*2], bl ; add dword ptr [rax], eax ; jne 0x1aff66 ; cmc ; call qword ptr [rcx]
0x00000000001aff03 : add byte ptr [rsp + rcx*2], dh ; add dword ptr [rax], eax ; js 0x1aff7e ; cmc ; jmp qword ptr [rcx]
0x00000000001a6f63 : add byte ptr [rsp + rdi*4 - 0x25d80000], dl ; cld ; call qword ptr [rax]
0x000000000019590c : add byte ptr [rsp + rdi*8 - 0x3546f01], ch ; jmp qword ptr [rax]
0x0000000000195160 : add byte ptr [rsp + rdi*8 - 1], dl ; jo 0x1951c0 ; cld ; jmp rax
0x000000000019c75b : add byte ptr [rsp + rdx + 0x6ff00000], cl ; std ; call qword ptr [rcx]
0x00000000001b075b : add byte ptr [rsp + rdx*2 + 0x78100001], cl ; cmc ; jmp qword ptr [rbx]
0x000000000019a2bf : add byte ptr [rsp + rdx*2 - 7], dl ; call rsp
0x00000000001b8743 : add byte ptr [rsp + rdx*8 + 1], dh ; add byte ptr [rax], ch ; ret 0xfff7
0x00000000001ac6f3 : add byte ptr [rsp + rdx], ah ; add dword ptr [rax], eax ; cmp al, bl ; call qword ptr [rdx]
0x00000000001ae73b : add byte ptr [rsp + rsi + 1], ch ; add byte ptr [rax], ah ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001ae723 : add byte ptr [rsp + rsi + 1], dl ; add byte ptr [rax], cl ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x0000000000195fc7 : add byte ptr [rsp + rsi*8 - 0x18], dl ; jmp rsp
0x000000000019a74f : add byte ptr [rsp + rsi*8], al ; stc ; jmp rsp
0x00000000001ae6db : add byte ptr [rsp + rsi], cl ; add dword ptr [rax], eax ; adc bl, ch ; hlt ; jmp rdx
0x000000000019768f : add byte ptr [rsp - 0x12], dh ; call rsp
0x00000000001ad77b : add byte ptr [rsp - 0x5d3fffff], ch ; hlt ; jmp qword ptr [rcx]
0x00000000001b56f3 : add byte ptr [rsp], ah ; add dword ptr [rax], eax ; test al, 0xf2 ; sti ; call rcx
0x000000000019d703 : add byte ptr [rsp], dh ; add byte ptr [rax], al ; cmp byte ptr [rcx - 0x17], bh ; call qword ptr [rcx]
0x0000000000055c98 : add byte ptr cs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000101c2e : add byte ptr ds:[rsi + rax + 0x5b], dh ; ret
0x000000000003612a : add byte ptr es:[rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000019d9b5 : add byte ptr es:[rax], al ; cwde ; jge 0x19d9aa ; jmp qword ptr [rcx]
0x000000000007a290 : add byte ptr gs:[rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000708c3 : add byte ptr gs:[rbx + 0x5d], bl ; pop r12 ; ret
0x000000000005c4a8 : add byte ptr ss:[rax - 0x39], cl ; ret 0xfffe
0x0000000000136bb4 : add byte ptr ss:[rax], al ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000dd82a : add ch, al ; jo 0xdd856 ; hlt ; dec dword ptr [rcx - 0x77] ; ret 0x8949
0x00000000000ecfd7 : add ch, al ; ret
0x00000000000190a7 : add ch, al ; ret 0x18
0x00000000000350c7 : add ch, bl ; fpatan ; ret
0x000000000001911f : add ch, bl ; ret 0x18
0x0000000000194a9c : add ch, bl ; sti ; jmp rax
0x000000000018565c : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000018565d : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x00000000000bc9dc : add ch, byte ptr [rcx] ; ret 0x48d
0x0000000000072dca : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x00000000000567f0 : add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000001959b8 : add ch, byte ptr [rsi - 0x526d0004] ; cld ; jmp qword ptr [rdx]
0x0000000000019ca7 : add ch, ch ; ret
0x00000000000190d7 : add ch, cl ; ret 0x18
0x00000000001970e1 : add ch, dh ; call rsp
0x0000000000019d1f : add ch, dh ; ret
0x0000000000019107 : add ch, dl ; ret 0x18
0x0000000000035f86 : add cl, 0xe9 ; add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x00000000000e41d7 : add cl, al ; call 0x66d0caeb
0x00000000001ac8d7 : add cl, al ; cmp edi, esp ; jmp qword ptr [rax]
0x000000000001908f : add cl, al ; ret 0x18
0x00000000001a8c4f : add cl, al ; sub al, 0xf1 ; jmp qword ptr [rax]
0x0000000000052f71 : add cl, bl ; in eax, -0x21 ; loopne 0x52f06 ; ret 0xe680
0x0000000000054eea : add cl, bl ; in eax, -0x21 ; loopne 0x54e7f ; ret 0xe680
0x0000000000194ab4 : add cl, bl ; sti ; call rax
0x0000000000105565 : add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x00000000000a207c : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x000000000005710e : add cl, byte ptr [rax + 0x29] ; ret
0x00000000000abf99 : add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x000000000003c954 : add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x000000000003c97d : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x0000000000026b13 : add cl, byte ptr [rax + 0x39] ; ret
0x0000000000122cd6 : add cl, byte ptr [rax + 0x39] ; ret 0x1472
0x0000000000122ce4 : add cl, byte ptr [rax + 0x39] ; ret 0xc019
0x0000000000105566 : add cl, byte ptr [rax + 0x39] ; ret 0xf48
0x0000000000073fb9 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000002a293 : add cl, byte ptr [rax + 1] ; ret 0x394c
0x00000000001056eb : add cl, byte ptr [rax - 0x39] ; ret 0xffff
0x00000000000bf810 : add cl, byte ptr [rax - 0x46] ; ret
0x00000000000a207d : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x000000000009def7 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000070bef : add cl, byte ptr [rax - 0x77] ; ret
0x000000000007c772 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x00000000000ff192 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret 0x4808
0x000000000004941c : add cl, byte ptr [rax - 0x7d] ; ret 0x4101
0x0000000000088fc0 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000025654 : add cl, byte ptr [rax - 0x7d] ; ret 0x4901
0x00000000000ce7b7 : add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x0000000000089023 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x000000000013b6d5 : add cl, byte ptr [rax - 0x7d] ; ret 0xf04
0x00000000000723f1 : add cl, byte ptr [rax - 9] ; fiadd dword ptr [rbx + 0x394803e2] ; ret 0xf48
0x00000000001a39e0 : add cl, byte ptr [rbp + 0xa] ; ret
0x0000000000123f2f : add cl, byte ptr [rbp + 0xf] ; ret
0x000000000003d34d : add cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000e738e : add cl, byte ptr [rbp - 0x73] ; std ; add byte ptr [rcx], bh ; ret
0x0000000000088a95 : add cl, byte ptr [rbp - 0x77] ; ret
0x000000000015af72 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000000d5a26 : add cl, byte ptr [rcx + 0x39488a0c] ; ret
0x000000000006bca2 : add cl, byte ptr [rcx + 0x440f48c3] ; rol dword ptr [rax], 1 ; ret
0x000000000012e587 : add cl, byte ptr [rcx + 0x55ff41da] ; adc byte ptr [rcx], bh ; ret
0x00000000000c954e : add cl, byte ptr [rcx - 0x3b7cb710] ; ret
0x00000000000e023e : add cl, byte ptr [rcx - 0x7d] ; ret 0x4810
0x00000000000b7b0b : add cl, byte ptr [rcx - 0x7d] ; ret 0x4c01
0x000000000002dd54 : add cl, byte ptr [rdi] ; mov bh, 0xc0 ; ret
0x00000000000f6e6f : add cl, byte ptr [rdi] ; ret 0x8348
0x00000000000f6dc7 : add cl, byte ptr [rdi] ; ret 0xfc3
0x0000000000110b85 : add cl, byte ptr [rdi] ; test cl, bh ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000065848 : add cl, byte ptr [rdi] ; test dword ptr [rax], esi ; adc dword ptr [rax], eax ; add dh, dh ; ret
0x0000000000081070 : add cl, byte ptr [rdi] ; test dword ptr [rcx], edi ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x00000000000ebd4d : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret
0x000000000006cfb5 : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x5389
0x0000000000149e6b : add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x00000000000a9f33 : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8444
0x00000000000004b0 : add cl, byte ptr [rdx] ; add dword ptr [rax + rax*4], ecx ; push rbx ; add al, 4 ; ret 0x6080
0x00000000001b6120 : add cl, byte ptr [rsi + rcx + 0x28] ; ret
0x0000000000067447 : add cl, ch ; pop rdi ; ret 0xffff
0x00000000000eee50 : add cl, ch ; push rdx ; idiv edi ; dec dword ptr [rbp + rcx*4 + 0x25] ; ret
0x000000000002d2c7 : add cl, ch ; ret
0x0000000000104388 : add cl, ch ; ret 0xf76d
0x00000000000601d8 : add cl, ch ; ret 0xffb8
0x00000000000676e4 : add cl, ch ; ret 0xffbf
0x000000000009ddb7 : add cl, ch ; ret 0xffd3
0x0000000000040f75 : add cl, ch ; ret 0xffec
0x0000000000031d06 : add cl, ch ; ret 0xfff1
0x000000000009dc83 : add cl, ch ; ret 0xfff5
0x000000000002b0b1 : add cl, ch ; ret 0xfffb
0x00000000000f0383 : add cl, ch ; ret 0xfffd
0x0000000000080346 : add cl, ch ; ret 0xfffe
0x0000000000060801 : add cl, ch ; ret 0xffff
0x00000000001152a6 : add cl, cl ; ret
0x00000000000190bf : add cl, cl ; ret 0x18
0x00000000001bbc7f : add cl, dh ; or byte ptr [rbx], al ; ret
0x0000000000019d07 : add cl, dh ; ret
0x0000000000019c5f : add cl, dl ; ret
0x00000000000190ef : add cl, dl ; ret 0x18
0x00000000001a37d8 : add dh, ah ; ret
0x0000000000019137 : add dh, ah ; ret 0x18
0x0000000000045ae8 : add dh, al ; add al, 0x10 ; add bl, dh ; ret
0x00000000000d4e4f : add dh, al ; or byte ptr [r10], r8b ; xor eax, eax ; ret
0x0000000000189d3b : add dh, bh ; jmp rdi
0x000000000017fa97 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000015b123 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000000fb26d : add dh, bl ; ret
0x00000000001949fc : add dh, bl ; sti ; jmp rax
0x00000000000a91bb : add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000001a377e : add dh, byte ptr [rbp + 0x41180e0a] ; ret
0x000000000009914d : add dh, byte ptr [rbp + rbp + 0xf] ; mov dh, 0x45 ; ret
0x00000000000d71e8 : add dh, byte ptr [rbp - 0x2b] ; jmp 0xd71b4
0x0000000000133a22 : add dh, byte ptr [rbx + rcx - 0x48] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001a0665 : add dh, byte ptr [rcx + 0xa] ; ret
0x00000000001b60e5 : add dh, byte ptr [rdx + 0xa] ; ret
0x0000000000098b33 : add dh, byte ptr [rdx + rbp + 0xf] ; mov dh, 0x55 ; ret
0x000000000009d094 : add dh, byte ptr [rsp + rbp + 0xf] ; mov dh, 0x45 ; ret
0x000000000009b150 : add dh, byte ptr [rsp + rbp + 0xf] ; mov dh, 0x55 ; ret
0x000000000009d093 : add dh, byte ptr cs:[rsp + rbp + 0xf] ; mov dh, 0x45 ; ret
0x0000000000133a21 : add dh, byte ptr ds:[rbx + rcx - 0x48] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001aec91 : add dh, ch ; call qword ptr [rdi]
0x0000000000189201 : add dh, ch ; call rax
0x00000000001a4e40 : add dh, ch ; in eax, dx ; call rsi
0x000000000018920d : add dh, ch ; jmp rax
0x00000000001891fd : add dh, ch ; lcall ptr [rax] ; add dh, ch ; call rax
0x0000000000189209 : add dh, ch ; lcall ptr [rax] ; add dh, ch ; jmp rax
0x000000000018928d : add dh, ch ; ljmp ptr [rax] ; add esi, ebp ; call qword ptr [rcx]
0x00000000000640e6 : add dh, dh ; ret
0x0000000000023ff6 : add dh, dh ; ret 0x4801
0x000000000008e9a8 : add dh, dh ; ret 0x7404
0x00000000000e3b29 : add dh, dh ; ret 0x7408
0x000000000006db4f : add dh, dh ; ret 0x7420
0x00000000001701a7 : add dh, dh ; ret 0x7501
0x00000000001701b4 : add dh, dh ; ret 0x7502
0x0000000000061b54 : add dh, dh ; ret 0x7504
0x0000000000170179 : add dh, dh ; ret 0x7510
0x0000000000170186 : add dh, dh ; ret 0x7520
0x0000000000170193 : add dh, dh ; ret 0x7540
0x00000000000f8457 : add dh, dh ; ret 0xf01
0x000000000008106d : add dh, dh ; ret 0xf02
0x0000000000122195 : add dh, dh ; ret 0xf04
0x00000000000541cf : add dh, dh ; ret 0xf08
0x00000000000a0882 : add dh, dh ; ret 0xf20
0x00000000000a088b : add dh, dh ; ret 0xf40
0x00000000001878ed : add dh, dl ; call rax
0x00000000001878f9 : add dh, dl ; inc dword ptr [rax] ; add esi, edx ; call qword ptr [rax]
0x00000000001878e9 : add dh, dl ; inc eax ; add dh, dl ; call rax
0x00000000001878a5 : add dh, dl ; jmp qword ptr [rax]
0x00000000001878f1 : add dh, dl ; jmp rax
0x00000000001095de : add dil, byte ptr [rcx] ; ret
0x00000000000ba7b9 : add dil, r15b ; ret
0x0000000000194b34 : add dl, 0xfb ; call rax
0x00000000001024a2 : add dl, ah ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000000f5d04 : add dl, bh ; dec dword ptr [rax + 0x39] ; ret
0x0000000000187674 : add dl, ch ; int1 ; call qword ptr [rax]
0x00000000001a56c5 : add dl, ch ; ret
0x00000000001a9f99 : add dl, dh ; call rdi
0x0000000000187881 : add dl, dh ; inc dword ptr [rax] ; add edx, esi ; jmp qword ptr [rax]
0x0000000000187879 : add dl, dh ; inc eax ; add dl, dh ; jmp rax
0x000000000018787d : add dl, dh ; jmp rax
0x000000000003493f : add dl, dh ; mulps xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x000000000001917f : add dl, dh ; ret 0x18
0x00000000001bbbb0 : add dword ptr [0xfffffffff501c501], ecx ; add al, byte ptr [rax] ; ret
0x00000000001a64a4 : add dword ptr [r14], 3 ; mov byte ptr [rcx], al ; ret
0x0000000000026e56 : add dword ptr [r8 + 0x39], r9d ; ret
0x00000000000bf7cc : add dword ptr [r8 - 0x73], ecx ; jl 0xbf82b ; ror byte ptr [rax - 0x46], 1 ; ret
0x0000000000046267 : add dword ptr [r8 - 0x7d], ecx ; ret
0x000000000006c6be : add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x000000000006ce42 : add dword ptr [r8 - 0x7d], ecx ; ret 0x8508
0x00000000001af87d : add dword ptr [r8], r8d ; adc byte ptr [rbx - 0xb], cl ; jmp rax
0x00000000001afaa5 : add dword ptr [r8], r8d ; cwde ; push rbx ; cmc ; call qword ptr [rdx]
0x0000000000026486 : add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x0000000000077bfc : add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00000000000d4ef8 : add dword ptr [rax + 0x1b807], ecx ; add byte ptr [rax], al ; ret
0x000000000016a821 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x00000000000d8b0f : add dword ptr [rax + 0x29], ecx ; ret 0x8348
0x0000000000026af7 : add dword ptr [rax + 0x39], ecx ; ret
0x00000000000d8523 : add dword ptr [rax + 0x39], ecx ; ret 0x1176
0x00000000000b6f27 : add dword ptr [rax + 0x39], ecx ; ret 0x2973
0x00000000000f8d53 : add dword ptr [rax + 0x39], ecx ; ret 0x674
0x00000000000e0bf6 : add dword ptr [rax + 0x39], ecx ; ret 0x820f
0x00000000000495b0 : add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x0000000000051fbc : add dword ptr [rax + 0x39], ecx ; ret 0x8d0f
0x00000000000f8d47 : add dword ptr [rax + 0x39], ecx ; ret 0xc72
0x00000000000d85f3 : add dword ptr [rax + 0x39], ecx ; ret 0xe775
0x00000000000d2bb5 : add dword ptr [rax + 0x39], ecx ; ret 0xe777
0x00000000000b83a2 : add dword ptr [rax + 0x39], ecx ; ret 0xec77
0x000000000009ef90 : add dword ptr [rax + 0x39], ecx ; ret 0xf077
0x0000000000048043 : add dword ptr [rax + 0x39], ecx ; sal byte ptr [rbp - 0x11], 1 ; xor eax, eax ; ret
0x00000000000481db : add dword ptr [rax + 0x39], ecx ; salc ; jne 0x481d8 ; xor eax, eax ; ret
0x000000000010d5b5 : add dword ptr [rax + 0x3c63af9], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000010d58f : add dword ptr [rax + 0x470f3af9], eax ; ret 0xc084
0x00000000000c4fa5 : add dword ptr [rax + 0x63], ecx ; fisttp dword ptr [rax + 0x39] ; ret
0x0000000000101421 : add dword ptr [rax + 0x63], ecx ; ret 0x8941
0x00000000000ff0a3 : add dword ptr [rax + 0xf], ecx ; mov esi, 0xf233c03 ; xchg eax, ebp ; ret 0x2f3c
0x00000000000e523f : add dword ptr [rax + 0xf], ecx ; ret
0x00000000000642da : add dword ptr [rax + 1], ecx ; ret
0x0000000000020622 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00000000000d4e73 : add dword ptr [rax + 1], edi ; ret
0x00000000000004b2 : add dword ptr [rax + rax*4], ecx ; push rbx ; add al, 4 ; ret 0x6080
0x000000000012373c : add dword ptr [rax + rax*8 + 0x38414f74], eax ; ret 0x5a74
0x0000000000115a2e : add dword ptr [rax + rax], eax ; cmove rax, rdx ; ret
0x00000000001a1ebe : add dword ptr [rax + rbp*2], 0xa ; ret
0x0000000000098b25 : add dword ptr [rax + rdi + 0xf], esi ; mov dh, 0x55 ; ret 0x8349
0x00000000001ab8d6 : add dword ptr [rax + rsi*2], 0xa ; ret
0x000000000019479c : add dword ptr [rax - 0x576e0003], ebp ; std ; jmp qword ptr [rcx]
0x00000000000d2f27 : add dword ptr [rax - 0x6bf0a206], eax ; ret 0xb60f
0x00000000000d2f26 : add dword ptr [rax - 0x6bf0a206], r8d ; ret 0xb60f
0x000000000002f453 : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x0000000000105562 : add dword ptr [rax - 0x73], ecx ; add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x00000000000bf7cd : add dword ptr [rax - 0x73], ecx ; jl 0xbf82a ; ror byte ptr [rax - 0x46], 1 ; ret
0x00000000000ef785 : add dword ptr [rax - 0x75], ecx ; and al, 0x18 ; mov rdx, rax ; jmp 0xef7cb
0x00000000000a2056 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x0000000000166482 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000009dee6 : add dword ptr [rax - 0x77], ecx ; clc ; ret
0x00000000000aed31 : add dword ptr [rax - 0x77], ecx ; fisttp qword ptr [rax - 0x77] ; ret
0x000000000007e949 : add dword ptr [rax - 0x77], ecx ; pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x000000000007b358 : add dword ptr [rax - 0x77], ecx ; push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000077e8d : add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x000000000008aaa1 : add dword ptr [rax - 0x77], ecx ; ret
0x000000000006ad44 : add dword ptr [rax - 0x77], ecx ; ret 0x2b76
0x00000000000f049c : add dword ptr [rax - 0x77], ecx ; ret 0x349
0x00000000000cee00 : add dword ptr [rax - 0x77], ecx ; ret 0x57e9
0x00000000000e1222 : add dword ptr [rax - 0x77], ecx ; ret 0x75e8
0x000000000007931f : add dword ptr [rax - 0x77], ecx ; ret 0x850f
0x00000000000cf9b0 : add dword ptr [rax - 0x77], ecx ; ret 0x9aeb
0x000000000010de88 : add dword ptr [rax - 0x77], ecx ; sub r14b, r8b ; add byte ptr [rax], ah ; jmp 0x10de5e
0x0000000000123420 : add dword ptr [rax - 0x78], eax ; ja 0x12342b ; ret
0x000000000016c43a : add dword ptr [rax - 0x7d], ecx ; fdivr st(7) ; ret
0x00000000000969f8 : add dword ptr [rax - 0x7d], ecx ; out dx, al ; add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x00000000000221f6 : add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000121e58 : add dword ptr [rax - 0x7d], ecx ; ret 0x3904
0x00000000000d7783 : add dword ptr [rax - 0x7d], ecx ; ret 0x3d01
0x00000000000463cc : add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x00000000000dd86f : add dword ptr [rax - 0x7d], ecx ; ret 0x4104
0x00000000000e8d02 : add dword ptr [rax - 0x7d], ecx ; ret 0x4108
0x00000000000e0d32 : add dword ptr [rax - 0x7d], ecx ; ret 0x4404
0x000000000006c6bf : add dword ptr [rax - 0x7d], ecx ; ret 0x4502
0x0000000000037e39 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000000d2d43 : add dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x000000000002146c : add dword ptr [rax - 0x7d], ecx ; ret 0x4830
0x00000000000c6e26 : add dword ptr [rax - 0x7d], ecx ; ret 0x4948
0x0000000000023c9e : add dword ptr [rax - 0x7d], ecx ; ret 0x4d02
0x000000000003d23e : add dword ptr [rax - 0x7d], ecx ; ret 0x6610
0x0000000000122188 : add dword ptr [rax - 0x7d], ecx ; ret 0x8301
0x00000000000ce109 : add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000b66dc : add dword ptr [rax - 0x7d], ecx ; ret 0x8504
0x000000000006ce43 : add dword ptr [rax - 0x7d], ecx ; ret 0x8508
0x00000000000fa8b1 : add dword ptr [rax - 0x7d], ecx ; ret 0xe801
0x000000000005cb0a : add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00000000000e6aba : add dword ptr [rax - 0x7d], ecx ; ret 0xf10
0x00000000000d87b4 : add dword ptr [rax - 0x7d], ecx ; rol byte ptr [rcx], 0x83 ; ret 0x4001
0x00000000000d6fae : add dword ptr [rax - 0x7d], ecx ; rol byte ptr [rsp + rax*2], 0x29 ; ret 0x5089
0x00000000001a341d : add dword ptr [rax], 0xed4e5000 ; jmp qword ptr [rsi]
0x0000000000109114 : add dword ptr [rax], 1 ; ret
0x000000000019a1c6 : add dword ptr [rax], eax ; adc al, 0x35 ; stc ; jmp rsp
0x000000000019879e : add dword ptr [rax], eax ; adc al, 0x41 ; cmc ; call rsp
0x00000000001983ae : add dword ptr [rax], eax ; adc al, 0x6a ; jmp rsp
0x0000000000199b26 : add dword ptr [rax], eax ; adc al, 0xf ; clc ; call rsp
0x00000000001ae1be : add dword ptr [rax], eax ; adc bh, bl ; hlt ; jmp qword ptr [rcx]
0x00000000001ae6de : add dword ptr [rax], eax ; adc bl, ch ; hlt ; jmp rdx
0x00000000001b075e : add dword ptr [rax], eax ; adc byte ptr [rax - 0xb], bh ; jmp qword ptr [rbx]
0x00000000001af87e : add dword ptr [rax], eax ; adc byte ptr [rbx - 0xb], cl ; jmp rax
0x000000000019871e : add dword ptr [rax], eax ; add al, 0x3e ; cmc ; jmp rsp
0x00000000001979de : add dword ptr [rax], eax ; add al, 0xb5 ; out dx, eax ; call rsp
0x000000000019987e : add dword ptr [rax], eax ; add al, 0xe3 ; idiv edi ; push rsp ; ret 1
0x0000000000197a1e : add dword ptr [rax], eax ; add al, 0xe3 ; out dx, eax ; jmp rsp
0x0000000000197e8e : add dword ptr [rax], eax ; add al, 0xfb ; int1 ; call rsp
0x0000000000197a76 : add dword ptr [rax], eax ; add al, 0xfd ; out dx, eax ; call rsp
0x00000000000ce117 : add dword ptr [rax], eax ; add bh, dh ; ret
0x000000000009d9da : add dword ptr [rax], eax ; add bh, dh ; ret 0
0x00000000001ae37e : add dword ptr [rax], eax ; add bl, ah ; hlt ; jmp qword ptr [rcx]
0x000000000012312c : add dword ptr [rax], eax ; add bl, al ; mov eax, 0x100 ; ret
0x0000000000123132 : add dword ptr [rax], eax ; add bl, al ; mov eax, 0x102 ; ret
0x0000000000123124 : add dword ptr [rax], eax ; add bl, al ; ret
0x000000000006dc6a : add dword ptr [rax], eax ; add bl, dh ; ret
0x0000000000029448 : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x0000000000028550 : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret 0xe183
0x000000000006effd : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret
0x000000000006bd18 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x3948
0x000000000013c1c6 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000086c4c : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x0000000000080de8 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x000000000014304d : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000000664b4 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007db90 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x18eb
0x00000000000e2b78 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000009667e : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000002c535 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x0000000000072a48 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x0000000000084039 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000084160 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000002b95f : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000122652 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x0000000000082477 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x00000000000b5f9a : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000014512d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000343a7 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000002691d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x000000000008d44e : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000014b5df : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000145081 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000297fa : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x00000000000717aa : add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x0000000000071fd0 : add dword ptr [rax], eax ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000021901 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000017fa9a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000017ec4a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x000000000017ea72 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000017ea6a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x000000000017f202 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00000000000597ce : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rax, rcx ; jmp rax
0x000000000004da0c : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x000000000012e363 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000fd5e0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000102dd7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rbx
0x0000000000172161 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0x172178 ; neg eax ; ret
0x00000000000ab231 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0xab241 ; neg eax ; ret
0x00000000001700b7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jl 0x1700c8 ; neg eax ; ret
0x00000000000be7b7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0xbe784
0x00000000000cd173 : add dword ptr [rax], eax ; add byte ptr [rax], al ; js 0xcd187 ; ret
0x0000000000131be3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000132838 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov ebp, eax ; call 0x12eb18
0x000000000004a05e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000012d11a : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000102fc4 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000102e90 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000102e08 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x000000000010324e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x000000000006caf4 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x000000000006c3e1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000000d8d47 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdx, r8 ; jmp 0xd8d60
0x0000000000054d4b : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000070aae : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000007b993 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010e1a1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000087cda : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000048024 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000006b41e : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000081074 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x00000000000e2eaa : add dword ptr [rax], eax ; add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x84 ; ret 0xfffd
0x00000000000f7ce6 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000045087 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000010edeb : add dword ptr [rax], eax ; add byte ptr [rbx - 0x76b3fe18], al ; ret 0x2b49
0x0000000000073dd2 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7af0fd03], al ; ret 0
0x000000000006cde2 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x00000000001b334e : add dword ptr [rax], eax ; add byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00000000001b096e : add dword ptr [rax], eax ; add byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x000000000008742f : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbx ; call rax
0x00000000000871bf : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x1e], cl ; mov rdi, r15 ; call rax
0x0000000000086fa1 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0xa], cl ; call rax
0x0000000000066508 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret 0x34c
0x0000000000022d7c : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000ed923 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0x4118
0x0000000000066529 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0x4504
0x000000000008595e : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x000000000012a40d : add dword ptr [rax], eax ; add byte ptr [rcx - 0x80], al ; stc ; cmp cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8041
0x0000000000026554 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x000000000010fa81 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf10
0x00000000001b037e : add dword ptr [rax], eax ; add byte ptr [rcx - 0xb], dh ; jmp qword ptr [rcx]
0x000000000011042f : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret
0x00000000000c1803 : add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x0000000000079c58 : add dword ptr [rax], eax ; add byte ptr [rcx], cl ; ret 0x8948
0x0000000000023dc1 : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2576
0x00000000000ce103 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x0000000000123119 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xf3c3
0x00000000001230be : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xfc3
0x00000000001230f9 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xff83
0x000000000009e5ca : add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000dbb0c : add dword ptr [rax], eax ; add dh, dh ; ret
0x00000000001701a5 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x00000000001701b2 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x00000000001701bf : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x0000000000170177 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000170184 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000170191 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000012d681 : add dword ptr [rax], eax ; add dh, dh ; ret 0xf04
0x00000000000ff52d : add dword ptr [rax], eax ; add rsp, 0x80 ; ret
0x0000000000055975 : add dword ptr [rax], eax ; add rsp, 0xd8 ; ret
0x00000000001ae73e : add dword ptr [rax], eax ; and ah, ch ; hlt ; jmp qword ptr [rcx]
0x0000000000199bee : add dword ptr [rax], eax ; and al, 0x1c ; clc ; jmp rsp
0x000000000019820e : add dword ptr [rax], eax ; and al, 0x2f ; call rsp
0x0000000000197c56 : add dword ptr [rax], eax ; and al, 0x38 ; int1 ; jmp rsp
0x0000000000199886 : add dword ptr [rax], eax ; and al, 0xe3 ; idiv edi ; insb byte ptr [rdi], dx ; ret 1
0x00000000001998d6 : add dword ptr [rax], eax ; and al, 0xe5 ; idiv edi ; pop rsp ; ret
0x00000000001b688e : add dword ptr [rax], eax ; and byte ptr [rax - 9], cl ; jmp qword ptr [rcx]
0x00000000001afd7e : add dword ptr [rax], eax ; and byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x00000000001ba56e : add dword ptr [rax], eax ; and byte ptr [rdi], dl ; clc ; call qword ptr [rdx]
0x00000000001b043e : add dword ptr [rax], eax ; and byte ptr [rdx - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001b00de : add dword ptr [rax], eax ; and byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001ab59e : add dword ptr [rax], eax ; and dl, 0xf2 ; call qword ptr [rsi]
0x00000000001b241e : add dword ptr [rax], eax ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001b2106 : add dword ptr [rax], eax ; and rsi, rsi ; jmp qword ptr [rsi]
0x00000000001ad276 : add dword ptr [rax], eax ; call 0x221ac714
0x00000000001ad986 : add dword ptr [rax], eax ; call 0x221ace39
0x00000000001b0956 : add dword ptr [rax], eax ; call 0x221afedc
0x00000000001bab26 : add dword ptr [rax], eax ; call 0x231ba6c7
0x00000000001b1156 : add dword ptr [rax], eax ; call 0xffffffffd81b0701
0x00000000001b71b6 : add dword ptr [rax], eax ; call 0xffffffffe71b692c
0x00000000001b23d6 : add dword ptr [rax], eax ; clc ; and dh, dh ; jmp qword ptr [rsi]
0x000000000019889e : add dword ptr [rax], eax ; clc ; cmc ; jmp rsp
0x00000000001ae1a6 : add dword ptr [rax], eax ; clc ; fdivrp st(4) ; jmp qword ptr [rcx]
0x00000000001ae366 : add dword ptr [rax], eax ; clc ; loop 0x1ae364 ; call qword ptr [rsi]
0x00000000001b02a6 : add dword ptr [rax], eax ; clc ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001abea6 : add dword ptr [rax], eax ; clc ; test dh, bl ; call qword ptr [rsi]
0x000000000008dc1a : add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x00000000001ac6f6 : add dword ptr [rax], eax ; cmp al, bl ; call qword ptr [rdx]
0x00000000001b2e7e : add dword ptr [rax], eax ; cmp byte ptr [rdi], 0xf6 ; call qword ptr [rax]
0x00000000001add86 : add dword ptr [rax], eax ; cmp cl, dl ; hlt ; jmp rcx
0x00000000001ad5a6 : add dword ptr [rax], eax ; cqo ; hlt ; jmp qword ptr [rcx]
0x00000000001b2376 : add dword ptr [rax], eax ; cwde ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001b0486 : add dword ptr [rax], eax ; cwde ; jb 0x1b0485 ; jmp qword ptr [rcx]
0x00000000001b5206 : add dword ptr [rax], eax ; cwde ; jrcxz 0x1b5206 ; call rcx
0x00000000001ad136 : add dword ptr [rax], eax ; cwde ; nop ; hlt ; call qword ptr [rcx]
0x00000000001b0246 : add dword ptr [rax], eax ; cwde ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001afaa6 : add dword ptr [rax], eax ; cwde ; push rbx ; cmc ; call qword ptr [rdx]
0x00000000001afd36 : add dword ptr [rax], eax ; fcomp dword ptr [rdx - 0xb] ; jmp qword ptr [rcx]
0x00000000001adf86 : add dword ptr [rax], eax ; fcomp st(2) ; hlt ; call qword ptr [rbx]
0x00000000001ae1ee : add dword ptr [rax], eax ; fcompi st(4) ; call qword ptr [rbx]
0x00000000001b0576 : add dword ptr [rax], eax ; fdiv dword ptr [rbx - 0xb] ; jmp qword ptr [rcx]
0x00000000001b03f6 : add dword ptr [rax], eax ; fdiv dword ptr [rcx - 0xb] ; jmp qword ptr [rcx]
0x00000000001ac6a6 : add dword ptr [rax], eax ; fdiv st(3) ; call qword ptr [rdi]
0x00000000001ae9a6 : add dword ptr [rax], eax ; fdiv st(3) ; hlt ; jmp qword ptr [rsi]
0x00000000001b50c6 : add dword ptr [rax], eax ; fdivr st(6), st(0) ; jmp rsi
0x00000000001afe76 : add dword ptr [rax], eax ; fsubr dword ptr [rbx - 0xb] ; jmp qword ptr [rcx]
0x00000000001b01b6 : add dword ptr [rax], eax ; fsubr dword ptr [rsi - 0xb] ; jmp qword ptr [rcx]
0x0000000000199c4e : add dword ptr [rax], eax ; hlt ; and al, bh ; call rsp
0x00000000001ae916 : add dword ptr [rax], eax ; hlt ; jmp qword ptr [rsi]
0x0000000000197ffe : add dword ptr [rax], eax ; hlt ; pop rsp ; call rsp
0x0000000000199f2e : add dword ptr [rax], eax ; in al, -0x66 ; clc ; call rsp
0x0000000000199dae : add dword ptr [rax], eax ; in al, 0x4d ; clc ; call rsp
0x00000000001983f6 : add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; call rsp
0x0000000000199de6 : add dword ptr [rax], eax ; je 0x199e46 ; clc ; jmp rsp
0x000000000019b0ee : add dword ptr [rax], eax ; jle 0x19b0f4 ; call rsp
0x00000000001afeee : add dword ptr [rax], eax ; jne 0x1aff63 ; cmc ; call qword ptr [rcx]
0x0000000000047016 : add dword ptr [rax], eax ; jne 0x47018 ; mov rax, rbx ; pop rbx ; ret
0x00000000001acf1e : add dword ptr [rax], eax ; jo 0x1aceae ; hlt ; call qword ptr [rsi]
0x00000000001b02ee : add dword ptr [rax], eax ; jo 0x1b02ed ; jmp qword ptr [rcx]
0x00000000001b08de : add dword ptr [rax], eax ; jo 0x1b0961 ; cmc ; jmp qword ptr [rcx]
0x00000000001ac5e6 : add dword ptr [rax], eax ; js 0x1ac5c6 ; jmp qword ptr [rcx]
0x00000000001afcd6 : add dword ptr [rax], eax ; js 0x1afd39 ; cmc ; jmp qword ptr [rcx]
0x00000000001aff06 : add dword ptr [rax], eax ; js 0x1aff7b ; cmc ; jmp qword ptr [rcx]
0x00000000001b0156 : add dword ptr [rax], eax ; js 0x1b01cd ; cmc ; jmp qword ptr [rcx]
0x00000000001b03c6 : add dword ptr [rax], eax ; js 0x1b0440 ; cmc ; jmp qword ptr [rcx]
0x00000000001ba5b6 : add dword ptr [rax], eax ; js 0x1ba5d6 ; clc ; jmp qword ptr [rcx]
0x00000000001ba5b5 : add dword ptr [rax], eax ; js 0x1ba5d7 ; clc ; jmp qword ptr [rcx]
0x00000000001ad66e : add dword ptr [rax], eax ; loopne 0x1ad611 ; hlt ; jmp qword ptr [rcx]
0x00000000001af14e : add dword ptr [rax], eax ; loopne 0x1af175 ; cmc ; jmp qword ptr [rcx]
0x00000000001b028e : add dword ptr [rax], eax ; loopne 0x1b0306 ; cmc ; jmp qword ptr [rcx]
0x00000000001b04ce : add dword ptr [rax], eax ; loopne 0x1b0549 ; cmc ; call qword ptr [rsi]
0x00000000001b0bbe : add dword ptr [rax], eax ; loopne 0x1b0b4d ; cmc ; jmp rax
0x00000000001ba21e : add dword ptr [rax], eax ; loopne 0x1ba23a ; clc ; jmp qword ptr [rbx]
0x000000000019809e : add dword ptr [rax], eax ; mov ah, 0x95 ; jmp rsp
0x00000000001998ee : add dword ptr [rax], eax ; mov ah, 0xe5 ; idiv edi ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000001980fe : add dword ptr [rax], eax ; mov ah, 0xf ; call rsp
0x00000000001af11e : add dword ptr [rax], eax ; mov al, 0x1e ; cmc ; jmp qword ptr [rcx]
0x00000000001b025e : add dword ptr [rax], eax ; mov al, 0x6f ; cmc ; jmp qword ptr [rcx]
0x00000000001ad63e : add dword ptr [rax], eax ; mov al, 0x9a ; hlt ; jmp qword ptr [rcx]
0x00000000001b6d26 : add dword ptr [rax], eax ; mov byte ptr [rax - 9], bl ; jmp rdx
0x00000000001acf86 : add dword ptr [rax], eax ; mov byte ptr [rdi - 7], ah ; call qword ptr [rax]
0x00000000001af1c6 : add dword ptr [rax], eax ; mov byte ptr [rdi], bl ; cmc ; jmp qword ptr [rdx]
0x00000000001b08f6 : add dword ptr [rax], eax ; mov byte ptr [rdx - 0xb], bh ; jmp qword ptr [rcx]
0x000000000009e3bc : add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x000000000009e301 : add dword ptr [rax], eax ; mov rcx, r8 ; mov qword ptr [rdx], rcx ; ret
0x00000000001b214e : add dword ptr [rax], eax ; nop ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001b052e : add dword ptr [rax], eax ; nop ; jae 0x1b052d ; jmp qword ptr [rcx]
0x00000000001ae4be : add dword ptr [rax], eax ; nop ; out 0xf4, al ; jmp qword ptr [rbx]
0x00000000001b016e : add dword ptr [rax], eax ; nop ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001afcee : add dword ptr [rax], eax ; nop ; pop rdx ; cmc ; jmp qword ptr [rcx]
0x00000000001aeb1e : add dword ptr [rax], eax ; nop ; std ; hlt ; jmp qword ptr [rcx]
0x00000000001ac5fe : add dword ptr [rax], eax ; nop ; xlatb ; jmp qword ptr [rcx]
0x00000000001ae726 : add dword ptr [rax], eax ; or ah, ch ; hlt ; jmp qword ptr [rcx]
0x00000000001b5bc6 : add dword ptr [rax], eax ; or bl, ah ; sti ; call rsi
0x00000000001afd66 : add dword ptr [rax], eax ; or byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x00000000001b0426 : add dword ptr [rax], eax ; or byte ptr [rdx - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001b2c86 : add dword ptr [rax], eax ; or byte ptr [rsi + rsi*8], bh ; call qword ptr [rax]
0x00000000001b00c6 : add dword ptr [rax], eax ; or byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001af0a6 : add dword ptr [rax], eax ; or byte ptr [rsi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001ae56e : add dword ptr [rax], eax ; out -0xc, eax ; jmp qword ptr [rcx]
0x00000000001b0126 : add dword ptr [rax], eax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b2436 : add dword ptr [rax], eax ; pop rax ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001b8c96 : add dword ptr [rax], eax ; pop rax ; fcompi st(7) ; jmp rdi
0x00000000001ab7b6 : add dword ptr [rax], eax ; pop rax ; in eax, dx ; call rcx
0x00000000001b0306 : add dword ptr [rax], eax ; pop rax ; jo 0x1b0305 ; jmp qword ptr [rcx]
0x00000000001b08c6 : add dword ptr [rax], eax ; pop rax ; jp 0x1b08c5 ; jmp qword ptr [rcx]
0x00000000001acfc6 : add dword ptr [rax], eax ; pop rax ; stc ; call qword ptr [rax]
0x00000000001ad6b6 : add dword ptr [rax], eax ; pop rax ; wait ; hlt ; jmp qword ptr [rcx]
0x000000000009e43b : add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x0000000000197cee : add dword ptr [rax], eax ; pop rdx ; int1 ; jmp rsp
0x00000000001b220e : add dword ptr [rax], eax ; push rax ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001b4fee : add dword ptr [rax], eax ; push rax ; fdiv st(6) ; jmp qword ptr [rdi]
0x00000000001afdae : add dword ptr [rax], eax ; push rax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x000000000019891e : add dword ptr [rax], eax ; push rsp ; add esi, esi ; jmp rsp
0x0000000000198ea6 : add dword ptr [rax], eax ; push rsp ; mov dh, dh ; jmp rsp
0x0000000000199f0e : add dword ptr [rax], eax ; push rsp ; xchg eax, esi ; clc ; jmp rsp
0x00000000001ac62e : add dword ptr [rax], eax ; rcl bh, 0xf3 ; jmp qword ptr [rcx]
0x00000000001b24fe : add dword ptr [rax], eax ; rcl byte ptr [rdi], 0xfc ; jmp qword ptr [rsi]
0x0000000000088e82 : add dword ptr [rax], eax ; ret
0x00000000001aec8e : add dword ptr [rax], eax ; rol byte ptr [rdx], 1 ; cmc ; call qword ptr [rdi]
0x00000000001b96ce : add dword ptr [rax], eax ; sal bh, 0xf7 ; call qword ptr [rdx]
0x00000000001ac8d6 : add dword ptr [rax], eax ; sar dword ptr [rcx], -0x19 ; jmp qword ptr [rax]
0x00000000001ac506 : add dword ptr [rax], eax ; sbb bh, dl ; call qword ptr [rbx]
0x00000000001ac546 : add dword ptr [rax], eax ; sbb bh, dl ; call qword ptr [rsi]
0x00000000001ac586 : add dword ptr [rax], eax ; sbb bh, dl ; jmp qword ptr [rcx]
0x00000000001b0986 : add dword ptr [rax], eax ; sbb byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x00000000001b98a6 : add dword ptr [rax], eax ; sbb byte ptr [rcx], al ; clc ; call qword ptr [rdx]
0x00000000001b0696 : add dword ptr [rax], eax ; sbb byte ptr [rsi - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001af0ee : add dword ptr [rax], eax ; sbb byte ptr [rsi], 0xf5 ; jmp qword ptr [rcx]
0x00000000001ae676 : add dword ptr [rax], eax ; sbb cl, ch ; hlt ; jmp qword ptr [rcx]
0x00000000001b217e : add dword ptr [rax], eax ; shl byte ptr [rcx], 0xf6 ; jmp qword ptr [rsi]
0x00000000001b914e : add dword ptr [rax], eax ; sub ah, 0xf7 ; call rax
0x00000000001ae1d6 : add dword ptr [rax], eax ; sub bh, bl ; hlt ; jmp qword ptr [rcx]
0x00000000001b0186 : add dword ptr [rax], eax ; test al, 0x6e ; cmc ; jmp qword ptr [rcx]
0x00000000001b0546 : add dword ptr [rax], eax ; test al, 0x73 ; cmc ; jmp qword ptr [rcx]
0x00000000001ad376 : add dword ptr [rax], eax ; test al, 0x93 ; hlt ; jmp qword ptr [rcx]
0x00000000001ad4b6 : add dword ptr [rax], eax ; test al, 0x95 ; hlt ; jmp qword ptr [rcx]
0x00000000001ba6a6 : add dword ptr [rax], eax ; test al, 0x99 ; sti ; jmp qword ptr [rdx]
0x00000000001ac616 : add dword ptr [rax], eax ; test al, 0xd7 ; jmp qword ptr [rcx]
0x00000000001b56f6 : add dword ptr [rax], eax ; test al, 0xf2 ; sti ; call rcx
0x00000000001ad9e6 : add dword ptr [rax], eax ; test al, 0xf4 ; jmp qword ptr [rcx]
0x00000000001aeb36 : add dword ptr [rax], eax ; test al, 0xfd ; hlt ; jmp qword ptr [rcx]
0x00000000001996be : add dword ptr [rax], eax ; test byte ptr [rcx - 9], dl ; jmp rsp
0x0000000000198bee : add dword ptr [rax], eax ; test byte ptr [rdx - 0xa], bl ; call rsp
0x00000000001995d6 : add dword ptr [rax], eax ; test byte ptr [rdx - 9], al ; jmp rsp
0x000000000019b2be : add dword ptr [rax], eax ; test ch, bl ; std ; call rsp
0x000000000019a046 : add dword ptr [rax], eax ; test dl, bh ; clc ; jmp rsp
0x00000000001ad69e : add dword ptr [rax], eax ; wait ; hlt ; jmp qword ptr [rcx]
0x00000000001998be : add dword ptr [rax], eax ; xchg eax, esp ; in al, -9 ; call qword ptr [rbx + rax*8]
0x000000000019b0de : add dword ptr [rax], eax ; xchg eax, esp ; push rbx ; cld ; jmp rsp
0x000000000019b03e : add dword ptr [rax], eax ; xchg eax, esp ; sti ; jmp rsp
0x0000000000199ec6 : add dword ptr [rax], eax ; xchg eax, esp ; test bh, al ; jmp rsp
0x00000000001ac5b6 : add dword ptr [rax], eax ; xlatb ; jmp qword ptr [rcx]
0x00000000001978d6 : add dword ptr [rax], eax ; xor al, 0x72 ; out dx, eax ; jmp rsp
0x0000000000197a46 : add dword ptr [rax], eax ; xor al, 0xec ; out dx, eax ; jmp rsp
0x00000000001ac59e : add dword ptr [rax], eax ; xor bh, dl ; jmp qword ptr [rcx]
0x00000000001bafee : add dword ptr [rax], eax ; xor byte ptr [rbp - 8], dl ; call qword ptr [rax]
0x00000000001b099e : add dword ptr [rax], eax ; xor byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x00000000001b04fe : add dword ptr [rax], eax ; xor byte ptr [rbx - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001b60be : add dword ptr [rax], eax ; xor byte ptr [rdi - 9], al ; jmp qword ptr [rsi]
0x00000000001b06ae : add dword ptr [rax], eax ; xor byte ptr [rsi - 0xb], dh ; jmp qword ptr [rcx]
0x000000000008da71 : add dword ptr [rax], edi ; ret
0x0000000000020ccc : add dword ptr [rax], edi ; ret 0xaf72
0x0000000000099077 : add dword ptr [rbp + 0x19], ecx ; ror byte ptr [rcx - 0x7d], cl ; ret 0x8306
0x000000000009726a : add dword ptr [rbp + 0x38], eax ; ret 0x850f
0x00000000000a9f6c : add dword ptr [rbp + 0x41], ebx ; pop rsp ; pop r13 ; ret
0x000000000011732f : add dword ptr [rbp + 0x741189d2], eax ; ret 0x3949
0x00000000000c368b : add dword ptr [rbp + 1], ecx ; ret
0x0000000000048020 : add dword ptr [rbp - 0x23], esi ; mov eax, 1 ; ret
0x000000000003d32d : add dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000951f0 : add dword ptr [rbp - 0x77], ecx ; ret 0xc149
0x000000000004c571 : add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x00000000000e3beb : add dword ptr [rbp - 0x7cb7febd], ecx ; ret
0x0000000000105479 : add dword ptr [rbp - 0xc], esi ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000096aec : add dword ptr [rbp - 0xf], esi ; pop rbx ; pop rbp ; ret
0x0000000000096954 : add dword ptr [rbp - 0xf], esi ; xor eax, eax ; pop rbx ; ret
0x00000000000969fc : add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x000000000015afe2 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000000d48e2 : add dword ptr [rbx + 0x294803e0], eax ; ret 0x148
0x000000000000271e : add dword ptr [rbx + 0x2b], 0x821055b8 ; ret 0x617e
0x000000000011c728 : add dword ptr [rbx + 0x460f09fb], eax ; ret
0x00000000000d5164 : add dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x000000000012f2a8 : add dword ptr [rbx + 0x94806e3], eax ; ret
0x00000000000d5161 : add dword ptr [rbx + 4], 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010c1ad : add dword ptr [rbx + rcx*4 + 0x3d], ecx ; ret
0x000000000009d085 : add dword ptr [rbx + rdi + 0xf], esi ; mov dh, 0x45 ; ret 0x8348
0x000000000009b141 : add dword ptr [rbx + rdi + 0xf], esi ; mov dh, 0x55 ; ret 0x8348
0x00000000000d682a : add dword ptr [rbx - 0x3d], ebx ; nop dword ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000123442 : add dword ptr [rbx - 0x77], edx ; ror dword ptr [rdi], cl ; xchg eax, esi ; ret 0xfb83
0x0000000000033381 : add dword ptr [rbx - 0x7cb70030], eax ; ret
0x00000000000b66d9 : add dword ptr [rbx - 0x7cb7fe15], eax ; ret 0x8504
0x00000000000d62df : add dword ptr [rbx - 0x7cb7fe3b], eax ; ret
0x00000000000d7ef4 : add dword ptr [rbx - 0x7cb7fe40], eax ; ret 0x4801
0x000000000007d2c5 : add dword ptr [rbx - 0xd], ebx ; ret
0x00000000001bbb84 : add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x00000000001a488a : add dword ptr [rbx], eax ; mov edi, 0x380e0a01 ; ret
0x00000000001a4ada : add dword ptr [rbx], eax ; or eax, 0x380e0a03 ; ret
0x000000000019c0ab : add dword ptr [rbx], eax ; ret 0xe01
0x00000000001bbb81 : add dword ptr [rbx], ecx ; fadd dword ptr [rcx] ; add esi, ebp ; add al, byte ptr [rax] ; ret
0x0000000000131bd1 : add dword ptr [rcx + 0x1b802], ecx ; add byte ptr [rax], al ; ret
0x0000000000099314 : add dword ptr [rcx + 0x29], ecx ; ret
0x00000000000abcff : add dword ptr [rcx + 0x39], eax ; ret
0x0000000000094550 : add dword ptr [rcx + 0x39], ecx ; ret
0x00000000000be8c9 : add dword ptr [rcx + 0x39], ecx ; ret 0x850f
0x0000000000023dea : add dword ptr [rcx + 0x39], ecx ; ret 0xe077
0x0000000000024298 : add dword ptr [rcx + 0x39], ecx ; ret 0xe277
0x00000000000e33e0 : add dword ptr [rcx + 0x63], ecx ; ret
0x00000000000b1441 : add dword ptr [rcx + 0xf], eax ; xchg eax, ebp ; ret 0x2041
0x00000000000eb22b : add dword ptr [rcx + 0xf], eax ; xchg eax, esp ; ret
0x000000000002d712 : add dword ptr [rcx + rdi - 0x7d], esi ; ret
0x000000000013a36c : add dword ptr [rcx + rdx*2 + 0x48], esi ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000001862a8 : add dword ptr [rcx - 0x13], ebp ; jmp rsp
0x0000000000046967 : add dword ptr [rcx - 0x3a], eax ; add al, 0x24 ; and byte ptr [rax - 0x77], cl ; ret 0x8949
0x00000000000816e2 : add dword ptr [rcx - 0x75], ecx ; push rax ; or dh, dh ; ret 0xf04
0x00000000000a2096 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x000000000006c1b8 : add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000004bc8c : add dword ptr [rcx - 0x77], ecx ; push rbp ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000c26c5 : add dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000022d2d : add dword ptr [rcx - 0x7d], ecx ; ret 0x4101
0x000000000012370f : add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x000000000009a8e4 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4201
0x0000000000099f47 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4301
0x0000000000031491 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4804
0x0000000000123514 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4c02
0x000000000010d5a5 : add dword ptr [rcx - 0x7d], ecx ; ret 0x8408
0x00000000000c1ce9 : add dword ptr [rcx - 0x7f], eax ; ret
0x000000000008d467 : add dword ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000012a38b : add dword ptr [rcx], 0xbe0f0000 ; ret 0xe883
0x00000000000aba6b : add dword ptr [rcx], eax ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000012312b : add dword ptr [rcx], eax ; add byte ptr [rax], al ; ret
0x00000000000d6725 : add dword ptr [rcx], ebx ; rol byte ptr [rbx - 0x3f7cfd20], 8 ; ret
0x00000000000d676f : add dword ptr [rcx], ebx ; sal bh, 0xd0 ; and eax, 2 ; ret
0x0000000000109453 : add dword ptr [rcx], edi ; fmul dword ptr [rdi] ; ret
0x00000000000e766b : add dword ptr [rcx], edi ; ret
0x00000000000d8ad9 : add dword ptr [rcx], edi ; ret 0xe875
0x00000000000e5363 : add dword ptr [rcx], edi ; ror byte ptr [rdi], 1 ; ret 0x3941
0x000000000013b9c0 : add dword ptr [rdi + 0x28], 4 ; mov eax, 1 ; ret
0x000000000013b980 : add dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x000000000013ba0f : add dword ptr [rdi + 0x28], esi ; mov rax, qword ptr [rdi + 0x18] ; ret
0x0000000000173dea : add dword ptr [rdi + 3], esi ; ret
0x0000000000094f87 : add dword ptr [rdi - 0x1a], edi ; ret
0x00000000001af80b : add dword ptr [rdi], 2 ; cwde ; ret
0x00000000001aa733 : add dword ptr [rdi], 2 ; ret
0x00000000001baf63 : add dword ptr [rdi], 3 ; insb byte ptr [rdi], dx ; add dword ptr [rdx], ecx ; ret
0x00000000001adaf3 : add dword ptr [rdi], 3 ; popfq ; add ecx, dword ptr [rdx] ; ret
0x0000000000124980 : add dword ptr [rdi], ecx ; add eax, 0x48c48348 ; pop rbx ; pop rbp ; ret
0x00000000000d50d8 : add dword ptr [rdi], ecx ; lahf ; ret 0x82eb
0x000000000002de35 : add dword ptr [rdi], ecx ; mov bh, 0xc0 ; ret
0x0000000000025942 : add dword ptr [rdi], ecx ; mov dh, 0x34 ; adc dword ptr [rax + 0x39], ecx ; ret 0x8840
0x00000000000c1981 : add dword ptr [rdi], ecx ; sahf ; ret 0x1fbd
0x00000000000a9fcc : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0x74e9
0x00000000000a9fb7 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x00000000000343a3 : add dword ptr [rdi], ecx ; test byte ptr [rsi], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00000000001682fe : add dword ptr [rdi], ecx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x00000000000e3b32 : add dword ptr [rdi], ecx ; test dword ptr [rbx - 0xa000000], esi ; ret 0x7420
0x000000000005d4e0 : add dword ptr [rdi], ecx ; test dword ptr [rcx - 0x7600000a], ecx ; ret
0x00000000000ec097 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xc085
0x0000000000046d84 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd084
0x00000000000a9e95 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xfd83
0x000000000004b4d3 : add dword ptr [rdx + 0x14], ecx ; add al, ch ; push rsp ; ret 2
0x00000000000aa390 : add dword ptr [rdx + 0x2b], 0xd9748104 ; ret
0x00000000000a2054 : add dword ptr [rdx + 0x48028801], ecx ; mov eax, edi ; ret
0x000000000019c0a7 : add dword ptr [rdx + 0xe], eax ; rol byte ptr [rcx], 3 ; ret 0xe01
0x00000000000a9bdc : add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000006b3c7 : add dword ptr [rdx + 4], 1 ; ret
0x000000000006b428 : add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x000000000009f18d : add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000108e5b : add dword ptr [rdx + rax*2], 1 ; ret
0x00000000001a37d6 : add dword ptr [rdx + rax], -0xc ; ret
0x00000000001a4b45 : add dword ptr [rdx], 0x43 ; ret
0x00000000001a6eee : add dword ptr [rdx], 0x4b ; ret
0x00000000001ba42c : add dword ptr [rdx], 0x51 ; ret
0x00000000001af47c : add dword ptr [rdx], 0x53 ; ret
0x00000000001adf05 : add dword ptr [rdx], 0x54 ; ret
0x00000000001b2553 : add dword ptr [rdx], 0x5b ; ret
0x000000000019f34c : add dword ptr [rdx], 0x63 ; ret
0x000000000019fa8c : add dword ptr [rdx], 0x6f ; ret
0x00000000001a2794 : add dword ptr [rdx], 0x77 ; ret
0x000000000019f5b5 : add dword ptr [rdx], 2 ; outsd dx, dword ptr [rsi] ; ret
0x00000000001a200c : add dword ptr [rdx], 2 ; pop rsi ; ret
0x00000000001a1de4 : add dword ptr [rdx], 2 ; push rsi ; ret
0x00000000001a6ee4 : add dword ptr [rdx], 2 ; ret
0x00000000001b530c : add dword ptr [rdx], 2 ; xchg eax, ecx ; ret
0x000000000012351f : add dword ptr [rdx], eax ; pop rbx ; ret
0x000000000019dd41 : add dword ptr [rdx], ecx ; ret
0x000000000012351e : add dword ptr [rdx], r8d ; pop rbx ; ret
0x000000000007d2bf : add dword ptr [rip + 0x348512], 1 ; pop rbx ; ret
0x000000000007cad8 : add dword ptr [rip + 0x348c85], 1 ; ret
0x00000000000a1fe5 : add dword ptr [rsi + 0xf], esp ; adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x00000000001a69cf : add dword ptr [rsi + rax*4], 3 ; mov word ptr [rdx], es ; push rdx ; ret
0x00000000001a0bde : add dword ptr [rsi + rcx + 0x10], ecx ; je 0x1a0bf4 ; ret
0x00000000001a0bec : add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000000a2067 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000001a8640 : add dword ptr [rsi], 0x77 ; ret
0x00000000001a3c86 : add dword ptr [rsi], 0xa ; ret
0x00000000001abae0 : add dword ptr [rsi], 2 ; ret
0x00000000001a3cf8 : add dword ptr [rsi], 2 ; xchg eax, ebp ; ret
0x00000000001a64a5 : add dword ptr [rsi], 3 ; mov byte ptr [rcx], al ; ret
0x00000000001af616 : add dword ptr [rsp + rbp*2], 0xa ; ret
0x000000000009913e : add dword ptr [rsp + rdi + 0xf], esi ; mov dh, 0x45 ; ret 0x8349
0x00000000000d686c : add dword ptr [rsp + rdi*4 - 0x7d], esi ; jrcxz 0xd6883 ; je 0xd6813 ; pop rbx ; ret
0x00000000001ae1bd : add dword ptr cs:[rax], eax ; adc bh, bl ; hlt ; jmp qword ptr [rcx]
0x00000000001ae1a5 : add dword ptr cs:[rax], eax ; clc ; fdivrp st(4) ; jmp qword ptr [rcx]
0x0000000000197ffd : add dword ptr cs:[rax], eax ; hlt ; pop rsp ; call rsp
0x000000000009d084 : add dword ptr cs:[rbx + rdi + 0xf], esi ; mov dh, 0x45 ; ret 0x8348
0x00000000000343a6 : add dword ptr ds:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00000000001af14d : add dword ptr ds:[rax], eax ; loopne 0x1af176 ; cmc ; jmp qword ptr [rcx]
0x00000000001af11d : add dword ptr ds:[rax], eax ; mov al, 0x1e ; cmc ; jmp qword ptr [rcx]
0x00000000001af1c5 : add dword ptr ds:[rax], eax ; mov byte ptr [rdi], bl ; cmc ; jmp qword ptr [rdx]
0x00000000001af0ed : add dword ptr ds:[rax], eax ; sbb byte ptr [rsi], 0xf5 ; jmp qword ptr [rcx]
0x000000000014d077 : add dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001ad985 : add dword ptr es:[rax], eax ; call 0x221ace3a
0x00000000000d676e : add dword ptr gs:[rcx], ebx ; sal bh, 0xd0 ; and eax, 2 ; ret
0x00000000001ae9a5 : add dword ptr ss:[rax], eax ; fdiv st(3) ; hlt ; jmp qword ptr [rsi]
0x00000000001ae915 : add dword ptr ss:[rax], eax ; hlt ; jmp qword ptr [rsi]
0x000000000008b12b : add eax, 0x10 ; ret
0x000000000008e921 : add eax, 0x10e4a ; ret
0x0000000000134252 : add eax, 0x14634800 ; nop ; add rax, rdx ; jmp rax
0x000000000002cb3a : add eax, 0x15f826 ; ret
0x0000000000020932 : add eax, 0x16b574 ; ret
0x0000000000020942 : add eax, 0x16d443 ; ret
0x00000000000becc0 : add eax, 0x16e ; ret
0x000000000008b0df : add eax, 0x1713c ; ret
0x0000000000088e7f : add eax, 0x1777c ; ret
0x000000000008e7bb : add eax, 0x1b330 ; ret
0x000000000008dc17 : add eax, 0x1ba24 ; cmove rax, rdx ; ret
0x00000000001bc905 : add eax, 0x1e70000 ; add byte ptr [rax], al ; ret 4
0x00000000001a94d4 : add eax, 0x2300e44 ; ret 0xe0a
0x00000000001a5434 : add eax, 0x2300e4a ; ret
0x00000000001a75e4 : add eax, 0x2300e55 ; ret
0x000000000008e195 : add eax, 0x26 ; ret
0x0000000000140755 : add eax, 0x283cb6 ; call qword ptr [rax]
0x0000000000140142 : add eax, 0x2842c9 ; call qword ptr [rax]
0x0000000000137bb2 : add eax, 0x28b2e1 ; add rsp, 8 ; ret
0x0000000000137b82 : add eax, 0x28b379 ; add rsp, 8 ; ret
0x0000000000137b22 : add eax, 0x28b461 ; add rsp, 8 ; ret
0x0000000000137b52 : add eax, 0x28b489 ; add rsp, 8 ; ret
0x000000000008cfc3 : add eax, 0x29000000 ; ret
0x00000000000c1d3a : add eax, 0x2907fec1 ; ret 0x8944
0x00000000000c1e7a : add eax, 0x2941c229 ; ret 0x6b45
0x0000000000128202 : add eax, 0x29ade1 ; mov rax, qword ptr fs:[rax] ; ret
0x000000000012bdca : add eax, 0x29c04d ; add rsp, 8 ; ret
0x000000000012bdb1 : add eax, 0x29c066 ; test eax, eax ; je 0x12bdc9 ; ret
0x000000000012b1ca : add eax, 0x29cbd1 ; pop rbx ; ret
0x000000000012b192 : add eax, 0x29cc09 ; pop rbx ; ret
0x000000000012b0d3 : add eax, 0x29ccc8 ; pop rbx ; ret
0x0000000000127b4b : add eax, 0x29ff74 ; test eax, eax ; je 0x127b61 ; ret
0x0000000000120712 : add eax, 0x2a4161 ; ret
0x000000000011fdd0 : add eax, 0x2a4a8b ; add rsp, 8 ; ret
0x0000000000115229 : add eax, 0x2b1f52 ; pop rbp ; ret
0x0000000000109a82 : add eax, 0x2b93e9 ; mov eax, dword ptr [rax + 0x38] ; ret
0x0000000000101700 : add eax, 0x2c4b7b ; add rsp, 0x18 ; ret
0x00000000001016ac : add eax, 0x2c4c0f ; pop rbp ; pop r12 ; ret
0x0000000000101168 : add eax, 0x2c50c3 ; add rsp, 8 ; ret
0x0000000000101109 : add eax, 0x2c5142 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000168384 : add eax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x00000000000fdc36 : add eax, 0x2c6b65 ; mov rdx, rax ; jmp 0xfdbd6
0x00000000000fdba0 : add eax, 0x2c6bfb ; add rsp, 8 ; ret
0x00000000000ff22b : add eax, 0x2c6f20 ; add rsp, 8 ; ret
0x00000000000fecf9 : add eax, 0x2c7382 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fda6f : add eax, 0x2c8584 ; ret
0x00000000000fd8af : add eax, 0x2c8744 ; ret
0x00000000000fd6dc : add eax, 0x2c8917 ; add rsp, 8 ; ret
0x00000000001a64a3 : add eax, 0x3068345 ; mov byte ptr [rcx], al ; ret
0x00000000000badae : add eax, 0x30ac6d ; add rsp, 8 ; ret
0x000000000008cda7 : add eax, 0x338b3c ; add rsp, 8 ; ret
0x0000000000083530 : add eax, 0x33f9ab ; mov qword ptr [rax], rdi ; ret
0x0000000000081306 : add eax, 0x341ac5 ; xor edi, edi ; call qword ptr [rax]
0x00000000000810e1 : add eax, 0x341cea ; mov rdi, r14 ; call qword ptr [rax]
0x0000000000083541 : add eax, 0x34227e ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000007ca42 : add eax, 0x347ad9 ; ret
0x000000000007d2c0 : add eax, 0x348512 ; add dword ptr [rbx - 0xd], ebx ; ret
0x000000000007cb46 : add eax, 0x348c19 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000031fc4 : add eax, 0x358d4800 ; ret
0x000000000013ac3e : add eax, 0x358d4800 ; ret 0x53e
0x0000000000137355 : add eax, 0x358d4800 ; ret 0x581
0x000000000006ac35 : add eax, 0x35aac6 ; pop rbx ; pop rbp ; ret
0x00000000001159b2 : add eax, 0x37d09 ; ret
0x0000000000115aa2 : add eax, 0x37fb9 ; ret
0x00000000000368ac : add eax, 0x38c7db ; mov eax, edx ; ret
0x0000000000036871 : add eax, 0x38c812 ; ret
0x0000000000036861 : add eax, 0x38c826 ; ret
0x00000000001b1dd1 : add eax, 0x38d048c ; mov es, word ptr [rdx] ; add ah, bh ; ret
0x000000000003b0d2 : add eax, 0x38d3df ; add rsp, 8 ; ret
0x000000000002d9cd : add eax, 0x39541e ; mov qword ptr [rax], rdx ; ret
0x0000000000029c92 : add eax, 0x39ac59 ; ret
0x0000000000021a52 : add eax, 0x3a6919 ; ret
0x0000000000021a42 : add eax, 0x3a6939 ; ret
0x0000000000138e35 : add eax, 0x3d8d4800 ; ret 0x535
0x0000000000134535 : add eax, 0x3d8d4800 ; ret 0x57e
0x0000000000134435 : add eax, 0x3d8d4800 ; ret 0x57f
0x00000000000f56e7 : add eax, 0x48000000 ; add esp, 0x18 ; ret
0x000000000016a8b8 : add eax, 0x48054289 ; lea eax, dword ptr [rdx + 8] ; ret
0x0000000000166568 : add eax, 0x48054289 ; mov eax, edi ; ret
0x00000000000a53c6 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000137a4b : add eax, 0x48640029 ; mov dword ptr [rax], edx ; ret
0x0000000000124982 : add eax, 0x48c48348 ; pop rbx ; pop rbp ; ret
0x000000000009df2a : add eax, 0x48fb4789 ; mov eax, edi ; ret
0x000000000016a939 : add eax, 0x5428948 ; lea rax, qword ptr [rdx + 0xc] ; ret
0x00000000001665a9 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x0000000000105b20 : add eax, 0x5b000000 ; pop rbp ; ret
0x000000000006e4b6 : add eax, 0x5b000000 ; ret
0x0000000000001569 : add eax, 0x5be0000 ; add byte ptr [rax], al ; ret 5
0x000000000018063d : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x000000000007ed58 : add eax, 0x5c415d5b ; ret
0x00000000000ef40d : add eax, 0x5d000000 ; pop r12 ; ret
0x000000000012a902 : add eax, 0x61a5e ; ret
0x00000000001bc469 : add eax, 0x690000 ; add byte ptr [rax], al ; ret
0x00000000000d2797 : add eax, 0x740e3941 ; ret
0x00000000000b943a : add eax, 0x74db8500 ; or bh, byte ptr [rcx] ; ret
0x00000000001bb81d : add eax, 0x75200002 ; clc ; call qword ptr [rdi]
0x00000000000b93e6 : add eax, 0x75db8500 ; fsubr qword ptr [rcx] ; ret
0x000000000002e50f : add eax, 0x788d4800 ; sbb dword ptr [rax - 0x77], ecx ; ret
0x000000000008efbb : add eax, 0x80 ; ret
0x000000000003d3ad : add eax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000a5bce : add eax, 0x82b850f ; add byte ptr [rax], al ; ret
0x00000000000d8ad3 : add eax, 0x83077500 ; rol byte ptr [rcx], 0x39 ; ret 0xe875
0x00000000000a9e8f : add eax, 0x8307e083 ; clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xfd83
0x00000000000e2824 : add eax, 0x83410000 ; cld ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xb60f
0x00000000000f7bab : add eax, 0x83480000 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000144d1d : add eax, 0x83480000 ; ret 0x4910
0x0000000000147871 : add eax, 0x83480000 ; ret 0xe910
0x0000000000144c71 : add eax, 0x83480000 ; ret 0xeb10
0x00000000000d497d : add eax, 0x83480f75 ; ret
0x000000000016a8bb : add eax, 0x8428d48 ; ret
0x00000000001bb8b5 : add eax, 0x88880002 ; sti ; call rcx
0x000000000012f2fb : add eax, 0x894c0000 ; ret
0x000000000006f28e : add eax, 0x89c08500 ; ret 0x8389
0x00000000001150f9 : add eax, 0x89c78944 ; ret
0x0000000000026b0d : add eax, 0x8d480000 ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000026af1 : add eax, 0x8d480000 ; add dword ptr [rax + 0x39], ecx ; ret
0x0000000000026b29 : add eax, 0x8d480000 ; add ecx, dword ptr [rax + 0x39] ; ret
0x0000000000026e6e : add eax, 0x8d490000 ; add r9b, byte ptr [r8 + 0x39] ; ret
0x0000000000026e8b : add eax, 0x8d490000 ; add r9d, dword ptr [r8 + 0x39] ; ret
0x00000000000a7272 : add eax, 0x997850f ; add byte ptr [rax], al ; ret
0x0000000000137b76 : add eax, 0xa0 ; add rsp, 8 ; ret
0x0000000000137ba6 : add eax, 0xa8 ; add rsp, 8 ; ret
0x0000000000093a10 : add eax, 0xb3db ; ret
0x00000000001979dd : add eax, 0xb5040001 ; out dx, eax ; call rsp
0x00000000000939e1 : add eax, 0xb63a ; ret
0x0000000000093a24 : add eax, 0xbcda7 ; ret
0x000000000008d06c : add eax, 0xbd01f ; ret
0x000000000008ccdc : add eax, 0xbd27f ; ret
0x000000000008e962 : add eax, 0xbf109 ; ret
0x000000000008a86c : add eax, 0xbf5af ; ret
0x00000000000892cf : add eax, 0xc ; ret
0x000000000014004e : add eax, 0xc0310000 ; pop rbx ; ret
0x000000000016ecba : add eax, 0xc0310000 ; ret
0x0000000000000451 : add eax, 0xc1c107c ; ret 0x4412
0x00000000000ab26d : add eax, 0xc236e ; ret
0x00000000000abe49 : add eax, 0xc3452 ; ret
0x000000000016a93d : add eax, 0xc428d48 ; ret
0x00000000000a6a0d : add eax, 0xc478d48 ; ret
0x00000000000abe51 : add eax, 0xc5d0a ; ret
0x00000000000310d7 : add eax, 0xc7834900 ; or byte ptr [rax + 1], cl ; ret
0x000000000008f01e : add eax, 0xd ; ret
0x00000000000a784d : add eax, 0xd478d48 ; ret
0x000000000008c9bf : add eax, 0xd9c3c ; ret
0x000000000008ee4f : add eax, 0xda32c ; ret
0x000000000008a75f : add eax, 0xda6ec ; ret
0x000000000008ef6f : add eax, 0xdba1c ; ret
0x000000000008e1a9 : add eax, 0xdfab2 ; ret
0x000000000008e1b1 : add eax, 0xe223a ; ret
0x000000000019afb5 : add eax, 0xe3b40002 ; cli ; jmp rsp
0x000000000008906c : add eax, 0xe705f ; ret
0x000000000013b855 : add eax, 0xe8000000 ; ret 0xef2d
0x000000000009d97e : add eax, 0xe9000000 ; ret
0x00000000000abe35 : add eax, 0xe916 ; ret
0x00000000000d3b36 : add eax, 0xf410000 ; mov dh, 0x55 ; add byte ptr [rcx], bh ; ret 0x840f
0x00000000000ab265 : add eax, 0xf596 ; ret
0x0000000000103272 : add eax, 0xf6310000 ; mov rdi, r12 ; call rbx
0x0000000000103297 : add eax, 0xf6310000 ; mov rdi, r13 ; call rbx
0x00000000001033e0 : add eax, 0xf6310000 ; mov rdi, r14 ; call rbx
0x0000000000103479 : add eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x000000000015afd3 : add eax, 0xf7f0ff3 ; ret
0x000000000004c86d : add eax, 0xf8834800 ; dec dword ptr [rax - 0x77] ; ret
0x000000000004d690 : add eax, 0xf8834800 ; dec dword ptr [rcx - 0x77] ; ret
0x000000000004ed4c : add eax, 0xf8834800 ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x0000000000115971 : add eax, 0xfff8969a ; ret
0x0000000000115a61 : add eax, 0xfff89cfa ; ret
0x0000000000115aeb : add eax, 0xfff93ff0 ; ret
0x000000000013662e : add eax, 0xffff97dd ; mov rdi, rax ; call qword ptr [r10]
0x00000000000569a7 : add eax, 0xfffffd06 ; add rax, rdx ; jmp rax
0x00000000000f61b7 : add eax, 0xffffffb4 ; cmove rax, rdx ; ret
0x000000000010934b : add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x00000000001090fc : add eax, 1 ; mov word ptr [rdx], ax ; ret
0x00000000000a9f6a : add eax, 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008edfb : add eax, 1 ; ret
0x00000000000218e5 : add eax, 2 ; push rax ; call rbx
0x00000000000ab508 : add eax, 2 ; ret
0x00000000000ab521 : add eax, 3 ; ret
0x00000000000d672b : add eax, 8 ; ret
0x0000000000020be9 : add eax, dword ptr [0] ; ret
0x0000000000040f72 : add eax, dword ptr [rax + rax] ; add cl, ch ; ret 0xffec
0x00000000000b0275 : add eax, dword ptr [rax] ; add al, ch ; ret
0x000000000007ef03 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x00000000000e013d : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xe283
0x00000000000828e4 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000020c2a : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f1538 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x3101
0x0000000000121ec8 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x0000000000144ebd : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147a11 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144ee1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001328ae : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000012f02b : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000108a56 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000114f47 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; cmovne eax, edx ; ret
0x0000000000101fdc : add eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x00000000001037bd : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000103814 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000103894 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000103994 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000000ab563 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000fd263 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall ; mov eax, edx ; ret
0x00000000001219a4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall ; ret
0x00000000000a9fc7 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x50f0fe40], al ; ret 0x74e9
0x000000000004605e : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x39], cl ; ret 0xea75
0x0000000000137bff : add eax, dword ptr [rax] ; add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8e0f
0x0000000000114815 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x00000000000dd332 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret 0x3945
0x000000000003af8a : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7e37763a], cl ; ret 0x3039
0x0000000000080423 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x0000000000124dd5 : add eax, dword ptr [rax] ; add byte ptr [rcx], bh ; ret
0x0000000000054ee8 : add eax, dword ptr [rax] ; add cl, bl ; in eax, -0x21 ; loopne 0x54e81 ; ret 0xe680
0x00000000000fd3a7 : add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x00000000000aa1f0 : add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000000aa210 : add eax, dword ptr [rax] ; ret
0x00000000001aa023 : add eax, dword ptr [rbx + 0xa810204] ; ret
0x00000000001a39da : add eax, dword ptr [rbx + 0xe] ; and byte ptr [rbx + 0xa4d0204], al ; ret
0x000000000012341d : add eax, dword ptr [rbx - 0x77bffe12] ; ja 0x12342e ; ret
0x0000000000168349 : add eax, dword ptr [rbx] ; add byte ptr [rax], al ; ret
0x0000000000074c54 : add eax, dword ptr [rcx + 0x39] ; fadd dword ptr [rdi + rcx + 0x47] ; ret
0x000000000019c8a2 : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0xa410204], al ; ret
0x00000000001a178a : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0xa470204], al ; ret
0x000000000010a4ea : add eax, dword ptr [rcx + rdx] ; ret
0x0000000000125f0d : add eax, dword ptr [rcx - 0x7d] ; ret 0x4401
0x0000000000033e80 : add eax, dword ptr [rdi + 0x20] ; ret
0x0000000000066365 : add eax, dword ptr [rdi + rcx] ; test byte ptr [rbp - 0x7cfffffe], ah ; ret 0x3901
0x000000000014362a : add eax, dword ptr [rdx + 8] ; add rsp, 0x38 ; ret
0x0000000000142f4e : add eax, dword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x000000000010a2c6 : add eax, dword ptr [rdx + rcx] ; ret
0x00000000001bb675 : add eax, dword ptr [rdx] ; add al, bl ; jo 0x1bb679 ; call qword ptr [rax]
0x0000000000168449 : add eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x00000000001ab1d0 : add eax, dword ptr [rsi + 0x180e4702] ; ret
0x00000000001a23d2 : add eax, dword ptr [rsi + 0x180e6e02] ; ret
0x00000000001b9dfa : add eax, dword ptr [rsi + 0xe] ; and byte ptr [rsi + rcx + 0x18], ah ; ret
0x000000000019fef2 : add eax, dword ptr [rsi + 0xe] ; and byte ptr [rsi + rcx + 0x18], bh ; ret
0x00000000001a37d2 : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rdx + rax], -0xc ; ret
0x00000000001af612 : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rsp + rbp*2], 0xa ; ret
0x00000000000aa2c1 : add eax, eax ; div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000050488 : add eax, eax ; ret
0x000000000013e836 : add eax, ebp ; hlt ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000084b1a : add eax, ebp ; jmp rax
0x0000000000094d20 : add eax, ebp ; or dl, byte ptr [rcx - 0x76b70001] ; ret 0xc031
0x00000000000f33f7 : add eax, ebp ; ret
0x000000000010a458 : add eax, ebp ; ret 0xf8b6
0x000000000011d075 : add eax, ebp ; ret 0xfff6
0x0000000000115b37 : add eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000597d3 : add eax, ecx ; jmp rax
0x000000000008deca : add eax, ecx ; ret
0x000000000009e7e5 : add eax, edi ; add rax, r8 ; ret
0x000000000008dec7 : add eax, edi ; add rax, rcx ; ret
0x00000000001b98a9 : add eax, edi ; call qword ptr [rdx]
0x00000000000bf684 : add eax, edi ; jmp rax
0x000000000008ca2b : add eax, edi ; ret
0x0000000000149e7b : add eax, edi ; sub rax, r8 ; ret
0x000000000014a0d0 : add eax, edi ; sub rax, rdx ; ret
0x00000000000f618d : add eax, edx ; cmp rdi, rsi ; ja 0xf6188 ; ret
0x000000000002ec9a : add eax, edx ; jmp rax
0x000000000012e08e : add eax, edx ; ret
0x000000000008ae86 : add eax, edx ; sub rax, rdi ; ret
0x00000000000fd3a5 : add eax, esi ; add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x000000000002ebbc : add eax, esi ; jmp rax
0x00000000000bbc97 : add eax, esi ; ret
0x0000000000050487 : add eax, r8d ; ret
0x0000000000050158 : add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000001baf65 : add ebp, dword ptr [rcx + rax + 0xa] ; ret
0x00000000000bb08b : add ebp, dword ptr [rcx] ; ret 0x48d
0x000000000012b414 : add ebp, dword ptr [rcx] ; ret 0x828d
0x00000000001bbbb3 : add ebp, eax ; add ebp, esi ; add al, byte ptr [rax] ; ret
0x000000000019c7b9 : add ebp, ecx ; call qword ptr [rax]
0x000000000019ed31 : add ebp, edx ; call rax
0x00000000001bbbb5 : add ebp, esi ; add al, byte ptr [rax] ; ret
0x00000000001bbba5 : add ebp, esi ; add al, byte ptr [rax] ; ret 0x503
0x0000000000003182 : add ebp, esi ; mov eax, 0xa1a3e95a ; ret 0xba88
0x00000000000cf9ae : add ebx, 1 ; mov rdx, rax ; jmp 0xcf955
0x0000000000143052 : add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x000000000012394d : add ebx, dword ptr [rbx - 0x3d] ; mov eax, 0xffffffff ; ret
0x00000000001a39f0 : add ebx, dword ptr [rdi] ; add dword ptr [rdx], ecx ; ret
0x000000000011416c : add ebx, eax ; nop ; xor eax, eax ; ret
0x0000000000048431 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000fe18b : add ebx, ebp ; and eax, 0x83489066 ; ret 0x3c01
0x0000000000003792 : add ebx, ebp ; in al, -0x12 ; jne 0x3778 ; ret 0x975
0x00000000001015a1 : add ebx, ebp ; ret
0x000000000006040d : add ebx, ebp ; ret 0x894c
0x000000000018be31 : add ebx, edi ; call rax
0x000000000018be2d : add ebx, edi ; dec eax ; add ebx, edi ; call rax
0x000000000018be35 : add ebx, edi ; jmp rax
0x000000000015b193 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000109bbf : add ebx, esi ; ret
0x0000000000139fbe : add ebx, esp ; call r14
0x000000000008e8b4 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0x8e8a9 ; ret
0x00000000000f52cf : add ecx, 0x50 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000001237ad : add ecx, 2 ; mov dword ptr [r8], edi ; mov qword ptr [r9], rcx ; ret
0x00000000000a20ea : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x000000000011d8c8 : add ecx, dword ptr [rax + 0x29] ; fimul dword ptr [rax - 0x7d] ; ret 0xe801
0x000000000007e59a : add ecx, dword ptr [rax + 0x29] ; ret
0x00000000000d48e5 : add ecx, dword ptr [rax + 0x29] ; ret 0x148
0x0000000000111054 : add ecx, dword ptr [rax + 0x29] ; ret 0x3949
0x000000000011ee49 : add ecx, dword ptr [rax + 0x29] ; ret 0x7a8d
0x0000000000096401 : add ecx, dword ptr [rax + 0x29] ; ret 0x8348
0x000000000011e5a9 : add ecx, dword ptr [rax + 0x29] ; ret 0x8948
0x000000000009622f : add ecx, dword ptr [rax + 0x29] ; ret 0x8949
0x0000000000026b2f : add ecx, dword ptr [rax + 0x39] ; ret
0x00000000000723f7 : add ecx, dword ptr [rax + 0x39] ; ret 0xf48
0x0000000000108a9d : add ecx, dword ptr [rax - 0x42] ; ret
0x000000000012396c : add ecx, dword ptr [rax - 0x68] ; shr rax, 4 ; ret
0x00000000000fe994 : add ecx, dword ptr [rax - 0x77] ; adc bl, dh ; ret
0x000000000009df0a : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x0000000000082f1e : add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x000000000007ee18 : add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x0000000000111547 : add ecx, dword ptr [rax - 0x77] ; ret 0xe883
0x0000000000024205 : add ecx, dword ptr [rax - 0x7d] ; mov byte ptr [rax + rcx*2], 0x83 ; ret
0x0000000000038f3d : add ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000039017 : add ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000007769b : add ecx, dword ptr [rax - 9] ; fmul dword ptr [rcx + 0x21] ; ret
0x000000000018a8cb : add ecx, dword ptr [rax] ; add byte ptr [rax], al ; add al, dh ; sub dl, bh ; call rax
0x000000000003d36d : add ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000143311 : add ecx, dword ptr [rbp - 0x88] ; call rax
0x000000000015af02 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000000a5364 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x00000000000f9b19 : add ecx, dword ptr [rcx + 0xf30244c] ; xchg eax, esp ; ret 0x8445
0x00000000001129d4 : add ecx, dword ptr [rcx - 0x75] ; sbb byte ptr [r8 + 1], r9b ; ret 0x8948
0x00000000000a20eb : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x00000000000b8839 : add ecx, dword ptr [rcx - 0x7d] ; ret
0x00000000000b74f8 : add ecx, dword ptr [rcx - 0x7d] ; ret 0x4201
0x0000000000053953 : add ecx, dword ptr [rcx - 0x7d] ; ret 0x4c05
0x00000000001a7692 : add ecx, dword ptr [rdi + 0x380e4402] ; ret
0x00000000001a6798 : add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x00000000001bad1d : add ecx, dword ptr [rdi + 0x80e7002] ; ret
0x00000000000a5b90 : add ecx, dword ptr [rdi] ; test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x00000000001adaf7 : add ecx, dword ptr [rdx] ; ret
0x00000000001a4adb : add ecx, dword ptr [rip + 0x380e0a03] ; ret
0x000000000002be48 : add ecx, eax ; jmp rcx
0x00000000001507eb : add ecx, ebx ; jmp r9
0x0000000000047c56 : add ecx, ebx ; jmp rcx
0x0000000000101b94 : add ecx, ebx ; ret
0x00000000001018a8 : add ecx, ebx ; ret 0x3944
0x000000000003328c : add ecx, edi ; jmp rcx
0x0000000000063dfa : add ecx, edx ; jmp rcx
0x00000000000aa264 : add ecx, esi ; jmp rcx
0x00000000001325dd : add edi, 0x10 ; jmp rcx
0x000000000012b76f : add edi, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000012d94a : add edi, 0x23b0 ; xor eax, eax ; jmp rcx
0x0000000000135084 : add edi, 0x58 ; jmp rcx
0x00000000001347e4 : add edi, 0x68 ; jmp rcx
0x0000000000131a67 : add edi, 0xc8 ; jmp rcx
0x000000000009dee4 : add edi, 1 ; mov rax, rdi ; ret
0x00000000000d0b3b : add edi, 1 ; test dl, dl ; jne 0xd0b29 ; ret
0x000000000009def5 : add edi, 2 ; mov rax, rdi ; ret
0x000000000009df08 : add edi, 3 ; mov rax, rdi ; ret
0x000000000009df15 : add edi, 4 ; mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x000000000009df28 : add edi, 5 ; mov dword ptr [rdi - 5], eax ; mov rax, rdi ; ret
0x000000000009deb2 : add edi, 6 ; mov dword ptr [rdi - 6], eax ; mov rax, rdi ; ret
0x000000000017239f : add edi, dword ptr [rbp + 0x10] ; call r12
0x000000000007781a : add edi, dword ptr [rbp] ; mov rdx, rbx ; call 0x93a48
0x00000000001a488b : add edi, dword ptr [rdi + 0x380e0a01] ; ret
0x00000000000208f4 : add edi, ebp ; call rax
0x00000000001a4551 : add edi, ebp ; jmp rsp
0x00000000000e0fbd : add edi, ebx ; jmp rdi
0x00000000001507e8 : add edi, edx ; add r9, r11 ; jmp r9
0x0000000000123785 : add edi, edx ; mov qword ptr [r9], rdi ; ret
0x000000000006ca52 : add edi, esi ; jmp rdi
0x0000000000194c59 : add edi, esp ; call qword ptr [rax]
0x0000000000123711 : add edx, 2 ; mov dword ptr [r8], edx ; mov qword ptr [r9], r10 ; ret
0x0000000000080344 : add edx, dword ptr [rcx] ; add cl, ch ; ret 0xfffe
0x000000000009e6e8 : add edx, eax ; jl 0x9e757 ; add rax, rdi ; ret
0x000000000009e6f8 : add edx, eax ; jl 0x9e759 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000009e718 : add edx, eax ; jl 0x9e759 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000009e738 : add edx, eax ; jl 0x9e759 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000009de9c : add edx, eax ; jmp r10
0x00000000000210b8 : add edx, eax ; jmp rdx
0x0000000000049072 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x00000000001964f1 : add edx, ebp ; jmp rsp
0x00000000000e07d7 : add edx, ecx ; jmp rdx
0x000000000019a771 : add edx, edi ; jmp rsp
0x00000000001878a1 : add edx, esi ; inc dword ptr [rax] ; add dh, dl ; jmp qword ptr [rax]
0x0000000000187899 : add edx, esi ; inc eax ; add edx, esi ; jmp rax
0x0000000000187885 : add edx, esi ; jmp qword ptr [rax]
0x000000000018789d : add edx, esi ; jmp rax
0x00000000000c4835 : add edx, esi ; jmp rdx
0x00000000000bae55 : add edx, esi ; mov rax, rdx ; add rsp, 0x18 ; ret
0x000000000019a770 : add edx, r15d ; jmp rsp
0x0000000000133835 : add esi, 0x38 ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00000000000a9219 : add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x00000000001a2542 : add esi, dword ptr [rbx + 0x47380e01] ; ret
0x0000000000136904 : add esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rbx + 0x5d], bl ; ret
0x0000000000136db6 : add esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000001af70a : add esi, dword ptr [rsi + 0x44380e04] ; ret
0x000000000012d5b2 : add esi, dword ptr [rsi + 0xb] ; mov eax, 2 ; ret
0x000000000002a697 : add esi, dword ptr [rsi + rax + 0x5b] ; ret
0x0000000000032c07 : add esi, eax ; add byte ptr [rax - 0x18], al ; push rax ; ret 5
0x0000000000032c20 : add esi, eax ; add byte ptr [rsi], ch ; call 0x8ee66
0x000000000009e3ba : add esi, eax ; add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x000000000009e439 : add esi, eax ; add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x0000000000046053 : add esi, eax ; jmp qword ptr [rax]
0x000000000002e8f2 : add esi, eax ; jmp rsi
0x000000000013b613 : add esi, eax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x00000000001bbb85 : add esi, ebp ; add al, byte ptr [rax] ; ret
0x000000000018933d : add esi, ebp ; call qword ptr [rax]
0x0000000000189291 : add esi, ebp ; call qword ptr [rcx]
0x0000000000189339 : add esi, ebp ; dec dword ptr [rbp + 3] ; cmc ; call qword ptr [rax]
0x000000000015b0b3 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000142813 : add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000000f633c : add esi, ebx ; ret
0x0000000000035f89 : add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x00000000001700bc : add esi, edi ; fadd st(3) ; ret
0x00000000000aa2a9 : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x0000000000033403 : add esi, edi ; jmp rsi
0x00000000001507e5 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x00000000001878fd : add esi, edx ; call qword ptr [rax]
0x0000000000198921 : add esi, esi ; jmp rsp
0x00000000000d67fb : add esi, esi ; ret
0x000000000006e888 : add esi, esi ; ret 0x7420
0x000000000012e388 : add esp, 0x10 ; mov eax, 1 ; pop rbx ; ret
0x0000000000087ad4 : add esp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x000000000013bc16 : add esp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x000000000006f807 : add esp, 0x10 ; pop rbx ; jmp rax
0x000000000003ad9e : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003582e : add esp, 0x10 ; pop rbx ; ret
0x0000000000086047 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b95c1 : add esp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000008dd0f : add esp, 0x100 ; ret
0x000000000008a90d : add esp, 0x100 ; sub rax, rdx ; ret
0x000000000006acd3 : add esp, 0x1000 ; pop rbx ; ret
0x000000000006ace1 : add esp, 0x1000 ; xor eax, eax ; pop rbx ; ret
0x00000000000359cd : add esp, 0x108 ; ret
0x00000000000f79ee : add esp, 0x120 ; pop rbx ; ret
0x0000000000035d7b : add esp, 0x140 ; pop rbx ; ret
0x000000000003539b : add esp, 0x148 ; ret
0x000000000011f8f0 : add esp, 0x18 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000fcb6d : add esp, 0x18 ; mov eax, edx ; ret
0x000000000006b2c6 : add esp, 0x18 ; movzx eax, al ; neg eax ; ret
0x000000000013a3b6 : add esp, 0x18 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000013bb8c : add esp, 0x18 ; movzx eax, al ; ret
0x000000000009ea1b : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012c312 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r13 ; pop r14 ; ret
0x000000000003b165 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000003ab40 : add esp, 0x18 ; ret
0x00000000000cb832 : add esp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000f6fe7 : add esp, 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000004a7c3 : add esp, 0x20 ; mov rax, r8 ; pop rbx ; ret
0x000000000006f0f4 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000071c08 : add esp, 0x20 ; pop rbx ; ret
0x0000000000133379 : add esp, 0x20 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f6f94 : add esp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x0000000000020b8e : add esp, 0x28 ; jmp rax
0x00000000000206bd : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000044c85 : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000034ac3 : add esp, 0x28 ; ret
0x000000000006ac01 : add esp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000fbe45 : add esp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x000000000012124a : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012b09b : add esp, 0x30 ; pop rbx ; ret
0x0000000000121279 : add esp, 0x30 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cd618 : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000c8c77 : add esp, 0x38 ; ret
0x0000000000035dfc : add esp, 0x40 ; pop rbx ; ret
0x0000000000109b48 : add esp, 0x40 ; ret
0x0000000000133105 : add esp, 0x40 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001048a8 : add esp, 0x408 ; ret
0x000000000004a63c : add esp, 0x440 ; pop rbx ; ret
0x00000000000f80a2 : add esp, 0x48 ; movzx eax, al ; ret
0x000000000012ef17 : add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000124984 : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000c9552 : add esp, 0x48 ; ret
0x00000000000ac0dc : add esp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000014004b : add esp, 0x510 ; xor eax, eax ; pop rbx ; ret
0x00000000000fc17f : add esp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00000000000f6887 : add esp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f6e40 : add esp, 0x60 ; pop rbx ; ret
0x00000000000e7fb1 : add esp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000137f9c : add esp, 0x68 ; ret
0x0000000000136690 : add esp, 0x70 ; pop rbx ; ret
0x000000000010547d : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000054dfe : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x00000000000758e0 : add esp, 0x80 ; mov eax, edx ; ret
0x000000000006ba11 : add esp, 0x80 ; mov eax, esi ; pop rbx ; ret
0x000000000007e070 : add esp, 0x80 ; mov rax, r8 ; ret
0x0000000000045373 : add esp, 0x80 ; pop rbx ; ret
0x000000000006b469 : add esp, 0x80 ; ret
0x0000000000039ecf : add esp, 0x80 ; xor eax, eax ; pop rbx ; ret
0x00000000000358c3 : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000035b89 : add esp, 0x90 ; pop rbx ; ret
0x0000000000036941 : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000000209af : add esp, 0x98 ; ret
0x0000000000136394 : add esp, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000000000036ced : add esp, 0xa8 ; ret
0x00000000000bbbd6 : add esp, 0xd0 ; mov eax, edx ; pop rbx ; ret
0x000000000006b5dd : add esp, 0xd0 ; mov eax, esi ; pop rbx ; ret
0x00000000000c750e : add esp, 0xd0 ; pop rbx ; ret
0x000000000003568a : add esp, 0xd0 ; ret
0x00000000001046ae : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000045ce4 : add esp, 0xd8 ; ret
0x0000000000132873 : add esp, 8 ; add eax, 2 ; ret
0x000000000008ce2d : add esp, 8 ; jmp rax
0x000000000012369d : add esp, 8 ; lea eax, dword ptr [rbp + rbx] ; pop rbx ; pop rbp ; ret
0x000000000005009f : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000007037d : add esp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000021218 : add esp, 8 ; mov eax, edi ; neg eax ; ret
0x0000000000045c34 : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006b72e : add esp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000009e34d : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000326a7 : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000007dcb4 : add esp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000000bf404 : add esp, 8 ; mov rax, rdx ; ret
0x000000000003a1c0 : add esp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x0000000000084f8f : add esp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000013a13c : add esp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000077ef9 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000012edf7 : add esp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000000453a6 : add esp, 8 ; movzx eax, al ; ret
0x0000000000126dea : add esp, 8 ; movzx eax, ax ; ret
0x000000000012e089 : add esp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x0000000000071f00 : add esp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000032db1 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000021a31 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000079088 : add esp, 8 ; pop rbx ; pop rbp ; sub rax, rdx ; ret
0x0000000000035123 : add esp, 8 ; ret
0x000000000013fe91 : add esp, 8 ; sar eax, 0x1f ; ret
0x000000000013bc84 : add esp, 8 ; shr eax, 0x1f ; ret
0x0000000000077901 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000e9e6b : add esp, 8 ; xor eax, eax ; ret
0x00000000001b2624 : add esp, dword ptr [rax + 0x200e0a01] ; ret
0x0000000000194c75 : add esp, edi ; jmp rax
0x0000000000194c55 : add esp, edi ; push qword ptr [rax] ; add edi, esp ; call qword ptr [rax]
0x000000000011c727 : add qword ptr [r11 + 0x460f09fb], r8 ; ret
0x00000000001adaf2 : add qword ptr [r15], 3 ; popfq ; add ecx, dword ptr [rdx] ; ret
0x00000000001b02a5 : add qword ptr [r8], r8 ; clc ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b0245 : add qword ptr [r8], r8 ; cwde ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b028d : add qword ptr [r8], r8 ; loopne 0x1b0307 ; cmc ; jmp qword ptr [rcx]
0x00000000001b025d : add qword ptr [r8], r8 ; mov al, 0x6f ; cmc ; jmp qword ptr [rcx]
0x00000000001b00c5 : add qword ptr [r8], r8 ; or byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001983ad : add qword ptr [r8], rax ; adc al, 0x6a ; jmp rsp
0x00000000001afe75 : add qword ptr [r8], rax ; fsubr dword ptr [rbx - 0xb] ; jmp qword ptr [rcx]
0x000000000010d5a4 : add qword ptr [r9 - 0x7d], r9 ; ret 0x8408
0x0000000000023c9d : add qword ptr [rax - 0x7d], r9 ; ret 0x4d02
0x00000000001a341c : add qword ptr [rax], -0x12b1b000 ; jmp qword ptr [rsi]
0x00000000001b00dd : add qword ptr [rax], r8 ; and byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b01b5 : add qword ptr [rax], r8 ; fsubr dword ptr [rsi - 0xb] ; jmp qword ptr [rcx]
0x00000000001afeed : add qword ptr [rax], r8 ; jne 0x1aff64 ; cmc ; call qword ptr [rcx]
0x00000000001aff05 : add qword ptr [rax], r8 ; js 0x1aff7c ; cmc ; jmp qword ptr [rcx]
0x00000000001b0155 : add qword ptr [rax], r8 ; js 0x1b01ce ; cmc ; jmp qword ptr [rcx]
0x00000000001b016d : add qword ptr [rax], r8 ; nop ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b0125 : add qword ptr [rax], r8 ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b0185 : add qword ptr [rax], r8 ; test al, 0x6e ; cmc ; jmp qword ptr [rcx]
0x000000000011e94c : add qword ptr [rax], rax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001afd7d : add qword ptr [rax], rax ; and byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x00000000001afd35 : add qword ptr [rax], rax ; fcomp dword ptr [rdx - 0xb] ; jmp qword ptr [rcx]
0x00000000001983f5 : add qword ptr [rax], rax ; insb byte ptr [rdi], dx ; call rsp
0x00000000001afcd5 : add qword ptr [rax], rax ; js 0x1afd3a ; cmc ; jmp qword ptr [rcx]
0x00000000001afced : add qword ptr [rax], rax ; nop ; pop rdx ; cmc ; jmp qword ptr [rcx]
0x00000000001afd65 : add qword ptr [rax], rax ; or byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x00000000001afdad : add qword ptr [rax], rax ; push rax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00000000001af80a : add qword ptr [rdi], 2 ; cwde ; ret
0x00000000001682fd : add qword ptr [rdi], rcx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x00000000001afd34 : add qword ptr fs:[rax], rax ; fcomp dword ptr [rdx - 0xb] ; jmp qword ptr [rcx]
0x000000000009de9b : add r10, rax ; jmp r10
0x000000000015b192 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x000000000018933c : add r14, r13 ; call qword ptr [rax]
0x0000000000189338 : add r14, r13 ; dec dword ptr [rbp + 3] ; cmc ; call qword ptr [rax]
0x000000000015b122 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b0b2 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000149aa0 : add r8, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145f34 : add r8, qword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000d777d : add r8b, byte ptr [r8] ; add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x3d01
0x00000000001235f1 : add r8b, byte ptr [r8] ; jne 0x123647 ; mov eax, r8d ; ret
0x000000000009e044 : add r8b, byte ptr [r8] ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000009dfb4 : add r8b, byte ptr [r8] ; mov rax, rdi ; ret
0x000000000019ab3d : add r8b, byte ptr [r8] ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rbx ; cli ; jmp rsp
0x000000000019ab05 : add r8b, byte ptr [rax] ; pop rcx ; cli ; call rsp
0x0000000000054ee7 : add r8d, dword ptr [r8] ; add cl, bl ; in eax, -0x21 ; loopne 0x54e82 ; ret 0xe680
0x0000000000143310 : add r9, qword ptr [rbp - 0x88] ; call rax
0x00000000001507ea : add r9, r11 ; jmp r9
0x0000000000026e73 : add r9b, byte ptr [r8 + 0x39] ; ret
0x0000000000122cd5 : add r9b, byte ptr [r8 + 0x39] ; ret 0x1472
0x00000000000ecd09 : add r9b, r13b ; ret
0x0000000000026e90 : add r9d, dword ptr [r8 + 0x39] ; ret
0x000000000014cc52 : add rax, -0x7cb80000 ; ret 0xe910
0x0000000000168383 : add rax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x00000000001bb81c : add rax, 0x75200002 ; clc ; call qword ptr [rdi]
0x00000000000a9f69 : add rax, 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ab510 : add rax, 1 ; ret
0x00000000000ab507 : add rax, 2 ; ret
0x00000000000ab520 : add rax, 3 ; ret
0x0000000000020be8 : add rax, qword ptr [0] ; ret
0x0000000000033e7f : add rax, qword ptr [rdi + 0x20] ; ret
0x0000000000143629 : add rax, qword ptr [rdx + 8] ; add rsp, 0x38 ; ret
0x0000000000142f4d : add rax, qword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x0000000000020be7 : add rax, qword ptr fs:[0] ; ret
0x0000000000084b19 : add rax, r13 ; jmp rax
0x000000000002ebbb : add rax, r14 ; jmp rax
0x000000000009e7e7 : add rax, r8 ; ret
0x000000000009e004 : add rax, r9 ; jmp rax
0x0000000000115b36 : add rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000597d2 : add rax, rcx ; jmp rax
0x000000000008dec9 : add rax, rcx ; ret
0x000000000009e7e4 : add rax, rdi ; add rax, r8 ; ret
0x000000000008dec6 : add rax, rdi ; add rax, rcx ; ret
0x00000000000bf683 : add rax, rdi ; jmp rax
0x000000000008ca2a : add rax, rdi ; ret
0x0000000000149e7a : add rax, rdi ; sub rax, r8 ; ret
0x000000000014a0cf : add rax, rdi ; sub rax, rdx ; ret
0x000000000002ec99 : add rax, rdx ; jmp rax
0x000000000008ae85 : add rax, rdx ; sub rax, rdi ; ret
0x000000000004da10 : add rax, rsi ; jmp rax
0x00000000000cf9ad : add rbx, 1 ; mov rdx, rax ; jmp 0xcf956
0x0000000000139fbd : add rbx, r12 ; call r14
0x00000000000d0e62 : add rcx, qword ptr [r8 - 0x7d] ; ret
0x0000000000047c55 : add rcx, r11 ; jmp rcx
0x000000000002be47 : add rcx, r8 ; jmp rcx
0x0000000000063838 : add rcx, rax ; jmp rcx
0x000000000003328b : add rcx, rdi ; jmp rcx
0x0000000000063df9 : add rcx, rdx ; jmp rcx
0x00000000000aa263 : add rcx, rsi ; jmp rcx
0x00000000001325dc : add rdi, 0x10 ; jmp rcx
0x000000000012b76e : add rdi, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000012d949 : add rdi, 0x23b0 ; xor eax, eax ; jmp rcx
0x0000000000135083 : add rdi, 0x58 ; jmp rcx
0x00000000001347e3 : add rdi, 0x68 ; jmp rcx
0x0000000000131a66 : add rdi, 0xc8 ; jmp rcx
0x000000000009dee3 : add rdi, 1 ; mov rax, rdi ; ret
0x00000000000d0b3a : add rdi, 1 ; test dl, dl ; jne 0xd0b2a ; ret
0x000000000009def4 : add rdi, 2 ; mov rax, rdi ; ret
0x000000000009df07 : add rdi, 3 ; mov rax, rdi ; ret
0x000000000017239e : add rdi, qword ptr [r13 + 0x10] ; call r12
0x0000000000077819 : add rdi, qword ptr [rbp] ; mov rdx, rbx ; call 0x93a49
0x00000000000e0fbc : add rdi, r11 ; jmp rdi
0x00000000000208f3 : add rdi, rbp ; call rax
0x00000000001507e7 : add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000123784 : add rdi, rdx ; mov qword ptr [r9], rdi ; ret
0x000000000006ca51 : add rdi, rsi ; jmp rdi
0x00000000000c282c : add rdx, r8 ; jmp rdx
0x0000000000049071 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x000000000009e6e7 : add rdx, rax ; jl 0x9e758 ; add rax, rdi ; ret
0x000000000009e6e6 : add rdx, rax ; jl 0x9e759 ; add rax, rdi ; ret
0x00000000000210b7 : add rdx, rax ; jmp rdx
0x00000000000e07d6 : add rdx, rcx ; jmp rdx
0x00000000000c4834 : add rdx, rsi ; jmp rdx
0x0000000000133834 : add rsi, 0x38 ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000002e8f1 : add rsi, rax ; jmp rsi
0x000000000013b612 : add rsi, rax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x0000000000033402 : add rsi, rdi ; jmp rsi
0x0000000000087ad3 : add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x000000000013bc15 : add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x000000000006f806 : add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000003ad9d : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003582d : add rsp, 0x10 ; pop rbx ; ret
0x00000000000b95c0 : add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000008dd0e : add rsp, 0x100 ; ret
0x000000000006acd2 : add rsp, 0x1000 ; pop rbx ; ret
0x00000000000359cc : add rsp, 0x108 ; ret
0x00000000000f79ed : add rsp, 0x120 ; pop rbx ; ret
0x0000000000035d7a : add rsp, 0x140 ; pop rbx ; ret
0x000000000003539a : add rsp, 0x148 ; ret
0x000000000011f8ef : add rsp, 0x18 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000fcb6c : add rsp, 0x18 ; mov eax, edx ; ret
0x000000000006b2c5 : add rsp, 0x18 ; movzx eax, al ; neg eax ; ret
0x000000000013a3b5 : add rsp, 0x18 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000013bb8b : add rsp, 0x18 ; movzx eax, al ; ret
0x000000000003b164 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000003ab3f : add rsp, 0x18 ; ret
0x00000000000cb831 : add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000004a7c2 : add rsp, 0x20 ; mov rax, r8 ; pop rbx ; ret
0x000000000006f0f3 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000071c07 : add rsp, 0x20 ; pop rbx ; ret
0x00000000000f6f93 : add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x0000000000020b8d : add rsp, 0x28 ; jmp rax
0x0000000000044c84 : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000034ac2 : add rsp, 0x28 ; ret
0x000000000006ac00 : add rsp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000fbe44 : add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x0000000000121249 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012b09a : add rsp, 0x30 ; pop rbx ; ret
0x00000000000cd617 : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000c8c76 : add rsp, 0x38 ; ret
0x0000000000035dfb : add rsp, 0x40 ; pop rbx ; ret
0x0000000000109b47 : add rsp, 0x40 ; ret
0x00000000001048a7 : add rsp, 0x408 ; ret
0x000000000004a63b : add rsp, 0x440 ; pop rbx ; ret
0x00000000000f80a1 : add rsp, 0x48 ; movzx eax, al ; ret
0x0000000000124983 : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000c9551 : add rsp, 0x48 ; ret
0x00000000000ac0db : add rsp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fc17e : add rsp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00000000000f6886 : add rsp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f6e3f : add rsp, 0x60 ; pop rbx ; ret
0x0000000000137f9b : add rsp, 0x68 ; ret
0x000000000013668f : add rsp, 0x70 ; pop rbx ; ret
0x000000000010547c : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000000758df : add rsp, 0x80 ; mov eax, edx ; ret
0x0000000000045372 : add rsp, 0x80 ; pop rbx ; ret
0x000000000006b468 : add rsp, 0x80 ; ret
0x00000000000358c2 : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000035b88 : add rsp, 0x90 ; pop rbx ; ret
0x0000000000036940 : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000000209ae : add rsp, 0x98 ; ret
0x0000000000136393 : add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000000000036cec : add rsp, 0xa8 ; ret
0x00000000000c750d : add rsp, 0xd0 ; pop rbx ; ret
0x0000000000035689 : add rsp, 0xd0 ; ret
0x00000000001046ad : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000045ce3 : add rsp, 0xd8 ; ret
0x0000000000132872 : add rsp, 8 ; add eax, 2 ; ret
0x000000000008ce2c : add rsp, 8 ; jmp rax
0x000000000005009e : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000007037c : add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000021217 : add rsp, 8 ; mov eax, edi ; neg eax ; ret
0x0000000000045c33 : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006b72d : add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000009e34c : add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000326a6 : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000007dcb3 : add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000000bf403 : add rsp, 8 ; mov rax, rdx ; ret
0x000000000003a1bf : add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x0000000000084f8e : add rsp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000013a13b : add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000077ef8 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000012edf6 : add rsp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000000453a5 : add rsp, 8 ; movzx eax, al ; ret
0x0000000000126de9 : add rsp, 8 ; movzx eax, ax ; ret
0x000000000012e088 : add rsp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x0000000000071eff : add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000021a30 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000079087 : add rsp, 8 ; pop rbx ; pop rbp ; sub rax, rdx ; ret
0x0000000000035122 : add rsp, 8 ; ret
0x000000000013fe90 : add rsp, 8 ; sar eax, 0x1f ; ret
0x000000000013bc83 : add rsp, 8 ; shr eax, 0x1f ; ret
0x0000000000077900 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000e9e6a : add rsp, 8 ; xor eax, eax ; ret
0x0000000000093a6e : add sil, sil ; ret 0x7404
0x0000000000194bf0 : add spl, dil ; inc dword ptr [rax] ; add bh, ah ; jmp rax
0x0000000000109113 : add word ptr [rax], 1 ; ret
0x000000000019871d : add word ptr [rax], ax ; add al, 0x3e ; cmc ; jmp rsp
0x0000000000108e5a : add word ptr [rdx + rax*2], 1 ; ret
0x0000000000194aec : and ah, ah ; sti ; call rax
0x00000000001949f8 : and ah, bl ; sti ; inc dword ptr [rax] ; fdivp st(3) ; jmp rax
0x00000000001ae740 : and ah, ch ; hlt ; jmp qword ptr [rcx]
0x00000000000dd82d : and ah, dh ; dec dword ptr [rcx - 0x77] ; ret 0x8949
0x00000000000a28a1 : and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000962b1 : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000019e5f8 : and al, 0 ; add byte ptr [rax], al ; sub al, 0x33 ; add byte ptr [rax], al ; push rax ; ret 0xffe9
0x000000000019d705 : and al, 0 ; add byte ptr [rax], bh ; jns 0x19d6fa ; call qword ptr [rcx]
0x000000000019d75d : and al, 0 ; add byte ptr [rax], dl ; jp 0x19d752 ; call qword ptr [rax]
0x0000000000096242 : and al, 0 ; je 0x96259 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f6e6d : and al, 0x10 ; add cl, byte ptr [rdi] ; ret 0x8348
0x00000000000f1e50 : and al, 0x10 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000013672b : and al, 0x10 ; call qword ptr [r10]
0x00000000000c80e0 : and al, 0x10 ; call rax
0x00000000000812ea : and al, 0x10 ; call rdi
0x0000000000034f27 : and al, 0x10 ; fld xword ptr [rsp + 8] ; ret
0x000000000011d070 : and al, 0x10 ; lea rdi, qword ptr [r8 + 1] ; call 0x892e8
0x000000000010e622 : and al, 0x10 ; mov edi, 0x2000004 ; call rax
0x0000000000102571 : and al, 0x10 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000074f26 : and al, 0x10 ; mov rdi, r12 ; call rbx
0x000000000012b83a : and al, 0x10 ; mov rdi, rbp ; call r14
0x000000000010e51e : and al, 0x10 ; mov rsi, qword ptr [rsp + 8] ; call rax
0x00000000000811d3 : and al, 0x10 ; xor edi, edi ; call qword ptr [rax]
0x00000000001ac6f4 : and al, 0x14 ; add dword ptr [rax], eax ; cmp al, bl ; call qword ptr [rdx]
0x0000000000026a19 : and al, 0x14 ; jmp 0x26830
0x0000000000026a18 : and al, 0x14 ; jmp 0x26831
0x000000000007ed89 : and al, 0x14 ; pop r12 ; ret
0x00000000000ef60f : and al, 0x18 ; add byte ptr [rax], al ; add byte ptr [rax], al ; call 0xcb918
0x00000000000ef60e : and al, 0x18 ; add byte ptr [rax], al ; add byte ptr [rax], al ; call 0xcb919
0x000000000004304c : and al, 0x18 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x00000000000836bb : and al, 0x18 ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000003dfd4 : and al, 0x18 ; call 0x3c098
0x000000000012c2da : and al, 0x18 ; call qword ptr [rax]
0x0000000000024073 : and al, 0x18 ; call r12
0x000000000002082c : and al, 0x18 ; call rax
0x0000000000131f97 : and al, 0x18 ; call rcx
0x000000000012c009 : and al, 0x18 ; lea r9, qword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x0000000000137690 : and al, 0x18 ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x000000000009decd : and al, 0x18 ; mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x00000000000812e5 : and al, 0x18 ; mov qword ptr [rsp + 0x10], r8 ; call rdi
0x0000000000021858 : and al, 0x18 ; mov r9, r14 ; call rbx
0x00000000000c8881 : and al, 0x18 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000024367 : and al, 0x18 ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x0000000000024d02 : and al, 0x18 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x00000000000acc37 : and al, 0x18 ; mov rcx, r13 ; mov rdi, rbp ; call rbx
0x0000000000038371 : and al, 0x18 ; mov rdi, r12 ; call r15
0x0000000000075002 : and al, 0x18 ; mov rdi, r12 ; call rbx
0x00000000000acee7 : and al, 0x18 ; mov rdi, r12 ; mov r9, r15 ; call rbx
0x00000000000ac97f : and al, 0x18 ; mov rdx, r13 ; mov rdi, rbp ; call rbx
0x00000000000ef789 : and al, 0x18 ; mov rdx, rax ; jmp 0xef7c7
0x00000000000ef788 : and al, 0x18 ; mov rdx, rax ; jmp 0xef7c8
0x000000000013653c : and al, 0x1c ; call qword ptr [r10]
0x000000000012c1e8 : and al, 0x1c ; call qword ptr [rax]
0x0000000000199bf0 : and al, 0x1c ; clc ; jmp rsp
0x0000000000142fd5 : and al, 0x1f ; add byte ptr [rbp + 0x16], dh ; add rsp, 0x38 ; ret
0x00000000000e51f7 : and al, 0x20 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000000975 : and al, 0x20 ; add byte ptr [rax], al ; ret
0x00000000000e2b76 : and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000046d82 : and al, 0x20 ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd084
0x0000000000080eb1 : and al, 0x20 ; call qword ptr [rax]
0x0000000000028abc : and al, 0x20 ; call r14
0x0000000000023e53 : and al, 0x20 ; call r15
0x000000000008122d : and al, 0x20 ; call rax
0x00000000000ac64b : and al, 0x20 ; call rbx
0x0000000000131d9f : and al, 0x20 ; call rcx
0x00000000000ac2ab : and al, 0x20 ; lea rcx, qword ptr [rax + 4] ; call rbx
0x000000000012b7ba : and al, 0x20 ; mov qword ptr [rsp + 0x28], r9 ; call 0x137a69
0x0000000000025110 : and al, 0x20 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x000000000002406e : and al, 0x20 ; mov rdi, qword ptr [rsp + 0x18] ; call r12
0x00000000000b9cbf : and al, 0x20 ; mov rsi, r14 ; mov rdi, r12 ; call rbx
0x00000000001837a4 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x000000000003ce58 : and al, 0x28 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x000000000012b7bf : and al, 0x28 ; call 0x137a64
0x000000000012b7be : and al, 0x28 ; call 0x137a65
0x00000000000335cb : and al, 0x28 ; call 0x1f8a4
0x00000000000335ca : and al, 0x28 ; call 0x1f8a5
0x000000000002436c : and al, 0x28 ; call rax
0x00000000000ac180 : and al, 0x28 ; lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000081228 : and al, 0x28 ; mov qword ptr [rsp + 0x20], r10 ; call rax
0x0000000000028ab7 : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; call r14
0x0000000000023e4e : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000084533 : and al, 0x28 ; mov rdi, rbp ; call rax
0x00000000001378d4 : and al, 0x2a ; call qword ptr [rax]
0x000000000012c00e : and al, 0x2c ; call qword ptr [rax]
0x0000000000198210 : and al, 0x2f ; call rsp
0x000000000004014f : and al, 0x30 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x000000000012c77d : and al, 0x30 ; call qword ptr [rax]
0x0000000000024807 : and al, 0x30 ; call r12
0x0000000000025592 : and al, 0x30 ; call r14
0x0000000000025352 : and al, 0x30 ; call r15
0x0000000000024d07 : and al, 0x30 ; call rax
0x00000000000248bb : and al, 0x30 ; call rbx
0x0000000000038fd9 : and al, 0x30 ; lea r15, qword ptr [rbx + r14] ; call rax
0x000000000013bb19 : and al, 0x30 ; mov qword ptr [rsp + 8], rax ; xor eax, eax ; call rdx
0x00000000000ba5ee : and al, 0x30 ; mov rdi, qword ptr [rax] ; call r14
0x00000000000acb2c : and al, 0x30 ; mov rdi, rbp ; call rbx
0x000000000005d98f : and al, 0x31 ; rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x00000000000d47e1 : and al, 0x31 ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000282b1 : and al, 0x38 ; call r14
0x0000000000025b5a : and al, 0x38 ; call r15
0x000000000002804a : and al, 0x38 ; call rbx
0x0000000000197c58 : and al, 0x38 ; int1 ; jmp rsp
0x00000000001122d7 : and al, 0x38 ; jmp 0x1122a1
0x00000000001122d6 : and al, 0x38 ; jmp 0x1122a2
0x0000000000142eb9 : and al, 0x38 ; jne 0x142ea0 ; add rsp, 0x48 ; ret
0x0000000000142eb8 : and al, 0x38 ; jne 0x142ea1 ; add rsp, 0x48 ; ret
0x00000000000fd495 : and al, 0x38 ; mov eax, edx ; add rsp, 0x48 ; ret
0x00000000000335c6 : and al, 0x38 ; mov qword ptr [rsp + 0x28], rcx ; call 0x1f8a9
0x0000000000025f31 : and al, 0x38 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000024802 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r12
0x000000000002558d : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x000000000002534d : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r15
0x00000000000248b6 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000101e04 : and al, 0x39 ; ret
0x000000000009e216 : and al, 0x39 ; ret 0x2574
0x0000000000137695 : and al, 0x3a ; call qword ptr [rax]
0x00000000000e11da : and al, 0x40 ; add rax, rdx ; jmp rax
0x000000000002686a : and al, 0x40 ; call rbx
0x0000000000026caa : and al, 0x40 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x00000000001272c1 : and al, 0x40 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000282ac : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000025b55 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000028045 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000129d25 : and al, 0x41 ; call rsp
0x00000000000fcb6b : and al, 0x48 ; add esp, 0x18 ; mov eax, edx ; ret
0x00000000000cb842 : and al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000f608e : and al, 0x48 ; add esp, 0x18 ; ret
0x000000000006f0f2 : and al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000109ae5 : and al, 0x48 ; add esp, 0x38 ; ret
0x0000000000109b46 : and al, 0x48 ; add esp, 0x40 ; ret
0x00000000000f3657 : and al, 0x48 ; call 0x1f8ac
0x0000000000083b63 : and al, 0x48 ; call rax
0x0000000000142d4d : and al, 0x48 ; mov eax, dword ptr [rax + 0x128] ; jmp rax
0x00000000000abc44 : and al, 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000026865 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x00000000000bb37d : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x68] ; call r12
0x00000000000960bc : and al, 0x48 ; test esi, esi ; jne 0x960d3 ; jmp 0x9608d
0x00000000001b03f4 : and al, 0x51 ; add dword ptr [rax], eax ; fdiv dword ptr [rcx - 0xb] ; jmp qword ptr [rcx]
0x00000000001b08f4 : and al, 0x56 ; add dword ptr [rax], eax ; mov byte ptr [rdx - 0xb], bh ; jmp qword ptr [rcx]
0x000000000007ed84 : and al, 0x5d ; mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x000000000012cd4b : and al, 0x60 ; call rax
0x0000000000189624 : and al, 0x60 ; cmc ; call qword ptr [rbx]
0x00000000001896f8 : and al, 0x60 ; cmc ; call rsi
0x0000000000189708 : and al, 0x60 ; cmc ; push rbx ; movsxd rsi, ebp ; call qword ptr [rbx]
0x00000000000f9b17 : and al, 0x68 ; add ecx, dword ptr [rcx + 0xf30244c] ; xchg eax, esp ; ret 0x8445
0x00000000000bb382 : and al, 0x68 ; call r12
0x0000000000083e6b : and al, 0x68 ; call rax
0x000000000008524b : and al, 0x68 ; mov rsi, r13 ; mov rdi, rbx ; call rax
0x000000000014325d : and al, 0x70 ; add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000000acded : and al, 0x70 ; mov rdi, r12 ; call rbx
0x00000000000ac863 : and al, 0x70 ; mov rdi, rbp ; call rbx
0x00000000000c12bb : and al, 0x71 ; jmp 0xbf4ef
0x00000000000f543d : and al, 0x74 ; xor byte ptr [rax + 0x63], cl ; ret 0xc283
0x00000000000e3517 : and al, 0x78 ; shl rsi, 2 ; call 0x1f7f8
0x00000000000e3516 : and al, 0x78 ; shl rsi, 2 ; call 0x1f7f9
0x000000000003ea7c : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000b51e2 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x00000000000de68f : and al, 0x83 ; ret 0x4801
0x00000000000b5d93 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000b653b : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000081a76 : and al, 0x89 ; ret 0xb48b
0x00000000000f16af : and al, 0x89 ; ret 0xe883
0x0000000000023ff2 : and al, 0x90 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000000dfd03 : and al, 0x94 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x0000000000029a6d : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x00000000000b4d44 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret 0x8341
0x00000000000da619 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x947c
0x00000000000da780 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8d0f
0x00000000000dfc6b : and al, 0xa4 ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0xb60f
0x00000000001b56f4 : and al, 0xa4 ; add dword ptr [rax], eax ; test al, 0xf2 ; sti ; call rcx
0x00000000000da8dc : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8d0f
0x00000000000f6dc5 : and al, 0xa8 ; add cl, byte ptr [rdi] ; ret 0xfc3
0x00000000000fd592 : and al, 0xb0 ; ret
0x000000000012f357 : and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0x850f
0x000000000008dc18 : and al, 0xba ; add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x000000000003582b : and al, 0xc ; add rsp, 0x10 ; pop rbx ; ret
0x000000000003ab3d : and al, 0xc ; add rsp, 0x18 ; ret
0x0000000000143000 : and al, 0xc ; add rsp, 0x38 ; ret
0x0000000000133624 : and al, 0xc ; call 0x1f8a4
0x00000000000f6227 : and al, 0xc ; call rax
0x00000000000021d5 : and al, 0xc7 ; jno 0x2226 ; ret 0x1dd4
0x00000000000dfc59 : and al, 0xc8 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8488
0x000000000013c07b : and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000196ff8 : and al, 0xd8 ; in eax, dx ; jmp rsp
0x00000000000464d2 : and al, 0xe0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8b48
0x00000000000717a8 : and al, 0xe0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x0000000000199888 : and al, 0xe3 ; idiv edi ; insb byte ptr [rdi], dx ; ret 1
0x00000000001998d8 : and al, 0xe5 ; idiv edi ; pop rsp ; ret
0x00000000000fac91 : and al, 0xe8 ; cdq ; ret
0x0000000000034f8c : and al, 0xe8 ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x000000000003501b : and al, 0xe8 ; fstp xword ptr [rdi] ; ret
0x0000000000034ff9 : and al, 0xe8 ; ret
0x0000000000186794 : and al, 0xe9 ; in eax, dx ; call rbx
0x000000000004a1d8 : and al, 0xec ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000035017 : and al, 0xf0 ; fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x0000000000034ff5 : and al, 0xf0 ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000350b7 : and al, 0xf0 ; mov dword ptr [rdi], esi ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000baec6 : and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x00000000000baecc : and al, 0xf0 ; ret
0x00000000000cd01a : and al, 0xf3 ; ret
0x0000000000093b76 : and al, 0xf8 ; jne 0x93a52 ; ret
0x000000000004a191 : and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000004a197 : and al, 0xf8 ; ret
0x0000000000194ead : and al, 0xfc ; call rax
0x000000000004a14b : and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x000000000004a151 : and al, 0xfc ; ret
0x0000000000035197 : and al, 0xfe ; fldcw word ptr [rsp - 2] ; ret
0x000000000003519b : and al, 0xfe ; ret
0x00000000000be7b6 : and al, 1 ; add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x00000000001be710 : and al, 4 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x00000000000372f4 : and al, 6 ; mov rbx, rax ; mov rdi, r12 ; call r15
0x00000000000a5cd8 : and al, 7 ; add byte ptr [rax], al ; ret
0x00000000000b95d6 : and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000003afdc : and al, 8 ; add rsp, 0x18 ; ret
0x000000000012deb7 : and al, 8 ; call qword ptr [rax]
0x00000000000887f2 : and al, 8 ; call qword ptr [rdx]
0x000000000010e523 : and al, 8 ; call rax
0x0000000000102488 : and al, 8 ; call rbx
0x000000000012cd2f : and al, 8 ; call rcx
0x000000000003504a : and al, 8 ; fscale ; fstp st(1) ; ret
0x000000000013acdf : and al, 8 ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000001fc01 : and al, 8 ; mov eax, dword ptr [rbx + 4] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006dda8 : and al, 8 ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000013ae1c : and al, 8 ; mov rdi, r12 ; call qword ptr [rax]
0x000000000011f69b : and al, 8 ; mov rdi, r13 ; call r12
0x000000000013a3df : and al, 8 ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000037d56 : and al, 8 ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x0000000000039196 : and al, 8 ; mov rsi, r15 ; mov rdi, r13 ; call r14
0x0000000000034f2b : and al, 8 ; ret
0x00000000000cb95c : and al, 8 ; test rax, rax ; je 0xcb96c ; call rax
0x00000000000cb95b : and al, 8 ; test rax, rax ; je 0xcb96d ; call rax
0x000000000013bb1e : and al, 8 ; xor eax, eax ; call rdx
0x0000000000194ae4 : and al, ah ; sti ; jmp qword ptr [rax]
0x0000000000199c51 : and al, bh ; call rsp
0x0000000000034b0e : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000000000035166 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000da49d : and al, byte ptr [rbx + 0xd7403f8] ; xor eax, eax ; pop rbx ; ret
0x00000000001ad5a5 : and al, byte ptr [rcx] ; add byte ptr [rax - 0x67], cl ; hlt ; jmp qword ptr [rcx]
0x000000000008903a : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x000000000002de32 : and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002de52 : and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002dd92 : and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002de12 : and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002dd32 : and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002ddd2 : and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002dd72 : and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002ddb2 : and ax, 0x8000 ; movzx eax, ax ; ret
0x00000000000567ee : and bh, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x0000000000194639 : and bh, bl ; jmp rax
0x0000000000002f98 : and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000001956c4 : and bh, byte ptr [rbp - 4] ; jmp qword ptr [rdx + 0x22fffc7c]
0x00000000001956d4 : and bh, byte ptr [rbx - 4] ; jmp qword ptr [rdx + 0x22fffc7a]
0x00000000001956dc : and bh, byte ptr [rdx - 4] ; jmp qword ptr [rdx + 0x12fffc79]
0x00000000001956bc : and bh, byte ptr [rsi - 4] ; jmp qword ptr [rdx + 0x22fffc7d]
0x00000000000a62b7 : and bl, al ; nop dword ptr [rax] ; ret
0x0000000000194635 : and bl, bh ; inc dword ptr [rax + 0x22] ; sti ; jmp rax
0x00000000001816b1 : and bl, ch ; call qword ptr [rbx]
0x0000000000181685 : and bl, ch ; call rdi
0x00000000001816b5 : and bl, ch ; push qword ptr [rax + 0x1c] ; jmp 0x1816c1
0x000000000010de8f : and bl, ch ; ret
0x000000000003541f : and bl, dh ; ret
0x0000000000110040 : and byte ptr [r8 + 0x39], r9b ; ret
0x0000000000076aca : and byte ptr [r8 - 0x75], r9b ; sbb byte ptr [r8 + 0x29], cl ; ret 0x8948
0x00000000000a9536 : and byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x000000000007b0d4 : and byte ptr [r9 + 0x5bc03113], cl ; ret
0x00000000001101bd : and byte ptr [rax + 0x2b], cl ; xor r9b, bpl ; ret
0x000000000008700b : and byte ptr [rax + 0x31], cl ; ret 0x93be
0x000000000010ebad : and byte ptr [rax + 0x38], al ; cmp byte ptr [rbp + 0x48], dh ; mov edx, eax ; jmp 0x10ebcd
0x0000000000110041 : and byte ptr [rax + 0x39], cl ; ret
0x000000000007fe19 : and byte ptr [rax + 0x39], cl ; ret 0x820f
0x000000000004adec : and byte ptr [rax + 1], cl ; ret
0x000000000009e716 : and byte ptr [rax + 1], cl ; ret 0x347c
0x00000000001081db : and byte ptr [rax - 0x73], cl ; adc byte ptr [rax + 0x39], r9b ; ret 0x1b72
0x0000000000025111 : and byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x00000000000bb442 : and byte ptr [rax - 0x75], cl ; je 0xbb473 ; cmp byte ptr [rax + 1], cl ; ret 0x6348
0x0000000000081783 : and byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0xf04
0x0000000000076acb : and byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 + 0x29], cl ; ret 0x8948
0x00000000000f29c6 : and byte ptr [rax - 0x75], cl ; xor ecx, dword ptr [rax - 0x7d] ; ret
0x000000000003a67a : and byte ptr [rax - 0x77], cl ; enter 0x948, -0x30 ; ret
0x000000000006df28 : and byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000088c1b : and byte ptr [rax - 0x77], cl ; jae 0x88c31 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003b453 : and byte ptr [rax - 0x77], cl ; ret
0x00000000000bfbd1 : and byte ptr [rax - 0x77], cl ; ret 0x1e74
0x0000000000140892 : and byte ptr [rax - 0x77], cl ; ret 0x3d83
0x00000000000be136 : and byte ptr [rax - 0x77], cl ; ret 0x4eb
0x000000000004696c : and byte ptr [rax - 0x77], cl ; ret 0x8949
0x0000000000118d85 : and byte ptr [rax - 0x77], cl ; ret 0xed75
0x0000000000022d04 : and byte ptr [rax - 0x77], cl ; ret 0xee75
0x000000000002c374 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x2c388 ; call rax
0x0000000000022b96 : and byte ptr [rax - 0x7d], cl ; ret
0x0000000000078902 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000195390 : and byte ptr [rax - 4], al ; jmp qword ptr [rax + 0x20fffc41]
0x00000000001952fc : and byte ptr [rax - 4], bl ; jmp qword ptr [rax + 0x20fffc57]
0x00000000001953e4 : and byte ptr [rax - 4], cl ; jmp qword ptr [rax + 0x20fffc49]
0x00000000001946fc : and byte ptr [rax - 5], bh ; jmp qword ptr [rax + 0x20fffb79]
0x00000000001b6890 : and byte ptr [rax - 9], cl ; jmp qword ptr [rcx]
0x00000000000ebf7d : and byte ptr [rax], al ; add byte ptr [rax + 9], cl ; ret 0x8949
0x00000000000eae11 : and byte ptr [rax], al ; add byte ptr [rax + 9], cl ; ret 0x8b48
0x00000000000cd05b : and byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000aa28c : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000cd040 : and byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000012628a : and byte ptr [rax], al ; jmp 0x126253
0x0000000000194dd0 : and byte ptr [rax], ch ; cld ; jmp rax
0x00000000000a73ec : and byte ptr [rax], cl ; add byte ptr [rax], al ; ret
0x0000000000194b80 : and byte ptr [rax], cl ; cld ; jmp qword ptr [rax]
0x0000000000194d60 : and byte ptr [rax], dh ; cld ; call qword ptr [rax]
0x00000000000a9537 : and byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000001945f8 : and byte ptr [rax], dl ; sti ; call qword ptr [rax]
0x0000000000137f1e : and byte ptr [rbp + 0x5b0d74c0], al ; pop rbp ; pop r12 ; ret
0x0000000000150ce5 : and byte ptr [rbp + rcx*4 + 0x1d], cl ; ret
0x00000000000d62dc : and byte ptr [rbp - 0x3a7cfeaf], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000195cf4 : and byte ptr [rbp - 0x5b5f0004], ah ; cld ; call qword ptr [rax]
0x00000000000d531c : and byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00000000001953dc : and byte ptr [rbp - 4], al ; jmp qword ptr [rax + 0x20fffc46]
0x0000000000195314 : and byte ptr [rbp - 4], dl ; jmp qword ptr [rax + 0x20fffc54]
0x00000000001946f4 : and byte ptr [rbp - 5], dh ; jmp qword ptr [rax + 0x20fffb76]
0x00000000001bb820 : and byte ptr [rbp - 8], dh ; call qword ptr [rdi]
0x0000000000032fb8 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006f0f6 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000019c8a5 : and byte ptr [rbx + 0xa410204], al ; ret
0x00000000001a178d : and byte ptr [rbx + 0xa470204], al ; ret
0x00000000001a39dd : and byte ptr [rbx + 0xa4d0204], al ; ret
0x00000000001ac1dd : and byte ptr [rbx + 0xa7e0204], al ; ret
0x000000000019471c : and byte ptr [rbx + rdi*8 - 0x47a5f01], al ; jmp qword ptr [rax]
0x000000000005a25f : and byte ptr [rbx - 0x109743], al ; call qword ptr [rax]
0x000000000004dc1a : and byte ptr [rbx - 0x4ef43], al ; call qword ptr [rax]
0x000000000006e019 : and byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000001afd80 : and byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x0000000000195398 : and byte ptr [rbx - 4], al ; jmp qword ptr [rax + 0x20fffc44]
0x0000000000194704 : and byte ptr [rbx - 5], bh ; jmp qword ptr [rax + 0x20fffb7c]
0x00000000001bba70 : and byte ptr [rbx - 8], bh ; call qword ptr [rcx]
0x000000000002981c : and byte ptr [rcx + 0x39], cl ; ret
0x000000000007b0d5 : and byte ptr [rcx + 0x5bc03113], cl ; ret
0x000000000019f47e : and byte ptr [rcx + 0xa], al ; ret
0x000000000012b7bb : and byte ptr [rcx + rcx*4 + 0x4c], cl ; and al, 0x28 ; call 0x137a68
0x000000000004a7c5 : and byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; ret
0x00000000000b9cc0 : and byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, r12 ; call rbx
0x00000000001a90e0 : and byte ptr [rcx + rsi*8 - 1], dl ; ret
0x000000000004a1d5 : and byte ptr [rcx - 0x2413dbbc], cl ; insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x000000000013c7f8 : and byte ptr [rcx - 0x75], cl ; push rdi ; sbb byte ptr [rcx + 0x63], cl ; ret
0x0000000000022c8c : and byte ptr [rcx - 0x77], cl ; ret 0xee75
0x0000000000194714 : and byte ptr [rcx - 0x7d5f0005], al ; sti ; jmp qword ptr [rax]
0x0000000000195334 : and byte ptr [rcx - 4], bl ; jmp qword ptr [rax + 0x10fffc58]
0x00000000001953a8 : and byte ptr [rcx - 4], cl ; jmp qword ptr [rax - 0x1f0003b6]
0x00000000001aa910 : and byte ptr [rcx], 0xf2 ; jmp qword ptr [rcx]
0x00000000001ad38d : and byte ptr [rcx], al ; add al, al ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000000f79f0 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000001ad315 : and byte ptr [rcx], al ; add byte ptr [rax], bl ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000001ad32d : and byte ptr [rcx], al ; add byte ptr [rax], dh ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000001953bc : and byte ptr [rcx], bh ; cld ; jmp qword ptr [rax + 0x20fffc3a]
0x00000000001946ac : and byte ptr [rcx], bh ; sti ; call qword ptr [rax]
0x0000000000194e34 : and byte ptr [rcx], ch ; cld ; push rax ; sub bh, ah ; call rax
0x000000000013337b : and byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000c6cb8 : and byte ptr [rcx], dh ; test byte ptr [rcx - 0x7d], 0xc6 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000001ad314 : and byte ptr [rcx], r8b ; add byte ptr [rax], bl ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x0000000000195304 : and byte ptr [rdi - 4], dl ; jmp qword ptr [rax + 0x20fffc56]
0x0000000000194e50 : and byte ptr [rdi], ah ; cld ; call rax
0x00000000001953cc : and byte ptr [rdi], bh ; cld ; jmp qword ptr [rax + 0x20fffc40]
0x000000000002de15 : and byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x0000000000022c79 : and byte ptr [rdi], cl ; test byte ptr [rcx], al ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000a5fa9 : and byte ptr [rdi], cl ; test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x0000000000022d78 : and byte ptr [rdi], cl ; test eax, ecx ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000170180 : and byte ptr [rdi], cl ; test ebx, ecx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000126550 : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x93c
0x00000000000fe1cd : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd108
0x00000000000fe16c : and byte ptr [rdi], cl ; xchg eax, esp ; sar dword ptr [rsp + rbx*2], 0xf ; xchg eax, esp ; ret 0xd108
0x0000000000195378 : and byte ptr [rdi], dh ; cld ; jmp qword ptr [rax + 0x20fffc38]
0x00000000001ba570 : and byte ptr [rdi], dl ; clc ; call qword ptr [rdx]
0x00000000001b0440 : and byte ptr [rdx - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001953d4 : and byte ptr [rdx - 4], al ; jmp qword ptr [rax + 0x20fffc43]
0x00000000001a8b00 : and byte ptr [rdx], ah ; int1 ; jmp rcx
0x0000000000195380 : and byte ptr [rdx], bh ; cld ; jmp qword ptr [rax + 0x20fffc3b]
0x0000000000194b84 : and byte ptr [rdx], cl ; cld ; jmp qword ptr [rax]
0x00000000001a5a10 : and byte ptr [rdx], dh ; out dx, al ; jmp qword ptr [rcx]
0x0000000000194e1c : and byte ptr [rip + 0x2f00fffc], ch ; cld ; call rax
0x0000000000195388 : and byte ptr [rip + 0x3ea0fffc], bh ; cld ; jmp qword ptr [rax]
0x000000000016dd1a : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001b9dfd : and byte ptr [rsi + rcx + 0x18], ah ; ret
0x000000000019fef5 : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x00000000000d7249 : and byte ptr [rsi - 0x15], dh ; ret 0x9066
0x0000000000002c0e : and byte ptr [rsi - 0x32], dh ; clc ; ret
0x00000000001b00e0 : and byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001953a0 : and byte ptr [rsi - 4], al ; jmp qword ptr [rax + 0x20fffc47]
0x000000000019530c : and byte ptr [rsi - 4], dl ; jmp qword ptr [rax + 0x20fffc55]
0x000000000019470c : and byte ptr [rsi - 5], bh ; jmp qword ptr [rax + 0x20fffb7f]
0x0000000000100bec : and byte ptr [rsi], ah ; sub al, 0 ; ret
0x00000000001953b4 : and byte ptr [rsi], dh ; cld ; jmp qword ptr [rax + 0x20fffc37]
0x00000000000fea61 : and byte ptr [rsp + rbp*8 + 0x41], dh ; mov byte ptr [rax - 1], 0 ; ret
0x00000000001953c4 : and byte ptr [rsp + rdi*8], bh ; jmp qword ptr [rax + 0x20fffc3d]
0x0000000000194d98 : and byte ptr [rsp + rdi*8], ch ; inc dword ptr [rax] ; cld ; jmp rax
0x0000000000194b88 : and byte ptr [rsp + rdi*8], cl ; jmp qword ptr [rax]
0x00000000000ab502 : and ch, 0xf ; je 0xab529 ; add rax, 2 ; ret
0x000000000018173d : and ch, bl ; call qword ptr [rbx]
0x000000000018174d : and ch, bl ; dec dword ptr [rax] ; and ebx, ebp ; call qword ptr [rbx]
0x00000000000ab4ed : and cl, 0xf ; je 0xab515 ; ret
0x000000000000395a : and cl, ah ; ret
0x00000000000ce88f : and cl, byte ptr [rax - 0x75] ; mov ebp, 0xfffffbd0 ; call r14
0x0000000000047214 : and cl, byte ptr [rax - 0x7d] ; ret
0x0000000000094558 : and cl, byte ptr [rcx + rcx*4 - 0x28] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008e29d : and cl, byte ptr [rcx - 0x77] ; ret
0x0000000000118d45 : and cl, byte ptr [rcx - 0x7d] ; ret 0x4104
0x0000000000083543 : and dh, byte ptr [rax + rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000188130 : and dh, byte ptr [rbp - 0xd] ; dec esp ; mov ebx, dr0 ; jmp qword ptr [rdx]
0x00000000001880b8 : and dh, byte ptr [rbp - 0xd] ; jmp qword ptr [rdx]
0x00000000001a8b01 : and dh, cl ; jmp rcx
0x00000000001b21c9 : and dh, dh ; jmp qword ptr [rsi]
0x00000000000dbb1f : and dh, dh ; ret
0x000000000008e8c7 : and dh, dh ; ret 0x7504
0x00000000000567ed : and dil, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x0000000000194638 : and dil, bl ; jmp rax
0x00000000001ab5a0 : and dl, 0xf2 ; call qword ptr [rsi]
0x0000000000194ae8 : and dl, ah ; sti ; jmp qword ptr [rax]
0x00000000000f87fa : and dl, bl ; stc ; dec dword ptr [rax + 0x39] ; ret
0x0000000000194a14 : and dl, bl ; sti ; inc dword ptr [rax] ; fdiv st(3), st(0) ; jmp rax
0x00000000001aa7f1 : and dl, dh ; jmp qword ptr [rcx]
0x00000000000d24a7 : and dword ptr [rax - 0x7d], ecx ; ret 0x8b04
0x000000000004ffb1 : and dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000001852c2 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x000000000010ccbb : and dword ptr [rbx + 0x2b], edi ; add byte ptr [rax - 0x77], cl ; ret 0x9ce9
0x0000000000072bff : and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000006f6b9 : and dword ptr [rcx + 0x415d5bd8], ecx ; pop rsp ; ret
0x0000000000194740 : and dword ptr [rcx - 0x5e0f0003], esp ; std ; jmp rax
0x0000000000123926 : and dword ptr [rcx - 0xa], eax ; ret
0x0000000000197e25 : and dword ptr [rcx], eax ; add ah, dl ; jnp 0x197e22 ; jmp rsp
0x00000000000421f3 : and dword ptr [rcx], esi ; ror byte ptr [rax + 1], cl ; ret 0x9a74
0x00000000000b04fb : and dword ptr [rcx], esi ; ror byte ptr [rax + 1], cl ; ret 0x9e74
0x0000000000035f56 : and dword ptr [rdi + rdx*8], eax ; xor eax, eax ; ret
0x0000000000077e20 : and dword ptr [rdi], 0xffffffcf ; ret
0x00000000000360b8 : and dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000000000182379 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000018982c : and dword ptr [rsi - 0x6c82000b], edx ; cmc ; jmp qword ptr [rbx]
0x00000000000a5ddb : and dword ptr [rsi], eax ; add byte ptr [rax], al ; ret
0x00000000001852c1 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x0000000000173dd6 : and eax, 0 ; add bl, dh ; ret
0x0000000000020beb : and eax, 0 ; ret
0x00000000000fba53 : and eax, 0x100f ; ret
0x000000000003517a : and eax, 0x200 ; ret
0x00000000001406fb : and eax, 0x281240 ; ret
0x0000000000106b54 : and eax, 0x2d0 ; pop rax ; pop rdi ; call rax
0x00000000000cc7a6 : and eax, 0x2d0 ; ret
0x0000000000020b88 : and eax, 0x30 ; add rsp, 0x28 ; jmp rax
0x000000000008ce27 : and eax, 0x30 ; add rsp, 8 ; jmp rax
0x000000000002084d : and eax, 0x30 ; call rax
0x0000000000039fb9 : and eax, 0x30 ; call rdx
0x0000000000035312 : and eax, 0x30 ; jmp rax
0x000000000002f6d3 : and eax, 0x30 ; mov rdi, r13 ; call rax
0x000000000004d358 : and eax, 0x30 ; xor esi, esi ; call rax
0x00000000000aa1ed : and eax, 0x3fc00 ; pop rbx ; ret
0x00000000000aa20d : and eax, 0x3fc00 ; ret
0x00000000000aa1cc : and eax, 0x3fffc00 ; pop rbx ; ret
0x0000000000173b53 : and eax, 0x5be17500 ; ret
0x000000000002df22 : and eax, 0x7f ; ret
0x00000000000aa240 : and eax, 0x7ff80000 ; ret
0x0000000000034b34 : and eax, 0x80 ; ret
0x0000000000034bf7 : and eax, 0x80000000 ; movd xmm0, eax ; ret
0x0000000000077342 : and eax, 0x804 ; ret
0x00000000000fe18d : and eax, 0x83489066 ; ret 0x3c01
0x00000000000d8b49 : and eax, 0x8348d231 ; ret 0x4801
0x00000000000f064f : and eax, 0x85ffffff ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x0000000000080b43 : and eax, 0x950f4100 ; ret
0x00000000001ad8bd : and eax, 0xa5000001 ; hlt ; call rax
0x0000000000114897 : and eax, 0xc ; cmp eax, 4 ; je 0x1148a8 ; ret
0x0000000000114a68 : and eax, 0xc ; pop rbp ; pop r12 ; ret
0x000000000006d310 : and eax, 0xe889fffb ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000197e8d : and eax, 0xfb040001 ; int1 ; call rsp
0x0000000000173de5 : and eax, 0xff834800 ; add dword ptr [rdi + 3], esi ; ret
0x0000000000106c91 : and eax, 0xfff ; or eax, edi ; ret
0x0000000000118b5d : and eax, 0xffffff ; or eax, edi ; bswap eax ; ret
0x0000000000118af8 : and eax, 0xffffff ; ret
0x0000000000122833 : and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x000000000010159f : and eax, 1 ; jmp 0x10156b
0x00000000000d6828 : and eax, 1 ; pop rbx ; ret
0x000000000002ded2 : and eax, 1 ; ret
0x00000000000d6728 : and eax, 2 ; add eax, 8 ; ret
0x000000000002dd52 : and eax, 2 ; movzx eax, ax ; ret
0x00000000000d6774 : and eax, 2 ; ret
0x000000000004842c : and eax, 2 ; sub eax, 1 ; ret
0x000000000002ddf2 : and eax, 4 ; movzx eax, ax ; ret
0x000000000002dd12 : and eax, 8 ; movzx eax, ax ; ret
0x0000000000034e64 : and eax, 8 ; ret
0x000000000019d5ed : and eax, dword ptr [rax] ; add al, al ; jne 0x19d5e2 ; call qword ptr [rdx]
0x000000000013d6c2 : and eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000d8f3a : and eax, dword ptr [rbx - 0x7cb7fe3f] ; ret
0x00000000001ad69d : and eax, dword ptr [rcx] ; add byte ptr [rax - 0x65], al ; hlt ; jmp qword ptr [rcx]
0x00000000001ad6b5 : and eax, dword ptr [rcx] ; add byte ptr [rax - 0x65], bl ; hlt ; jmp qword ptr [rcx]
0x0000000000168429 : and eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x0000000000036548 : and eax, dword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000002d17 : and eax, ebp ; clc ; ret
0x0000000000034842 : and eax, edx ; movq xmm0, rax ; ret
0x0000000000034782 : and eax, edx ; ret
0x00000000000347d0 : and eax, edx ; sub rax, rdx ; shr rax, 0x3f ; ret
0x000000000002e0ed : and eax, esi ; ret
0x00000000001a2411 : and ebp, ebp ; call rdx
0x000000000018176d : and ebp, ebx ; call qword ptr [rbx]
0x0000000000072c00 : and ebp, edi ; pop rbx ; ret
0x0000000000114832 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x114845 ; ret
0x00000000000d686f : and ebx, 8 ; je 0xd6810 ; pop rbx ; ret
0x00000000001816bd : and ebx, ebp ; call qword ptr [rbx]
0x0000000000181769 : and ebx, ebp ; dec dword ptr [rax] ; and ebp, ebx ; call qword ptr [rbx]
0x0000000000181739 : and ebx, ebp ; lcall ptr [rdi + 0x22] ; jmp 0x181745
0x00000000001816dd : and ebx, ebp ; push qword ptr [rax + 0x1c] ; jmp 0x1816e9
0x000000000003afa8 : and ecx, 0x3ff ; xor eax, ecx ; ret
0x000000000016f295 : and ecx, 0xff ; sub eax, ecx ; ret
0x000000000016e9c8 : and ecx, 0xffff ; sub eax, ecx ; ret
0x0000000000075800 : and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x000000000007fe9b : and ecx, dword ptr [rax + 0x39] ; ret
0x00000000000ab26f : and ecx, dword ptr [rax + rax] ; ret
0x00000000000eff6b : and ecx, dword ptr [rax - 0x75] ; je 0xeff9c ; cmp byte ptr [rax - 0x77], cl ; ret 0x8b44
0x000000000012c49e : and ecx, dword ptr [rax - 0x75] ; sbb ecx, dword ptr [rax - 0x7d] ; ret
0x000000000008592c : and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x000000000007cb7c : and ecx, dword ptr [rdi] ; mov dh, 0 ; ret
0x0000000000127056 : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0x2c3c
0x00000000000ff0a9 : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0x2f3c
0x00000000000ff102 : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xc084
0x000000000012707d : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xf980
0x000000000002df32 : and edi, 0xffffff80 ; sete al ; ret
0x0000000000194ea9 : and edi, esp ; call qword ptr [rax - 0x2f0003dc]
0x00000000000758f3 : and edx, 1 ; mov eax, edx ; ret
0x000000000019a871 : and edx, edi ; call rsp
0x00000000001aa869 : and edx, esi ; jmp qword ptr [rcx]
0x0000000000002bf9 : and edx, esp ; bswap ebx ; clc ; ret
0x000000000004a1ae : and esi, 0xe0837fff ; jg 0x4a1c7 ; ret 0x5488
0x00000000001a8be9 : and esi, ecx ; call qword ptr [rcx]
0x00000000001a8b69 : and esi, ecx ; jmp qword ptr [rcx]
0x00000000001b20d9 : and esi, esi ; jmp qword ptr [rsi]
0x00000000000b014e : and esp, eax ; or eax, 0x3d8d4800 ; hlt ; ret
0x00000000001866e8 : and esp, esi ; in eax, dx ; dec dword ptr [rsi - 0x1d] ; in eax, dx ; jmp qword ptr [rbx]
0x00000000001866b0 : and esp, esi ; in eax, dx ; dec ebx ; fsubp st(5) ; jmp qword ptr [rbx]
0x0000000000186688 : and esp, esi ; in eax, dx ; jmp qword ptr [rbx]
0x00000000001866d0 : and esp, esi ; in eax, dx ; ljmp ptr [rcx] ; fucomp st(5) ; jmp qword ptr [rbx]
0x0000000000035f55 : and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x00000000000360b7 : and qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000036547 : and rax, qword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000034841 : and rax, rdx ; movq xmm0, rax ; ret
0x00000000001b2108 : and rsi, rsi ; jmp qword ptr [rsi]
0x0000000000034bbb : andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x0000000000034bb8 : andps xmm0, xmm3 ; andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x0000000000095b7a : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x000000000008e100 : bsf eax, eax ; add rax, rdi ; ret
0x000000000008e110 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000008e120 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x000000000008e0f0 : bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x000000000008e03f : bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000095d73 : bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x000000000008edf5 : bsf eax, edi ; cmove eax, edx ; add eax, 1 ; ret
0x000000000008ad26 : bsf eax, edx ; ret
0x000000000008ae82 : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x0000000000095e90 : bsf rax, rax ; lea rax, qword ptr [rdi + rax] ; ret
0x000000000008ad72 : bsf rax, rdx ; ret
0x000000000009e7e1 : bsr eax, eax ; add rax, rdi ; add rax, r8 ; ret
0x000000000008ca27 : bsr eax, eax ; add rax, rdi ; ret
0x000000000009e6b0 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000009e6c0 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x000000000009e6d0 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x30] ; ret
0x000000000008ccab : bsr eax, esi ; add rax, rdi ; ret
0x000000000008cbb9 : bsr esi, esi ; lea rax, qword ptr [rcx + rsi] ; ret
0x000000000008cab5 : bsr esi, esi ; lea rax, qword ptr [rdi + rsi] ; ret
0x000000000008ca26 : bsr rax, rax ; add rax, rdi ; ret
0x000000000008ccaa : bsr rax, rsi ; add rax, rdi ; ret
0x000000000008cbb8 : bsr rsi, rsi ; lea rax, qword ptr [rcx + rsi] ; ret
0x000000000008cab4 : bsr rsi, rsi ; lea rax, qword ptr [rdi + rsi] ; ret
0x00000000001351ad : bswap eax ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000118ad2 : bswap eax ; ret
0x0000000000002bfb : bswap ebx ; clc ; ret
0x0000000000101161 : call 0x1014a8
0x0000000000064005 : call 0x11064007
0x0000000000064532 : call 0x11064534
0x0000000000064cec : call 0x11064cee
0x00000000000650d6 : call 0x110650d8
0x0000000000066b3b : call 0x11066b3d
0x0000000000068feb : call 0x11068fed
0x0000000000069fff : call 0x1106a001
0x00000000001a8458 : call 0x111a7535
0x0000000000057f79 : call 0x1141b2
0x000000000013283e : call 0x12eb12
0x00000000001a9228 : call 0x131a8391
0x000000000012b7c1 : call 0x137a62
0x0000000000035f30 : call 0x140ca743
0x000000000019cc88 : call 0x1419b5a3
0x000000000011fd36 : call 0x144317
0x00000000000283a9 : call 0x1c506f9
0x00000000000e351d : call 0x1f7f2
0x0000000000133638 : call 0x1f872
0x0000000000023659 : call 0x1f8a2
0x00000000000f3659 : call 0x1f8aa
0x00000000000f3658 : call 0x1f8ab
0x00000000000346b0 : call 0x1f8ae
0x00000000000dfebb : call 0x1f8b0
0x000000000004d57c : call 0x2104d57e
0x000000000004dbab : call 0x2104dbad
0x000000000004dc59 : call 0x2104dc5b
0x000000000004e0a1 : call 0x2104e0a3
0x000000000004e0b0 : call 0x2104e0b2
0x000000000004f974 : call 0x2104f976
0x000000000004faec : call 0x2104faee
0x000000000019cce8 : call 0x2119b603
0x00000000001ad278 : call 0x221ac712
0x00000000001ad988 : call 0x221ace37
0x00000000001b0958 : call 0x221afeda
0x000000000019fac8 : call 0x2319e57a
0x00000000001a5b68 : call 0x231a49a4
0x00000000001bab28 : call 0x231ba6c5
0x0000000000093d84 : call 0x247dc8dd
0x000000000009e9c6 : call 0x2d8b8
0x0000000000021958 : call 0x2dc42
0x000000000004d9a9 : call 0x2dc48
0x00000000001123d3 : call 0x2e622
0x00000000000bc679 : call 0x39768
0x000000000005fa6e : call 0x3bd32
0x000000000003dfd6 : call 0x3c096
0x00000000000db2a4 : call 0x42d03bed
0x00000000000db41c : call 0x42d03d65
0x00000000000db2f4 : call 0x43d03c3d
0x00000000000db46c : call 0x43d03db5
0x00000000000adec7 : call 0x4a162
0x000000000007e3ad : call 0x4a672
0x00000000000afb93 : call 0x4ccd90aa
0x00000000000b235b : call 0x4ccdb772
0x00000000000b503b : call 0x4ccde552
0x0000000000076984 : call 0x4d137
0x000000000015a71a : call 0x4f94b718
0x000000000015a719 : call 0x4f94b719
0x000000000015d1ea : call 0x4f94e1e8
0x000000000015d1e9 : call 0x4f94e1e9
0x000000000015fd0a : call 0x4f950d08
0x000000000015fd09 : call 0x4f950d09
0x00000000000e976e : call 0x55982
0x00000000000e3b19 : call 0x66d0c429
0x00000000000e4077 : call 0x66d0c987
0x00000000000e41d9 : call 0x66d0cae9
0x00000000000befb7 : call 0x6b262
0x00000000000ccf0d : call 0x750cd016
0x000000000004b4d7 : call 0x77732
0x000000000005f01d : call 0x7b2d2
0x000000000004647e : call 0x7bb29
0x000000000005ca93 : call 0x88d92
0x000000000002cd9c : call 0x89082
0x00000000000bcffd : call 0x892e2
0x000000000009ea53 : call 0x8acf2
0x00000000000e4550 : call 0x8e814
0x00000000000b986b : call 0x8e986
0x0000000000031fc1 : call 0x8e988
0x0000000000023452 : call 0x8e989
0x0000000000032c0b : call 0x8ee62
0x0000000000032c0a : call 0x8ee63
0x0000000000077820 : call 0x93a42
0x00000000000dd9e4 : call 0x93a46
0x00000000000202f6 : call 0xaa036
0x00000000000203fa : call 0xaa156
0x00000000000ef615 : call 0xcb912
0x00000000000ef9bb : call 0xcbc92
0x0000000000106b60 : call 0xcbc99
0x00000000000efa0a : call 0xcbcf2
0x00000000000f5b7e : call 0xcc7c7
0x00000000000f5bab : call 0xcc7e7
0x00000000000e9bac : call 0xe8818
0x00000000000f3787 : call 0xefa82
0x000000000010712d : call 0xf107136
0x000000000010714d : call 0xf107156
0x00000000000ff7e3 : call 0xf17d871
0x000000000010037a : call 0xf17e408
0x00000000000fae23 : call 0xf7032
0x000000000011dc09 : call 0xf7036
0x00000000001004fa : call 0xfc712
0x00000000000bb562 : call 0xfcded89
0x00000000000dfebc : call 0xffffffff810df2c1
0x000000000003507d : call 0xffffffff816a130d
0x000000000011e2e9 : call 0xffffffff835ae2f4
0x000000000002c49f : call 0xffffffff854ac4b0
0x000000000002c49e : call 0xffffffff854ac4b1
0x00000000001228f7 : call 0xffffffff895beb87
0x00000000000bb099 : call 0xffffffff89cdd9c0
0x00000000000bb20a : call 0xffffffff89cddb31
0x00000000000bb403 : call 0xffffffff89cddd2a
0x000000000006f357 : call 0xffffffff8b06f362
0x0000000000182de3 : call 0xffffffffaedacc59
0x00000000000baa3a : call 0xffffffffc234f282
0x0000000000051fbb : call 0xffffffffc23e67c5
0x0000000000081b9b : call 0xffffffffc24163ac
0x000000000012e1b5 : call 0xffffffffc287a243
0x0000000000047601 : call 0xffffffffc28db729
0x00000000000824d8 : call 0xffffffffc2916cf1
0x00000000000f049b : call 0xffffffffc2984ca5
0x000000000010edef : call 0xffffffffc29a39f9
0x0000000000122e9e : call 0xffffffffc29b351a
0x000000000012fa54 : call 0xffffffffc29c4265
0x0000000000139196 : call 0xffffffffc29d919b
0x00000000000d59ed : call 0xffffffffc2e1695c
0x00000000000a5c14 : call 0xffffffffc30a5c24
0x00000000000a9e06 : call 0xffffffffc30f2b5c
0x00000000000a9e1f : call 0xffffffffc30f2b75
0x0000000000047060 : call 0xffffffffc33db86a
0x000000000010dca0 : call 0xffffffffc34a24aa
0x000000000010df3c : call 0xffffffffc34a2746
0x00000000000ac72c : call 0xffffffffc3670892
0x000000000010f8b8 : call 0xffffffffc39a44c2
0x000000000016b1e5 : call 0xffffffffc39cc0fe
0x000000000016c265 : call 0xffffffffc39cd17e
0x00000000000372ed : call 0xffffffffc3b2823e
0x000000000008ef37 : call 0xffffffffc3d97888
0x0000000000089047 : call 0xffffffffc4011998
0x000000000008a847 : call 0xffffffffc4013198
0x00000000000b26bc : call 0xffffffffc7446ec9
0x00000000001864e8 : call 0xffffffffd41852c8
0x00000000001b1158 : call 0xffffffffd81b06ff
0x00000000000c68fd : call 0xffffffffde966907
0x0000000000034f47 : call 0xffffffffe28511d7
0x00000000001b71b8 : call 0xffffffffe71b692a
0x000000000005cb59 : call 0xfffffffffa0e512b
0x000000000010ded1 : call 0xffffffffff9626de
0x000000000013653e : call qword ptr [r10]
0x000000000007d85f : call qword ptr [r15]
0x0000000000195357 : call qword ptr [rax + 0x10fffc54]
0x000000000019534f : call qword ptr [rax + 0x10fffc55]
0x0000000000195347 : call qword ptr [rax + 0x10fffc56]
0x000000000019533f : call qword ptr [rax + 0x10fffc57]
0x0000000000195133 : call qword ptr [rax + 0x10fffc59]
0x0000000000195d17 : call qword ptr [rax + 0x10fffca0]
0x0000000000195d0f : call qword ptr [rax + 0x10fffca1]
0x0000000000195d07 : call qword ptr [rax + 0x10fffca2]
0x0000000000195cff : call qword ptr [rax + 0x10fffca3]
0x0000000000194843 : call qword ptr [rax + 0x10fffda4]
0x000000000019484b : call qword ptr [rax + 0x10fffda5]
0x0000000000194e4b : call qword ptr [rax + 0x20fffc34]
0x0000000000194dcb : call qword ptr [rax + 0x20fffc35]
0x0000000000195103 : call qword ptr [rax + 0x20fffc60]
0x0000000000195417 : call qword ptr [rax + 0x20fffc84]
0x0000000000195b27 : call qword ptr [rax + 0x20fffca8]
0x000000000019590f : call qword ptr [rax + 0x20fffcab]
0x0000000000194853 : call qword ptr [rax + 0x20fffda6]
0x0000000000194f2b : call qword ptr [rax + 0x26fffc5c]
0x0000000000073e17 : call qword ptr [rax + 0x80]
0x0000000000194ebf : call qword ptr [rax - 0x1f0003ea]
0x0000000000194cdf : call qword ptr [rax - 0x1f000408]
0x0000000000194cf3 : call qword ptr [rax - 0x1f000416]
0x0000000000194b67 : call qword ptr [rax - 0x1f00042d]
0x0000000000194b13 : call qword ptr [rax - 0x1f000434]
0x00000000001946cf : call qword ptr [rax - 0x1f000499]
0x0000000000195daf : call qword ptr [rax - 0x2f000380]
0x0000000000194eab : call qword ptr [rax - 0x2f0003dc]
0x00000000000348ec : call qword ptr [rax - 0x3d]
0x0000000000194dc7 : call qword ptr [rax - 0x6f0003cd]
0x0000000000187677 : call qword ptr [rax]
0x000000000011eb1e : call qword ptr [rbx + 0x48]
0x0000000000196fe3 : call qword ptr [rbx + rax*8]
0x0000000000173bae : call qword ptr [rbx]
0x000000000019479f : call qword ptr [rcx + 0x21fffda8]
0x0000000000186657 : call qword ptr [rcx - 0x1d001216]
0x000000000018658f : call qword ptr [rcx - 0x28001216]
0x0000000000186653 : call qword ptr [rcx - 0x6e001216]
0x00000000000060b1 : call qword ptr [rcx]
0x000000000007d860 : call qword ptr [rdi]
0x0000000000194fd7 : call qword ptr [rdx + 0x22fffc5e]
0x00000000001954c3 : call qword ptr [rdx + 0x22fffc86]
0x00000000001959bb : call qword ptr [rdx + 0x22fffcad]
0x0000000000199883 : call qword ptr [rdx + rax*8 + 1]
0x00000000000887f4 : call qword ptr [rdx]
0x0000000000194f33 : call qword ptr [rsi + 0x26fffc62]
0x000000000019545f : call qword ptr [rsi + 0x26fffc83]
0x0000000000195957 : call qword ptr [rsi + 0x26fffcaa]
0x00000000000093a8 : call qword ptr [rsi]
0x0000000000024075 : call r12
0x0000000000021be2 : call r14
0x0000000000023e55 : call r15
0x000000000006cafb : call r8
0x000000000011409f : call r9
0x0000000000187667 : call rax
0x000000000002da78 : call rbx
0x000000000002b398 : call rcx
0x0000000000023e56 : call rdi
0x0000000000039fbe : call rdx
0x0000000000021be3 : call rsi
0x000000000018160f : call rsp
0x000000000011da22 : cdq ; adc al, 7 ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00000000001969ed : cdq ; add byte ptr [rax], al ; xor ch, bl ; jmp rsp
0x000000000012f2f9 : cdq ; add byte ptr [rip - 0x76b40000], al ; ret
0x000000000002c534 : cdq ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x00000000000313b4 : cdq ; add eax, 0xc7834900 ; or byte ptr [rax + 1], cl ; ret
0x0000000000143973 : cdq ; cmp eax, 0x8948fff8 ; ret
0x00000000001ad5a9 : cdq ; hlt ; jmp qword ptr [rcx]
0x000000000003a694 : cdq ; idiv rsi ; ret
0x0000000000184b20 : cdq ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000071133 : cdq ; or eax, 0xc2890000 ; jmp 0x710cf
0x0000000000019be8 : cdq ; ret
0x00000000001ba6a9 : cdq ; sti ; jmp qword ptr [rdx]
0x0000000000096453 : cdq ; xchg eax, ebx ; clc ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000000fb92e : cdqe ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x000000000012396d : cdqe ; shr rax, 4 ; ret
0x0000000000061cb1 : clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x000000000019cd18 : clc ; adc ebp, ecx ; call qword ptr [rcx]
0x0000000000081a73 : clc ; add al, 0x74 ; and al, 0x89 ; ret 0xb48b
0x00000000000fd258 : clc ; add al, 0xf ; xchg eax, ebp ; ret 0xdaf7
0x000000000005178a : clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000002b0ad : clc ; add byte ptr [rax], 0 ; add cl, ch ; ret 0xfffb
0x00000000001aab35 : clc ; add byte ptr [rax], al ; xor rsi, rdx ; call qword ptr [rax]
0x000000000005710d : clc ; add cl, byte ptr [rax + 0x29] ; ret
0x00000000000abf98 : clc ; add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x0000000000070bee : clc ; add cl, byte ptr [rax - 0x77] ; ret
0x00000000000ebd4c : clc ; add cl, byte ptr [rdi] ; xchg eax, ebp ; ret
0x0000000000094fb3 : clc ; add dword ptr [rax - 0x77], ecx ; ret
0x000000000006ad43 : clc ; add dword ptr [rax - 0x77], ecx ; ret 0x2b76
0x00000000001bab25 : clc ; add dword ptr [rax], eax ; call 0x231ba6c8
0x0000000000099076 : clc ; add dword ptr [rbp + 0x19], ecx ; ror byte ptr [rcx - 0x7d], cl ; ret 0x8306
0x0000000000033380 : clc ; add dword ptr [rbx - 0x7cb70030], eax ; ret
0x00000000000eb22a : clc ; add dword ptr [rcx + 0xf], eax ; xchg eax, esp ; ret
0x00000000000c1980 : clc ; add dword ptr [rdi], ecx ; sahf ; ret 0x1fbd
0x00000000000ec096 : clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xc085
0x00000000000a9e94 : clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xfd83
0x0000000000122835 : clc ; add eax, 0x10 ; ret
0x00000000000c1d39 : clc ; add eax, 0x2907fec1 ; ret 0x8944
0x000000000004cf87 : clc ; add eax, 0xf8834800 ; dec dword ptr [rax - 0x77] ; ret
0x000000000012d5b1 : clc ; add esi, dword ptr [rsi + 0xb] ; mov eax, 2 ; ret
0x000000000009e7e6 : clc ; add rax, r8 ; ret
0x000000000008dec8 : clc ; add rax, rcx ; ret
0x0000000000115bb2 : clc ; add rsp, 8 ; ret
0x00000000001b23d8 : clc ; and dh, dh ; jmp qword ptr [rsi]
0x000000000002df21 : clc ; and eax, 0x7f ; ret
0x0000000000118af7 : clc ; and eax, 0xffffff ; ret
0x0000000000118ad1 : clc ; bswap eax ; ret
0x00000000001baff2 : clc ; call qword ptr [rax]
0x00000000001bac92 : clc ; call qword ptr [rbx]
0x00000000001bba72 : clc ; call qword ptr [rcx]
0x00000000001bb64a : clc ; call qword ptr [rdi]
0x00000000001b98aa : clc ; call qword ptr [rdx]
0x00000000001bb76a : clc ; call rcx
0x0000000000199b2a : clc ; call rsp
0x0000000000122811 : clc ; cmc ; je 0x12280d ; pop rbx ; ret
0x00000000001988a1 : clc ; cmc ; jmp rsp
0x0000000000003af6 : clc ; cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x000000000016f239 : clc ; cmp rcx, rax ; jne 0x16f26b ; xor eax, eax ; ret
0x000000000016f238 : clc ; cmp rcx, rax ; jne 0x16f26c ; xor eax, eax ; ret
0x0000000000170079 : clc ; cmp rcx, rax ; jne 0x1700ab ; xor eax, eax ; ret
0x0000000000170078 : clc ; cmp rcx, rax ; jne 0x1700ac ; xor eax, eax ; ret
0x000000000003a692 : clc ; cqo ; idiv rsi ; ret
0x0000000000086ea0 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000078a3c : clc ; dec dword ptr [rax + 0xf] ; ret 0x8d48
0x00000000000fdd33 : clc ; dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x000000000002db97 : clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000013f8e2 : clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x0000000000096455 : clc ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000000fe6af : clc ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rbx + 0x48], 0x39 ; ret
0x0000000000105515 : clc ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rcx + rdi*2 + 0x48], 0x39 ; ret
0x0000000000199e0a : clc ; dec dword ptr [rbx + 0x60d40001] ; clc ; jmp rsp
0x0000000000199bea : clc ; dec dword ptr [rbx + rdx*8 + 0x1c240001] ; clc ; jmp rsp
0x000000000004d694 : clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000004ed50 : clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x0000000000137c39 : clc ; dec dword ptr [rdi] ; test byte ptr [rdi - 0x7d000000], al ; ret 0x3901
0x0000000000075ebd : clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000001ae1a8 : clc ; fdivrp st(4) ; jmp qword ptr [rcx]
0x00000000000ff4d9 : clc ; inc dword ptr [rbp - 0x7cee8b40] ; ret
0x000000000002b76b : clc ; inc dword ptr [rcx - 0x77] ; ret
0x00000000001a0d38 : clc ; iretd ; in al, dx ; jmp qword ptr [rax]
0x0000000000026cfe : clc ; jg 0x26c8d ; ret 0x5c77
0x00000000001ba222 : clc ; jmp qword ptr [rbx]
0x00000000001ba5ba : clc ; jmp qword ptr [rcx]
0x00000000000bf685 : clc ; jmp rax
0x0000000000199bf2 : clc ; jmp rsp
0x000000000017205a : clc ; jne 0x172167 ; ret
0x0000000000172059 : clc ; jne 0x172168 ; ret
0x0000000000093b77 : clc ; jne 0x93a51 ; ret
0x0000000000199f2a : clc ; lcall ptr [rsp + rbp*8 - 0x651bffff] ; clc ; call rsp
0x0000000000114b24 : clc ; leave ; ret
0x00000000001ae368 : clc ; loop 0x1ae362 ; call qword ptr [rsi]
0x0000000000185938 : clc ; loope 0x18593d ; jmp qword ptr [rdi]
0x00000000001859b8 : clc ; loope 0x1859bd ; jmp qword ptr [rdi]
0x0000000000185a38 : clc ; loope 0x185a3d ; jmp qword ptr [rdi]
0x0000000000185ab8 : clc ; loope 0x185abd ; jmp qword ptr [rdi]
0x0000000000185b38 : clc ; loope 0x185b3d ; jmp qword ptr [rdi]
0x0000000000185bb8 : clc ; loope 0x185bbd ; jmp qword ptr [rdi]
0x00000000000fea08 : clc ; mov byte ptr [r8 - 1], 0 ; ret
0x000000000009dfe8 : clc ; mov byte ptr [rdi + 6], 0 ; ret
0x0000000000183782 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000001a6338 : clc ; mov esi, gs ; call qword ptr [rax]
0x0000000000152237 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000152ba7 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015a4a7 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000152da7 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015a417 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000152fa7 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015a387 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000152253 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000009f15c : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000004a192 : clc ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000002121c : clc ; neg eax ; ret
0x000000000008a997 : clc ; or dword ptr [rcx + 0xf], eax ; xchg eax, esi ; ret 0xc031
0x000000000008a941 : clc ; or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0xc031
0x00000000001a98e8 : clc ; out 0xf1, al ; jmp qword ptr [rdi]
0x00000000001b02a8 : clc ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x000000000009eae6 : clc ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009692b : clc ; pop rbx ; ret
0x00000000000745da : clc ; push qword ptr [rbp + 2] ; pop rbx ; ret
0x00000000001421cf : clc ; push qword ptr [rbp + rcx + 0x48] ; add esp, 8 ; ret
0x00000000000c7f7d : clc ; push qword ptr [rbp + rsi - 0x77] ; ret 0xe283
0x0000000000048485 : clc ; push qword ptr [rbp - 0x19] ; mov rax, rdx ; ret
0x000000000007bf00 : clc ; push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x00000000001152b1 : clc ; push qword ptr [rbp - 0xe] ; xor eax, eax ; leave ; ret
0x0000000000072bfb : clc ; push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x0000000000199f0a : clc ; push qword ptr [rbx + rbp*8 - 0x69abffff] ; clc ; jmp rsp
0x000000000007b4c5 : clc ; push qword ptr [rdi + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x0000000000002bd1 : clc ; ret
0x0000000000059c04 : clc ; ret 0x12
0x0000000000193ad2 : clc ; ret 0x6e1f
0x000000000005ca94 : clc ; ret 2
0x0000000000118ae1 : clc ; ror ax, 8 ; ret
0x00000000000038ec : clc ; salc ; jb 0x3970 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x000000000003a623 : clc ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x00000000001187db : clc ; sar rax, 6 ; ret
0x00000000000d44a1 : clc ; sbb byte ptr [rcx], bh ; ret 0x850f
0x00000000000489ea : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000118b77 : clc ; shr eax, 0x18 ; ret
0x000000000019eb38 : clc ; shr ecx, 1 ; call qword ptr [rax]
0x000000000019ebc8 : clc ; shr ecx, 1 ; call rax
0x0000000000194ce1 : clc ; sti ; jmp rax
0x0000000000149e7c : clc ; sub rax, r8 ; ret
0x000000000014a0d1 : clc ; sub rax, rdx ; ret
0x00000000001abea8 : clc ; test dh, bl ; call qword ptr [rsi]
0x000000000002b392 : clc ; test rcx, rcx ; je 0x2b3a0 ; call rcx
0x00000000001ac5cc : cld ; adc al, byte ptr [rcx] ; add byte ptr [rax - 0x29], ah ; jmp qword ptr [rcx]
0x000000000019b0ec : cld ; adc eax, dword ptr [rcx] ; add byte ptr [rsi + rdi*2 - 4], ah ; call rsp
0x0000000000041bb0 : cld ; adc edx, dword ptr [rip + 0x358d4800] ; ret 0x14a9
0x00000000001a092c : cld ; add byte ptr [rax], al ; add byte ptr [rax], ah ; mov al, 0xec ; jmp qword ptr [rcx]
0x00000000001aafbd : cld ; add byte ptr [rax], al ; loopne 0x1aaf6b ; call rdi
0x00000000000ccfa2 : cld ; add byte ptr [rax], al ; ret
0x00000000000aa1ef : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000000aa20f : cld ; add eax, dword ptr [rax] ; ret
0x0000000000195356 : cld ; call qword ptr [rax + 0x10fffc54]
0x000000000019534e : cld ; call qword ptr [rax + 0x10fffc55]
0x0000000000195346 : cld ; call qword ptr [rax + 0x10fffc56]
0x000000000019533e : cld ; call qword ptr [rax + 0x10fffc57]
0x0000000000195132 : cld ; call qword ptr [rax + 0x10fffc59]
0x0000000000195d16 : cld ; call qword ptr [rax + 0x10fffca0]
0x0000000000195d0e : cld ; call qword ptr [rax + 0x10fffca1]
0x0000000000195d06 : cld ; call qword ptr [rax + 0x10fffca2]
0x0000000000195cfe : cld ; call qword ptr [rax + 0x10fffca3]
0x0000000000194e4a : cld ; call qword ptr [rax + 0x20fffc34]
0x0000000000194dca : cld ; call qword ptr [rax + 0x20fffc35]
0x0000000000195102 : cld ; call qword ptr [rax + 0x20fffc60]
0x0000000000195416 : cld ; call qword ptr [rax + 0x20fffc84]
0x0000000000195b26 : cld ; call qword ptr [rax + 0x20fffca8]
0x000000000019590e : cld ; call qword ptr [rax + 0x20fffcab]
0x0000000000194f2a : cld ; call qword ptr [rax + 0x26fffc5c]
0x0000000000194ebe : cld ; call qword ptr [rax - 0x1f0003ea]
0x0000000000195dae : cld ; call qword ptr [rax - 0x2f000380]
0x0000000000194eaa : cld ; call qword ptr [rax - 0x2f0003dc]
0x0000000000194dc6 : cld ; call qword ptr [rax - 0x6f0003cd]
0x0000000000194bba : cld ; call qword ptr [rax]
0x0000000000194fd6 : cld ; call qword ptr [rdx + 0x22fffc5e]
0x00000000001954c2 : cld ; call qword ptr [rdx + 0x22fffc86]
0x00000000001959ba : cld ; call qword ptr [rdx + 0x22fffcad]
0x0000000000194fae : cld ; call qword ptr [rdx]
0x0000000000194f32 : cld ; call qword ptr [rsi + 0x26fffc62]
0x000000000019545e : cld ; call qword ptr [rsi + 0x26fffc83]
0x0000000000195956 : cld ; call qword ptr [rsi + 0x26fffcaa]
0x0000000000194f52 : cld ; call qword ptr [rsi]
0x0000000000194bde : cld ; call rax
0x0000000000194fe6 : cld ; call rdx
0x0000000000194f42 : cld ; call rsi
0x000000000019559a : cld ; call rsp
0x000000000005c417 : cld ; cmove rsi, r9 ; jmp 0x5c3e6
0x0000000000172152 : cld ; cmp eax, dword ptr [rsi - 4] ; jne 0x172168 ; xor eax, eax ; ret
0x0000000000172151 : cld ; cmp eax, dword ptr [rsi - 4] ; jne 0x172169 ; xor eax, eax ; ret
0x00000000001735f0 : cld ; dec dword ptr [rax - 0x77] ; fistp word ptr [rbx - 0x17] ; lodsd eax, dword ptr [rsi] ; ret 0xffea
0x000000000013f8de : cld ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x00000000000e2829 : cld ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xb60f
0x00000000000e340c : cld ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xf44
0x0000000000035047 : cld ; fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x00000000001a1c11 : cld ; in al, dx ; call qword ptr [rsi]
0x0000000000194c0a : cld ; inc dword ptr [rax + 0x10fffc0d] ; add ah, bh ; call rax
0x0000000000194eba : cld ; inc dword ptr [rax + 0x15] ; cld ; call qword ptr [rax - 0x1f0003ea]
0x0000000000194ea6 : cld ; inc dword ptr [rax + 0x23] ; cld ; call qword ptr [rax - 0x2f0003dc]
0x0000000000194d92 : cld ; inc dword ptr [rax + 0x2a] ; cld ; jmp qword ptr [rax]
0x0000000000194e16 : cld ; inc dword ptr [rax + 0x2b] ; cld ; jmp qword ptr [rax]
0x0000000000194d76 : cld ; inc dword ptr [rax + 0x2c] ; cld ; jmp qword ptr [rax]
0x0000000000194d5a : cld ; inc dword ptr [rax + 0x2e] ; cld ; jmp qword ptr [rax]
0x0000000000194dfe : cld ; inc dword ptr [rax + 0x2f] ; cld ; call qword ptr [rax]
0x0000000000194d8e : cld ; inc dword ptr [rax + 0x40fffc28] ; sub bh, ah ; jmp qword ptr [rax]
0x000000000019510e : cld ; inc dword ptr [rax + 0x5f] ; cld ; call rax
0x0000000000194ef6 : cld ; inc dword ptr [rax + 0x62] ; cld ; call rax
0x0000000000194c26 : cld ; inc dword ptr [rax + 0xb] ; cld ; inc dword ptr [rax + 0xd] ; cld ; call rax
0x0000000000194c2a : cld ; inc dword ptr [rax + 0xd] ; cld ; call rax
0x0000000000194b7a : cld ; inc dword ptr [rax + 6] ; cld ; jmp qword ptr [rax]
0x0000000000194eca : cld ; inc dword ptr [rax - 0x2f0003e6] ; sbb edi, esp ; jmp qword ptr [rax]
0x0000000000194e76 : cld ; inc dword ptr [rax - 0x2f0003ed] ; adc al, 0xfc ; jmp qword ptr [rax]
0x0000000000195af2 : cld ; inc dword ptr [rax - 0x52] ; cld ; call rax
0x000000000019591a : cld ; inc dword ptr [rax - 0x56] ; cld ; call rax
0x00000000001955fa : cld ; inc dword ptr [rax - 0x79] ; cld ; call rax
0x0000000000195422 : cld ; inc dword ptr [rax - 0x7d] ; cld ; call rax
0x0000000000194c86 : cld ; inc dword ptr [rax - 0x7f0003f6] ; or al, 0xfc ; call qword ptr [rax]
0x0000000000194bf2 : cld ; inc dword ptr [rax] ; add bh, ah ; jmp rax
0x0000000000194bee : cld ; inc dword ptr [rax] ; cld ; inc dword ptr [rax] ; add bh, ah ; jmp rax
0x0000000000194d9a : cld ; inc dword ptr [rax] ; cld ; jmp rax
0x0000000000195d22 : cld ; inc dword ptr [rax] ; lahf ; cld ; push qword ptr [rax - 0x62] ; cld ; jmp rax
0x000000000019590a : cld ; inc dword ptr [rax] ; lodsb al, byte ptr [rsi] ; cld ; call qword ptr [rax + 0x20fffcab]
0x0000000000194f26 : cld ; inc dword ptr [rax] ; pop rbp ; cld ; call qword ptr [rax + 0x26fffc5c]
0x0000000000195362 : cld ; inc dword ptr [rax] ; push rbx ; cld ; push qword ptr [rax + 0x52] ; cld ; jmp rax
0x000000000019515e : cld ; inc dword ptr [rax] ; push rsp ; cld ; push qword ptr [rax + 0x53] ; cld ; jmp rax
0x0000000000195b22 : cld ; inc dword ptr [rax] ; test eax, 0xa890fffc ; cld ; jmp qword ptr [rax]
0x0000000000195412 : cld ; inc dword ptr [rax] ; test edi, esp ; call qword ptr [rax + 0x20fffc84]
0x0000000000195a8e : cld ; inc dword ptr [rbx + rbp*4 - 4] ; call rsp
0x00000000000aa2a7 : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000000aa1ce : cld ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000000e34f9 : cld ; inc dword ptr [rcx - 0x77] ; ror dword ptr [rdi], -0x6c ; ret 0x3ae9
0x0000000000122319 : cld ; inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000194fe2 : cld ; inc dword ptr [rdx + 0x5d] ; cld ; call rdx
0x00000000001959c6 : cld ; inc dword ptr [rdx - 0x54] ; cld ; call rdx
0x00000000001954ce : cld ; inc dword ptr [rdx - 0x7b] ; cld ; call rdx
0x0000000000194fd2 : cld ; inc dword ptr [rdx] ; pop rdi ; cld ; call qword ptr [rdx + 0x22fffc5e]
0x00000000001959b6 : cld ; inc dword ptr [rdx] ; scasb al, byte ptr [rdi] ; cld ; call qword ptr [rdx + 0x22fffcad]
0x00000000001954be : cld ; inc dword ptr [rdx] ; xchg esp, edi ; call qword ptr [rdx + 0x22fffc86]
0x0000000000194f3e : cld ; inc dword ptr [rsi + 0x61] ; cld ; call rsi
0x0000000000195962 : cld ; inc dword ptr [rsi - 0x57] ; cld ; call rsi
0x0000000000195952 : cld ; inc dword ptr [rsi] ; stosd dword ptr [rdi], eax ; cld ; call qword ptr [rsi + 0x26fffcaa]
0x000000000019545a : cld ; inc dword ptr [rsi] ; test bh, ah ; call qword ptr [rsi + 0x26fffc83]
0x0000000000195596 : cld ; inc dword ptr [rsp + rax*4 - 4] ; call rsp
0x0000000000194e86 : cld ; inc eax ; sbb ah, bh ; call qword ptr [rax]
0x0000000000194daa : cld ; inc eax ; xor eax, 0x2850fffc ; cld ; call qword ptr [rax]
0x00000000001877fd : cld ; int1 ; jmp qword ptr [rax]
0x00000000001877f9 : cld ; int1 ; push rax ; cld ; int1 ; jmp qword ptr [rax]
0x00000000000cea7b : cld ; je 0xcea98 ; call 0x8acf5
0x000000000019531e : cld ; jmp qword ptr [rax + 0x10fffc53]
0x0000000000195336 : cld ; jmp qword ptr [rax + 0x10fffc58]
0x0000000000195cf6 : cld ; jmp qword ptr [rax + 0x10fffca4]
0x0000000000195372 : cld ; jmp qword ptr [rax + 0x20fffc35]
0x00000000001953b6 : cld ; jmp qword ptr [rax + 0x20fffc37]
0x000000000019537a : cld ; jmp qword ptr [rax + 0x20fffc38]
0x00000000001953be : cld ; jmp qword ptr [rax + 0x20fffc3a]
0x0000000000195382 : cld ; jmp qword ptr [rax + 0x20fffc3b]
0x00000000001953c6 : cld ; jmp qword ptr [rax + 0x20fffc3d]
0x000000000019538a : cld ; jmp qword ptr [rax + 0x20fffc3e]
0x00000000001953ce : cld ; jmp qword ptr [rax + 0x20fffc40]
0x0000000000195392 : cld ; jmp qword ptr [rax + 0x20fffc41]
0x00000000001953d6 : cld ; jmp qword ptr [rax + 0x20fffc43]
0x000000000019539a : cld ; jmp qword ptr [rax + 0x20fffc44]
0x00000000001953de : cld ; jmp qword ptr [rax + 0x20fffc46]
0x00000000001953a2 : cld ; jmp qword ptr [rax + 0x20fffc47]
0x00000000001953e6 : cld ; jmp qword ptr [rax + 0x20fffc49]
0x0000000000195316 : cld ; jmp qword ptr [rax + 0x20fffc54]
0x000000000019530e : cld ; jmp qword ptr [rax + 0x20fffc55]
0x0000000000195306 : cld ; jmp qword ptr [rax + 0x20fffc56]
0x00000000001952fe : cld ; jmp qword ptr [rax + 0x20fffc57]
0x00000000001953aa : cld ; jmp qword ptr [rax - 0x1f0003b6]
0x0000000000194b7e : cld ; jmp qword ptr [rax]
0x00000000001a8a0a : cld ; jmp qword ptr [rbx]
0x00000000001956de : cld ; jmp qword ptr [rdx + 0x12fffc79]
0x0000000000195be6 : cld ; jmp qword ptr [rdx + 0x12fffc9e]
0x00000000001956d6 : cld ; jmp qword ptr [rdx + 0x22fffc7a]
0x00000000001956ce : cld ; jmp qword ptr [rdx + 0x22fffc7b]
0x00000000001956c6 : cld ; jmp qword ptr [rdx + 0x22fffc7c]
0x00000000001956be : cld ; jmp qword ptr [rdx + 0x22fffc7d]
0x0000000000194fda : cld ; jmp qword ptr [rdx]
0x0000000000194f2e : cld ; jmp qword ptr [rsi]
0x0000000000194bc2 : cld ; jmp rax
0x0000000000194fca : cld ; jmp rdx
0x0000000000194f66 : cld ; jmp rsi
0x0000000000195092 : cld ; jmp rsp
0x000000000016fe86 : cld ; jne 0x1700bf ; xor eax, eax ; ret
0x0000000000172155 : cld ; jne 0x172165 ; xor eax, eax ; ret
0x0000000000172154 : cld ; jne 0x172166 ; xor eax, eax ; ret
0x0000000000172075 : cld ; jne 0x172167 ; ret
0x0000000000172074 : cld ; jne 0x172168 ; ret
0x00000000001b96cc : cld ; jrcxz 0x1b96d7 ; add al, al ; div edi ; call qword ptr [rdx]
0x0000000000195ae6 : cld ; lcall ptr [rdx + 0x2afffca8] ; test al, 0xfc ; call rax
0x0000000000195bae : cld ; ljmp ptr [rbp + rbx*4 - 0x5aad0004] ; cld ; call rdx
0x00000000001950e6 : cld ; ljmp ptr [rdx + 0x3afffc5c] ; pop rsp ; cld ; jmp rax
0x00000000001954a6 : cld ; ljmp ptr [rdx + rax*4 - 0x7dc30004] ; cld ; jmp rdx
0x0000000000195aea : cld ; ljmp ptr [rdx] ; test al, 0xfc ; call rax
0x0000000000195a66 : cld ; ljmp ptr [rsi + 0x3efffca8] ; test al, 0xfc ; jmp rsp
0x0000000000194faa : cld ; ljmp ptr [rsp + rbx*2 - 4] ; call qword ptr [rdx]
0x00000000001529c2 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152bc5 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000152dc5 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000152fc5 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000009f16e : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000005f7bb : cld ; mov ebx, 2 ; jmp 0x5baa8
0x000000000014d388 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x00000000001525f6 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015a636 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001527d6 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015a5b6 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001529b6 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015a536 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000152416 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015a6b6 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000009ded1 : cld ; mov rax, rdi ; ret
0x000000000004a14c : cld ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000001880b4 : cld ; nop ; jmp qword ptr [rdx]
0x00000000000abfba : cld ; pop rbx ; ret
0x0000000000189450 : cld ; pop rsi ; cmc ; call rsp
0x0000000000194e82 : cld ; push qword ptr [rax + 0x17] ; cld ; inc eax ; sbb ah, bh ; call qword ptr [rax]
0x000000000019510a : cld ; push qword ptr [rax + 0x40fffc5f] ; pop rdi ; cld ; call rax
0x00000000001955f6 : cld ; push qword ptr [rax + 0x40fffc87] ; xchg esp, edi ; call rax
0x0000000000195916 : cld ; push qword ptr [rax + 0x40fffcaa] ; stosb byte ptr [rdi], al ; cld ; call rax
0x0000000000195366 : cld ; push qword ptr [rax + 0x52] ; cld ; jmp rax
0x0000000000195162 : cld ; push qword ptr [rax + 0x53] ; cld ; jmp rax
0x000000000019581e : cld ; push qword ptr [rax + 0x79] ; cld ; jmp rax
0x0000000000195836 : cld ; push qword ptr [rax + 0x7e] ; cld ; jmp rax
0x0000000000195d26 : cld ; push qword ptr [rax - 0x62] ; cld ; jmp rax
0x0000000000195d2e : cld ; push qword ptr [rax - 0x63] ; cld ; call qword ptr [rax]
0x0000000000194bb6 : cld ; push qword ptr [rax] ; add al, 0xfc ; call qword ptr [rax]
0x0000000000194bd2 : cld ; push qword ptr [rax] ; add bh, ah ; call qword ptr [rax]
0x0000000000194c56 : cld ; push qword ptr [rax] ; add edi, esp ; call qword ptr [rax]
0x0000000000194bce : cld ; push qword ptr [rax] ; cld ; push qword ptr [rax] ; add bh, ah ; call qword ptr [rax]
0x0000000000194caa : cld ; push qword ptr [rax] ; or al, 0xfc ; jmp rax
0x0000000000194ca6 : cld ; push qword ptr [rax] ; or bh, ah ; push qword ptr [rax] ; or al, 0xfc ; jmp rax
0x000000000019512a : cld ; push qword ptr [rax] ; pop rsp ; cld ; call rax
0x0000000000195a8a : cld ; push qword ptr [rbx + rbp*4 - 0x54bb0004] ; cld ; call rsp
0x0000000000194fde : cld ; push qword ptr [rdx + 0x42fffc5d] ; pop rbp ; cld ; call rdx
0x00000000001954ca : cld ; push qword ptr [rdx + 0x42fffc85] ; test edi, esp ; call rdx
0x00000000001959c2 : cld ; push qword ptr [rdx + 0x42fffcac] ; lodsb al, byte ptr [rsi] ; cld ; call rdx
0x0000000000195be2 : cld ; push qword ptr [rdx] ; lahf ; cld ; jmp qword ptr [rdx + 0x12fffc9e]
0x0000000000195592 : cld ; push qword ptr [rsp + rax*4 - 0x7bbb0004] ; cld ; call rsp
0x0000000000195832 : cld ; push rax ; jle 0x19583c ; push qword ptr [rax + 0x7e] ; cld ; jmp rax
0x000000000019581a : cld ; push rax ; jns 0x195824 ; push qword ptr [rax + 0x79] ; cld ; jmp rax
0x0000000000194e36 : cld ; push rax ; sub bh, ah ; call rax
0x0000000000194db6 : cld ; push rax ; sub edi, esp ; call rax
0x00000000001b04cc : cld ; push rcx ; add dword ptr [rax], eax ; loopne 0x1b054b ; cmc ; call qword ptr [rsi]
0x000000000004a152 : cld ; ret
0x00000000000191b0 : cld ; ret 0x18
0x00000000001998bc : cld ; ret 1
0x0000000000182c36 : cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000000ba81e : cld ; test edx, edx ; mov dword ptr [rsi + rcx], edx ; jne 0xba821 ; ret
0x00000000000d46d5 : cld ; xor eax, eax ; mov rdx, r8 ; jmp 0xd46fc
0x0000000000085929 : cli ; adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x000000000003ad2d : cli ; adc byte ptr [rcx], ch ; ret 0xc269
0x00000000000bbbbd : cli ; adc cl, byte ptr [rax + 0x29] ; ret 0x6948
0x00000000000bbb3e : cli ; adc cl, byte ptr [rax + 0x29] ; ret 0x8948
0x0000000000085b06 : cli ; add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x00000000001977ad : cli ; add byte ptr [rax], al ; xor al, 0x29 ; out dx, eax ; jmp rsp
0x00000000000cc779 : cli ; add byte ptr [rcx - 0xcf68130], cl ; ret
0x00000000000bc9db : cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x00000000000c2eea : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x000000000003c953 : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x000000000003c97c : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x0000000000073fb8 : cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000123f2e : cli ; add cl, byte ptr [rbp + 0xf] ; ret
0x00000000000a9f32 : cli ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8444
0x0000000000026485 : cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x00000000000a9bdb : cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000009f18c : cli ; add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000c1e79 : cli ; add eax, 0x2941c229 ; ret 0x6b45
0x00000000000bb08a : cli ; add ebp, dword ptr [rcx] ; ret 0x48d
0x0000000000003791 : cli ; add ebx, ebp ; in al, -0x12 ; jne 0x3779 ; ret 0x975
0x00000000000fea60 : cli ; and byte ptr [rsp + rbp*8 + 0x41], dh ; mov byte ptr [rax - 1], 0 ; ret
0x00000000000ff101 : cli ; and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xc084
0x000000000018b9be : cli ; call qword ptr [rax]
0x00000000001a7552 : cli ; call qword ptr [rdi]
0x00000000000876da : cli ; call rax
0x00000000000e4553 : cli ; call rcx
0x000000000019a80a : cli ; call rsp
0x00000000000f5d05 : cli ; dec dword ptr [rax + 0x39] ; ret
0x000000000003a9f1 : cli ; dec dword ptr [rax + 0xf] ; ret
0x000000000019affa : cli ; dec dword ptr [rbp + rdi*8 - 0xb5c0000] ; cli ; call rsp
0x00000000000e33ac : cli ; dec dword ptr [rcx - 0x77] ; ret 0x448b
0x000000000019afa2 : cli ; dec dword ptr [rsp + rax + 2] ; add ah, dl ; loop 0x19afae ; call rsp
0x000000000019aac2 : cli ; dec esp ; add al, byte ptr [r8] ; movsb byte ptr [rdi], byte ptr [rsi] ; push rdi ; cli ; jmp rsp
0x000000000019ab3a : cli ; dec esp ; add r8b, byte ptr [r8] ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rbx ; cli ; jmp rsp
0x000000000019ae52 : cli ; dec esp ; pop rax ; add al, byte ptr [rax] ; xchg eax, esp ; leave ; cli ; jmp rsp
0x000000000019ad12 : cli ; dec esp ; push rcx ; add al, byte ptr [rax] ; adc al, 0xa7 ; cli ; jmp rsp
0x000000000018b9ba : cli ; inc dword ptr [rax + 0x10fffa61] ; mov bh, dl ; call qword ptr [rax]
0x000000000019a96a : cli ; inc dword ptr [rcx + rdi + 0x36c40002] ; cli ; call rsp
0x000000000019adfa : cli ; inc dword ptr [rdi + rdx*2 + 2] ; add ah, dl ; ret
0x000000000019adf2 : cli ; inc dword ptr [rdi + rdx*2] ; add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000019a982 : cli ; inc dword ptr [rdx + rdi + 0x3cc40002] ; cli ; call rsp
0x000000000019a902 : cli ; inc dword ptr [rsi + rsi + 0x2b740002] ; cli ; call rsp
0x000000000019ad42 : cli ; inc esp ; push rdx ; add al, byte ptr [rax] ; in al, -0x58 ; cli ; jmp rsp
0x00000000001877c9 : cli ; int1 ; call qword ptr [rax]
0x00000000001877c1 : cli ; int1 ; call rax
0x00000000001877c5 : cli ; int1 ; push rax ; cli ; int1 ; call qword ptr [rax]
0x000000000014d34b : cli ; jg 0x14d35e ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x000000000014d83b : cli ; jg 0x14d84e ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x000000000014dbdb : cli ; jg 0x14dbee ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x0000000000172271 : cli ; jg 0x172283 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000009f147 : cli ; jg 0x9f15a ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000009f89a : cli ; jg 0x9f8ad ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000009ffe7 : cli ; jg 0x9fffa ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00000000000a9ba6 : cli ; jg 0xa9bb8 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000018b9e2 : cli ; jmp qword ptr [rax + 0x10fffa88]
0x000000000019f18a : cli ; jmp qword ptr [rcx]
0x00000000001a753a : cli ; jmp qword ptr [rdi]
0x000000000018a8e2 : cli ; jmp rax
0x000000000019a772 : cli ; jmp rsp
0x000000000019a802 : cli ; lcall ptr [rax + rsi + 0x17a40002] ; cli ; call rsp
0x000000000019a7aa : cli ; lcall ptr [rbp + rbp + 0xbc40002] ; cli ; jmp rsp
0x000000000019abfa : cli ; lcall ptr [rcx + rcx*2 + 0x6d640002] ; cli ; jmp rsp
0x000000000019a92a : cli ; lcall ptr [rdi + rsi + 0x2d540002] ; cli ; jmp rsp
0x000000000019aa12 : cli ; ljmp ptr [rsi + rdi + 0x49140002] ; cli ; jmp rsp
0x0000000000152dc8 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000013bd62 : cli ; mov ebp, 0x8b48ffff ; cmp byte ptr [rax - 0x77], cl ; ret
0x000000000009deb7 : cli ; mov rax, rdi ; ret
0x0000000000063b15 : cli ; mov rsi, qword ptr [rip + 0x35f453] ; call rax
0x000000000011c630 : cli ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000008e2b8 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000145786 : cli ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000ba896 : cli ; or cl, byte ptr [rax + 0x29] ; ret 0x8941
0x000000000003d312 : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000001850a1 : cli ; push 0x6e ; ja 0x18502e ; ret 0x48f
0x000000000018b9ce : cli ; push qword ptr [rax] ; mov bh, dl ; call qword ptr [rax]
0x000000000018b9ca : cli ; push qword ptr [rax] ; mov bh, dl ; push qword ptr [rax] ; mov bh, dl ; call qword ptr [rax]
0x000000000002cb2f : cli ; ret
0x00000000000bbb5c : cli ; ret 0x10
0x0000000000183b45 : cli ; ret 0xac65
0x00000000000d449e : cli ; sbb cl, al ; clc ; sbb byte ptr [rcx], bh ; ret 0x850f
0x00000000001141eb : cli ; setae al ; ret
0x000000000008adc9 : cli ; test rdx, rdx ; je 0x8ade9 ; bsf rax, rdx ; ret
0x000000000008af98 : cli ; test rdx, rdx ; je 0x8afc9 ; bsf rax, rdx ; ret
0x000000000018278a : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x00000000000c0ece : cmc ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001bbb86 : cmc ; add al, byte ptr [rax] ; ret
0x00000000001bbba6 : cmc ; add al, byte ptr [rax] ; ret 0x503
0x00000000001aa7ed : cmc ; add byte ptr [rax], al ; adc byte ptr [rax], ah ; jmp qword ptr [rcx]
0x0000000000149cf8 : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001aa865 : cmc ; add byte ptr [rax], al ; cmp byte ptr [rcx], ah ; jmp qword ptr [rcx]
0x00000000001aa87d : cmc ; add byte ptr [rax], al ; push rax ; and edx, esi ; jmp qword ptr [rcx]
0x00000000000ab267 : cmc ; add byte ptr [rax], al ; ret
0x000000000017497a : cmc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000018933e : cmc ; call qword ptr [rax]
0x0000000000189626 : cmc ; call qword ptr [rbx]
0x0000000000189292 : cmc ; call qword ptr [rcx]
0x000000000018961a : cmc ; call qword ptr [rdi]
0x00000000001aefe2 : cmc ; call qword ptr [rdx]
0x00000000001b04d2 : cmc ; call qword ptr [rsi]
0x0000000000189202 : cmc ; call rax
0x00000000001b115a : cmc ; call rdi
0x0000000000189842 : cmc ; call rdx
0x00000000001896fa : cmc ; call rsi
0x0000000000189452 : cmc ; call rsp
0x00000000000f39e1 : cmc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c8b81 : cmc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000018933a : cmc ; dec dword ptr [rbp + 3] ; cmc ; call qword ptr [rax]
0x0000000000189336 : cmc ; dec dword ptr [rbp + 3] ; cmc ; dec dword ptr [rbp + 3] ; cmc ; call qword ptr [rax]
0x000000000019889a : cmc ; dec esp ; jo 0x1988a9 ; add byte ptr [rax + rdi*8 - 0xb], ah ; jmp rsp
0x000000000018983e : cmc ; inc dword ptr [rsi - 0x2d000a40] ; ret
0x000000000018981e : cmc ; inc eax ; mov esi, ebp ; call rsi
0x000000000019871a : cmc ; inc esp ; add word ptr [rax], ax ; add al, 0x3e ; cmc ; jmp rsp
0x0000000000122812 : cmc ; je 0x12280c ; pop rbx ; ret
0x0000000000189832 : cmc ; jmp qword ptr [rbx]
0x000000000018982a : cmc ; jmp qword ptr [rcx]
0x00000000001af1ca : cmc ; jmp qword ptr [rdx]
0x000000000018920e : cmc ; jmp rax
0x00000000001b0ada : cmc ; jmp rdi
0x0000000000198722 : cmc ; jmp rsp
0x0000000000101736 : cmc ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x000000000019879a : cmc ; lcall ptr [rax + rbp*2 + 0x41140001] ; cmc ; call rsp
0x00000000001891fe : cmc ; lcall ptr [rax] ; add dh, ch ; call rax
0x000000000018920a : cmc ; lcall ptr [rax] ; add dh, ch ; jmp rax
0x00000000001891fa : cmc ; lcall ptr [rax] ; add dh, ch ; lcall ptr [rax] ; add dh, ch ; call rax
0x0000000000189206 : cmc ; lcall ptr [rax] ; add dh, ch ; lcall ptr [rax] ; add dh, ch ; jmp rax
0x000000000018928a : cmc ; ljmp ptr [rax + 0x28fff502] ; add esi, ebp ; call qword ptr [rcx]
0x000000000018928e : cmc ; ljmp ptr [rax] ; add esi, ebp ; call qword ptr [rcx]
0x00000000001854c9 : cmc ; mov ch, 0xab ; ret
0x000000000015a5ba : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015264e : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000171663 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000008a86e : cmc ; or eax, dword ptr [rax] ; ret
0x000000000006e1d1 : cmc ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000182377 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000000780bd : cmc ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000018970a : cmc ; push rbx ; movsxd rsi, ebp ; call qword ptr [rbx]
0x0000000000019d20 : cmc ; ret
0x00000000001024af : cmc ; sal ecx, cl ; dec dword ptr [rcx - 0x75] ; jge 0x1024bf ; call rbx
0x0000000000171667 : cmc ; sub eax, edx ; ret
0x0000000000184b05 : cmc ; xlatb ; ret 0x4e27
0x00000000000e9f21 : cmova eax, edx ; ret
0x00000000000bbc91 : cmova esi, edx ; imul esi, esi, 0x3c ; add eax, esi ; ret
0x000000000007cfe9 : cmovae eax, dword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000008aa27 : cmovae eax, ecx ; ret
0x000000000004a581 : cmovae eax, edi ; ret
0x00000000001081fc : cmovae eax, esi ; ret
0x00000000000038a7 : cmovae ebp, dword ptr [rdi - 0x26] ; int 3
0x000000000007cfe8 : cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000004a580 : cmovae rax, rdi ; ret
0x00000000001081fb : cmovae rax, rsi ; ret
0x000000000003ac6f : cmovbe edx, eax ; xor eax, eax ; mov qword ptr [rdi + 8], rdx ; ret
0x00000000000ec417 : cmove eax, dword ptr [rbp - 0x78] ; mov rdi, rax ; call r12
0x000000000006b294 : cmove eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x00000000000f608b : cmove eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x0000000000096f39 : cmove eax, ebx ; pop rbx ; ret
0x0000000000074e91 : cmove eax, ecx ; ret
0x000000000013bb3a : cmove eax, ecx ; sub rsp, -0x80 ; pop rbx ; ret
0x000000000008edf8 : cmove eax, edx ; add eax, 1 ; ret
0x00000000000bb9d2 : cmove eax, edx ; add rsp, 0x28 ; ret
0x00000000000f6e70 : cmove eax, edx ; add rsp, 0x60 ; pop rbx ; ret
0x0000000000086ea3 : cmove eax, edx ; add rsp, 8 ; ret
0x000000000002d90b : cmove eax, edx ; ret
0x00000000000d6181 : cmove eax, esi ; ret
0x000000000009df81 : cmove ecx, dword ptr [rcx - 0x76b7fbb9] ; clc ; ret
0x00000000000b9868 : cmove esi, ecx ; call 0x8e989
0x000000000005c419 : cmove esi, ecx ; jmp 0x5c3e4
0x0000000000074e90 : cmove r8, rcx ; ret
0x00000000000ec416 : cmove rax, qword ptr [rbp - 0x78] ; mov rdi, rax ; call r12
0x00000000000f608a : cmove rax, qword ptr [rsp] ; add rsp, 0x18 ; ret
0x0000000000096f38 : cmove rax, rbx ; pop rbx ; ret
0x00000000000abdf4 : cmove rax, rcx ; ret
0x000000000013bb39 : cmove rax, rcx ; sub rsp, -0x80 ; pop rbx ; ret
0x000000000008ee09 : cmove rax, rdx ; add eax, 1 ; ret
0x00000000000bb9d1 : cmove rax, rdx ; add rsp, 0x28 ; ret
0x0000000000086ea2 : cmove rax, rdx ; add rsp, 8 ; ret
0x000000000002d90a : cmove rax, rdx ; ret
0x000000000005c418 : cmove rsi, r9 ; jmp 0x5c3e5
0x0000000000071b3b : cmovg eax, ecx ; test rdx, rdx ; jne 0x71b39 ; ret
0x000000000007ae6b : cmovg eax, ecx ; test rdx, rdx ; jne 0x7ae69 ; ret
0x00000000001016ad : cmovl ebp, dword ptr [rax + rax] ; pop rbp ; pop r12 ; ret
0x00000000000ca3d4 : cmovle eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000079873 : cmovne eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003a9f4 : cmovne eax, ebx ; pop rbx ; ret
0x0000000000110341 : cmovne eax, ecx ; ret
0x0000000000096a5b : cmovne eax, edi ; ret
0x0000000000140086 : cmovne eax, edx ; add rsp, 8 ; ret
0x00000000000890d3 : cmovne eax, edx ; ret
0x00000000001102d4 : cmovne eax, esi ; ret
0x00000000001004f7 : cmovne ebx, eax ; call 0xfc715
0x000000000003a9f3 : cmovne rax, rbx ; pop rbx ; ret
0x0000000000096a5a : cmovne rax, rdi ; ret
0x0000000000140085 : cmovne rax, rdx ; add rsp, 8 ; ret
0x00000000000890d2 : cmovne rax, rdx ; ret
0x00000000001004f6 : cmovne rbx, rax ; call 0xfc716
0x000000000010e452 : cmovns eax, dword ptr [rbx + 0x28] ; pop rbx ; ret
0x000000000010e451 : cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x0000000000128260 : cmovs eax, dword ptr [rbx + 0x5d5b80ec] ; pop r12 ; ret
0x000000000004ed1b : cmovs eax, dword ptr [rbx - 0x76b60f20] ; ret
0x00000000000593e4 : cmovs eax, dword ptr [rbx - 0x76b60f20] ; ret 0x8b48
0x000000000009def3 : cmovs eax, dword ptr [rbx - 0x76b7fd39] ; clc ; ret
0x000000000003a6e6 : cmovs eax, edx ; pop rbx ; ret
0x0000000000023b8c : cmovs eax, edx ; ret
0x000000000009a654 : cmovs ebp, dword ptr [rcx] ; ret
0x000000000007fcc1 : cmovs ebp, dword ptr [rcx] ; ret 0x14c
0x000000000012f258 : cmovs ecx, dword ptr [rcx] ; ret 0x8948
0x00000000000991c3 : cmovs edi, dword ptr [rcx] ; fmul dword ptr [rax + 0xf] ; ret
0x00000000000aa226 : cmovs esp, dword ptr [rbx + 0x34] ; nop ; add rax, rsi ; jmp rax
0x000000000005c416 : cmp ah, 0x49 ; cmove esi, ecx ; jmp 0x5c3e7
0x000000000019537d : cmp ah, bh ; jmp qword ptr [rax]
0x0000000000149ff3 : cmp ah, byte ptr [rbx - 0x25] ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x0000000000149e68 : cmp ah, byte ptr [rbx - 0x35] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x0000000000149ecf : cmp ah, byte ptr [rbx - 0x37] ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x000000000019cc0c : cmp al, 0x19 ; add byte ptr [rax], al ; rcl byte ptr [rbx], 0xe9 ; call qword ptr [rbx]
0x00000000001024d1 : cmp al, 0x24 ; call rbx
0x0000000000142d4c : cmp al, 0x24 ; mov rax, qword ptr [rax + 0x128] ; jmp rax
0x00000000001288a5 : cmp al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000114ade : cmp al, 0x2b ; add byte ptr [rax + 0x39], cl ; ret 0xda75
0x0000000000038fdd : cmp al, 0x33 ; call rax
0x0000000000096925 : cmp al, 0x3d ; jne 0x9695f ; mov rax, rdi ; pop rbx ; ret
0x00000000000d0c4c : cmp al, 0x3f ; jne 0xd0c11 ; mov eax, 1 ; ret
0x00000000000d0c64 : cmp al, 0x3f ; jne 0xd0c2e ; mov eax, 1 ; ret
0x0000000000183780 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000187128 : cmp al, 0x5d ; out dx, al ; jmp rsp
0x00000000001a1c0c : cmp al, 0x69 ; add byte ptr [rax], al ; loopne 0x1a1c15 ; in al, dx ; call qword ptr [rsi]
0x00000000001b220c : cmp al, 0x6f ; add dword ptr [rax], eax ; push rax ; and dh, dh ; jmp qword ptr [rsi]
0x000000000008b0e0 : cmp al, 0x71 ; add dword ptr [rax], eax ; ret
0x00000000001954ac : cmp al, 0x82 ; cld ; jmp rdx
0x000000000008cda8 : cmp al, 0x8b ; xor eax, dword ptr [rax] ; add rsp, 8 ; ret
0x00000000001a5a0c : cmp al, 0xa7 ; add byte ptr [rax], al ; and byte ptr [rdx], dh ; out dx, al ; jmp qword ptr [rcx]
0x00000000000e0fba : cmp al, 0xbb ; add rdi, r11 ; jmp rdi
0x000000000019987c : cmp al, 0xc2 ; add dword ptr [rax], eax ; add al, 0xe3 ; idiv edi ; push rsp ; ret 1
0x00000000001a9a0c : cmp al, 0xe7 ; add byte ptr [rax], al ; xor cl, ch ; int1 ; call rdi
0x0000000000099140 : cmp al, 0xf ; mov dh, 0x45 ; ret 0x8349
0x00000000001aa90c : cmp al, 0xf6 ; add byte ptr [rax], al ; and byte ptr [rcx], 0xf2 ; jmp qword ptr [rcx]
0x00000000001b2c89 : cmp al, 0xf6 ; call qword ptr [rax]
0x000000000019a989 : cmp al, 0xfa ; call rsp
0x00000000001953c5 : cmp al, 0xfc ; jmp qword ptr [rax + 0x20fffc3d]
0x00000000000ad946 : cmp al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000016fe63 : cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000a5ec0 : cmp al, 5 ; add byte ptr [rax], al ; ret
0x00000000001ac6f8 : cmp al, bl ; call qword ptr [rdx]
0x000000000007133b : cmp al, byte ptr [rax + 0xf] ; mov dh, 0xc7 ; ret
0x0000000000005ea8 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000001f92c : cmp al, byte ptr [rax] ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000000203de : cmp al, byte ptr [rax] ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000021a45 : cmp al, byte ptr [rax] ; ret
0x00000000000dd86c : cmp al, byte ptr [rbx - 0x7cb7fe3d] ; ret 0x4104
0x00000000000f03f9 : cmp al, byte ptr [rdi + rcx] ; test byte ptr [rbx - 0x76000004], ah ; ret 0xdb31
0x000000000019a985 : cmp al, byte ptr [rdx] ; add ah, al ; cmp al, 0xfa ; call rsp
0x0000000000171b26 : cmp al, byte ptr [rsi - 1] ; jne 0x171b4c ; xor eax, eax ; ret
0x00000000000334f4 : cmp al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x000000000008e0f6 : cmp al, dh ; ret
0x000000000008e0f5 : cmp al, r14b ; ret
0x00000000001a6bb0 : cmp bh, 0xee ; jmp rsi
0x0000000000034f06 : cmp bh, 0xff ; inc eax ; shr eax, 0x1f ; ret
0x0000000000195381 : cmp bh, ah ; jmp qword ptr [rax + 0x20fffc3b]
0x00000000001953c1 : cmp bh, ah ; jmp qword ptr [rax]
0x000000000011029a : cmp bh, al ; mov eax, edx ; cmove eax, ecx ; ret
0x00000000001102d2 : cmp bh, cl ; cmovne eax, esi ; ret
0x00000000001122d8 : cmp bl, ch ; ret
0x00000000000627b8 : cmp bl, ch ; ret 0x8148
0x000000000005fb39 : cmp bl, ch ; ret 0x858b
0x00000000000942a3 : cmp bl, dh ; ret
0x00000000000ab216 : cmp byte ptr [r11], r15b ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x0000000000073c5b : cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x00000000000e70f9 : cmp byte ptr [r8], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010eeb9 : cmp byte ptr [r8], r9b ; je 0x10eee3 ; mov rdx, r8 ; jmp 0x10eed3
0x000000000004b7ea : cmp byte ptr [rax + 0x39], cl ; ret
0x00000000000f1efe : cmp byte ptr [rax + 0x39], cl ; ret 0x860f
0x000000000008ed2f : cmp byte ptr [rax + 0xf], cl ; ret
0x0000000000024ffa : cmp byte ptr [rax + 0xf], cl ; ret 0x8949
0x00000000001350e6 : cmp byte ptr [rax + 1], bh ; ret
0x000000000008e137 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x00000000000bb447 : cmp byte ptr [rax + 1], cl ; ret 0x6348
0x00000000000d97d7 : cmp byte ptr [rax - 0x75], cl ; adc byte ptr [rax + 0x39], cl ; ret
0x0000000000025f32 : cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000000d8e71 : cmp byte ptr [rax - 0x75], cl ; or byte ptr [r9 + 0x63], r9b ; ret 0x4c6
0x00000000000d8e70 : cmp byte ptr [rax - 0x75], r9b ; or byte ptr [r9 + 0x63], r9b ; ret 0x4c6
0x00000000000335c7 : cmp byte ptr [rax - 0x77], cl ; and al, 0x28 ; call 0x1f8a8
0x0000000000102484 : cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x00000000000e8c5b : cmp byte ptr [rax - 0x77], cl ; ret
0x0000000000073c5c : cmp byte ptr [rax - 0x77], cl ; ret 0x2b48
0x0000000000111b7f : cmp byte ptr [rax - 0x77], cl ; ret 0x2b49
0x00000000000f3966 : cmp byte ptr [rax - 0x77], cl ; ret 0x69e9
0x00000000000eff70 : cmp byte ptr [rax - 0x77], cl ; ret 0x8b44
0x000000000012ba30 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x000000000012d64e : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x0000000000133911 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x4c], 0x89 ; out dx, eax ; call rax
0x000000000005e866 : cmp byte ptr [rax - 0x7d], cl ; ret
0x00000000000fe942 : cmp byte ptr [rax - 1], bh ; ret
0x000000000016c438 : cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000008e126 : cmp byte ptr [rax], ah ; ret
0x000000000019eb35 : cmp byte ptr [rax], al ; add al, bh ; shr ecx, 1 ; call qword ptr [rax]
0x000000000019ebc5 : cmp byte ptr [rax], al ; add al, bh ; shr ecx, 1 ; call rax
0x000000000019eb4d : cmp byte ptr [rax], al ; add al, dh ; shr ecx, 1 ; call qword ptr [rdx]
0x00000000000de65a : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x000000000003b0d5 : cmp byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000007b493 : cmp byte ptr [rax], al ; je 0x7b4a4 ; ret
0x00000000000368af : cmp byte ptr [rax], al ; mov eax, edx ; ret
0x0000000000036864 : cmp byte ptr [rax], al ; ret
0x000000000010ebaf : cmp byte ptr [rax], bh ; je 0x10ebde ; mov rdx, rax ; jmp 0x10ebcb
0x00000000001386f9 : cmp byte ptr [rax], bl ; je 0x138704 ; ret
0x000000000007d5a6 : cmp byte ptr [rax], cl ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000010eeba : cmp byte ptr [rax], cl ; je 0x10eee2 ; mov rdx, r8 ; jmp 0x10eed2
0x00000000000e70fa : cmp byte ptr [rax], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000890d0 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x000000000009e6d6 : cmp byte ptr [rax], dh ; ret
0x000000000010ebae : cmp byte ptr [rax], dil ; je 0x10ebdf ; mov rdx, rax ; jmp 0x10ebcc
0x000000000008e116 : cmp byte ptr [rax], dl ; ret
0x000000000008e115 : cmp byte ptr [rax], r10b ; ret
0x000000000008e125 : cmp byte ptr [rax], r12b ; ret
0x000000000009e6d5 : cmp byte ptr [rax], r14b ; ret
0x00000000000890cf : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000000ab21a : cmp byte ptr [rbp + 0x13], dh ; ret
0x00000000000ab219 : cmp byte ptr [rbp + 0x13], r14b ; ret
0x000000000010ebb0 : cmp byte ptr [rbp + 0x48], dh ; mov edx, eax ; jmp 0x10ebca
0x0000000000142eba : cmp byte ptr [rbp - 0x25], dh ; add rsp, 0x48 ; ret
0x000000000010570e : cmp byte ptr [rbp - 0x3dbbf040], al ; ret
0x00000000000d7e48 : cmp byte ptr [rbp - 0x7cb7febd], cl ; ret
0x000000000002cb29 : cmp byte ptr [rbx + 0x13], dh ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x00000000000cd61a : cmp byte ptr [rbx + 0x5d], bl ; ret
0x00000000001aadc4 : cmp byte ptr [rbx - 0x5ff1aef9], al ; adc al, byte ptr [rbx] ; ret 0xa02
0x00000000001873e8 : cmp byte ptr [rbx - 0xf], ch ; dec dword ptr [rax + 0x6b] ; int1 ; call rax
0x00000000000ab217 : cmp byte ptr [rbx], bh ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x0000000000072a17 : cmp byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x00000000000bda19 : cmp byte ptr [rcx + 1], cl ; ret
0x00000000000d71e5 : cmp byte ptr [rcx + 8], 2 ; jne 0xd71c7 ; jmp 0xd71b7
0x000000000019d708 : cmp byte ptr [rcx - 0x17], bh ; call qword ptr [rcx]
0x00000000000fd496 : cmp byte ptr [rcx - 0x3b7cb730], cl ; ret
0x00000000000eac1e : cmp byte ptr [rcx - 0x75], cl ; or byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x0000000000040185 : cmp byte ptr [rcx - 0x77], al ; ret 0x8d48
0x00000000001aa868 : cmp byte ptr [rcx], ah ; jmp qword ptr [rcx]
0x00000000001aebad : cmp byte ptr [rcx], al ; add al, dh ; std ; hlt ; jmp rdi
0x000000000016c439 : cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x00000000000a72d4 : cmp byte ptr [rcx], cl ; add byte ptr [rax], al ; ret
0x0000000000002054 : cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x000000000003a6b8 : cmp byte ptr [rdi], 0 ; jne 0x3a6c6 ; pop rbx ; ret
0x00000000001b2e80 : cmp byte ptr [rdi], 0xf6 ; call qword ptr [rax]
0x0000000000098b27 : cmp byte ptr [rdi], cl ; mov dh, 0x55 ; ret 0x8349
0x000000000007b458 : cmp byte ptr [rdi], cl ; ret 0x389
0x00000000000dbb08 : cmp byte ptr [rdi], cl ; test cl, cl ; add dword ptr [rax], eax ; add dh, dh ; ret
0x000000000016e70d : cmp byte ptr [rdi], dl ; ret
0x000000000016f220 : cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000016f209 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000016f1f2 : cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000016dcae : cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000173b8c : cmp byte ptr [rip + 0x1740025], bl ; ret
0x000000000019eb34 : cmp byte ptr fs:[rax], al ; add al, bh ; shr ecx, 1 ; call qword ptr [rax]
0x0000000000149ed2 : cmp ch, byte ptr [rcx] ; ret 0xd089
0x0000000000197349 : cmp ch, dh ; call rsp
0x00000000000e0530 : cmp cl, 0x11 ; je 0xe0572 ; mov rdx, rax ; jmp 0xe04d6
0x00000000000bb208 : cmp cl, al ; call 0xffffffff89cddb33
0x0000000000080606 : cmp cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00000000000da0ef : cmp cl, byte ptr [rax - 0x7d] ; ret
0x00000000001334a7 : cmp cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000000703f0 : cmp cl, byte ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x00000000000e0230 : cmp cl, byte ptr [rbx] ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4101
0x000000000010d592 : cmp cl, byte ptr [rdi] ; ret 0xc084
0x000000000012a413 : cmp cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8041
0x000000000004723c : cmp cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x000000000001f92a : cmp cl, byte ptr [rdx + 0x5b58003a] ; pop rbp ; ret
0x00000000000d683e : cmp cl, byte ptr [rsi] ; je 0xd67db ; pop rbx ; ret
0x000000000003ca16 : cmp cl, ch ; ret
0x00000000000df428 : cmp cl, ch ; ret 0xfffe
0x00000000001888a4 : cmp cl, cl ; call rdx
0x0000000000197c59 : cmp cl, dh ; jmp rsp
0x00000000001add88 : cmp cl, dl ; hlt ; jmp rcx
0x00000000001a7819 : cmp dh, al ; jmp qword ptr [rbx]
0x0000000000110313 : cmp dh, al ; mov eax, edx ; cmove eax, ecx ; ret
0x000000000003a6b5 : cmp dh, byte ptr [rcx] ; rol byte ptr [rax + 0x375003f], 0x5b ; ret
0x00000000000a0865 : cmp dh, dh ; ret 0x7501
0x000000000011033f : cmp dh, dl ; cmovne eax, ecx ; ret
0x0000000000110299 : cmp dil, al ; mov eax, edx ; cmove eax, ecx ; ret
0x00000000001102d1 : cmp dil, cl ; cmovne eax, esi ; ret
0x00000000000777b8 : cmp dl, 0xff ; xor eax, eax ; pop rbx ; ret
0x00000000001722b0 : cmp dl, 1 ; jb 0x1722be ; mov byte ptr [rdi], cl ; ret
0x000000000009f18b : cmp dl, 1 ; jb 0x9f19d ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000009f8de : cmp dl, 1 ; jb 0x9f8f0 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000a002b : cmp dl, 1 ; jb 0xa003d ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000a9bda : cmp dl, 1 ; jb 0xa9be8 ; mov byte ptr [rdi], cl ; ret
0x000000000008a9e2 : cmp dl, 3 ; je 0x8aa0f ; movsx eax, dl ; ret
0x000000000008a9e2 : cmp dl, 3 ; je 0x8aa10 ; movsx eax, dl ; ret
0x000000000008a9e1 : cmp dl, 3 ; je 0x8aa11 ; movsx eax, dl ; ret
0x0000000000002b86 : cmp dl, byte ptr [rdi] ; ret
0x00000000000729e8 : cmp dword ptr [rax + 0x30], 0 ; je 0x729f6 ; ret
0x000000000009c673 : cmp dword ptr [rax - 0x7d], ecx ; ret
0x00000000001386f8 : cmp dword ptr [rax], 0x18 ; je 0x138705 ; ret
0x000000000002cae6 : cmp dword ptr [rax], eax ; mov byte ptr [rip + 0x397faf], dl ; ret
0x000000000002d9d0 : cmp dword ptr [rax], eax ; mov qword ptr [rax], rdx ; ret
0x000000000002e199 : cmp dword ptr [rax], eax ; mov qword ptr fs:[rdx], rax ; ret
0x0000000000029c95 : cmp dword ptr [rax], eax ; ret
0x00000000000352f4 : cmp dword ptr [rax], eax ; test eax, eax ; jne 0x35307 ; ret
0x000000000007d48a : cmp dword ptr [rax], ecx ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000d50d2 : cmp dword ptr [rbx + 0xa4], 1 ; setg dl ; jmp 0xd5069
0x000000000015a0f8 : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000000949ee : cmp dword ptr [rcx + 0x39], ecx ; ret
0x00000000000381dc : cmp dword ptr [rcx - 0x7d], ecx ; ret 0xf301
0x00000000001aec8d : cmp dword ptr [rcx], eax ; add al, dl ; add dh, ch ; call qword ptr [rdi]
0x0000000000127bad : cmp dword ptr [rdi + 0x10], 2 ; je 0x127bbe ; ret
0x0000000000077324 : cmp dword ptr [rdi + 0x18], 0 ; setne al ; ret
0x000000000007b491 : cmp dword ptr [rdi + 0x38], 0 ; je 0x7b4a6 ; ret
0x00000000000ba7f0 : cmp dword ptr [rdi + 8], edx ; jne 0xba7d3 ; ret
0x0000000000114188 : cmp dword ptr [rdi], 0 ; je 0x11419e ; ret
0x000000000011529f : cmp dword ptr [rdx + rcx*8 - 8], 1 ; sbb eax, 0 ; leave ; ret
0x000000000019a96d : cmp dword ptr [rdx], eax ; add ah, al ; cli ; call rsp
0x00000000000884f1 : cmp dword ptr [rip + 0x33d3c0], 0 ; je 0x88509 ; ret
0x00000000000e024b : cmp dword ptr [rip + 0x66000002], 0xf ; outsd dx, dword ptr [rsi] ; ret 0xddeb
0x0000000000132fd0 : cmp dword ptr [rsi + 0x10], 0xc ; je 0x132fe8 ; xor eax, eax ; ret
0x0000000000101c2d : cmp dword ptr [rsi], 0 ; je 0x101c3e ; pop rbx ; ret
0x0000000000003836 : cmp dword ptr [rsi], ecx ; pop rsp ; ret
0x00000000000f6dc3 : cmp dword ptr [rsp - 0x58], 2 ; cmove eax, edx ; ret
0x00000000001386f7 : cmp dword ptr fs:[rax], 0x18 ; je 0x138706 ; ret
0x0000000000003ba7 : cmp eax, 0x12c401fe ; mov cl, 0x22 ; xchg eax, ebp ; ret
0x000000000004b4d2 : cmp eax, 0x144a01 ; call 0x77737
0x00000000001aefdd : cmp eax, 0x1c000001 ; cmc ; call qword ptr [rdx]
0x00000000001af08d : cmp eax, 0x1df00001 ; cmc ; jmp qword ptr [rcx]
0x00000000001af0a5 : cmp eax, 0x1e080001 ; cmc ; jmp qword ptr [rcx]
0x000000000011fe52 : cmp eax, 0x2a7905 ; call rax
0x000000000011f5f3 : cmp eax, 0x2a8108 ; call rax
0x0000000000100beb : cmp eax, 0x2c2620 ; ret
0x000000000019820d : cmp eax, 0x2f240001 ; call rsp
0x0000000000114a1f : cmp eax, 0x3948002b ; ret 0xd975
0x0000000000195389 : cmp eax, 0x3ea0fffc ; cld ; jmp qword ptr [rax]
0x00000000000e024c : cmp eax, 0x66000002 ; movq mm0, mm2 ; jmp 0xe023a
0x00000000000cd11b : cmp eax, 0x7275 ; jne 0xcd104 ; xor eax, eax ; ret
0x0000000000096926 : cmp eax, 0x89482e75 ; clc ; pop rbx ; ret
0x0000000000143974 : cmp eax, 0x8948fff8 ; ret
0x00000000000c7f8a : cmp eax, 0x89e18948 ; ret 0xf631
0x00000000000fb19d : cmp eax, 0xa1 ; je 0xfb1c0 ; neg eax ; pop rbx ; ret
0x00000000000bf67e : cmp eax, 0xc8811 ; add rax, rdi ; jmp rax
0x0000000000122810 : cmp eax, 0xf5 ; je 0x12280e ; pop rbx ; ret
0x00000000000b5aba : cmp eax, 0xff ; cmove eax, edx ; ret
0x00000000001421ce : cmp eax, 0xff ; je 0x1421e9 ; add rsp, 8 ; ret
0x0000000000072bfa : cmp eax, 0xff ; je 0x72c0b ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000072c3e : cmp eax, 0xff ; je 0x72c4f ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000007b4c4 : cmp eax, 0xff ; je 0x7b4d9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007bea7 : cmp eax, 0xff ; je 0x7beb8 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00000000001152b0 : cmp eax, 0xff ; jne 0x1152af ; xor eax, eax ; leave ; ret
0x0000000000048484 : cmp eax, 0xff ; jne 0x48479 ; mov rax, rdx ; ret
0x00000000000745d9 : cmp eax, 0xff ; jne 0x745e6 ; pop rbx ; ret
0x000000000007beff : cmp eax, 0xff ; jne 0x7bef0 ; pop rbx ; ret
0x0000000000104dff : cmp eax, 0xfffff000 ; ja 0x104e18 ; ret
0x0000000000106abf : cmp eax, 0xfffff000 ; ja 0x106ad8 ; ret
0x0000000000106d01 : cmp eax, 0xfffff000 ; ja 0x106d17 ; ret
0x0000000000106db3 : cmp eax, 0xfffff000 ; ja 0x106dc8 ; ret
0x0000000000106ded : cmp eax, 0xfffff000 ; ja 0x106e08 ; ret
0x000000000010799e : cmp eax, 0xfffff000 ; ja 0x1079b7 ; ret
0x0000000000107b1e : cmp eax, 0xfffff000 ; ja 0x107b37 ; ret
0x0000000000107fb8 : cmp eax, 0xfffff000 ; ja 0x107fc7 ; ret
0x000000000010805a : cmp eax, 0xfffff000 ; ja 0x10806f ; ret
0x000000000010810a : cmp eax, 0xfffff000 ; ja 0x10811f ; ret
0x0000000000114f6b : cmp eax, 0xfffff000 ; ja 0x114f80 ; ret
0x0000000000115018 : cmp eax, 0xfffff000 ; ja 0x115042 ; ret
0x0000000000116cdd : cmp eax, 0xfffff000 ; ja 0x116cf8 ; ret
0x0000000000116d8d : cmp eax, 0xfffff000 ; ja 0x116da8 ; ret
0x0000000000035419 : cmp eax, 0xfffff000 ; ja 0x35448 ; ret
0x0000000000035721 : cmp eax, 0xfffff000 ; ja 0x35738 ; ret
0x000000000003578d : cmp eax, 0xfffff000 ; ja 0x357a8 ; ret
0x00000000000357d7 : cmp eax, 0xfffff000 ; ja 0x357e7 ; ret
0x00000000000bba08 : cmp eax, 0xfffff000 ; ja 0xbba20 ; ret
0x00000000000c79a8 : cmp eax, 0xfffff000 ; ja 0xc79c0 ; pop rbx ; ret
0x00000000000c8c22 : cmp eax, 0xfffff000 ; ja 0xc8c37 ; ret
0x00000000000cb5b1 : cmp eax, 0xfffff000 ; ja 0xcb5c7 ; ret
0x00000000000cb64b : cmp eax, 0xfffff000 ; ja 0xcb65f ; ret
0x00000000000cb73c : cmp eax, 0xfffff000 ; ja 0xcb74f ; ret
0x00000000000cc844 : cmp eax, 0xfffff000 ; ja 0xcc857 ; ret
0x00000000000cc8b4 : cmp eax, 0xfffff000 ; ja 0xcc8c7 ; ret
0x00000000000ccb08 : cmp eax, 0xfffff000 ; ja 0xccb17 ; ret
0x00000000000ccb88 : cmp eax, 0xfffff000 ; ja 0xccb97 ; ret
0x00000000000f6336 : cmp eax, 0xfffff000 ; ja 0xf6348 ; ret
0x00000000000f6385 : cmp eax, 0xfffff000 ; ja 0xf6398 ; ret
0x00000000000f63d6 : cmp eax, 0xfffff000 ; ja 0xf63e8 ; ret
0x00000000000f642e : cmp eax, 0xfffff000 ; ja 0xf6448 ; ret
0x00000000000f6492 : cmp eax, 0xfffff000 ; ja 0xf64a8 ; ret
0x00000000000f64eb : cmp eax, 0xfffff000 ; ja 0xf6500 ; ret
0x00000000000f66ca : cmp eax, 0xfffff000 ; ja 0xf66e0 ; ret
0x00000000000f6d94 : cmp eax, 0xfffff000 ; ja 0xf6dd8 ; ret
0x00000000000fb213 : cmp eax, 0xfffff000 ; ja 0xfb228 ; ret
0x00000000000fb267 : cmp eax, 0xfffff000 ; ja 0xfb278 ; ret
0x00000000000fb9bb : cmp eax, 0xfffff000 ; ja 0xfb9cf ; ret
0x00000000000fbedf : cmp eax, 0xfffff000 ; ja 0xfbef7 ; ret
0x00000000000fc78b : cmp eax, 0xfffff000 ; ja 0xfc79f ; ret
0x00000000000fc83b : cmp eax, 0xfffff000 ; ja 0xfc84f ; ret
0x00000000000fc8e6 : cmp eax, 0xfffff000 ; ja 0xfc8f7 ; ret
0x00000000000fc956 : cmp eax, 0xfffff000 ; ja 0xfc967 ; ret
0x00000000000fc9d7 : cmp eax, 0xfffff000 ; ja 0xfc9e7 ; ret
0x00000000000fca87 : cmp eax, 0xfffff000 ; ja 0xfca97 ; ret
0x00000000000fcfd7 : cmp eax, 0xfffff000 ; ja 0xfcfe8 ; ret
0x00000000000fe6f8 : cmp eax, 0xfffff000 ; ja 0xfe710 ; ret
0x00000000000fe78c : cmp eax, 0xfffff000 ; ja 0xfe7a0 ; ret
0x00000000000fe82c : cmp eax, 0xfffff000 ; ja 0xfe840 ; ret
0x00000000000fe880 : cmp eax, 0xfffff000 ; ja 0xfe898 ; ret
0x0000000000100c1a : cmp eax, 0xfffff001 ; jae 0x100c29 ; ret
0x0000000000100e88 : cmp eax, 0xfffff001 ; jae 0x100e97 ; ret
0x0000000000100eb8 : cmp eax, 0xfffff001 ; jae 0x100ec7 ; ret
0x0000000000100ef1 : cmp eax, 0xfffff001 ; jae 0x100f30 ; ret
0x0000000000100f48 : cmp eax, 0xfffff001 ; jae 0x100f57 ; ret
0x0000000000100f78 : cmp eax, 0xfffff001 ; jae 0x100f87 ; ret
0x0000000000100fab : cmp eax, 0xfffff001 ; jae 0x100fba ; ret
0x0000000000100fd8 : cmp eax, 0xfffff001 ; jae 0x100fe7 ; ret
0x0000000000101008 : cmp eax, 0xfffff001 ; jae 0x101017 ; ret
0x0000000000101038 : cmp eax, 0xfffff001 ; jae 0x101047 ; ret
0x0000000000101068 : cmp eax, 0xfffff001 ; jae 0x101077 ; ret
0x000000000010572b : cmp eax, 0xfffff001 ; jae 0x10573a ; ret
0x0000000000105758 : cmp eax, 0xfffff001 ; jae 0x105767 ; ret
0x0000000000105788 : cmp eax, 0xfffff001 ; jae 0x105797 ; ret
0x00000000001057bb : cmp eax, 0xfffff001 ; jae 0x1057ca ; ret
0x00000000001057eb : cmp eax, 0xfffff001 ; jae 0x1057fa ; ret
0x0000000000105818 : cmp eax, 0xfffff001 ; jae 0x105827 ; ret
0x000000000010584b : cmp eax, 0xfffff001 ; jae 0x10585a ; ret
0x0000000000105878 : cmp eax, 0xfffff001 ; jae 0x105887 ; ret
0x00000000001058a8 : cmp eax, 0xfffff001 ; jae 0x1058b7 ; ret
0x00000000001058db : cmp eax, 0xfffff001 ; jae 0x1058ea ; ret
0x0000000000105908 : cmp eax, 0xfffff001 ; jae 0x105917 ; ret
0x000000000010593b : cmp eax, 0xfffff001 ; jae 0x10594a ; ret
0x0000000000106a28 : cmp eax, 0xfffff001 ; jae 0x106a37 ; ret
0x0000000000106a58 : cmp eax, 0xfffff001 ; jae 0x106a67 ; ret
0x0000000000106b88 : cmp eax, 0xfffff001 ; jae 0x106b97 ; ret
0x0000000000106bc8 : cmp eax, 0xfffff001 ; jae 0x106bd7 ; ret
0x0000000000106bf8 : cmp eax, 0xfffff001 ; jae 0x106c07 ; ret
0x0000000000106c28 : cmp eax, 0xfffff001 ; jae 0x106c37 ; ret
0x0000000000106c58 : cmp eax, 0xfffff001 ; jae 0x106c67 ; ret
0x0000000000106e7b : cmp eax, 0xfffff001 ; jae 0x106e8a ; ret
0x0000000000106ea8 : cmp eax, 0xfffff001 ; jae 0x106eb7 ; ret
0x0000000000106ed8 : cmp eax, 0xfffff001 ; jae 0x106ee7 ; ret
0x0000000000106f08 : cmp eax, 0xfffff001 ; jae 0x106f17 ; ret
0x0000000000106f4b : cmp eax, 0xfffff001 ; jae 0x106f5a ; ret
0x0000000000106f78 : cmp eax, 0xfffff001 ; jae 0x106f87 ; ret
0x0000000000106fa8 : cmp eax, 0xfffff001 ; jae 0x106fb7 ; ret
0x0000000000106fd8 : cmp eax, 0xfffff001 ; jae 0x106fe7 ; ret
0x0000000000107008 : cmp eax, 0xfffff001 ; jae 0x107017 ; ret
0x0000000000107038 : cmp eax, 0xfffff001 ; jae 0x107047 ; ret
0x0000000000107068 : cmp eax, 0xfffff001 ; jae 0x107077 ; ret
0x0000000000107098 : cmp eax, 0xfffff001 ; jae 0x1070a7 ; ret
0x00000000001070c8 : cmp eax, 0xfffff001 ; jae 0x1070d7 ; ret
0x00000000001070fb : cmp eax, 0xfffff001 ; jae 0x10710a ; ret
0x0000000000107134 : cmp eax, 0xfffff001 ; jae 0x107176 ; ret
0x0000000000107188 : cmp eax, 0xfffff001 ; jae 0x107197 ; ret
0x00000000001071bb : cmp eax, 0xfffff001 ; jae 0x1071ca ; ret
0x00000000001071e8 : cmp eax, 0xfffff001 ; jae 0x1071f7 ; ret
0x0000000000107218 : cmp eax, 0xfffff001 ; jae 0x107227 ; ret
0x0000000000107248 : cmp eax, 0xfffff001 ; jae 0x107257 ; ret
0x0000000000107278 : cmp eax, 0xfffff001 ; jae 0x107287 ; ret
0x00000000001072a8 : cmp eax, 0xfffff001 ; jae 0x1072b7 ; ret
0x00000000001072db : cmp eax, 0xfffff001 ; jae 0x1072ea ; ret
0x000000000010730b : cmp eax, 0xfffff001 ; jae 0x10731a ; ret
0x0000000000107338 : cmp eax, 0xfffff001 ; jae 0x107347 ; ret
0x0000000000107368 : cmp eax, 0xfffff001 ; jae 0x107377 ; ret
0x000000000010739b : cmp eax, 0xfffff001 ; jae 0x1073aa ; ret
0x00000000001073cb : cmp eax, 0xfffff001 ; jae 0x1073da ; ret
0x00000000001073fb : cmp eax, 0xfffff001 ; jae 0x10740a ; ret
0x0000000000107434 : cmp eax, 0xfffff001 ; jae 0x107476 ; ret
0x0000000000107488 : cmp eax, 0xfffff001 ; jae 0x107497 ; ret
0x00000000001074c4 : cmp eax, 0xfffff001 ; jae 0x107506 ; ret
0x0000000000107518 : cmp eax, 0xfffff001 ; jae 0x107527 ; ret
0x0000000000107548 : cmp eax, 0xfffff001 ; jae 0x107557 ; ret
0x0000000000107584 : cmp eax, 0xfffff001 ; jae 0x1075c6 ; ret
0x00000000001075d8 : cmp eax, 0xfffff001 ; jae 0x1075e7 ; ret
0x000000000010760b : cmp eax, 0xfffff001 ; jae 0x10761a ; ret
0x0000000000107638 : cmp eax, 0xfffff001 ; jae 0x107647 ; ret
0x0000000000107668 : cmp eax, 0xfffff001 ; jae 0x107677 ; ret
0x000000000010769b : cmp eax, 0xfffff001 ; jae 0x1076aa ; ret
0x00000000001076d1 : cmp eax, 0xfffff001 ; jae 0x107710 ; ret
0x0000000000107728 : cmp eax, 0xfffff001 ; jae 0x107737 ; ret
0x000000000010775b : cmp eax, 0xfffff001 ; jae 0x10776a ; ret
0x000000000010778b : cmp eax, 0xfffff001 ; jae 0x10779a ; ret
0x00000000001077e1 : cmp eax, 0xfffff001 ; jae 0x107820 ; ret
0x0000000000107838 : cmp eax, 0xfffff001 ; jae 0x107847 ; ret
0x0000000000107871 : cmp eax, 0xfffff001 ; jae 0x1078b0 ; ret
0x00000000001078c8 : cmp eax, 0xfffff001 ; jae 0x1078d7 ; ret
0x00000000001078f8 : cmp eax, 0xfffff001 ; jae 0x107907 ; ret
0x000000000010792b : cmp eax, 0xfffff001 ; jae 0x10793a ; ret
0x0000000000107958 : cmp eax, 0xfffff001 ; jae 0x107967 ; ret
0x0000000000107a54 : cmp eax, 0xfffff001 ; jae 0x107a96 ; ret
0x0000000000107ab1 : cmp eax, 0xfffff001 ; jae 0x107af0 ; ret
0x0000000000107bd1 : cmp eax, 0xfffff001 ; jae 0x107c10 ; ret
0x0000000000107c34 : cmp eax, 0xfffff001 ; jae 0x107c76 ; ret
0x0000000000107c8b : cmp eax, 0xfffff001 ; jae 0x107c9a ; ret
0x0000000000107cb8 : cmp eax, 0xfffff001 ; jae 0x107cc7 ; ret
0x0000000000107ce8 : cmp eax, 0xfffff001 ; jae 0x107cf7 ; ret
0x0000000000107d1b : cmp eax, 0xfffff001 ; jae 0x107d2a ; ret
0x0000000000108274 : cmp eax, 0xfffff001 ; jae 0x1082b6 ; ret
0x00000000001082d4 : cmp eax, 0xfffff001 ; jae 0x108316 ; ret
0x0000000000108328 : cmp eax, 0xfffff001 ; jae 0x108337 ; ret
0x0000000000108358 : cmp eax, 0xfffff001 ; jae 0x108367 ; ret
0x0000000000108388 : cmp eax, 0xfffff001 ; jae 0x108397 ; ret
0x00000000001083b8 : cmp eax, 0xfffff001 ; jae 0x1083c7 ; ret
0x00000000001083eb : cmp eax, 0xfffff001 ; jae 0x1083fa ; ret
0x000000000010841b : cmp eax, 0xfffff001 ; jae 0x10842a ; ret
0x0000000000108448 : cmp eax, 0xfffff001 ; jae 0x108457 ; ret
0x0000000000108478 : cmp eax, 0xfffff001 ; jae 0x108487 ; ret
0x00000000001084a8 : cmp eax, 0xfffff001 ; jae 0x1084b7 ; ret
0x00000000001084d8 : cmp eax, 0xfffff001 ; jae 0x1084e7 ; ret
0x000000000013fecb : cmp eax, 0xfffff001 ; jae 0x13feda ; ret
0x000000000013ff1b : cmp eax, 0xfffff001 ; jae 0x13ff2a ; ret
0x0000000000035758 : cmp eax, 0xfffff001 ; jae 0x35767 ; ret
0x0000000000035e18 : cmp eax, 0xfffff001 ; jae 0x35e27 ; ret
0x0000000000047ae2 : cmp eax, 0xfffff001 ; jae 0x47af5 ; xor eax, eax ; ret
0x000000000006b318 : cmp eax, 0xfffff001 ; jae 0x6b327 ; ret
0x000000000006b34b : cmp eax, 0xfffff001 ; jae 0x6b35a ; ret
0x00000000000bbae8 : cmp eax, 0xfffff001 ; jae 0xbbaf7 ; ret
0x00000000000bebd8 : cmp eax, 0xfffff001 ; jae 0xbebe7 ; ret
0x00000000000bec08 : cmp eax, 0xfffff001 ; jae 0xbec17 ; ret
0x00000000000cb508 : cmp eax, 0xfffff001 ; jae 0xcb517 ; ret
0x00000000000cb6fb : cmp eax, 0xfffff001 ; jae 0xcb70a ; ret
0x00000000000cb7d8 : cmp eax, 0xfffff001 ; jae 0xcb7e7 ; ret
0x00000000000cb861 : cmp eax, 0xfffff001 ; jae 0xcb8a0 ; ret
0x00000000000cb8c1 : cmp eax, 0xfffff001 ; jae 0xcb900 ; ret
0x00000000000cbc72 : cmp eax, 0xfffff001 ; jae 0xcbc81 ; ret
0x00000000000cbcf8 : cmp eax, 0xfffff001 ; jae 0xcbd07 ; ret
0x00000000000cc808 : cmp eax, 0xfffff001 ; jae 0xcc817 ; ret
0x00000000000cc9a8 : cmp eax, 0xfffff001 ; jae 0xcc9b7 ; ret
0x00000000000cc9d8 : cmp eax, 0xfffff001 ; jae 0xcc9e7 ; ret
0x00000000000cca38 : cmp eax, 0xfffff001 ; jae 0xcca47 ; ret
0x00000000000cca68 : cmp eax, 0xfffff001 ; jae 0xcca77 ; ret
0x00000000000cca98 : cmp eax, 0xfffff001 ; jae 0xccaa7 ; ret
0x00000000000ccac8 : cmp eax, 0xfffff001 ; jae 0xccad7 ; ret
0x00000000000e9ca8 : cmp eax, 0xfffff001 ; jae 0xe9cb7 ; ret
0x00000000000e9cd8 : cmp eax, 0xfffff001 ; jae 0xe9ce7 ; ret
0x00000000000e9d08 : cmp eax, 0xfffff001 ; jae 0xe9d17 ; ret
0x00000000000e9d38 : cmp eax, 0xfffff001 ; jae 0xe9d47 ; ret
0x00000000000e9d68 : cmp eax, 0xfffff001 ; jae 0xe9d77 ; ret
0x00000000000e9d98 : cmp eax, 0xfffff001 ; jae 0xe9da7 ; ret
0x00000000000e9dc8 : cmp eax, 0xfffff001 ; jae 0xe9dd7 ; ret
0x00000000000e9df8 : cmp eax, 0xfffff001 ; jae 0xe9e07 ; ret
0x00000000000f51c4 : cmp eax, 0xfffff001 ; jae 0xf5206 ; ret
0x00000000000f5224 : cmp eax, 0xfffff001 ; jae 0xf5266 ; ret
0x00000000000f6298 : cmp eax, 0xfffff001 ; jae 0xf62a7 ; ret
0x00000000000f6538 : cmp eax, 0xfffff001 ; jae 0xf6547 ; ret
0x00000000000f6568 : cmp eax, 0xfffff001 ; jae 0xf6577 ; ret
0x00000000000f6638 : cmp eax, 0xfffff001 ; jae 0xf6647 ; ret
0x00000000000f6668 : cmp eax, 0xfffff001 ; jae 0xf6677 ; ret
0x00000000000f6728 : cmp eax, 0xfffff001 ; jae 0xf6737 ; ret
0x00000000000f6758 : cmp eax, 0xfffff001 ; jae 0xf6767 ; ret
0x00000000000f6791 : cmp eax, 0xfffff001 ; jae 0xf67d0 ; ret
0x00000000000f69b1 : cmp eax, 0xfffff001 ; jae 0xf69f0 ; ret
0x00000000000f6a11 : cmp eax, 0xfffff001 ; jae 0xf6a50 ; ret
0x00000000000f6a68 : cmp eax, 0xfffff001 ; jae 0xf6a77 ; ret
0x00000000000f6ef8 : cmp eax, 0xfffff001 ; jae 0xf6f07 ; ret
0x00000000000f7041 : cmp eax, 0xfffff001 ; jae 0xf7080 ; ret
0x00000000000f7098 : cmp eax, 0xfffff001 ; jae 0xf70a7 ; ret
0x00000000000f70c8 : cmp eax, 0xfffff001 ; jae 0xf70d7 ; ret
0x00000000000f70f8 : cmp eax, 0xfffff001 ; jae 0xf7107 ; ret
0x00000000000f7128 : cmp eax, 0xfffff001 ; jae 0xf7137 ; ret
0x00000000000f7158 : cmp eax, 0xfffff001 ; jae 0xf7167 ; ret
0x00000000000f7191 : cmp eax, 0xfffff001 ; jae 0xf71d0 ; ret
0x00000000000f71e8 : cmp eax, 0xfffff001 ; jae 0xf71f7 ; ret
0x00000000000f7218 : cmp eax, 0xfffff001 ; jae 0xf7227 ; ret
0x00000000000f7a48 : cmp eax, 0xfffff001 ; jae 0xf7a57 ; ret
0x00000000000f7a78 : cmp eax, 0xfffff001 ; jae 0xf7a87 ; ret
0x00000000000f7aa8 : cmp eax, 0xfffff001 ; jae 0xf7ab7 ; ret
0x00000000000f7adb : cmp eax, 0xfffff001 ; jae 0xf7aea ; ret
0x00000000000f80b8 : cmp eax, 0xfffff001 ; jae 0xf80c7 ; ret
0x00000000000f80eb : cmp eax, 0xfffff001 ; jae 0xf80fa ; ret
0x00000000000f8118 : cmp eax, 0xfffff001 ; jae 0xf8127 ; ret
0x00000000000f8148 : cmp eax, 0xfffff001 ; jae 0xf8157 ; ret
0x00000000000f8178 : cmp eax, 0xfffff001 ; jae 0xf8187 ; ret
0x00000000000f81ab : cmp eax, 0xfffff001 ; jae 0xf81ba ; ret
0x00000000000f81d8 : cmp eax, 0xfffff001 ; jae 0xf81e7 ; ret
0x00000000000f8208 : cmp eax, 0xfffff001 ; jae 0xf8217 ; ret
0x00000000000f8238 : cmp eax, 0xfffff001 ; jae 0xf8247 ; ret
0x00000000000fae71 : cmp eax, 0xfffff001 ; jae 0xfaeb0 ; ret
0x00000000000fb1db : cmp eax, 0xfffff001 ; jae 0xfb1ea ; ret
0x00000000000fb954 : cmp eax, 0xfffff001 ; jae 0xfb996 ; ret
0x00000000000fc0a8 : cmp eax, 0xfffff001 ; jae 0xfc0b7 ; ret
0x00000000000fc0d8 : cmp eax, 0xfffff001 ; jae 0xfc0e7 ; ret
0x00000000000fc108 : cmp eax, 0xfffff001 ; jae 0xfc117 ; ret
0x00000000000fc4a8 : cmp eax, 0xfffff001 ; jae 0xfc4b7 ; ret
0x00000000000fc688 : cmp eax, 0xfffff001 ; jae 0xfc697 ; ret
0x00000000000fc6c1 : cmp eax, 0xfffff001 ; jae 0xfc700 ; ret
0x00000000000fc721 : cmp eax, 0xfffff001 ; jae 0xfc760 ; ret
0x00000000000fcc18 : cmp eax, 0xfffff001 ; jae 0xfcc27 ; ret
0x00000000000fccb8 : cmp eax, 0xfffff001 ; jae 0xfccc7 ; ret
0x00000000000fccf4 : cmp eax, 0xfffff001 ; jae 0xfcd36 ; ret
0x00000000000fce48 : cmp eax, 0xfffff001 ; jae 0xfce57 ; ret
0x00000000000fce78 : cmp eax, 0xfffff001 ; jae 0xfce87 ; ret
0x00000000000fceb1 : cmp eax, 0xfffff001 ; jae 0xfcef0 ; ret
0x00000000000fcf08 : cmp eax, 0xfffff001 ; jae 0xfcf17 ; ret
0x00000000000fcf41 : cmp eax, 0xfffff001 ; jae 0xfcf80 ; ret
0x00000000000fcf98 : cmp eax, 0xfffff001 ; jae 0xfcfa7 ; ret
0x00000000000fd308 : cmp eax, 0xfffff001 ; jae 0xfd317 ; ret
0x00000000000fd338 : cmp eax, 0xfffff001 ; jae 0xfd347 ; ret
0x00000000000fd368 : cmp eax, 0xfffff001 ; jae 0xfd377 ; ret
0x00000000000fe8b8 : cmp eax, 0xfffff001 ; jae 0xfe8c7 ; ret
0x00000000000fe8e8 : cmp eax, 0xfffff001 ; jae 0xfe8f7 ; ret
0x0000000000115288 : cmp eax, 0xfffffe93 ; call rax
0x00000000000aa2ff : cmp eax, 2 ; je 0xaa317 ; xor eax, eax ; ret
0x000000000013a2c1 : cmp eax, 2 ; sete al ; movzx eax, al ; ret
0x00000000000da49e : cmp eax, 3 ; je 0xda4b8 ; xor eax, eax ; pop rbx ; ret
0x000000000011489a : cmp eax, 4 ; je 0x1148a5 ; ret
0x000000000019ee95 : cmp eax, dword ptr [rax] ; add byte ptr [rax], bh ; xor edx, ebp ; jmp rax
0x0000000000079545 : cmp eax, dword ptr [rdi + 0x10] ; jae 0x79558 ; movzx eax, byte ptr [rax] ; ret
0x00000000001bc904 : cmp eax, dword ptr [rip + 0x1e70000] ; add byte ptr [rax], al ; ret 4
0x0000000000103271 : cmp eax, dword ptr [rip - 0x9cf0000] ; mov rdi, r12 ; call rbx
0x00000000000ab13e : cmp eax, dword ptr [rsi + 0x10] ; jne 0xab239 ; ret
0x00000000000ab153 : cmp eax, dword ptr [rsi + 0x14] ; jne 0xab239 ; ret
0x00000000000ab168 : cmp eax, dword ptr [rsi + 0x18] ; jne 0xab239 ; ret
0x00000000000ab183 : cmp eax, dword ptr [rsi + 0x1c] ; jne 0xab239 ; ret
0x00000000000ab19e : cmp eax, dword ptr [rsi + 0x20] ; jne 0xab239 ; ret
0x00000000000ab1b3 : cmp eax, dword ptr [rsi + 0x24] ; jne 0xab235 ; ret
0x00000000000ab1c8 : cmp eax, dword ptr [rsi + 0x28] ; jne 0xab235 ; ret
0x00000000000ab1d3 : cmp eax, dword ptr [rsi + 0x2c] ; jne 0xab235 ; ret
0x00000000000ab1ee : cmp eax, dword ptr [rsi + 0x30] ; jne 0xab235 ; ret
0x00000000000ab203 : cmp eax, dword ptr [rsi + 0x34] ; jne 0xab235 ; ret
0x00000000000ab218 : cmp eax, dword ptr [rsi + 0x38] ; jne 0xab235 ; ret
0x00000000000ab223 : cmp eax, dword ptr [rsi + 0x3c] ; jne 0xab235 ; ret
0x00000000000ab123 : cmp eax, dword ptr [rsi + 0xc] ; jne 0xab239 ; ret
0x00000000000ab0f3 : cmp eax, dword ptr [rsi + 4] ; jne 0xab239 ; ret
0x00000000000ab108 : cmp eax, dword ptr [rsi + 8] ; jne 0xab239 ; ret
0x000000000017202a : cmp eax, dword ptr [rsi - 0x10] ; jne 0x172169 ; ret
0x0000000000172043 : cmp eax, dword ptr [rsi - 0xc] ; jne 0x172169 ; ret
0x0000000000172153 : cmp eax, dword ptr [rsi - 4] ; jne 0x172167 ; xor eax, eax ; ret
0x0000000000172073 : cmp eax, dword ptr [rsi - 4] ; jne 0x172169 ; ret
0x0000000000172058 : cmp eax, dword ptr [rsi - 8] ; jne 0x172169 ; ret
0x00000000000ab0dd : cmp eax, dword ptr [rsi] ; jne 0xab238 ; ret
0x00000000001004f4 : cmp eax, ecx ; cmovne rbx, rax ; call 0xfc718
0x000000000007cb79 : cmp eax, ecx ; jae 0x7cba7 ; movzx eax, byte ptr [rax] ; ret
0x000000000009e1fd : cmp eax, ecx ; je 0x9e1e5 ; ret
0x0000000000003af7 : cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x0000000000171b43 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x000000000011410b : cmp eax, edx ; jb 0x114106 ; xor eax, eax ; ret
0x0000000000137b11 : cmp eax, edx ; je 0x137b28 ; add rsp, 8 ; ret
0x0000000000122dca : cmp eax, edx ; jne 0x122da9 ; mov qword ptr [rsi], rcx ; xor eax, eax ; ret
0x0000000000048045 : cmp eax, edx ; jne 0x4803e ; xor eax, eax ; ret
0x0000000000087d0d : cmp eax, edx ; jne 0x87cc7 ; xor eax, eax ; pop rbx ; ret
0x000000000007b201 : cmp eax, esi ; jae 0x7b1b9 ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000010e109 : cmp eax, esi ; jb 0x10e121 ; mov eax, 1 ; ret
0x00000000000d6bb8 : cmp eax, esi ; jge 0xd6b95 ; mov edx, eax ; jmp 0xd6b9e
0x0000000000114c96 : cmp ebp, dword ptr [rbx] ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000114836 : cmp ebx, 0xa ; je 0x114841 ; ret
0x0000000000194715 : cmp ebx, 0xfb82a0ff ; jmp qword ptr [rax]
0x00000000000bf95f : cmp ebx, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x000000000007ed55 : cmp ebx, eax ; je 0x7ed66 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000173baa : cmp ebx, ebp ; jae 0x173bbd ; call qword ptr [rbx]
0x0000000000173baa : cmp ebx, ebp ; jae 0x173bc1 ; call qword ptr [rbx]
0x0000000000173bd9 : cmp ebx, ebp ; jb 0x173bd3 ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000008383b : cmp ebx, ecx ; jb 0x83821 ; mov byte ptr [rax + rbx], r9b ; pop rbx ; ret
0x00000000001946ad : cmp ebx, edi ; call qword ptr [rax]
0x0000000000048b3c : cmp ecx, 0xff ; jne 0x48b39 ; mov rax, rdx ; ret
0x00000000000f05b5 : cmp ecx, dword ptr [rax + 0x39] ; ret 0x860f
0x000000000012bcb5 : cmp ecx, dword ptr [rax - 0x75] ; or byte ptr [r10], r13b ; push 0x19 ; call qword ptr [rax]
0x00000000000f38d9 : cmp ecx, dword ptr [rax - 0x77] ; ret
0x0000000000024ca1 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000bbc90 : cmp ecx, dword ptr [rdi] ; imul esi, esi, 0x3c ; add eax, esi ; ret
0x000000000009d087 : cmp ecx, dword ptr [rdi] ; mov dh, 0x45 ; ret 0x8348
0x000000000009b143 : cmp ecx, dword ptr [rdi] ; mov dh, 0x55 ; ret 0x8348
0x0000000000074e8e : cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000001fb03 : cmp ecx, eax ; je 0x1faa8 ; jmp 0x1fad1
0x000000000016f23b : cmp ecx, eax ; jne 0x16f269 ; xor eax, eax ; ret
0x000000000017007b : cmp ecx, eax ; jne 0x1700a9 ; xor eax, eax ; ret
0x00000000001700af : cmp ecx, eax ; jne 0x1700bc ; xor eax, eax ; ret
0x000000000013b6f3 : cmp ecx, edx ; jae 0x13b706 ; xor eax, eax ; ret
0x000000000013b733 : cmp ecx, edx ; jae 0x13b746 ; xor eax, eax ; ret
0x000000000009e1a8 : cmp ecx, edx ; je 0x9e1a9 ; cmp ecx, esi ; je 0x9e1a9 ; ret
0x000000000009e1ac : cmp ecx, esi ; je 0x9e1a5 ; ret
0x00000000000ac1e9 : cmp edi, 0x7f ; ja 0xac1ff ; mov eax, edi ; ret
0x00000000000952c7 : cmp edi, 0xd ; je 0x952e1 ; xor byte ptr [rdx + 0xe], 0x2a ; ret
0x0000000000173de8 : cmp edi, 1 ; ja 0x173df5 ; ret
0x0000000000109e1d : cmp edi, 9 ; setbe al ; ret
0x0000000000174069 : cmp edi, dword ptr [rax + 0x1f0fffea] ; add bl, dh ; ret
0x000000000004a45a : cmp edi, eax ; jbe 0x4a458 ; nop ; pop rbx ; ret
0x0000000000050475 : cmp edi, ecx ; ja 0x50460 ; mov eax, r8d ; ret
0x00000000000fc571 : cmp edi, edx ; ja 0xfc5a5 ; ret
0x00000000000f6190 : cmp edi, esi ; ja 0xf6185 ; ret
0x000000000004a57b : cmp edi, esi ; mov rax, rsi ; cmovae rax, rdi ; ret
0x0000000000195385 : cmp edi, esp ; jmp qword ptr [rax]
0x00000000000cc778 : cmp edx, 0 ; mov eax, edx ; jle 0xcc790 ; ret
0x0000000000118b0f : cmp edx, 0x80000000 ; cmovne eax, edi ; ret
0x00000000000b8b4d : cmp edx, 0x8944ffff ; ret 0x894d
0x000000000003a9f0 : cmp edx, 0xff ; cmovne rax, rbx ; pop rbx ; ret
0x00000000000d0c16 : cmp edx, 1 ; sete al ; ret
0x000000000002da7b : cmp edx, dword ptr [rdi + 4] ; jb 0x2da8e ; ret
0x0000000000114ae2 : cmp edx, eax ; jne 0x114ac5 ; ret
0x00000000000ab737 : cmp edx, eax ; jne 0xab727 ; xor eax, eax ; ret
0x0000000000122ce6 : cmp edx, eax ; sbb eax, eax ; ret
0x000000000013b5df : cmp edx, ecx ; je 0x13b5f5 ; ret
0x000000000008e8b8 : cmp edx, ecx ; jne 0x8e8a5 ; ret
0x00000000000cd017 : cmp edx, ecx ; jne 0xcd044 ; ret
0x0000000000102169 : cmp edx, edi ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000001141ea : cmp edx, edi ; setae al ; ret
0x00000000001236d6 : cmp edx, esi ; jb 0x1236cd ; mov eax, 0xffffffff ; ret
0x000000000009e188 : cmp edx, esi ; je 0x9e185 ; ret
0x00000000000ad096 : cmp edx, esi ; je 0xad0a7 ; test edx, edx ; jne 0xad099 ; ret
0x0000000000072f99 : cmp esi, 0xff ; setne al ; neg eax ; ret
0x0000000000077438 : cmp esi, 2 ; je 0x77450 ; mov dword ptr [rdi], edx ; ret
0x000000000002a695 : cmp esi, 3 ; je 0x2a6a6 ; pop rbx ; ret
0x00000000000abdf1 : cmp esi, dword ptr [rdi + 8] ; cmove rax, rcx ; ret
0x000000000012dffa : cmp esi, dword ptr [rdx + 0x28] ; ja 0x12dff1 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x0000000000184b04 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x0000000000072c9a : cmp esi, ecx ; jb 0x72c97 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000014a188 : cmp esi, ecx ; jle 0x14a0cd ; ret
0x000000000007bf3a : cmp esi, ecx ; jne 0x7bf37 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000012374e : cmp esi, edx ; ja 0x12373d ; mov eax, 0xffffffff ; ret
0x00000000000481dd : cmp esi, edx ; jne 0x481d6 ; xor eax, eax ; ret
0x0000000000195db5 : cmp esp, 0xfc8350ff ; call rax
0x00000000001954b1 : cmp esp, 0xfc8852ff ; jmp rdx
0x00000000001953f1 : cmp esp, 0xfc8880ff ; call qword ptr [rax]
0x00000000001953bd : cmp esp, edi ; jmp qword ptr [rax + 0x20fffc3a]
0x00000000000f615c : cmp esp, esi ; ja 0xf60f8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002e198 : cmp qword ptr [r8], r8 ; mov qword ptr fs:[rdx], rax ; ret
0x00000000000729e7 : cmp qword ptr [rax + 0x30], 0 ; je 0x729f7 ; ret
0x0000000000077323 : cmp qword ptr [rdi + 0x18], 0 ; setne al ; ret
0x000000000007b490 : cmp qword ptr [rdi + 0x38], 0 ; je 0x7b4a7 ; ret
0x0000000000114187 : cmp qword ptr [rdi], 0 ; je 0x11419f ; ret
0x0000000000101c2c : cmp qword ptr [rsi], 0 ; je 0x101c3f ; pop rbx ; ret
0x00000000000942a2 : cmp r11b, r14b ; ret
0x0000000000114835 : cmp r11d, 0xa ; je 0x114842 ; ret
0x00000000000f615b : cmp r12, rsi ; ja 0xf60f9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005c415 : cmp r12b, 0x49 ; cmove esi, ecx ; jmp 0x5c3e8
0x000000000009e1fc : cmp r8d, ecx ; je 0x9e1e6 ; ret
0x00000000000d6bb7 : cmp r8d, esi ; jge 0xd6b96 ; mov edx, eax ; jmp 0xd6b9f
0x000000000001fb02 : cmp r9, rax ; je 0x1faa9 ; jmp 0x1fad2
0x00000000000e052f : cmp r9b, 0x11 ; je 0xe0573 ; mov rdx, rax ; jmp 0xe04d7
0x000000000010e901 : cmp r9b, r13b ; ret
0x0000000000104dfe : cmp rax, -0x1000 ; ja 0x104e19 ; ret
0x0000000000106abe : cmp rax, -0x1000 ; ja 0x106ad9 ; ret
0x0000000000106d00 : cmp rax, -0x1000 ; ja 0x106d18 ; ret
0x0000000000106db2 : cmp rax, -0x1000 ; ja 0x106dc9 ; ret
0x0000000000106dec : cmp rax, -0x1000 ; ja 0x106e09 ; ret
0x000000000010799d : cmp rax, -0x1000 ; ja 0x1079b8 ; ret
0x0000000000107b1d : cmp rax, -0x1000 ; ja 0x107b38 ; ret
0x0000000000107fb7 : cmp rax, -0x1000 ; ja 0x107fc8 ; ret
0x0000000000108059 : cmp rax, -0x1000 ; ja 0x108070 ; ret
0x0000000000108109 : cmp rax, -0x1000 ; ja 0x108120 ; ret
0x0000000000114f6a : cmp rax, -0x1000 ; ja 0x114f81 ; ret
0x0000000000115017 : cmp rax, -0x1000 ; ja 0x115043 ; ret
0x0000000000116cdc : cmp rax, -0x1000 ; ja 0x116cf9 ; ret
0x0000000000116d8c : cmp rax, -0x1000 ; ja 0x116da9 ; ret
0x0000000000035418 : cmp rax, -0x1000 ; ja 0x35449 ; ret
0x0000000000035720 : cmp rax, -0x1000 ; ja 0x35739 ; ret
0x000000000003578c : cmp rax, -0x1000 ; ja 0x357a9 ; ret
0x00000000000357d6 : cmp rax, -0x1000 ; ja 0x357e8 ; ret
0x00000000000bba07 : cmp rax, -0x1000 ; ja 0xbba21 ; ret
0x00000000000c79a7 : cmp rax, -0x1000 ; ja 0xc79c1 ; pop rbx ; ret
0x00000000000c8c21 : cmp rax, -0x1000 ; ja 0xc8c38 ; ret
0x00000000000cb5b0 : cmp rax, -0x1000 ; ja 0xcb5c8 ; ret
0x00000000000cb64a : cmp rax, -0x1000 ; ja 0xcb660 ; ret
0x00000000000cb73b : cmp rax, -0x1000 ; ja 0xcb750 ; ret
0x00000000000cc843 : cmp rax, -0x1000 ; ja 0xcc858 ; ret
0x00000000000cc8b3 : cmp rax, -0x1000 ; ja 0xcc8c8 ; ret
0x00000000000ccb07 : cmp rax, -0x1000 ; ja 0xccb18 ; ret
0x00000000000ccb87 : cmp rax, -0x1000 ; ja 0xccb98 ; ret
0x00000000000f6335 : cmp rax, -0x1000 ; ja 0xf6349 ; ret
0x00000000000f6384 : cmp rax, -0x1000 ; ja 0xf6399 ; ret
0x00000000000f63d5 : cmp rax, -0x1000 ; ja 0xf63e9 ; ret
0x00000000000f642d : cmp rax, -0x1000 ; ja 0xf6449 ; ret
0x00000000000f6491 : cmp rax, -0x1000 ; ja 0xf64a9 ; ret
0x00000000000f64ea : cmp rax, -0x1000 ; ja 0xf6501 ; ret
0x00000000000f66c9 : cmp rax, -0x1000 ; ja 0xf66e1 ; ret
0x00000000000f6d93 : cmp rax, -0x1000 ; ja 0xf6dd9 ; ret
0x00000000000fb212 : cmp rax, -0x1000 ; ja 0xfb229 ; ret
0x00000000000fb266 : cmp rax, -0x1000 ; ja 0xfb279 ; ret
0x00000000000fb9ba : cmp rax, -0x1000 ; ja 0xfb9d0 ; ret
0x00000000000fbede : cmp rax, -0x1000 ; ja 0xfbef8 ; ret
0x00000000000fc78a : cmp rax, -0x1000 ; ja 0xfc7a0 ; ret
0x00000000000fc83a : cmp rax, -0x1000 ; ja 0xfc850 ; ret
0x00000000000fc8e5 : cmp rax, -0x1000 ; ja 0xfc8f8 ; ret
0x00000000000fc955 : cmp rax, -0x1000 ; ja 0xfc968 ; ret
0x00000000000fc9d6 : cmp rax, -0x1000 ; ja 0xfc9e8 ; ret
0x00000000000fca86 : cmp rax, -0x1000 ; ja 0xfca98 ; ret
0x00000000000fcfd6 : cmp rax, -0x1000 ; ja 0xfcfe9 ; ret
0x00000000000fe6f7 : cmp rax, -0x1000 ; ja 0xfe711 ; ret
0x00000000000fe78b : cmp rax, -0x1000 ; ja 0xfe7a1 ; ret
0x00000000000fe82b : cmp rax, -0x1000 ; ja 0xfe841 ; ret
0x00000000000fe87f : cmp rax, -0x1000 ; ja 0xfe899 ; ret
0x0000000000100c19 : cmp rax, -0xfff ; jae 0x100c2a ; ret
0x0000000000100e87 : cmp rax, -0xfff ; jae 0x100e98 ; ret
0x0000000000100eb7 : cmp rax, -0xfff ; jae 0x100ec8 ; ret
0x0000000000100ef0 : cmp rax, -0xfff ; jae 0x100f31 ; ret
0x0000000000100f47 : cmp rax, -0xfff ; jae 0x100f58 ; ret
0x0000000000100f77 : cmp rax, -0xfff ; jae 0x100f88 ; ret
0x0000000000100faa : cmp rax, -0xfff ; jae 0x100fbb ; ret
0x0000000000100fd7 : cmp rax, -0xfff ; jae 0x100fe8 ; ret
0x0000000000101007 : cmp rax, -0xfff ; jae 0x101018 ; ret
0x0000000000101037 : cmp rax, -0xfff ; jae 0x101048 ; ret
0x0000000000101067 : cmp rax, -0xfff ; jae 0x101078 ; ret
0x000000000010572a : cmp rax, -0xfff ; jae 0x10573b ; ret
0x0000000000105757 : cmp rax, -0xfff ; jae 0x105768 ; ret
0x0000000000105787 : cmp rax, -0xfff ; jae 0x105798 ; ret
0x00000000001057ba : cmp rax, -0xfff ; jae 0x1057cb ; ret
0x00000000001057ea : cmp rax, -0xfff ; jae 0x1057fb ; ret
0x0000000000105817 : cmp rax, -0xfff ; jae 0x105828 ; ret
0x000000000010584a : cmp rax, -0xfff ; jae 0x10585b ; ret
0x0000000000105877 : cmp rax, -0xfff ; jae 0x105888 ; ret
0x00000000001058a7 : cmp rax, -0xfff ; jae 0x1058b8 ; ret
0x00000000001058da : cmp rax, -0xfff ; jae 0x1058eb ; ret
0x0000000000105907 : cmp rax, -0xfff ; jae 0x105918 ; ret
0x000000000010593a : cmp rax, -0xfff ; jae 0x10594b ; ret
0x0000000000106a27 : cmp rax, -0xfff ; jae 0x106a38 ; ret
0x0000000000106a57 : cmp rax, -0xfff ; jae 0x106a68 ; ret
0x0000000000106b87 : cmp rax, -0xfff ; jae 0x106b98 ; ret
0x0000000000106bc7 : cmp rax, -0xfff ; jae 0x106bd8 ; ret
0x0000000000106bf7 : cmp rax, -0xfff ; jae 0x106c08 ; ret
0x0000000000106c27 : cmp rax, -0xfff ; jae 0x106c38 ; ret
0x0000000000106c57 : cmp rax, -0xfff ; jae 0x106c68 ; ret
0x0000000000106e7a : cmp rax, -0xfff ; jae 0x106e8b ; ret
0x0000000000106ea7 : cmp rax, -0xfff ; jae 0x106eb8 ; ret
0x0000000000106ed7 : cmp rax, -0xfff ; jae 0x106ee8 ; ret
0x0000000000106f07 : cmp rax, -0xfff ; jae 0x106f18 ; ret
0x0000000000106f4a : cmp rax, -0xfff ; jae 0x106f5b ; ret
0x0000000000106f77 : cmp rax, -0xfff ; jae 0x106f88 ; ret
0x0000000000106fa7 : cmp rax, -0xfff ; jae 0x106fb8 ; ret
0x0000000000106fd7 : cmp rax, -0xfff ; jae 0x106fe8 ; ret
0x0000000000107007 : cmp rax, -0xfff ; jae 0x107018 ; ret
0x0000000000107037 : cmp rax, -0xfff ; jae 0x107048 ; ret
0x0000000000107067 : cmp rax, -0xfff ; jae 0x107078 ; ret
0x0000000000107097 : cmp rax, -0xfff ; jae 0x1070a8 ; ret
0x00000000001070c7 : cmp rax, -0xfff ; jae 0x1070d8 ; ret
0x00000000001070fa : cmp rax, -0xfff ; jae 0x10710b ; ret
0x0000000000107133 : cmp rax, -0xfff ; jae 0x107177 ; ret
0x0000000000107187 : cmp rax, -0xfff ; jae 0x107198 ; ret
0x00000000001071ba : cmp rax, -0xfff ; jae 0x1071cb ; ret
0x00000000001071e7 : cmp rax, -0xfff ; jae 0x1071f8 ; ret
0x0000000000107217 : cmp rax, -0xfff ; jae 0x107228 ; ret
0x0000000000107247 : cmp rax, -0xfff ; jae 0x107258 ; ret
0x0000000000107277 : cmp rax, -0xfff ; jae 0x107288 ; ret
0x00000000001072a7 : cmp rax, -0xfff ; jae 0x1072b8 ; ret
0x00000000001072da : cmp rax, -0xfff ; jae 0x1072eb ; ret
0x000000000010730a : cmp rax, -0xfff ; jae 0x10731b ; ret
0x0000000000107337 : cmp rax, -0xfff ; jae 0x107348 ; ret
0x0000000000107367 : cmp rax, -0xfff ; jae 0x107378 ; ret
0x000000000010739a : cmp rax, -0xfff ; jae 0x1073ab ; ret
0x00000000001073ca : cmp rax, -0xfff ; jae 0x1073db ; ret
0x00000000001073fa : cmp rax, -0xfff ; jae 0x10740b ; ret
0x0000000000107433 : cmp rax, -0xfff ; jae 0x107477 ; ret
0x0000000000107487 : cmp rax, -0xfff ; jae 0x107498 ; ret
0x00000000001074c3 : cmp rax, -0xfff ; jae 0x107507 ; ret
0x0000000000107517 : cmp rax, -0xfff ; jae 0x107528 ; ret
0x0000000000107547 : cmp rax, -0xfff ; jae 0x107558 ; ret
0x0000000000107583 : cmp rax, -0xfff ; jae 0x1075c7 ; ret
0x00000000001075d7 : cmp rax, -0xfff ; jae 0x1075e8 ; ret
0x000000000010760a : cmp rax, -0xfff ; jae 0x10761b ; ret
0x0000000000107637 : cmp rax, -0xfff ; jae 0x107648 ; ret
0x0000000000107667 : cmp rax, -0xfff ; jae 0x107678 ; ret
0x000000000010769a : cmp rax, -0xfff ; jae 0x1076ab ; ret
0x00000000001076d0 : cmp rax, -0xfff ; jae 0x107711 ; ret
0x0000000000107727 : cmp rax, -0xfff ; jae 0x107738 ; ret
0x000000000010775a : cmp rax, -0xfff ; jae 0x10776b ; ret
0x000000000010778a : cmp rax, -0xfff ; jae 0x10779b ; ret
0x00000000001077e0 : cmp rax, -0xfff ; jae 0x107821 ; ret
0x0000000000107837 : cmp rax, -0xfff ; jae 0x107848 ; ret
0x0000000000107870 : cmp rax, -0xfff ; jae 0x1078b1 ; ret
0x00000000001078c7 : cmp rax, -0xfff ; jae 0x1078d8 ; ret
0x00000000001078f7 : cmp rax, -0xfff ; jae 0x107908 ; ret
0x000000000010792a : cmp rax, -0xfff ; jae 0x10793b ; ret
0x0000000000107957 : cmp rax, -0xfff ; jae 0x107968 ; ret
0x0000000000107a53 : cmp rax, -0xfff ; jae 0x107a97 ; ret
0x0000000000107ab0 : cmp rax, -0xfff ; jae 0x107af1 ; ret
0x0000000000107bd0 : cmp rax, -0xfff ; jae 0x107c11 ; ret
0x0000000000107c33 : cmp rax, -0xfff ; jae 0x107c77 ; ret
0x0000000000107c8a : cmp rax, -0xfff ; jae 0x107c9b ; ret
0x0000000000107cb7 : cmp rax, -0xfff ; jae 0x107cc8 ; ret
0x0000000000107ce7 : cmp rax, -0xfff ; jae 0x107cf8 ; ret
0x0000000000107d1a : cmp rax, -0xfff ; jae 0x107d2b ; ret
0x0000000000108273 : cmp rax, -0xfff ; jae 0x1082b7 ; ret
0x00000000001082d3 : cmp rax, -0xfff ; jae 0x108317 ; ret
0x0000000000108327 : cmp rax, -0xfff ; jae 0x108338 ; ret
0x0000000000108357 : cmp rax, -0xfff ; jae 0x108368 ; ret
0x0000000000108387 : cmp rax, -0xfff ; jae 0x108398 ; ret
0x00000000001083b7 : cmp rax, -0xfff ; jae 0x1083c8 ; ret
0x00000000001083ea : cmp rax, -0xfff ; jae 0x1083fb ; ret
0x000000000010841a : cmp rax, -0xfff ; jae 0x10842b ; ret
0x0000000000108447 : cmp rax, -0xfff ; jae 0x108458 ; ret
0x0000000000108477 : cmp rax, -0xfff ; jae 0x108488 ; ret
0x00000000001084a7 : cmp rax, -0xfff ; jae 0x1084b8 ; ret
0x00000000001084d7 : cmp rax, -0xfff ; jae 0x1084e8 ; ret
0x000000000013feca : cmp rax, -0xfff ; jae 0x13fedb ; ret
0x000000000013ff1a : cmp rax, -0xfff ; jae 0x13ff2b ; ret
0x0000000000035757 : cmp rax, -0xfff ; jae 0x35768 ; ret
0x0000000000035e17 : cmp rax, -0xfff ; jae 0x35e28 ; ret
0x000000000006b317 : cmp rax, -0xfff ; jae 0x6b328 ; ret
0x000000000006b34a : cmp rax, -0xfff ; jae 0x6b35b ; ret
0x00000000000bbae7 : cmp rax, -0xfff ; jae 0xbbaf8 ; ret
0x00000000000bebd7 : cmp rax, -0xfff ; jae 0xbebe8 ; ret
0x00000000000bec07 : cmp rax, -0xfff ; jae 0xbec18 ; ret
0x00000000000cb507 : cmp rax, -0xfff ; jae 0xcb518 ; ret
0x00000000000cb6fa : cmp rax, -0xfff ; jae 0xcb70b ; ret
0x00000000000cb7d7 : cmp rax, -0xfff ; jae 0xcb7e8 ; ret
0x00000000000cb860 : cmp rax, -0xfff ; jae 0xcb8a1 ; ret
0x00000000000cb8c0 : cmp rax, -0xfff ; jae 0xcb901 ; ret
0x00000000000cbcf7 : cmp rax, -0xfff ; jae 0xcbd08 ; ret
0x00000000000cc807 : cmp rax, -0xfff ; jae 0xcc818 ; ret
0x00000000000cc9a7 : cmp rax, -0xfff ; jae 0xcc9b8 ; ret
0x00000000000cc9d7 : cmp rax, -0xfff ; jae 0xcc9e8 ; ret
0x00000000000cca37 : cmp rax, -0xfff ; jae 0xcca48 ; ret
0x00000000000cca67 : cmp rax, -0xfff ; jae 0xcca78 ; ret
0x00000000000cca97 : cmp rax, -0xfff ; jae 0xccaa8 ; ret
0x00000000000ccac7 : cmp rax, -0xfff ; jae 0xccad8 ; ret
0x00000000000e9ca7 : cmp rax, -0xfff ; jae 0xe9cb8 ; ret
0x00000000000e9cd7 : cmp rax, -0xfff ; jae 0xe9ce8 ; ret
0x00000000000e9d07 : cmp rax, -0xfff ; jae 0xe9d18 ; ret
0x00000000000e9d37 : cmp rax, -0xfff ; jae 0xe9d48 ; ret
0x00000000000e9d67 : cmp rax, -0xfff ; jae 0xe9d78 ; ret
0x00000000000e9d97 : cmp rax, -0xfff ; jae 0xe9da8 ; ret
0x00000000000e9dc7 : cmp rax, -0xfff ; jae 0xe9dd8 ; ret
0x00000000000e9df7 : cmp rax, -0xfff ; jae 0xe9e08 ; ret
0x00000000000f51c3 : cmp rax, -0xfff ; jae 0xf5207 ; ret
0x00000000000f5223 : cmp rax, -0xfff ; jae 0xf5267 ; ret
0x00000000000f6297 : cmp rax, -0xfff ; jae 0xf62a8 ; ret
0x00000000000f6537 : cmp rax, -0xfff ; jae 0xf6548 ; ret
0x00000000000f6567 : cmp rax, -0xfff ; jae 0xf6578 ; ret
0x00000000000f6637 : cmp rax, -0xfff ; jae 0xf6648 ; ret
0x00000000000f6667 : cmp rax, -0xfff ; jae 0xf6678 ; ret
0x00000000000f6727 : cmp rax, -0xfff ; jae 0xf6738 ; ret
0x00000000000f6757 : cmp rax, -0xfff ; jae 0xf6768 ; ret
0x00000000000f6790 : cmp rax, -0xfff ; jae 0xf67d1 ; ret
0x00000000000f69b0 : cmp rax, -0xfff ; jae 0xf69f1 ; ret
0x00000000000f6a10 : cmp rax, -0xfff ; jae 0xf6a51 ; ret
0x00000000000f6a67 : cmp rax, -0xfff ; jae 0xf6a78 ; ret
0x00000000000f6ef7 : cmp rax, -0xfff ; jae 0xf6f08 ; ret
0x00000000000f7040 : cmp rax, -0xfff ; jae 0xf7081 ; ret
0x00000000000f7097 : cmp rax, -0xfff ; jae 0xf70a8 ; ret
0x00000000000f70c7 : cmp rax, -0xfff ; jae 0xf70d8 ; ret
0x00000000000f70f7 : cmp rax, -0xfff ; jae 0xf7108 ; ret
0x00000000000f7127 : cmp rax, -0xfff ; jae 0xf7138 ; ret
0x00000000000f7157 : cmp rax, -0xfff ; jae 0xf7168 ; ret
0x00000000000f7190 : cmp rax, -0xfff ; jae 0xf71d1 ; ret
0x00000000000f71e7 : cmp rax, -0xfff ; jae 0xf71f8 ; ret
0x00000000000f7217 : cmp rax, -0xfff ; jae 0xf7228 ; ret
0x00000000000f7a47 : cmp rax, -0xfff ; jae 0xf7a58 ; ret
0x00000000000f7a77 : cmp rax, -0xfff ; jae 0xf7a88 ; ret
0x00000000000f7aa7 : cmp rax, -0xfff ; jae 0xf7ab8 ; ret
0x00000000000f7ada : cmp rax, -0xfff ; jae 0xf7aeb ; ret
0x00000000000f80b7 : cmp rax, -0xfff ; jae 0xf80c8 ; ret
0x00000000000f80ea : cmp rax, -0xfff ; jae 0xf80fb ; ret
0x00000000000f8117 : cmp rax, -0xfff ; jae 0xf8128 ; ret
0x00000000000f8147 : cmp rax, -0xfff ; jae 0xf8158 ; ret
0x00000000000f8177 : cmp rax, -0xfff ; jae 0xf8188 ; ret
0x00000000000f81aa : cmp rax, -0xfff ; jae 0xf81bb ; ret
0x00000000000f81d7 : cmp rax, -0xfff ; jae 0xf81e8 ; ret
0x00000000000f8207 : cmp rax, -0xfff ; jae 0xf8218 ; ret
0x00000000000f8237 : cmp rax, -0xfff ; jae 0xf8248 ; ret
0x00000000000fae70 : cmp rax, -0xfff ; jae 0xfaeb1 ; ret
0x00000000000fb1da : cmp rax, -0xfff ; jae 0xfb1eb ; ret
0x00000000000fb953 : cmp rax, -0xfff ; jae 0xfb997 ; ret
0x00000000000fc0a7 : cmp rax, -0xfff ; jae 0xfc0b8 ; ret
0x00000000000fc0d7 : cmp rax, -0xfff ; jae 0xfc0e8 ; ret
0x00000000000fc107 : cmp rax, -0xfff ; jae 0xfc118 ; ret
0x00000000000fc4a7 : cmp rax, -0xfff ; jae 0xfc4b8 ; ret
0x00000000000fc687 : cmp rax, -0xfff ; jae 0xfc698 ; ret
0x00000000000fc6c0 : cmp rax, -0xfff ; jae 0xfc701 ; ret
0x00000000000fc720 : cmp rax, -0xfff ; jae 0xfc761 ; ret
0x00000000000fcc17 : cmp rax, -0xfff ; jae 0xfcc28 ; ret
0x00000000000fccb7 : cmp rax, -0xfff ; jae 0xfccc8 ; ret
0x00000000000fccf3 : cmp rax, -0xfff ; jae 0xfcd37 ; ret
0x00000000000fce47 : cmp rax, -0xfff ; jae 0xfce58 ; ret
0x00000000000fce77 : cmp rax, -0xfff ; jae 0xfce88 ; ret
0x00000000000fceb0 : cmp rax, -0xfff ; jae 0xfcef1 ; ret
0x00000000000fcf07 : cmp rax, -0xfff ; jae 0xfcf18 ; ret
0x00000000000fcf40 : cmp rax, -0xfff ; jae 0xfcf81 ; ret
0x00000000000fcf97 : cmp rax, -0xfff ; jae 0xfcfa8 ; ret
0x00000000000fd307 : cmp rax, -0xfff ; jae 0xfd318 ; ret
0x00000000000fd337 : cmp rax, -0xfff ; jae 0xfd348 ; ret
0x00000000000fd367 : cmp rax, -0xfff ; jae 0xfd378 ; ret
0x00000000000fe8b7 : cmp rax, -0xfff ; jae 0xfe8c8 ; ret
0x00000000000fe8e7 : cmp rax, -0xfff ; jae 0xfe8f8 ; ret
0x0000000000079544 : cmp rax, qword ptr [rdi + 0x10] ; jae 0x79559 ; movzx eax, byte ptr [rax] ; ret
0x00000000001004f3 : cmp rax, rcx ; cmovne rbx, rax ; call 0xfc719
0x000000000007cb78 : cmp rax, rcx ; jae 0x7cba8 ; movzx eax, byte ptr [rax] ; ret
0x000000000011410a : cmp rax, rdx ; jb 0x114107 ; xor eax, eax ; ret
0x0000000000114109 : cmp rax, rdx ; jb 0x114108 ; xor eax, eax ; ret
0x0000000000137b10 : cmp rax, rdx ; je 0x137b29 ; add rsp, 8 ; ret
0x0000000000048044 : cmp rax, rdx ; jne 0x4803f ; xor eax, eax ; ret
0x0000000000087d0c : cmp rax, rdx ; jne 0x87cc8 ; xor eax, eax ; pop rbx ; ret
0x000000000007b200 : cmp rax, rsi ; jae 0x7b1ba ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000007ed54 : cmp rbx, rax ; je 0x7ed67 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000173ba9 : cmp rbx, rbp ; jae 0x173bbe ; call qword ptr [rbx]
0x0000000000173ba9 : cmp rbx, rbp ; jae 0x173bc2 ; call qword ptr [rbx]
0x0000000000173bd8 : cmp rbx, rbp ; jb 0x173bd4 ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000074e8d : cmp rcx, qword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000016f23a : cmp rcx, rax ; jne 0x16f26a ; xor eax, eax ; ret
0x000000000017007a : cmp rcx, rax ; jne 0x1700aa ; xor eax, eax ; ret
0x0000000000173de7 : cmp rdi, 1 ; ja 0x173df6 ; ret
0x000000000004a459 : cmp rdi, r8 ; jbe 0x4a459 ; nop ; pop rbx ; ret
0x00000000000fc570 : cmp rdi, rdx ; ja 0xfc5a6 ; ret
0x00000000000f618f : cmp rdi, rsi ; ja 0xf6186 ; ret
0x0000000000114ae1 : cmp rdx, rax ; jne 0x114ac6 ; ret
0x00000000000ab736 : cmp rdx, rax ; jne 0xab728 ; xor eax, eax ; ret
0x0000000000122ce5 : cmp rdx, rax ; sbb eax, eax ; ret
0x000000000013b5de : cmp rdx, rcx ; je 0x13b5f6 ; ret
0x000000000008e8b7 : cmp rdx, rcx ; jne 0x8e8a6 ; ret
0x000000000008e8b6 : cmp rdx, rcx ; jne 0x8e8a7 ; ret
0x00000000000cd016 : cmp rdx, rcx ; jne 0xcd045 ; ret
0x00000000001141e9 : cmp rdx, rdi ; setae al ; ret
0x0000000000072c99 : cmp rsi, rcx ; jb 0x72c98 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000007bf39 : cmp rsi, rcx ; jne 0x7bf38 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000000481dc : cmp rsi, rdx ; jne 0x481d7 ; xor eax, eax ; ret
0x0000000000110312 : cmp sil, al ; mov eax, edx ; cmove eax, ecx ; ret
0x000000000011033e : cmp sil, dl ; cmovne eax, ecx ; ret
0x000000000014bcf7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014bff7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014cef7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000082476 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x000000000008d9c5 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000014cbf7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0x83480000 ; ret 0x4910
0x000000000016ecb9 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x0000000000147326 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c8f7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c5f7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000334f6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x0000000000194851 : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call qword ptr [rax + 0x20fffda6]
0x0000000000194855 : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp qword ptr [rax]
0x0000000000194791 : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rcx
0x00000000000888a4 : cmpsb byte ptr [rsi], byte ptr [rdi] ; xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x00000000001a5a0d : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; and byte ptr [rdx], dh ; out dx, al ; jmp qword ptr [rcx]
0x00000000000a28a0 : cmpsd dword ptr [rsi], dword ptr [rdi] ; and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000139195 : cmpsd dword ptr [rsi], dword ptr [rdi] ; call 0xffffffffc29d919c
0x0000000000195af1 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; inc dword ptr [rax - 0x52] ; cld ; call rax
0x000000000019ad19 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cli ; jmp rsp
0x00000000001b1289 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; call rsi
0x00000000001ad929 : cmpsd dword ptr [rsi], dword ptr [rdi] ; hlt ; jmp qword ptr [rcx]
0x000000000018834d : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rax]
0x00000000001882cd : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp rsi
0x00000000000038f2 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x49ec
0x0000000000076985 : cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; dec dword ptr [rax - 0x7f] ; ret
0x000000000019485d : cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; inc dword ptr [rax - 0x58] ; std ; call rax
0x00000000001947d9 : cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; jmp rsi
0x00000000001386f4 : cmpsd dword ptr [rsi], dword ptr [rdi] ; sub byte ptr [rax], al ; cmp dword ptr fs:[rax], 0x18 ; je 0x138709 ; ret
0x00000000000887ec : cmpsd dword ptr [rsi], dword ptr [rdi] ; xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x00000000000038f1 : cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x0000000000173b89 : cmpxchg dword ptr [rip + 0x251d38], edx ; je 0x173b9c ; ret
0x00000000001ad5a8 : cqo ; hlt ; jmp qword ptr [rcx]
0x000000000003a693 : cqo ; idiv rsi ; ret
0x00000000000bdff3 : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000134dff : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000029a6e : cwde ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x0000000000036943 : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000000b4d45 : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret 0x8341
0x00000000000d48bf : cwde ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x00000000000da61a : cwde ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x947c
0x00000000001a4b55 : cwde ; add byte ptr [rax], al ; sbb cl, bl ; in eax, dx ; call qword ptr [rsi]
0x000000000008486b : cwde ; add rax, rdx ; jmp rax
0x00000000001b2378 : cwde ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001aa928 : cwde ; and edx, esi ; jmp qword ptr [rcx]
0x00000000001b0488 : cwde ; jb 0x1b0483 ; jmp qword ptr [rcx]
0x000000000019d9b8 : cwde ; jge 0x19d9a7 ; jmp qword ptr [rcx]
0x000000000019d5a8 : cwde ; jne 0x19d597 ; jmp qword ptr [rcx]
0x000000000019c468 : cwde ; jno 0x19c46b ; jmp qword ptr [rdi]
0x00000000001b5208 : cwde ; jrcxz 0x1b5204 ; call rcx
0x00000000000fb92f : cwde ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x00000000001ad138 : cwde ; nop ; hlt ; call qword ptr [rcx]
0x00000000001b0248 : cwde ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x0000000000187098 : cwde ; pop rbx ; out dx, al ; jmp rsp
0x00000000001afaa8 : cwde ; push rbx ; cmc ; call qword ptr [rdx]
0x0000000000003afd : cwde ; ret
0x00000000000b58c4 : cwde ; ret 0x30
0x000000000019e628 : cwde ; ret 0xffe9
0x000000000009ea54 : cwde ; ret 0xfffe
0x000000000012396e : cwde ; shr rax, 4 ; ret
0x00000000001ba7a9 : cwde ; sti ; jmp qword ptr [rdx]
0x00000000001aaa68 : cwde ; sub edx, esi ; jmp rcx
0x00000000000a3de9 : dec byte ptr [r8 + 0x29] ; ret 0x149
0x00000000000a1dd1 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x00000000000a3dea : dec byte ptr [rax + 0x29] ; ret 0x149
0x00000000000a1dd2 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x0000000000049a76 : dec byte ptr [rax + 0x29] ; ret 0x8d49
0x0000000000087cb5 : dec byte ptr [rax + 0x39] ; ret 0x3574
0x0000000000120b1a : dec byte ptr [rax + 0xf] ; ret 0x8d48
0x0000000000087007 : dec byte ptr [rax - 0x77] ; and byte ptr [rax + 0x31], cl ; ret 0x93be
0x0000000000059008 : dec byte ptr [rax - 0x77] ; fisttp word ptr [rax - 0x77] ; ret 0x8b48
0x000000000008acb9 : dec byte ptr [rax - 0x77] ; ret
0x000000000003e044 : dec byte ptr [rbp + 0x29] ; fimul word ptr [rcx + 0x19] ; ret 0xed85
0x00000000000d3d67 : dec byte ptr [rbx - 0x7c97dba4] ; ret 0x8d01
0x000000000003919a : dec byte ptr [rcx + rcx*4 - 0x11] ; call r14
0x000000000005e743 : dec dword ptr [r8 + 0x39] ; ret
0x0000000000080c7c : dec dword ptr [r8 - 0x7b] ; ret 0x840f
0x000000000009df47 : dec dword ptr [r9 - 0x76b706b9] ; clc ; ret
0x0000000000073f79 : dec dword ptr [rax + 0x29] ; ret
0x00000000000a3f6a : dec dword ptr [rax + 0x29] ; ret 0x149
0x00000000000a1f12 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x000000000003e19b : dec dword ptr [rax + 0x29] ; ret 0x8948
0x00000000000afde8 : dec dword ptr [rax + 0x29] ; ret 0x894c
0x00000000000d477c : dec dword ptr [rax + 0x29] ; ret 0x8b48
0x000000000007f2cd : dec dword ptr [rax + 0x29] ; ret 0x8d48
0x00000000000469a5 : dec dword ptr [rax + 0x29] ; ret 0x8d49
0x00000000000832bd : dec dword ptr [rax + 0x29] ; ret 0x8d4c
0x000000000005e744 : dec dword ptr [rax + 0x39] ; ret
0x000000000005c53f : dec dword ptr [rax + 0x39] ; ret 0x840f
0x0000000000061b3f : dec dword ptr [rax + 0x39] ; ret 0x940f
0x000000000018897f : dec dword ptr [rax + 0x4a] ; hlt ; call rax
0x0000000000188daf : dec dword ptr [rax + 0x50] ; hlt ; call rax
0x0000000000063cd9 : dec dword ptr [rax + 0x63] ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x00000000000c570f : dec dword ptr [rax + 0x63] ; fisttp dword ptr [rax + 0x39] ; ret
0x000000000005c2e7 : dec dword ptr [rax + 0x63] ; ret
0x00000000000ed429 : dec dword ptr [rax + 0x63] ; ret 0x8d48
0x00000000001873eb : dec dword ptr [rax + 0x6b] ; int1 ; call rax
0x000000000006c6bb : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x000000000006ce3f : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x8508
0x000000000008cca9 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x00000000001283f4 : dec dword ptr [rax + 0xf] ; mov esi, 0x83480153 ; ret
0x000000000008ee04 : dec dword ptr [rax + 0xf] ; mov esp, 0x440f48c7 ; ret 0xc083
0x000000000003a9f2 : dec dword ptr [rax + 0xf] ; ret
0x00000000000f61bb : dec dword ptr [rax + 0xf] ; ret 0x66c3
0x0000000000086ea1 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000051d46 : dec dword ptr [rax + 0xf] ; ret 0x8d48
0x00000000001423c6 : dec dword ptr [rax + 0xf] ; ret 0x8d4c
0x000000000002d909 : dec dword ptr [rax + 0xf] ; ret 0x90c3
0x000000000005eba5 : dec dword ptr [rax + 1] ; ret
0x00000000000360b3 : dec dword ptr [rax - 0x2d] ; ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x000000000004b646 : dec dword ptr [rax - 0x39] ; ret
0x00000000000cd67c : dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000000bf80c : dec dword ptr [rax - 0x3f] ; out dx, eax ; add cl, byte ptr [rax - 0x46] ; ret
0x00000000000fb92d : dec dword ptr [rax - 0x68] ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x00000000000fdd34 : dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00000000000abfb6 : dec dword ptr [rax - 0x73] ; cld ; pop rbx ; ret
0x00000000001115ed : dec dword ptr [rax - 0x75] ; cmp byte ptr [rax - 0x77], cl ; ret
0x000000000010e8fe : dec dword ptr [rax - 0x75] ; cmp r9b, r13b ; ret
0x000000000010220d : dec dword ptr [rax - 0x75] ; jge 0x102217 ; call rbx
0x00000000001024c0 : dec dword ptr [rax - 0x75] ; jge 0x1024ca ; call rbx
0x0000000000104058 : dec dword ptr [rax - 0x75] ; jge 0x104062 ; call rbx
0x00000000000eaf69 : dec dword ptr [rax - 0x75] ; jge 0xeaefc ; call r12
0x00000000000f3653 : dec dword ptr [rax - 0x75] ; jl 0xf3684 ; call 0x1f8b0
0x0000000000048d67 : dec dword ptr [rax - 0x75] ; pop rbp ; enter -0x74b8, 0x14 ; ret
0x000000000008176f : dec dword ptr [rax - 0x75] ; push rax ; or dh, dh ; ret 0x7404
0x00000000000e197d : dec dword ptr [rax - 0x75] ; push rbp ; adc byte ptr [rax + 0x39], cl ; ret 0x2575
0x000000000007a7d1 : dec dword ptr [rax - 0x75] ; push rbx ; sub cl, ch ; ret 0xfffe
0x00000000000b2358 : dec dword ptr [rax - 0x77] ; call 0x4ccdb775
0x000000000008eaa8 : dec dword ptr [rax - 0x77] ; clc ; ret
0x00000000000fc60a : dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000013b7bc : dec dword ptr [rax - 0x77] ; fimul word ptr [rax - 0x77] ; out dx, eax ; call rcx
0x000000000013a099 : dec dword ptr [rax - 0x77] ; fimul word ptr [rcx + rcx*4 - 1] ; call r14
0x00000000001735f1 : dec dword ptr [rax - 0x77] ; fistp word ptr [rbx - 0x17] ; lodsd eax, dword ptr [rsi] ; ret 0xffea
0x00000000000b7583 : dec dword ptr [rax - 0x77] ; fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000020fd5 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret 0xffe8
0x000000000017239a : dec dword ptr [rax - 0x77] ; out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x00000000001339e0 : dec dword ptr [rax - 0x77] ; out dx, eax ; call rax
0x000000000002233e : dec dword ptr [rax - 0x77] ; ret
0x00000000000fc463 : dec dword ptr [rax - 0x77] ; ret 0x1777
0x00000000000fc55e : dec dword ptr [rax - 0x77] ; ret 0x1c77
0x00000000000e9ea1 : dec dword ptr [rax - 0x77] ; ret 0x2977
0x00000000000f2c73 : dec dword ptr [rax - 0x77] ; ret 0x3145
0x000000000005eb9b : dec dword ptr [rax - 0x77] ; ret 0x348
0x0000000000076ed3 : dec dword ptr [rax - 0x77] ; ret 0x38b
0x000000000005ecca : dec dword ptr [rax - 0x77] ; ret 0x38e9
0x00000000000dffbe : dec dword ptr [rax - 0x77] ; ret 0x448b
0x0000000000036b1b : dec dword ptr [rax - 0x77] ; ret 0x4577
0x00000000000369c1 : dec dword ptr [rax - 0x77] ; ret 0x4f77
0x00000000000cd70c : dec dword ptr [rax - 0x77] ; ret 0x6b8
0x000000000002facb : dec dword ptr [rax - 0x77] ; ret 0x6fe9
0x000000000011d1ba : dec dword ptr [rax - 0x77] ; ret 0x8348
0x000000000013f8e3 : dec dword ptr [rax - 0x77] ; ret 0x840f
0x000000000002f33f : dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000699f2 : dec dword ptr [rax - 0x77] ; ret 0x85e8
0x00000000000355a3 : dec dword ptr [rax - 0x77] ; ret 0x870f
0x0000000000057aa2 : dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000096456 : dec dword ptr [rax - 0x77] ; ret 0x8949
0x000000000004d8d5 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000134596 : dec dword ptr [rax - 0x77] ; ret 0x8d48
0x00000000000cf7a8 : dec dword ptr [rax - 0x77] ; ret 0x8d49
0x000000000006aed0 : dec dword ptr [rax - 0x77] ; ret 0x9ce9
0x00000000001426cf : dec dword ptr [rax - 0x77] ; ret 0xb60f
0x000000000005935b : dec dword ptr [rax - 0x77] ; ret 0xb848
0x00000000000c901c : dec dword ptr [rax - 0x77] ; ret 0xbb
0x000000000005dfac : dec dword ptr [rax - 0x77] ; ret 0xbbe9
0x00000000001345d5 : dec dword ptr [rax - 0x77] ; ret 0xbfeb
0x0000000000094d25 : dec dword ptr [rax - 0x77] ; ret 0xc031
0x00000000000dc580 : dec dword ptr [rax - 0x77] ; ret 0xc148
0x0000000000086e0e : dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x000000000009c81c : dec dword ptr [rax - 0x77] ; ret 0xc76
0x000000000002fb34 : dec dword ptr [rax - 0x77] ; ret 0xf0e9
0x000000000002100a : dec dword ptr [rax - 0x77] ; ret 0xf8e9
0x0000000000100aee : dec dword ptr [rax - 0x77] ; ret 0xff31
0x000000000012e04a : dec dword ptr [rax - 0x77] ; ret 0xffb8
0x0000000000021002 : dec dword ptr [rax - 0x77] ; ret 0xffe9
0x0000000000080c7d : dec dword ptr [rax - 0x7b] ; ret 0x840f
0x00000000000bb9cd : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x000000000011521f : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8948
0x00000000000c591d : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x00000000000f42b4 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xa
0x00000000000e0065 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret 0x8445
0x000000000010f310 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret
0x0000000000088c90 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rax + rbp + 0x48], 0x89 ; ret 0x8948
0x000000000012a84f : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + 0x31], 0xc0 ; pop rbx ; ret
0x00000000000fe6b0 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rbx + 0x48], 0x39 ; ret
0x000000000006dc8c : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdi*2 + 0x48], 0x89 ; ret
0x000000000006f557 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdx*2 + 0x48], 0x89 ; ret
0x0000000000105516 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rcx + rdi*2 + 0x48], 0x39 ; ret
0x000000000010851f : dec dword ptr [rax - 0x7b] ; sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret
0x0000000000094fb0 : dec dword ptr [rax - 0x7d] ; clc ; add dword ptr [rax - 0x77], ecx ; ret
0x000000000013fad6 : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000013f8df : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x00000000000312f1 : dec dword ptr [rax - 0x7d] ; ret
0x000000000007f27f : dec dword ptr [rax - 0x7d] ; ret 0x4007
0x0000000000025c5b : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000d8931 : dec dword ptr [rax - 0x7d] ; ret 0x4804
0x00000000001358c9 : dec dword ptr [rax - 0x7d] ; ret 0x4807
0x000000000004f775 : dec dword ptr [rax - 0x7d] ; ret 0x4820
0x00000000000d5a95 : dec dword ptr [rax - 0x7d] ; ret 0x4901
0x00000000000be926 : dec dword ptr [rax - 0x7d] ; ret 0x4909
0x0000000000120f2b : dec dword ptr [rax - 0x7d] ; ret 0x4a01
0x0000000000060c97 : dec dword ptr [rax - 0x7d] ; ret 0xb908
0x00000000000cf861 : dec dword ptr [rax - 0x7d] ; ret 0xe902
0x0000000000076988 : dec dword ptr [rax - 0x7f] ; ret
0x000000000015a0fc : dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000018176b : dec dword ptr [rax] ; and ebp, ebx ; call qword ptr [rbx]
0x000000000018174f : dec dword ptr [rax] ; and ebx, ebp ; call qword ptr [rbx]
0x000000000018738f : dec dword ptr [rax] ; ret
0x000000000018751b : dec dword ptr [rax] ; ret 0xfffd
0x000000000018933b : dec dword ptr [rbp + 3] ; cmc ; call qword ptr [rax]
0x0000000000189337 : dec dword ptr [rbp + 3] ; cmc ; dec dword ptr [rbp + 3] ; cmc ; call qword ptr [rax]
0x00000000000f8663 : dec dword ptr [rbp + rcx*4 + 0x24] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x00000000000eee55 : dec dword ptr [rbp + rcx*4 + 0x25] ; ret
0x00000000001378d0 : dec dword ptr [rbp + rcx*4 + 0x4c] ; and al, 0x2a ; call qword ptr [rax]
0x000000000019affb : dec dword ptr [rbp + rdi*8 - 0xb5c0000] ; cli ; call rsp
0x0000000000186673 : dec dword ptr [rbp - 0x1f] ; in eax, dx ; jmp qword ptr [rbx]
0x00000000001886c7 : dec dword ptr [rbp - 0x33] ; jmp rax
0x00000000001026ce : dec dword ptr [rbp - 0x75] ; push rbp ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x00000000000d3c20 : dec dword ptr [rbp - 0x77] ; ret 0x3145
0x00000000000edb1e : dec dword ptr [rbp - 0x77] ; ret 0x8948
0x0000000000097f8f : dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x000000000013cf29 : dec dword ptr [rbx + 0x148885d] ; ret 0x8948
0x00000000000f5322 : dec dword ptr [rbx + 0x438d0455] ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000ddfaf : dec dword ptr [rbx + 0x438d047d] ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000142ffd : dec dword ptr [rbx + 0x480c2444] ; add esp, 0x38 ; ret
0x0000000000199e0b : dec dword ptr [rbx + 0x60d40001] ; clc ; jmp rsp
0x00000000000472f5 : dec dword ptr [rbx + rcx*4 + 0x35] ; push rbx ; ret
0x00000000000d4d58 : dec dword ptr [rbx + rcx*4 + 0x55] ; test al, 0x89 ; ret
0x0000000000199beb : dec dword ptr [rbx + rdx*8 + 0x1c240001] ; clc ; jmp rsp
0x00000000000dadf9 : dec dword ptr [rbx - 0x7ac7dbbc] ; ror byte ptr [rdi], 0x85 ; ret 0xfff8
0x00000000000ad595 : dec dword ptr [rbx - 0x7cb7fbad] ; ret
0x00000000001870a3 : dec dword ptr [rbx*2 + 0x5e1cffee] ; out dx, al ; jmp rsp
0x000000000004dbce : dec dword ptr [rcx + 0x29] ; ret
0x00000000000d2659 : dec dword ptr [rcx + 0x29] ; ret 0x14eb
0x000000000004d79c : dec dword ptr [rcx + 0x39] ; ret
0x0000000000082242 : dec dword ptr [rcx + 0x39] ; ret 0x4a74
0x000000000004df12 : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x000000000010c5db : dec dword ptr [rcx + 0x415d5bd8] ; pop rsp ; pop r13 ; ret
0x000000000006d312 : dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x00000000000fae11 : dec dword ptr [rcx + 0x458949ef] ; or al, ch ; ret
0x000000000002ebb6 : dec dword ptr [rcx + 0x63] ; add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000007112f : dec dword ptr [rcx + 0xd99e8d6] ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x710d3
0x00000000000533a9 : dec dword ptr [rcx + 0xf50244c] ; ret 0x4c8b
0x000000000019a27b : dec dword ptr [rcx + rcx + 2] ; add byte ptr [rcx + rdx*2 - 7], dh ; call rsp
0x0000000000080ead : dec dword ptr [rcx + rcx*4 + 0x54] ; and al, 0x20 ; call qword ptr [rax]
0x00000000000befb0 : dec dword ptr [rcx + rcx*4 - 0x1e] ; mov rsi, r15 ; call 0x6b269
0x000000000004b349 : dec dword ptr [rcx + rcx*4 - 0xa] ; mov rdi, r13 ; call rax
0x000000000013b8e6 : dec dword ptr [rcx + rcx*4 - 0xa] ; mov rdi, rbp ; call r12
0x000000000005f0bd : dec dword ptr [rcx + rcx*4 - 1] ; call 0x7b2d6
0x0000000000196e43 : dec dword ptr [rcx + rdi*4 - 0x53ac0000] ; in eax, dx ; jmp rsp
0x0000000000197783 : dec dword ptr [rcx + rdi*8 + 0x25640000] ; out dx, eax ; jmp rsp
0x000000000005a685 : dec dword ptr [rcx - 0x3f] ; sti ; add al, byte ptr [rcx - 0x77] ; ret 0x144
0x000000000005c5ba : dec dword ptr [rcx - 0x60f73] ; dec dword ptr [rax + 0x39] ; ret 0x840f
0x00000000000f8d43 : dec dword ptr [rcx - 0x73] ; push rsi ; add dword ptr [rax + 0x39], ecx ; ret 0xc72
0x0000000000102045 : dec dword ptr [rcx - 0x75] ; call rbx
0x00000000001024ce : dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x00000000001020d8 : dec dword ptr [rcx - 0x75] ; jge 0x1020e2 ; call rbx
0x00000000001021ff : dec dword ptr [rcx - 0x75] ; jge 0x102209 ; call rbx
0x0000000000102342 : dec dword ptr [rcx - 0x75] ; jge 0x10234c ; call rbx
0x00000000001024b2 : dec dword ptr [rcx - 0x75] ; jge 0x1024bc ; call rbx
0x0000000000103cd0 : dec dword ptr [rcx - 0x75] ; jge 0x103cda ; call rbx
0x0000000000103df8 : dec dword ptr [rcx - 0x75] ; jge 0x103e02 ; call rbx
0x0000000000103f3b : dec dword ptr [rcx - 0x75] ; jge 0x103f45 ; call rbx
0x000000000010403c : dec dword ptr [rcx - 0x75] ; jge 0x104046 ; call rbx
0x00000000000f3405 : dec dword ptr [rcx - 0x75] ; push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x000000000010ecb3 : dec dword ptr [rcx - 0x75] ; push rdi ; sbb byte ptr [rax - 0x77], cl ; ret
0x00000000000ee6dc : dec dword ptr [rcx - 0x75] ; push rsi ; sub byte ptr [rax - 0x7d], cl ; ret
0x00000000001425a4 : dec dword ptr [rcx - 0x75] ; sub byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x000000000009df48 : dec dword ptr [rcx - 0x76b706b9] ; clc ; ret
0x0000000000120b17 : dec dword ptr [rcx - 0x77] ; dec byte ptr [rax + 0xf] ; ret 0x8d48
0x0000000000120c0c : dec dword ptr [rcx - 0x77] ; dec byte ptr [rax - 0x77] ; ret
0x0000000000048885 : dec dword ptr [rcx - 0x77] ; ret
0x00000000000e33ad : dec dword ptr [rcx - 0x77] ; ret 0x448b
0x000000000002bc47 : dec dword ptr [rcx - 0x77] ; ret 0x87e9
0x00000000000dd82f : dec dword ptr [rcx - 0x77] ; ret 0x8949
0x000000000004ea4e : dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x0000000000022f80 : dec dword ptr [rcx - 0x77] ; ret 0x9e9
0x000000000006629f : dec dword ptr [rcx - 0x7d] ; ret
0x0000000000066288 : dec dword ptr [rcx - 0x7d] ; ret 0x4504
0x00000000000d7dc8 : dec dword ptr [rcx - 0x7d] ; ret 0x4c20
0x000000000004503c : dec dword ptr [rcx] ; ret
0x0000000000109e1e : dec dword ptr [rcx] ; setbe al ; ret
0x0000000000106c92 : dec dword ptr [rdi] ; add byte ptr [rax], al ; or eax, edi ; ret
0x000000000011ceed : dec dword ptr [rdi] ; lahf ; ret 0xc2e9
0x0000000000079872 : dec dword ptr [rdi] ; lds r11d, ptr [r11 + 0x5d] ; pop r12 ; ret
0x000000000010a66d : dec dword ptr [rdi] ; mov bh, 4 ; js 0x10a5fe ; loopne 0x10a67e ; ret
0x000000000002df46 : dec dword ptr [rdi] ; mov bh, 4 ; js 0x2ded7 ; loopne 0x2df57 ; ret
0x0000000000046264 : dec dword ptr [rdi] ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000009dad5 : dec dword ptr [rdi] ; mov dh, 0x45 ; ret
0x000000000009dac2 : dec dword ptr [rdi] ; mov dh, 0x45 ; ret 0x8349
0x0000000000188a9f : dec dword ptr [rdi] ; push rax ; hlt ; lcall ptr [rcx] ; push rax ; hlt ; jmp qword ptr [rbx]
0x0000000000023b8b : dec dword ptr [rdi] ; ret 0x41c3
0x00000000001150b5 : dec dword ptr [rdi] ; ret 0x8348
0x00000000000b4eba : dec dword ptr [rdi] ; ret 0xd0f7
0x0000000000074091 : dec dword ptr [rdi] ; test ah, al ; add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x0000000000068417 : dec dword ptr [rdi] ; test byte ptr [rax + rax - 0x7cb80000], ah ; ret
0x000000000013d839 : dec dword ptr [rdi] ; test byte ptr [rax], ah ; add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000d90d0 : dec dword ptr [rdi] ; test byte ptr [rcx - 0x7cfffffb], bh ; ret 0x3902
0x000000000012264e : dec dword ptr [rdi] ; test byte ptr [rcx], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x0000000000137c3a : dec dword ptr [rdi] ; test byte ptr [rdi - 0x7d000000], al ; ret 0x3901
0x000000000009cfa8 : dec dword ptr [rdi] ; test byte ptr [rdi - 0x8fffff5], bh ; ret 0
0x000000000009cabb : dec dword ptr [rdi] ; test byte ptr [rdi - 0x8fffff6], ch ; ret 0
0x000000000009cac7 : dec dword ptr [rdi] ; test byte ptr [rsi - 0x8fffff6], cl ; ret 0
0x0000000000121d3c : dec dword ptr [rdi] ; test byte ptr [rsp + rax - 0x7cb80000], ch ; ret 0x4104
0x00000000001719d0 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000d6cc1 : dec dword ptr [rdi] ; test dword ptr [rsi], edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb04
0x00000000001209b3 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0x2041
0x00000000000e9f1a : dec dword ptr [rdi] ; xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rdi], 0x47 ; ret 0x90c3
0x0000000000072f9b : dec dword ptr [rdi] ; xchg eax, ebp ; sal bh, 0xd8 ; ret
0x00000000000e2033 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x8949
0x0000000000080aa5 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xb2e9
0x00000000000e282a : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xb60f
0x00000000000bb530 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd021
0x00000000000e00f0 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd609
0x0000000000075ebe : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000000e340d : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xf44
0x000000000005238d : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xfa80
0x000000000010560f : dec dword ptr [rdi] ; xchg edx, ecx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xbc41
0x00000000000cd56d : dec dword ptr [rdi] ; xchg esp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000005c0f7 : dec dword ptr [rdx + 0x63] ; adc al, 0xa0 ; add rax, rdx ; jmp rax
0x00000000001889df : dec dword ptr [rip + 0x17fff44e] ; hlt ; jmp qword ptr [rcx]
0x0000000000188b03 : dec dword ptr [rip + 0x17fff451] ; push rcx ; hlt ; jmp qword ptr [rcx]
0x000000000018667f : dec dword ptr [rsi - 0x1d] ; in eax, dx ; dec dword ptr [rsi - 0x1d] ; in eax, dx ; jmp qword ptr [rbx]
0x0000000000186683 : dec dword ptr [rsi - 0x1d] ; in eax, dx ; jmp qword ptr [rbx]
0x000000000019afa3 : dec dword ptr [rsp + rax + 2] ; add ah, dl ; loop 0x19afad ; call rsp
0x000000000018be2f : dec eax ; add ebx, edi ; call rax
0x00000000001866b3 : dec ebx ; fsubp st(5) ; jmp qword ptr [rbx]
0x0000000000049dfd : dec ecx ; ret
0x000000000019aac3 : dec esp ; add al, byte ptr [r8] ; movsb byte ptr [rdi], byte ptr [rsi] ; push rdi ; cli ; jmp rsp
0x00000000001983ab : dec esp ; add qword ptr [r8], rax ; adc al, 0x6a ; jmp rsp
0x000000000019ab3b : dec esp ; add r8b, byte ptr [r8] ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rbx ; cli ; jmp rsp
0x0000000000197e23 : dec esp ; and dword ptr [rcx], eax ; add ah, dl ; jnp 0x197e24 ; jmp rsp
0x00000000001977ab : dec esp ; cli ; add byte ptr [rax], al ; xor al, 0x29 ; out dx, eax ; jmp rsp
0x000000000019889b : dec esp ; jo 0x1988a8 ; add byte ptr [rax + rdi*8 - 0xb], ah ; jmp rsp
0x000000000019748b : dec esp ; loope 0x197497 ; add ah, ah ; out dx, al ; jmp rsp
0x0000000000199653 : dec esp ; mov al, 1 ; add byte ptr [rdx + rcx*2 - 9], ah ; jmp rsp
0x0000000000196e8b : dec esp ; mov ebx, 0xb3b40000 ; in eax, dx ; jmp rsp
0x0000000000188133 : dec esp ; mov ebx, dr0 ; jmp qword ptr [rdx]
0x0000000000198ea3 : dec esp ; mov word ptr [rcx], es ; add byte ptr [rdx + rcx*4 - 0xa], dl ; jmp rsp
0x000000000019ae53 : dec esp ; pop rax ; add al, byte ptr [rax] ; xchg eax, esp ; leave ; cli ; jmp rsp
0x000000000019ad13 : dec esp ; push rcx ; add al, byte ptr [rax] ; adc al, 0xa7 ; cli ; jmp rsp
0x00000000001998ab : dec esp ; ret 1
0x00000000001971b3 : dec esp ; rol byte ptr [rax], 1 ; add byte ptr [rbp + rdx - 0x12], dl ; jmp rsp
0x00000000001995d3 : dec esp ; scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; test byte ptr [rdx - 9], al ; jmp rsp
0x000000000019a74b : dec esp ; sub al, byte ptr [rdx] ; add byte ptr [rsp + rsi*8], al ; stc ; jmp rsp
0x0000000000196953 : dec esp ; xchg eax, esi ; add byte ptr [rax], al ; sbb al, 0xeb ; jmp rsp
0x00000000000a3f69 : dec qword ptr [r8 + 0x29] ; ret 0x149
0x00000000000a1f11 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x000000000006c846 : dec qword ptr [r8 + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x0000000000025c5a : dec qword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000d7dc7 : dec qword ptr [rcx - 0x7d] ; ret 0x4c20
0x00000000000dbb1d : div byte ptr [rax - 0xa] ; ret
0x00000000000960bf : div byte ptr [rbp + 0xa] ; jmp 0x9608a
0x000000000008ae92 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000009e2f1 : div byte ptr [rbp - 0x14] ; mov qword ptr [rdx], rcx ; ret
0x00000000000fa407 : div byte ptr [rcx] ; shr al, 0x71 ; ret
0x0000000000093bc4 : div byte ptr [rdx] ; add byte ptr [rcx + 0x39], cl ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x0000000000186210 : div byte ptr [rsi - 0x13] ; jmp rdi
0x00000000000640d4 : div dh ; ret
0x0000000000053949 : div dh ; ret 0x4050
0x0000000000111e43 : div dword ptr [rcx] ; shr al, 0x65 ; ret
0x00000000000f6191 : div dword ptr [rdi - 0x14] ; ret
0x000000000006e1d0 : div ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000780bc : div ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116f5f : div ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000780ff : div ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011705c : div ebx ; pop rbx ; pop rbp ; ret
0x0000000000050485 : div ecx ; add eax, r8d ; ret
0x00000000001a9d69 : div ecx ; call rsi
0x00000000000aa2aa : div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000001b96d1 : div edi ; call qword ptr [rdx]
0x000000000006e6d6 : div esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006e1cf : div rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000780bb : div rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116f5e : div rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000780fe : div rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011705b : div rbx ; pop rbx ; pop rbp ; ret
0x000000000001f977 : enter -0x1401, -0x3b ; ret
0x00000000000d0bc1 : enter -0x14fe, -0x75 ; nop dword ptr [rax] ; ret
0x00000000000ee290 : enter -0x1d2d, -0x7b ; ret 0x850f
0x0000000000045a13 : enter -0x1f3f, 0x1e ; or eax, edx ; ret
0x000000000009e1fe : enter -0x208c, -0xd ; ret
0x00000000000a0861 : enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x00000000000e7364 : enter -0x2e89, 0x39 ; ret
0x000000000001f967 : enter -0x2eff, 0x39 ; ret 0xffb8
0x000000000012f161 : enter -0x3eb8, -0x1f ; or byte ptr [rax - 0x77], cl ; ret 0x314c
0x00000000000c67c6 : enter -0x3f97, -0x70 ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x0000000000171b44 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x000000000018be30 : enter -0x4ff, -1 ; rol byte ptr [rcx], 1 ; sti ; jmp rax
0x00000000000a3de6 : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x149
0x00000000000a1dce : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x00000000000a3f66 : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x149
0x00000000000a1f0e : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x0000000000034b58 : enter -0x73f, 0x1f ; not eax ; and eax, edx ; ret
0x0000000000048d6b : enter -0x74b8, 0x14 ; ret
0x000000000018890d : enter -0xd, -0x79 ; fdiv st(3) ; jmp rdx
0x00000000001a78c8 : enter -0xfc3, -1 ; ret
0x0000000000102124 : enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x0000000000131aa7 : enter 0, 0 ; call rax
0x0000000000131a69 : enter 0, 0 ; jmp rcx
0x000000000012c776 : enter 0, 0 ; lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x000000000007cb7a : enter 0x2373, 0xf ; mov dh, 0 ; ret
0x0000000000034cac : enter 0x280f, -0x3f ; ret
0x000000000004a0fe : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000012b0d4 : enter 0x29cc, 0 ; pop rbx ; ret
0x000000000008a6fd : enter 0x31c3, -0x40 ; ret
0x000000000007c4d3 : enter 0x3d83, -0x3b ; ret 0x34
0x000000000008702e : enter 0x415d, 0x5c ; pop r13 ; pop r14 ; ret
0x0000000000134917 : enter 0x4189, 0x48 ; mov eax, 1 ; ret
0x0000000000134874 : enter 0x4189, 0x54 ; mov eax, 1 ; ret
0x0000000000134944 : enter 0x4189, 0x58 ; mov eax, 1 ; ret
0x000000000019c0a6 : enter 0x4201, 0xe ; rol byte ptr [rcx], 3 ; ret 0xe01
0x00000000001351eb : enter 0x4289, 0x10 ; mov eax, 1 ; ret
0x00000000001350cb : enter 0x4289, 0xc ; mov eax, 1 ; ret
0x000000000007e948 : enter 0x4801, -0x77 ; pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000001b15 : enter 0x59e7, 0x5b ; ret 0x2a63
0x000000000008709b : enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000005b725 : enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000104208 : enter 0x72e8, -0x7b ; cli ; dec dword ptr [rax + 0x39] ; ret
0x00000000001852bc : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000003a67d : enter 0x948, -0x30 ; ret
0x00000000000e86f9 : enter 0xf41, -0x62 ; ret 0x844
0x000000000016ed66 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000089121 : enter 0xf66, -0x15 ; ret
0x0000000000149ecc : enter 0xf66, 0x3a ; movsxd rcx, ecx ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x0000000000034ca8 : enter 0xf66, 0x6e ; enter 0x280f, -0x3f ; ret
0x00000000000a7644 : enter 5, 0 ; ret
0x00000000001a8afd : fadd dword ptr [rax] ; add byte ptr [rax], ah ; and dh, cl ; jmp rcx
0x0000000000116326 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000007b167 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x000000000007b633 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x00000000001046b0 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000045ce6 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000001a8b65 : fadd dword ptr [rax] ; add byte ptr [rax], bl ; and esi, ecx ; jmp qword ptr [rcx]
0x00000000001152a5 : fadd dword ptr [rax] ; leave ; ret
0x000000000008243f : fadd dword ptr [rbp - 0x78] ; or al, 0x18 ; mov rax, r8 ; pop rbx ; ret
0x000000000013cc9d : fadd dword ptr [rbx - 0x76b7f820] ; ret
0x00000000000708c0 : fadd dword ptr [rcx + rcx*4 + 0x65] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001bbb83 : fadd dword ptr [rcx] ; add esi, ebp ; add al, byte ptr [rax] ; ret
0x0000000000074c57 : fadd dword ptr [rdi + rcx + 0x47] ; ret
0x00000000000c56fe : fadd qword ptr [r9] ; ret
0x0000000000197395 : fadd qword ptr [rax] ; add byte ptr [rax + rdx*2], dh ; out dx, al ; call rsp
0x00000000000c56ff : fadd qword ptr [rcx] ; ret
0x00000000000bb097 : fadd st(1) ; call 0xffffffff89cdd9c2
0x00000000000bb401 : fadd st(1) ; call 0xffffffff89cddd2c
0x0000000000172168 : fadd st(3) ; nop word ptr [rax + rax] ; ret
0x00000000001700be : fadd st(3) ; ret
0x0000000000105570 : fadd st(6) ; add al, byte ptr [rax] ; pop rbx ; ret
0x000000000016e8b1 : fbld dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000017391c : fbstp dword ptr [rbp - 0x17] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c1d37 : fcmovb st(0), st(1) ; clc ; add eax, 0x2907fec1 ; ret 0x8944
0x00000000000bcc8d : fcmovb st(0), st(1) ; cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x00000000001848f8 : fcmovb st(0), st(3) ; ret
0x00000000000368ad : fcmovnb st(0), st(7) ; cmp byte ptr [rax], al ; mov eax, edx ; ret
0x000000000002c4ae : fcom dword ptr [rax - 0x3ece49f1] ; ret 0x4809
0x00000000001b03ac : fcom qword ptr [rax + 1] ; add byte ptr [rax + 0x71], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001b06ac : fcom qword ptr [rbx + 1] ; add byte ptr [rax], dh ; jbe 0x1b06af ; jmp qword ptr [rcx]
0x00000000001020c8 : fcom st(0), st(7) ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000033c2a : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002a837 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000006df2b : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000326ac : fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000083a64 : fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x0000000000185679 : fcomp dword ptr [rdx + 0x21] ; ret
0x000000000010173b : fcomp dword ptr [rdx + 0x5b] ; ret
0x00000000001afd38 : fcomp dword ptr [rdx - 0xb] ; jmp qword ptr [rcx]
0x00000000001838e0 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x0000000000194fa8 : fcomp qword ptr [rsp + rdi*8 - 1] ; insb byte ptr [rdi], dx ; pop rsp ; cld ; call qword ptr [rdx]
0x000000000018670c : fcomp st(0), st(7) ; in eax, dx ; jmp qword ptr [rbx]
0x00000000001adf88 : fcomp st(2) ; hlt ; call qword ptr [rbx]
0x000000000009e200 : fcompi st(3) ; ret
0x00000000001ae1f1 : fcompi st(4) ; call qword ptr [rbx]
0x00000000001ae1c1 : fcompi st(4) ; jmp qword ptr [rcx]
0x00000000001b8c99 : fcompi st(7) ; jmp rdi
0x000000000006abf5 : fdiv dword ptr [rax + rbx + 0x48] ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001bb678 : fdiv dword ptr [rax - 8] ; call qword ptr [rax]
0x00000000001b0578 : fdiv dword ptr [rbx - 0xb] ; jmp qword ptr [rcx]
0x00000000001b03f8 : fdiv dword ptr [rcx - 0xb] ; jmp qword ptr [rcx]
0x00000000001ac6a9 : fdiv st(3) ; call qword ptr [rdi]
0x00000000001ac6f9 : fdiv st(3) ; call qword ptr [rdx]
0x00000000001888f9 : fdiv st(3) ; call rdi
0x00000000001ae9a8 : fdiv st(3) ; hlt ; jmp qword ptr [rsi]
0x0000000000188939 : fdiv st(3) ; jmp rbx
0x0000000000188911 : fdiv st(3) ; jmp rdx
0x00000000000ba7f4 : fdiv st(3) ; ret
0x00000000001949f9 : fdiv st(3), st(0) ; inc dword ptr [rax] ; fdivp st(3) ; jmp rax
0x00000000001949d9 : fdiv st(3), st(0) ; jmp qword ptr [rax]
0x0000000000194a19 : fdiv st(3), st(0) ; jmp rax
0x00000000001949b9 : fdiv st(3), st(0) ; push qword ptr [rax] ; fdivp st(3) ; call qword ptr [rax]
0x00000000001b4fa1 : fdiv st(6) ; call qword ptr [rdi]
0x00000000001b4ff1 : fdiv st(6) ; jmp qword ptr [rdi]
0x000000000010f84f : fdiv st(6) ; ret 0xf02
0x00000000001949bd : fdivp st(3) ; call qword ptr [rax]
0x0000000000194ae1 : fdivp st(3) ; jmp qword ptr [rax]
0x00000000001949fd : fdivp st(3) ; jmp rax
0x000000000019b998 : fdivr dword ptr [rbx - 3] ; jmp qword ptr [rdx]
0x0000000000187fb0 : fdivr dword ptr [rdx - 0xd] ; call qword ptr [rax]
0x00000000001a6bac : fdivr qword ptr [rax - 0x800000] ; out dx, al ; jmp rsi
0x00000000000cd43f : fdivr st(3) ; dec dword ptr [rax - 0x77] ; ret
0x00000000001949f1 : fdivr st(3) ; inc dword ptr [rax - 0x26] ; sti ; jmp qword ptr [rax]
0x0000000000194a11 : fdivr st(3) ; jmp qword ptr [rax]
0x0000000000194a31 : fdivr st(3) ; push rax ; fsincos ; call rax
0x0000000000182c35 : fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000001b50c9 : fdivr st(6), st(0) ; jmp rsi
0x000000000016c43d : fdivr st(7) ; ret
0x00000000000a4c9e : fdivr st(7) ; xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000001ae1a9 : fdivrp st(4) ; jmp qword ptr [rcx]
0x00000000001a8cdd : fiadd dword ptr [rax] ; add byte ptr [rax], al ; int1 ; jmp qword ptr [rcx]
0x00000000000f6dc2 : fiadd dword ptr [rbx + 0x2a8247c] ; cmove eax, edx ; ret
0x00000000000723f4 : fiadd dword ptr [rbx + 0x394803e2] ; ret 0xf48
0x000000000009bf5c : fiadd dword ptr [rcx + 0xf] ; xchg eax, ebx ; ret
0x00000000001150af : fiadd dword ptr [rcx - 0xfff05] ; dec dword ptr [rdi] ; ret 0x8348
0x000000000012e589 : fiadd dword ptr [rcx - 1] ; push rbp ; adc byte ptr [rcx], bh ; ret
0x00000000001b8cd5 : fiadd dword ptr [rcx] ; add byte ptr [rax], cl ; loopne 0x1b8cd8 ; jmp rdi
0x000000000004ed4b : fiadd dword ptr [rip - 0x77cb800] ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x00000000000c2a0e : fiadd word ptr [r9] ; ret
0x000000000012c390 : fiadd word ptr [rax] ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; call qword ptr [rax]
0x00000000000adec0 : fiadd word ptr [rcx + rcx*4 - 0x16] ; mov rdi, rbp ; call 0x4a169
0x00000000000c2a0f : fiadd word ptr [rcx] ; ret
0x0000000000102889 : ficomp word ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000001854c6 : ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, 0xab ; ret
0x0000000000173da8 : fidiv dword ptr [rbp - 0x13] ; pop rbx ; ret
0x00000000000e976b : fidiv dword ptr [rcx] ; shr al, 0xd ; ret 0xfff6
0x0000000000142d25 : fidivr dword ptr [rax + 1] ; ret
0x00000000000e73bf : fidivr dword ptr [rcx] ; ret 0x3673
0x00000000000ffb1e : fidivr word ptr [rdi] ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x89 ; ret 0xfffe
0x0000000000047238 : fild dword ptr [rax + 0xf3a007d] ; xchg eax, esp ; ret
0x00000000001105e4 : fild dword ptr [rax - 0x6af0d207] ; ret
0x00000000001a8e2d : fild dword ptr [rax] ; add byte ptr [rax], dh ; xor esi, ecx ; jmp rdi
0x00000000000ebd4a : fild dword ptr [rbx - 0x6af0fd08] ; ret
0x00000000000bc9bd : fild dword ptr [rcx + 1] ; ret
0x00000000001a92a5 : fild word ptr [rax] ; add byte ptr [rax - 0x6d], bl ; int1 ; call qword ptr [rax]
0x00000000001a92bd : fild word ptr [rax] ; add byte ptr [rax - 0x6d], dl ; int1 ; call qword ptr [rax]
0x00000000000d2037 : fild word ptr [rbx - 0x6bf0bf08] ; ret 0xf983
0x00000000000fbb06 : fild word ptr [rcx + 0xf] ; xor byte ptr [rcx], 0xc0 ; ret
0x0000000000050478 : fild word ptr [rcx + rcx*4 - 0x40] ; ret
0x0000000000199dad : fild word ptr [rcx] ; add ah, ah ; clc ; call rsp
0x00000000000d29ee : fimul dword ptr [rax + 0x29] ; ret 0x8948
0x000000000003d925 : fimul dword ptr [rax + 0x39] ; ret 0xf48
0x00000000001455a6 : fimul dword ptr [rax + rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000074080 : fimul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], cl ; ret
0x00000000000320c0 : fimul dword ptr [rax - 0x7d] ; ret
0x00000000001371a2 : fimul dword ptr [rax - 0x7d] ; ret 0x4812
0x000000000011d8cb : fimul dword ptr [rax - 0x7d] ; ret 0xe801
0x00000000000aefc7 : fimul dword ptr [rax - 9] ; fimul dword ptr [rax + 0x39] ; ret 0xf48
0x000000000008ead2 : fimul dword ptr [rax - 9] ; ret 0xfff8
0x000000000012ec16 : fimul dword ptr [rcx + rcx*4 - 0x1a] ; mov rdi, rbp ; call rax
0x000000000016b1e2 : fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39cc101
0x000000000016c262 : fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39cd181
0x00000000000e85f3 : fimul dword ptr [rdi] ; popfq ; ret
0x000000000013b7bf : fimul word ptr [rax - 0x77] ; out dx, eax ; call rcx
0x000000000007752e : fimul word ptr [rax - 0x77] ; ret
0x00000000000af334 : fimul word ptr [rax - 0x77] ; ret 0x8948
0x0000000000083921 : fimul word ptr [rax - 0x7d] ; ret 0x4810
0x000000000004834e : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x483a8
0x0000000000049f2e : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x49f88
0x000000000003e047 : fimul word ptr [rcx + 0x19] ; ret 0xed85
0x0000000000037350 : fimul word ptr [rcx + rcx*4 - 0x19] ; call r15
0x000000000013820e : fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x000000000013a09c : fimul word ptr [rcx + rcx*4 - 1] ; call r14
0x000000000003e041 : fimul word ptr [rcx - 0x77] ; dec byte ptr [rbp + 0x29] ; fimul word ptr [rcx + 0x19] ; ret 0xed85
0x00000000000b8761 : fimul word ptr [rdi] ; xchg eax, ebx ; ret
0x000000000007215f : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000071fa7 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x000000000013a141 : fistp word ptr [rbx + 0x5d] ; jmp rax
0x00000000001735f4 : fistp word ptr [rbx - 0x17] ; lodsd eax, dword ptr [rsi] ; ret 0xffea
0x000000000007d832 : fisttp dword ptr [rax + 0x21] ; ret
0x00000000000c4fa8 : fisttp dword ptr [rax + 0x39] ; ret
0x0000000000173da5 : fisttp dword ptr [rax - 0x77] ; fidiv dword ptr [rbp - 0x13] ; pop rbx ; ret
0x0000000000048fd1 : fisttp dword ptr [rax - 0x77] ; ret
0x0000000000108c9e : fisttp dword ptr [rax - 0x77] ; sbb eax, 0x2ba59a ; pop rbx ; ret
0x00000000000ddffa : fisttp dword ptr [rcx + 0x7e10245c] ; ret 0x8b48
0x0000000000048feb : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x0000000000061f20 : fisttp dword ptr [rdi] ; lahf ; ret 0xd329
0x00000000000f0654 : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x0000000000047614 : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0x854d
0x000000000003692f : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0xd521
0x000000000009c3f4 : fisttp dword ptr [rdi] ; xchg eax, ebx ; ret
0x0000000000102d69 : fisttp dword ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x000000000003e137 : fisttp qword ptr [rax + 0x29] ; ret
0x0000000000083e9e : fisttp qword ptr [rax + 0x39] ; ret 0x860f
0x0000000000149fb2 : fisttp qword ptr [rax + 0x63] ; ror dword ptr [rax + 1], -8 ; ret
0x000000000007646f : fisttp qword ptr [rax + rax] ; mov edx, eax ; jmp 0x76414
0x0000000000024ff5 : fisttp qword ptr [rax - 0x77] ; je 0x25027 ; cmp byte ptr [rax + 0xf], cl ; ret 0x8949
0x00000000000aed34 : fisttp qword ptr [rax - 0x77] ; ret
0x00000000000b73f5 : fisttp qword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x000000000008dcea : fisttp qword ptr [rax - 1] ; ret 0xff48
0x000000000010dd72 : fisttp qword ptr [rcx + 0x29] ; fisttp word ptr [rax + 0x29] ; ret 0x8948
0x000000000010dd75 : fisttp word ptr [rax + 0x29] ; ret 0x8948
0x0000000000033c3a : fisttp word ptr [rax - 0x39] ; ret
0x00000000000c80dc : fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x00000000000f33f4 : fisttp word ptr [rax - 0x77] ; add eax, ebp ; ret
0x0000000000129d21 : fisttp word ptr [rax - 0x77] ; or al, 0x24 ; call r12
0x000000000010de08 : fisttp word ptr [rax - 0x77] ; ret
0x000000000005900b : fisttp word ptr [rax - 0x77] ; ret 0x8b48
0x000000000009ea71 : fisttp word ptr [rax - 0x77] ; ret 0xc6e8
0x0000000000173aa9 : fisttp word ptr [rax - 0x7b] ; push qword ptr [rbp - 0x16] ; pop rbx ; ret
0x000000000005e640 : fisttp word ptr [rax - 0x7d] ; ret
0x000000000004906f : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x00000000001384c2 : fisttp word ptr [rcx + 0xf] ; fmul qword ptr [rax - 0x7d] ; ret
0x00000000000876d7 : fisttp word ptr [rcx + rcx*4 - 6] ; call rax
0x0000000000129e23 : fisttp word ptr [rcx - 0x77] ; in eax, 0x41 ; call rdi
0x000000000014a9bd : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x00000000000e9ed8 : fisub dword ptr [rcx + rcx*4 + 0x10] ; mov eax, 0xffffffff ; ret
0x000000000016ec81 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000114dce : fisub dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret 0x144
0x00000000000e469c : fisub dword ptr [rsi - 0x7f] ; loop 0xe46a7 ; add esi, esi ; ret
0x00000000000acb96 : fisub word ptr [rdx + 0x31] ; add byte ptr [rcx - 0x39], cl ; ret 0xffff
0x000000000016e981 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000014d41c : fisubr word ptr [rcx] ; ret 0xfec5
0x0000000000197345 : fld dword ptr [rax] ; add ah, dl ; cmp ch, dh ; call rsp
0x00000000001a8be5 : fld dword ptr [rax] ; add byte ptr [rax], bl ; and esi, ecx ; call qword ptr [rcx]
0x00000000001a8c4d : fld dword ptr [rax] ; add cl, al ; sub al, 0xf1 ; jmp qword ptr [rax]
0x0000000000098797 : fld dword ptr [rbp - 0x77] ; ret 0x1374
0x000000000004ed9e : fld dword ptr [rip - 0x77cb800] ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x0000000000183921 : fld qword ptr [rsi + 0x32] ; mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x0000000000034f8e : fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x0000000000035048 : fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x0000000000034f29 : fld xword ptr [rsp + 8] ; ret
0x0000000000035019 : fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x0000000000034ff7 : fld xword ptr [rsp - 0x18] ; ret
0x0000000000035199 : fldcw word ptr [rsp - 2] ; ret
0x00000000001882c8 : fldenv dword ptr [rdi - 0x5826000d] ; jmp rsi
0x0000000000149ff0 : fldenv dword ptr [rsi + 0xf] ; cmp ah, byte ptr [rbx - 0x25] ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x000000000008e029 : fldenv dword ptr [rsi + 0xf] ; je 0x8e086 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000095cb7 : fldenv dword ptr [rsi + 0xf] ; je 0x95d14 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000016ed01 : fldenv dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008df21 : fldenv dword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000001a4b59 : fldln2 ; call qword ptr [rsi]
0x00000000000483f4 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x000000000008718e : fmul dword ptr [rax + 0x21] ; ret
0x000000000007ef3f : fmul dword ptr [rax + 0x39] ; ret
0x0000000000087cab : fmul dword ptr [rax + 0x39] ; ret 0x2f74
0x00000000000991c6 : fmul dword ptr [rax + 0xf] ; ret
0x00000000000ce9f2 : fmul dword ptr [rax + 3] ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000424c7 : fmul dword ptr [rax - 0x39] ; ret
0x000000000012fa51 : fmul dword ptr [rax - 0x3f] ; call 0xffffffffc29c4268
0x00000000000f3ae2 : fmul dword ptr [rax - 0x75] ; jl 0xf3b13 ; sbb byte ptr [rax - 0x77], cl ; ret
0x0000000000074d51 : fmul dword ptr [rax - 0x77] ; ret
0x00000000000bdff9 : fmul dword ptr [rax - 0x7d] ; ret
0x00000000000b7586 : fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000007769e : fmul dword ptr [rcx + 0x21] ; ret
0x00000000000535d0 : fmul dword ptr [rcx + 0xf] ; ret
0x00000000000562f1 : fmul dword ptr [rdi] ; ret
0x00000000000b8c2c : fmul dword ptr [rdi] ; xchg eax, ebx ; ret
0x0000000000047d23 : fmul dword ptr [rdi] ; xchg esi, ebp ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc083
0x0000000000188a28 : fmul dword ptr [rsi - 0xc] ; jmp rdx
0x00000000000c802b : fmul qword ptr [rax - 0x7d] ; ret
0x00000000001b00ac : fmul qword ptr [rbp + 1] ; add al, dh ; insd dword ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x000000000010de05 : fmul qword ptr [rcx + 0x29] ; fisttp word ptr [rax - 0x77] ; ret
0x000000000003d6cc : fmul qword ptr [rcx + 0xf] ; mov esi, 0xbe0f2414 ; ret 0x8349
0x00000000000894b9 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008f3ff : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000001a42ac : fmul qword ptr [rdi - 0x77800000] ; in eax, dx ; jmp qword ptr [rax]
0x00000000001afdac : fmul qword ptr [rdx + 1] ; add byte ptr [rax + 0x5b], dl ; cmc ; jmp qword ptr [rcx]
0x00000000000423c2 : fmul st(0) ; ret
0x000000000012de60 : fmul st(3), st(0) ; cmc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000042340 : fmulp st(1) ; ret
0x00000000000d0c13 : fnsave dword ptr [rcx] ; rol byte ptr [rbx - 0x6bf0fe06], 0xc0 ; ret
0x0000000000002532 : fnstenv dword ptr [rdx + rdx - 0x38975393] ; ret
0x0000000000035176 : fnstsw ax ; fstp st(0) ; and eax, 0x200 ; ret
0x0000000000048022 : fnstsw dword ptr [rax + 1] ; ret
0x000000000018871d : fpatan ; jmp qword ptr [rax]
0x0000000000033bc5 : fpatan ; ret
0x00000000001817b4 : frstor dword ptr [rax] ; jmp 0x1817ba
0x0000000000181870 : frstor dword ptr [rax] ; jmp 0x181876
0x000000000016ea81 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000003504c : fscale ; fstp st(1) ; ret
0x0000000000194a35 : fsincos ; call rax
0x0000000000194a95 : fsincos ; jmp qword ptr [rax]
0x000000000010c9cb : fstp dword ptr [rbp - 0x76b7ffd5] ; ret 0x8d48
0x0000000000183607 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x000000000009640e : fstp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000035178 : fstp st(0) ; and eax, 0x200 ; ret
0x0000000000183980 : fstp st(0) ; ret 0xde5d
0x0000000000035120 : fstp st(1) ; add rsp, 8 ; ret
0x000000000003504e : fstp st(1) ; ret
0x000000000003b0d3 : fstp st(3), st(0) ; cmp byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000034f90 : fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x000000000003501d : fstp xword ptr [rdi] ; ret
0x0000000000035768 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000035448 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x0000000000035179 : fsub dword ptr [rip + 0x200] ; ret
0x000000000016ed81 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000d59e9 : fsub dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; call 0xffffffffc2e16960
0x00000000000a0c44 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000000cc7a2 : fsub qword ptr [rcx + rcx*4 + 4] ; and eax, 0x2d0 ; ret
0x00000000000a9a3b : fsub qword ptr [rsi + 0xf] ; jmp 0xa9a07
0x000000000016eb81 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008923c : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000017401b : fsub st(3), st(0) ; mov dl, 0x66 ; nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001867fd : fsub st(5), st(0) ; call rbx
0x0000000000102122 : fsubp st(0) ; enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x0000000000103c2b : fsubp st(0) ; mov edi, 0x49ffffe3 ; mov edi, dword ptr [rdi] ; call rbx
0x000000000010402a : fsubp st(0) ; rcr bh, 0xff ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000103698 : fsubp st(0) ; ret 0xffe8
0x0000000000103598 : fsubp st(0) ; ret 0xffe9
0x0000000000034f92 : fsubp st(1) ; ret
0x00000000000c6901 : fsubp st(1) ; ret 0xffec
0x00000000001867dd : fsubp st(5) ; call rbx
0x00000000001866b5 : fsubp st(5) ; jmp qword ptr [rbx]
0x00000000001afe78 : fsubr dword ptr [rbx - 0xb] ; jmp qword ptr [rcx]
0x00000000001b01b8 : fsubr dword ptr [rsi - 0xb] ; jmp qword ptr [rcx]
0x00000000000b93eb : fsubr qword ptr [rcx] ; ret
0x00000000001b21ac : fsubr qword ptr [rsi + 1] ; add al, dh ; and esi, esi ; jmp qword ptr [rsi]
0x00000000000f7c67 : fsubr st(0) ; ret
0x00000000001864e9 : fsubr st(5) ; call rbx
0x0000000000196ff9 : fsubr st(5) ; jmp rsp
0x0000000000186720 : fucom st(2) ; in eax, dx ; ljmp ptr [rax - 0x17] ; in eax, dx ; call rbx
0x0000000000185658 : fucom st(5) ; loop 0x1856b1 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000001a64e9 : fucomi st(6) ; jmp qword ptr [rsi]
0x00000000001a7449 : fucomi st(7) ; jmp qword ptr [rbx]
0x0000000000196309 : fucomp st(1) ; call rsp
0x00000000001866d5 : fucomp st(5) ; jmp qword ptr [rbx]
0x000000000006e44e : fucompi st(0) ; adc r8, qword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x00000000000f87f8 : fucompi st(0) ; and dl, bl ; stc ; dec dword ptr [rax + 0x39] ; ret
0x000000000007646d : fucompi st(0) ; fisttp qword ptr [rax + rax] ; mov edx, eax ; jmp 0x76416
0x00000000000777b5 : fucompi st(0) ; in eax, dx ; cmp dl, 0xff ; xor eax, eax ; pop rbx ; ret
0x00000000000bea7c : fucompi st(0) ; outsb dx, byte ptr [rsi] ; ret 0xfffc
0x0000000000024897 : fucompi st(0) ; ret
0x0000000000020fd8 : fucompi st(0) ; ret 0xffe8
0x0000000000119498 : fucompi st(0) ; ret 6
0x0000000000033ed0 : fucompi st(0) ; sar byte ptr [rcx - 0x3fce0002], cl ; pop rbx ; ret
0x0000000000075b1d : fucompi st(0) ; sub eax, 0x89000056 ; ret 0x98eb
0x0000000000087942 : fucompi st(0) ; test al, 0x7e ; stc ; dec dword ptr [rax - 0x77] ; ret
0x000000000013e838 : hlt ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000019fac4 : hlt ; add byte ptr [r8], r8b ; call 0x2319e57e
0x00000000000cd570 : hlt ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000001af1c4 : hlt ; add dword ptr ds:[rax], eax ; mov byte ptr [rdi], bl ; cmc ; jmp qword ptr [rdx]
0x00000000001b00c4 : hlt ; add qword ptr [r8], r8 ; or byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x000000000010547b : hlt ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000199c50 : hlt ; and al, bh ; call rsp
0x00000000001acf6a : hlt ; call qword ptr [rax]
0x00000000001adf8a : hlt ; call qword ptr [rbx]
0x00000000001ad13a : hlt ; call qword ptr [rcx]
0x00000000001889e2 : hlt ; call qword ptr [rdi]
0x00000000001acf22 : hlt ; call qword ptr [rsi]
0x0000000000188982 : hlt ; call rax
0x00000000001889c6 : hlt ; call rcx
0x0000000000188fae : hlt ; call rdi
0x00000000001aebca : hlt ; call rsi
0x0000000000188de6 : hlt ; call rsp
0x000000000019b001 : hlt ; cli ; call rsp
0x000000000019ebc4 : hlt ; cmp byte ptr [rax], al ; add al, bh ; shr ecx, 1 ; call rax
0x000000000009e1ab : hlt ; cmp ecx, esi ; je 0x9e1a6 ; ret
0x000000000018897e : hlt ; dec dword ptr [rax + 0x4a] ; hlt ; call rax
0x0000000000188dae : hlt ; dec dword ptr [rax + 0x50] ; hlt ; call rax
0x00000000000dd82e : hlt ; dec dword ptr [rcx - 0x77] ; ret 0x8949
0x0000000000188a9e : hlt ; dec dword ptr [rdi] ; push rax ; hlt ; lcall ptr [rcx] ; push rax ; hlt ; jmp qword ptr [rbx]
0x00000000001889de : hlt ; dec dword ptr [rip + 0x17fff44e] ; hlt ; jmp qword ptr [rcx]
0x0000000000188b02 : hlt ; dec dword ptr [rip + 0x17fff451] ; push rcx ; hlt ; jmp qword ptr [rcx]
0x0000000000188dea : hlt ; inc dword ptr [rax] ; test esi, esp ; jmp rdx
0x00000000001889c2 : hlt ; inc edi ; hlt ; call rcx
0x0000000000188ae6 : hlt ; inc edi ; push rax ; hlt ; call rcx
0x00000000000f615d : hlt ; ja 0xf60f7 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000183a08 : hlt ; jmp 0x1839dd
0x0000000000188aa6 : hlt ; jmp qword ptr [rbx]
0x00000000001889e6 : hlt ; jmp qword ptr [rcx]
0x0000000000188dc2 : hlt ; jmp qword ptr [rsi]
0x00000000001ac7ca : hlt ; jmp rcx
0x00000000001aebb2 : hlt ; jmp rdi
0x0000000000188a2a : hlt ; jmp rdx
0x00000000001985d2 : hlt ; jmp rsp
0x0000000000172045 : hlt ; jne 0x172167 ; ret
0x0000000000172044 : hlt ; jne 0x172168 ; ret
0x0000000000188aa2 : hlt ; lcall ptr [rcx] ; push rax ; hlt ; jmp qword ptr [rbx]
0x0000000000188b6a : hlt ; lcall ptr [rcx] ; push rdx ; hlt ; jmp qword ptr [rbx]
0x00000000001a63c4 : hlt ; mov al, 0 ; add byte ptr [rax + 0x54], bl ; cli ; call qword ptr [rax]
0x000000000015a53a : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015283e : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000e11d6 : hlt ; mov qword ptr [rsp + 0x40], rdi ; add rax, rdx ; jmp rax
0x000000000018847c : hlt ; movsd dword ptr [rdi], dword ptr [rsi] ; jmp rsp
0x0000000000188478 : hlt ; movsd dword ptr [rdi], dword ptr [rsi] ; push rsp ; movsd dword ptr [rdi], dword ptr [rsi] ; jmp rsp
0x0000000000171653 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000047023 : hlt ; outsb dx, byte ptr [rsi] ; adc al, 0 ; mov rax, rbx ; pop rbx ; ret
0x0000000000198000 : hlt ; pop rsp ; call rsp
0x00000000001b50c4 : hlt ; popfq ; add dword ptr [rax], eax ; fdivr st(6), st(0) ; jmp rsi
0x0000000000188dbe : hlt ; push qword ptr [rax + 0x26fff44f] ; xchg ah, dh ; jmp rdx
0x0000000000188b66 : hlt ; push qword ptr [rdx] ; hlt ; lcall ptr [rcx] ; push rdx ; hlt ; jmp qword ptr [rbx]
0x00000000001b03c4 : hlt ; push rax ; add dword ptr [rax], eax ; js 0x1b0442 ; cmc ; jmp qword ptr [rcx]
0x000000000018897a : hlt ; push rax ; hlt ; dec dword ptr [rax + 0x4a] ; hlt ; call rax
0x0000000000188daa : hlt ; push rax ; hlt ; dec dword ptr [rax + 0x50] ; hlt ; call rax
0x00000000001b08c4 : hlt ; push rbp ; add dword ptr [rax], eax ; pop rax ; jp 0x1b08c7 ; jmp qword ptr [rcx]
0x000000000009e18b : hlt ; ret
0x00000000001a75c4 : hlt ; ret 0
0x00000000000f3788 : hlt ; ret 0xffff
0x00000000001acfc4 : hlt ; sbb al, 1 ; add byte ptr [rax + 0x67], bl ; stc ; call qword ptr [rax]
0x000000000019a751 : hlt ; stc ; jmp rsp
0x0000000000183b43 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x0000000000171657 : hlt ; sub eax, edx ; ret
0x000000000009ea4e : hlt ; sub rsp, 8 ; call 0x8acf7
0x0000000000003cd9 : hlt ; test al, 0x35 ; push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x00000000001b5bc4 : hlt ; test al, 1 ; add byte ptr [rax], cl ; jrcxz 0x1b5bcd ; call rsi
0x00000000000d683b : hlt ; xor eax, eax ; cmp cl, byte ptr [rsi] ; je 0xd67de ; pop rbx ; ret
0x000000000007d859 : hlt ; xor edi, edi ; mov r13, rdx ; call qword ptr [r15]
0x00000000000b95be : idiv bh ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00000000001048a5 : idiv bh ; add rsp, 0x408 ; ret
0x000000000018a042 : idiv bh ; jnp 0x18a042 ; call qword ptr [rsi]
0x000000000018a03e : idiv bh ; jnp 0x18a042 ; push rdx ; jnp 0x18a046 ; call qword ptr [rsi]
0x000000000019891a : idiv bh ; mov ah, 0x72 ; add dword ptr [rax], eax ; push rsp ; add esi, esi ; jmp rsp
0x0000000000198dfa : idiv bh ; mov esp, 0x34000189 ; jbe 0x198e02 ; call rsp
0x0000000000198daa : idiv bh ; mov esp, 0xc4000188 ; je 0x198db2 ; call rsp
0x0000000000198eea : idiv bh ; movsb byte ptr [rdi], byte ptr [rsi] ; lea eax, dword ptr [rcx] ; add byte ptr [rdi + rcx*4 - 0xa], dl ; jmp rsp
0x00000000000b957a : idiv bh ; nop dword ptr [rax] ; pop rbx ; ret
0x000000000019912a : idiv bh ; test byte ptr [rcx + rax - 0x90dbc00], bl ; call rsp
0x0000000000189d34 : idiv bh ; test eax, 0xc3fffb00 ; add dh, bh ; jmp rdi
0x000000000012829e : idiv bh ; xor eax, eax ; ret
0x0000000000023b86 : idiv byte ptr [rdx - 1] ; cmovs eax, edx ; ret
0x0000000000194cdd : idiv ebx ; call qword ptr [rax - 0x1f000408]
0x00000000001998ba : idiv edi ; cld ; ret 1
0x0000000000126cb8 : idiv edi ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000eee53 : idiv edi ; dec dword ptr [rbp + rcx*4 + 0x25] ; ret
0x000000000019990a : idiv edi ; in al, dx ; ret
0x000000000019988a : idiv edi ; insb byte ptr [rdi], dx ; ret 1
0x000000000019929a : idiv edi ; mov esp, 0x140001a2 ; adc edi, esi ; call rsp
0x00000000001998fa : idiv edi ; mov esp, 0x140001c3 ; out 0xf7, al ; call rsp
0x00000000001999da : idiv edi ; movsb byte ptr [rdi], byte ptr [rsi] ; mov dword ptr [rcx], 0xf7ee9400 ; jmp rsp
0x00000000001998f2 : idiv edi ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000001998da : idiv edi ; pop rsp ; ret
0x0000000000199882 : idiv edi ; push rsp ; ret 1
0x000000000019989a : idiv edi ; pushfq ; ret 1
0x00000000001998d2 : idiv edi ; ret
0x000000000003a696 : idiv esi ; ret
0x000000000003a695 : idiv rsi ; ret
0x0000000000141c98 : imul al ; ret 0xfb4d
0x00000000000202f5 : imul al ; xor eax, 0xbf00089d ; ret 0
0x00000000000668ac : imul cl ; ret
0x00000000000a4498 : imul cl ; ret 8
0x000000000011cf8c : imul eax ; ret
0x00000000000b9f68 : imul eax ; ret 0xf66b
0x00000000000ea1fc : imul eax, dword ptr [rax], 0x440f0000 ; ret 0xb9e9
0x00000000001a1c0d : imul eax, dword ptr [rax], 0xecfce000 ; call qword ptr [rsi]
0x00000000001701b1 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x0000000000055ee6 : imul eax, dword ptr [rcx], 0x7e8b4d00 ; and byte ptr [rax + 1], cl ; ret
0x00000000000bc906 : imul eax, dword ptr [rdi], 0 ; add byte ptr [rax + 1], cl ; ret
0x00000000000bcbbf : imul eax, dword ptr [rdi], 0 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000fdba2 : imul ebp, dword ptr [rax + rax], 0x48 ; add esp, 8 ; ret
0x00000000000fdc38 : imul ebp, dword ptr [rax + rax], 0x48 ; mov edx, eax ; jmp 0xfdbd4
0x0000000000127e83 : imul ebp, dword ptr [rsi], 0x3948fff6 ; ret
0x00000000000fdc37 : imul ebp, dword ptr gs:[rax + rax], 0x48 ; mov edx, eax ; jmp 0xfdbd5
0x00000000001862a9 : imul ebp, ebp, 0xed75e4ff ; jmp rsp
0x000000000010e425 : imul ebx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010e3c5 : imul ecx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000088cca : imul ecx, dword ptr [rax], 0x48 ; mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b347c : imul ecx, dword ptr [rdx], 0 ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x000000000018976c : imul edi, dword ptr [rax - 0xb], -1 ; js 0x18976f ; call rsi
0x000000000010e2ff : imul edi, dword ptr [rax], 0x48 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c9c53 : imul edi, edi, 0x3c6ffff ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000010e3f5 : imul edx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000002b84 : imul edx, edx, 0x3a ; adc al, 0xe7 ; ret
0x0000000000003aa0 : imul esi ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x00000000000ac533 : imul esi, dword ptr [rcx + rsi], 0x358d4c00 ; ret 0x314c
0x0000000000187411 : imul esi, ecx, -1 ; je 0x187487 ; int1 ; jmp rsp
0x00000000000bbc94 : imul esi, esi, 0x3c ; add eax, esi ; ret
0x000000000013d6c1 : imul esp, dword ptr [rbx], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000a51dc : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x00000000001a6609 : in al, -0x12 ; call qword ptr [rax]
0x0000000000197691 : in al, -0x12 ; call rsp
0x0000000000003794 : in al, -0x12 ; jne 0x3776 ; ret 0x975
0x0000000000196ba0 : in al, -0x2b ; in al, dx ; call rsp
0x00000000001b71b4 : in al, -0x42 ; add dword ptr [rax], eax ; call 0xffffffffe71b692e
0x0000000000103cc0 : in al, -0x45 ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000196ec8 : in al, -0x49 ; in eax, dx ; call rsp
0x000000000019ad48 : in al, -0x58 ; cli ; jmp rsp
0x0000000000188484 : in al, -0x5c ; inc dword ptr [rax - 0x46] ; jmp rsp
0x0000000000188480 : in al, -0x5c ; jmp rsp
0x000000000018848c : in al, -0x5c ; push rsp ; movsd dword ptr [rdi], dword ptr [rsi] ; jmp rsp
0x000000000019a528 : in al, -0x5f ; stc ; call rsp
0x0000000000199f30 : in al, -0x66 ; clc ; call rsp
0x0000000000099eed : in al, -0x7d ; ret 0x480f
0x00000000001b5221 : in al, -0xa ; jmp qword ptr [rdi]
0x000000000015a51a : in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000008e8bb : in al, -0xd ; ret
0x00000000001ba5b4 : in al, -0xe ; add dword ptr [rax], eax ; js 0x1ba5d8 ; clc ; jmp qword ptr [rcx]
0x00000000001a5691 : in al, -4 ; call qword ptr [rdx]
0x00000000001949c9 : in al, -5 ; call qword ptr [rax]
0x0000000000194aed : in al, -5 ; call rax
0x00000000001998c1 : in al, -9 ; call qword ptr [rbx + rax*8]
0x00000000001998a9 : in al, -9 ; dec esp ; ret 1
0x00000000001998b1 : in al, -9 ; jmp rsp
0x0000000000172078 : in al, 0 ; add byte ptr [rax], al ; ret
0x0000000000106f31 : in al, 0 ; add byte ptr [rax], al ; syscall ; ret
0x00000000000822e7 : in al, 0x10 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000001ac5b4 : in al, 0x12 ; add dword ptr [rax], eax ; xlatb ; jmp qword ptr [rcx]
0x00000000001ad4b4 : in al, 0x21 ; add dword ptr [rax], eax ; test al, 0x95 ; hlt ; jmp qword ptr [rcx]
0x00000000001ad6b4 : in al, 0x23 ; add dword ptr [rax], eax ; pop rax ; wait ; hlt ; jmp qword ptr [rcx]
0x000000000019d9b4 : in al, 0x26 ; add byte ptr [rax], al ; cwde ; jge 0x19d9ab ; jmp qword ptr [rcx]
0x00000000000e79d4 : in al, 0x2d ; add byte ptr [rax], al ; je 0xe7a18 ; xor eax, eax ; ret
0x000000000009e1fb : in al, 0x41 ; cmp eax, ecx ; je 0x9e1e7 ; ret
0x0000000000199db0 : in al, 0x4d ; clc ; call rsp
0x00000000001b01b4 : in al, 0x4e ; add dword ptr [rax], eax ; fsubr dword ptr [rsi - 0xb] ; jmp qword ptr [rcx]
0x00000000001a07b4 : in al, 0x54 ; add byte ptr [rax], al ; pop rax ; stosd dword ptr [rdi], eax ; in al, dx ; jmp qword ptr [rcx]
0x00000000001a0db4 : in al, 0x5a ; add byte ptr [rax], al ; shr spl, 1 ; call qword ptr [rax]
0x00000000001870ac : in al, 0x5c ; out dx, al ; jmp rsp
0x0000000000197490 : in al, 0x65 ; out dx, al ; jmp rsp
0x000000000008903c : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x00000000000a9f2e : in al, 0x75 ; adc byte ptr [rbx - 0x6bf0fd06], al ; ret 0x8444
0x00000000001862c4 : in al, 0x75 ; in eax, dx ; inc dword ptr [rdx] ; in eax, dx ; jmp rsp
0x000000000018627c : in al, 0x75 ; in eax, dx ; jmp rsp
0x00000000001975c0 : in al, 0x79 ; out dx, al ; jmp rsp
0x000000000004c574 : in al, 0xf ; lahf ; ret
0x00000000000502c0 : in al, 0xf ; test byte ptr [rcx - 0x77000000], dh ; ret 0xe283
0x0000000000124eda : in al, 0xf ; test dh, bh ; add al, byte ptr [rax] ; add byte ptr [rcx], bh ; ret
0x0000000000199e2d : in al, 1 ; add ah, al ; clc ; jmp rsp
0x00000000001ab7b4 : in al, 4 ; add dword ptr [rax], eax ; pop rax ; in eax, dx ; call rcx
0x00000000000a5d18 : in al, 6 ; add byte ptr [rax], al ; ret
0x00000000000f0a41 : in al, dx ; add byte ptr [rax + rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000883e9 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; int 0xc3
0x0000000000088492 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; push rsp ; ret
0x00000000000703f3 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x000000000003a8f4 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0xd9e
0x00000000001a9f95 : in al, dx ; add byte ptr [rax], al ; test al, 0 ; call rdi
0x00000000000642d9 : in al, dx ; add dword ptr [rax + 1], ecx ; ret
0x00000000000bcfc0 : in al, dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000084038 : in al, dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000199f2d : in al, dx ; add dword ptr [rax], eax ; in al, -0x66 ; clc ; call rsp
0x000000000004c570 : in al, dx ; add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x00000000001ae1bc : in al, dx ; add dword ptr cs:[rax], eax ; adc bh, bl ; hlt ; jmp qword ptr [rcx]
0x0000000000144c70 : in al, dx ; add eax, 0x83480000 ; ret 0xeb10
0x00000000001ad8bc : in al, dx ; and eax, 0xa5000001 ; hlt ; call rax
0x00000000001a0dba : in al, dx ; call qword ptr [rax]
0x00000000001a1c12 : in al, dx ; call qword ptr [rsi]
0x0000000000196ba2 : in al, dx ; call rsp
0x00000000001aafbc : in al, dx ; cld ; add byte ptr [rax], al ; loopne 0x1aaf6c ; call rdi
0x00000000001a92bc : in al, dx ; fild word ptr [rax] ; add byte ptr [rax - 0x6d], dl ; int1 ; call qword ptr [rax]
0x000000000004a1d9 : in al, dx ; fld xword ptr [rsp - 0x18] ; ret
0x00000000001ae729 : in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001aa4bc : in al, dx ; int1 ; add byte ptr [rax], al ; adc byte ptr [rbx], dl ; jmp qword ptr [rcx]
0x00000000001876e9 : in al, dx ; int1 ; call qword ptr [rax]
0x0000000000187719 : in al, dx ; int1 ; call rax
0x0000000000187715 : in al, dx ; int1 ; inc eax ; in al, dx ; int1 ; call rax
0x00000000001876ed : in al, dx ; int1 ; jmp qword ptr [rax]
0x000000000018771d : in al, dx ; int1 ; jmp rax
0x00000000001a9ad9 : in al, dx ; int1 ; jmp rcx
0x00000000001a0d3a : in al, dx ; jmp qword ptr [rax]
0x00000000001a07ba : in al, dx ; jmp qword ptr [rcx]
0x00000000001a0aea : in al, dx ; jmp rax
0x00000000001a0c0a : in al, dx ; jmp rbx
0x00000000001b23bc : in al, dx ; jo 0x1b23c7 ; add al, ah ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001aa3bc : in al, dx ; lock add byte ptr [rax], al ; adc edx, esi ; jmp qword ptr [rcx]
0x00000000001b60bc : in al, dx ; lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; xor byte ptr [rdi - 9], al ; jmp qword ptr [rsi]
0x00000000000fea63 : in al, dx ; mov byte ptr [r8 - 1], 0 ; ret
0x000000000015283a : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000009e2f3 : in al, dx ; mov qword ptr [rdx], rcx ; ret
0x000000000013a2d4 : in al, dx ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x000000000015a91a : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000009ea51 : in al, dx ; or al, ch ; cwde ; ret 0xfffe
0x000000000012a8a1 : in al, dx ; or al, ch ; mov byte ptr [rdi - 0x11], cl ; dec dword ptr [rax - 0x77] ; ret
0x000000000006dd66 : in al, dx ; or byte ptr [rax - 0x75], cl ; mov edi, 0xe0 ; call rax
0x0000000000082697 : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000145994 : in al, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000173758 : in al, dx ; or byte ptr [rbx + rcx*4 + 0x25], cl ; call qword ptr [rcx]
0x000000000013d50d : in al, dx ; or byte ptr [rbx - 0x6bf0f502], al ; ret
0x00000000000f6942 : in al, dx ; or dh, dh ; ret 0x7540
0x00000000001aa1bc : in al, dx ; out dx, al ; add byte ptr [rax], al ; rol byte ptr [rdi], 1 ; call rsi
0x0000000000197a49 : in al, dx ; out dx, eax ; jmp rsp
0x00000000001b0bbc : in al, dx ; pop rax ; add dword ptr [rax], eax ; loopne 0x1b0b4f ; cmc ; jmp rax
0x000000000009e0fb : in al, dx ; ret
0x0000000000019150 : in al, dx ; ret 0x18
0x0000000000117002 : in al, dx ; sbb byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; jmp 0x76d3a95c
0x00000000000f65c1 : in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000025ab : in al, dx ; scasd eax, dword ptr [rdi] ; xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x0000000000194cbd : in al, dx ; sti ; call qword ptr [rax]
0x000000000018509e : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x185031 ; ret 0x48f
0x000000000018509d : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x185032 ; ret 0x48f
0x000000000013c540 : in al, dx ; xor al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000012f013 : in al, dx ; xor dh, dh ; ret 0xc707
0x0000000000186851 : in eax, -0x13 ; call rbx
0x0000000000185659 : in eax, -0x1e ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x0000000000052f73 : in eax, -0x21 ; loopne 0x52f04 ; ret 0xe680
0x0000000000054eec : in eax, -0x21 ; loopne 0x54e7d ; ret 0xe680
0x00000000000d8713 : in eax, -0x77 ; ret
0x000000000015a59a : in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000093aba : in eax, -0xd ; ret
0x00000000001875e1 : in eax, -0xf ; call qword ptr [rax]
0x00000000001875d9 : in eax, -0xf ; call rax
0x00000000001875dd : in eax, -0xf ; push rax ; in eax, -0xf ; call qword ptr [rax]
0x0000000000184b21 : in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000194cb1 : in eax, -5 ; jmp qword ptr [rax]
0x00000000001a9815 : in eax, 0 ; add byte ptr [rax - 0x1a], cl ; int1 ; call qword ptr [rbx]
0x00000000001a97e5 : in eax, 0 ; add byte ptr [rax - 0x1a], cl ; int1 ; jmp qword ptr [rdi]
0x00000000001a982d : in eax, 0 ; add byte ptr [rax - 0x1a], dl ; int1 ; call qword ptr [rbx]
0x00000000001837a3 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000129e26 : in eax, 0x41 ; call rdi
0x000000000008e9fa : in eax, 0x48 ; mov eax, edi ; ret
0x000000000004a6b2 : in eax, 0x48 ; mov eax, esi ; ret
0x0000000000115115 : in eax, 0x5d ; ret
0x0000000000182a39 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x0000000000132ef2 : in eax, 0x74 ; sub eax, 0x8948f631 ; out -0x77, eax ; ret
0x0000000000003aa2 : in eax, 0x78 ; mov dl, 0x1e ; ret
0x00000000000ab503 : in eax, 0xf ; je 0xab528 ; add rax, 2 ; ret
0x00000000001b98a5 : in eax, 1 ; add byte ptr [rax], bl ; add eax, edi ; call qword ptr [rdx]
0x000000000012f51e : in eax, dx ; adc byte ptr [rcx - 0x7d], cl ; ret 0x8320
0x0000000000197645 : in eax, dx ; add byte ptr [rax], al ; je 0x19761a ; out dx, al ; jmp rsp
0x00000000000aed30 : in eax, dx ; add dword ptr [rax - 0x77], ecx ; fisttp qword ptr [rax - 0x77] ; ret
0x00000000000b1440 : in eax, dx ; add dword ptr [rcx + 0xf], eax ; xchg eax, ebp ; ret 0x2041
0x00000000001a3582 : in eax, dx ; call qword ptr [rax]
0x0000000000196fe2 : in eax, dx ; call qword ptr [rbx + rax*8]
0x0000000000186656 : in eax, dx ; call qword ptr [rcx - 0x1d001216]
0x000000000018658e : in eax, dx ; call qword ptr [rcx - 0x28001216]
0x0000000000186652 : in eax, dx ; call qword ptr [rcx - 0x6e001216]
0x000000000018681e : in eax, dx ; call qword ptr [rcx]
0x00000000001a4402 : in eax, dx ; call qword ptr [rdx]
0x00000000001a3d32 : in eax, dx ; call qword ptr [rsi]
0x000000000018623a : in eax, dx ; call rax
0x00000000001864ea : in eax, dx ; call rbx
0x00000000001ab7b9 : in eax, dx ; call rcx
0x0000000000186592 : in eax, dx ; call rdi
0x00000000001a2412 : in eax, dx ; call rdx
0x00000000001a203a : in eax, dx ; call rsi
0x00000000001860ae : in eax, dx ; call rsp
0x00000000000777b7 : in eax, dx ; cmp dl, 0xff ; xor eax, eax ; pop rbx ; ret
0x0000000000186672 : in eax, dx ; dec dword ptr [rbp - 0x1f] ; in eax, dx ; jmp qword ptr [rbx]
0x0000000000196e42 : in eax, dx ; dec dword ptr [rcx + rdi*4 - 0x53ac0000] ; in eax, dx ; jmp rsp
0x000000000018667e : in eax, dx ; dec dword ptr [rsi - 0x1d] ; in eax, dx ; dec dword ptr [rsi - 0x1d] ; in eax, dx ; jmp qword ptr [rbx]
0x0000000000186682 : in eax, dx ; dec dword ptr [rsi - 0x1d] ; in eax, dx ; jmp qword ptr [rbx]
0x00000000001866b2 : in eax, dx ; dec ebx ; fsubp st(5) ; jmp qword ptr [rbx]
0x0000000000196e8a : in eax, dx ; dec esp ; mov ebx, 0xb3b40000 ; in eax, dx ; jmp rsp
0x0000000000196d8a : in eax, dx ; inc dword ptr [rbx + rsi*4 - 0x6ecc0000] ; in eax, dx ; call rsp
0x00000000001862a6 : in eax, dx ; inc dword ptr [rcx] ; imul ebp, ebp, 0xed75e4ff ; jmp rsp
0x00000000001862c6 : in eax, dx ; inc dword ptr [rdx] ; in eax, dx ; jmp rsp
0x0000000000196fda : in eax, dx ; inc esp ; ret 0
0x0000000000196c52 : in eax, dx ; inc esp ; test eax, 0x55b40000 ; in eax, dx ; jmp rsp
0x000000000018679a : in eax, dx ; jmp qword ptr [rax - 0x2c001220]
0x00000000001a224a : in eax, dx ; jmp qword ptr [rax]
0x0000000000186676 : in eax, dx ; jmp qword ptr [rbx]
0x00000000001a3bd2 : in eax, dx ; jmp qword ptr [rcx]
0x00000000001a2eaa : in eax, dx ; jmp qword ptr [rdi]
0x00000000001a3422 : in eax, dx ; jmp qword ptr [rsi]
0x0000000000186212 : in eax, dx ; jmp rdi
0x000000000018665a : in eax, dx ; jmp rdx
0x000000000018626a : in eax, dx ; jmp rsp
0x0000000000117029 : in eax, dx ; jne 0x117041 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000017396f : in eax, dx ; jne 0x173951 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000186236 : in eax, dx ; lcall ptr [rax - 0x51] ; in eax, dx ; call rax
0x0000000000186232 : in eax, dx ; lcall ptr [rax - 0x51] ; in eax, dx ; lcall ptr [rax - 0x51] ; in eax, dx ; call rax
0x000000000018620a : in eax, dx ; lcall ptr [rax - 0x51] ; in eax, dx ; push rsi ; jbe 0x186209 ; jmp rdi
0x00000000001860aa : in eax, dx ; lcall ptr [rdx + 0x64] ; in eax, dx ; call rsp
0x00000000001860a6 : in eax, dx ; lcall ptr [rdx + 0x64] ; in eax, dx ; lcall ptr [rdx + 0x64] ; in eax, dx ; call rsp
0x00000000001867da : in eax, dx ; lcall ptr [rsi] ; fsubp st(5) ; call rbx
0x00000000000a9952 : in eax, dx ; lea rax, qword ptr [rcx - 1] ; ret
0x0000000000186722 : in eax, dx ; ljmp ptr [rax - 0x17] ; in eax, dx ; call rbx
0x0000000000196ff2 : in eax, dx ; ljmp ptr [rbx + rax*8] ; add byte ptr [rax + rbx*8], ah ; in eax, dx ; jmp rsp
0x0000000000186832 : in eax, dx ; ljmp ptr [rbx] ; xlatb ; in eax, dx ; call rbx
0x00000000001866d2 : in eax, dx ; ljmp ptr [rcx] ; fucomp st(5) ; jmp qword ptr [rbx]
0x00000000000a9319 : in eax, dx ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a932f : in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a9351 : in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a936f : in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a938f : in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a93b5 : in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a93d1 : in eax, dx ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a93f1 : in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000a9411 : in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a9437 : in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a9459 : in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a9477 : in eax, dx ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000a9497 : in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000a94b3 : in eax, dx ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000a94d3 : in eax, dx ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000a94f3 : in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000a9513 : in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a9539 : in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a9589 : in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a925f : in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a927d : in eax, dx ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a929d : in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a92bf : in eax, dx ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a92df : in eax, dx ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a92ff : in eax, dx ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000a9195 : in eax, dx ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000a91a7 : in eax, dx ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000a91bd : in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a91d5 : in eax, dx ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000a91eb : in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a91fd : in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000a921b : in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000a9227 : in eax, dx ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000a923d : in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000a9181 : in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000015264a : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000ae1a6 : in eax, dx ; mov r13, r15 ; setne dl ; jmp 0xae1be
0x00000000000b0ac7 : in eax, dx ; mov r13, r15 ; setne dl ; jmp 0xb0ade
0x00000000000b327e : in eax, dx ; mov r13, r15 ; setne dl ; jmp 0xb329e
0x000000000015a99a : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000d9084 : in eax, dx ; movsxd rdx, dword ptr [rax + rbp*4] ; add rax, rdx ; jmp rax
0x0000000000149500 : in eax, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000004872b : in eax, dx ; or byte ptr [rbp + 0x39], cl ; sal dword ptr [rbp + rsi*2 + 0x4c], -0x77 ; ret 0xf749
0x0000000000173daa : in eax, dx ; pop rbx ; ret
0x000000000018666e : in eax, dx ; push qword ptr [rax + 0x4dffedeb] ; loope 0x18666d ; jmp qword ptr [rbx]
0x0000000000196f6a : in eax, dx ; push qword ptr [rax + rax*8 - 0x333c0000] ; in eax, dx ; jmp rsp
0x00000000001866c6 : in eax, dx ; push qword ptr [rbp + 0x23ffedde] ; out 0xed, al ; jmp qword ptr [rbx]
0x0000000000196f4a : in eax, dx ; push qword ptr [rdi + rdi*4 - 0x3b2c0000] ; in eax, dx ; jmp rsp
0x0000000000196ec2 : in eax, dx ; push qword ptr [rsp + rdi*4 - 0x481c0000] ; in eax, dx ; call rsp
0x000000000018620e : in eax, dx ; push rsi ; jbe 0x186205 ; jmp rdi
0x0000000000019ca8 : in eax, dx ; ret
0x00000000000a9aa2 : in eax, dx ; sub rax, 1 ; ret
0x00000000000f72ff : in eax, dx ; test dh, dl ; dec dword ptr [rax - 0x77] ; ret
0x000000000009e23a : in eax, dx ; xor eax, eax ; ret
0x00000000000a9bd8 : inc bl ; cmp dl, 1 ; jb 0xa9bea ; mov byte ptr [rdi], cl ; ret
0x000000000014d3a6 : inc bl ; jb 0x14d3b6 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000014d896 : inc bl ; jb 0x14d8a6 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000014dc36 : inc bl ; jb 0x14dc46 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000008e8e1 : inc bl ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000046d6b : inc byte ptr [r11 - 0x6bf00220] ; ret 0x8341
0x000000000007b452 : inc byte ptr [rbp + 0x738948c9] ; cmp byte ptr [rdi], cl ; ret 0x389
0x0000000000046d6c : inc byte ptr [rbx - 0x6bf00220] ; ret 0x8341
0x000000000002a696 : inc byte ptr [rbx] ; je 0x2a6a5 ; pop rbx ; ret
0x00000000001953f0 : inc byte ptr [rcx - 0x777f0004] ; cld ; call qword ptr [rax]
0x0000000000077439 : inc byte ptr [rdx] ; je 0x7744f ; mov dword ptr [rdi], edx ; ret
0x000000000011ef5e : inc byte ptr [rsi - 0x7cb7ffd6] ; ret 0xe801
0x000000000018b9bb : inc dword ptr [rax + 0x10fffa61] ; mov bh, dl ; call qword ptr [rax]
0x0000000000194c0b : inc dword ptr [rax + 0x10fffc0d] ; add ah, bh ; call rax
0x0000000000194ebb : inc dword ptr [rax + 0x15] ; cld ; call qword ptr [rax - 0x1f0003ea]
0x0000000000194637 : inc dword ptr [rax + 0x22] ; sti ; jmp rax
0x0000000000194ea7 : inc dword ptr [rax + 0x23] ; cld ; call qword ptr [rax - 0x2f0003dc]
0x0000000000194d93 : inc dword ptr [rax + 0x2a] ; cld ; jmp qword ptr [rax]
0x0000000000194e17 : inc dword ptr [rax + 0x2b] ; cld ; jmp qword ptr [rax]
0x0000000000194d77 : inc dword ptr [rax + 0x2c] ; cld ; jmp qword ptr [rax]
0x0000000000194d5b : inc dword ptr [rax + 0x2e] ; cld ; jmp qword ptr [rax]
0x0000000000194dff : inc dword ptr [rax + 0x2f] ; cld ; call qword ptr [rax]
0x0000000000194657 : inc dword ptr [rax + 0x2f] ; sti ; jmp rax
0x0000000000194a8f : inc dword ptr [rax + 0x40fffbd7] ; fsincos ; jmp qword ptr [rax]
0x0000000000194d8f : inc dword ptr [rax + 0x40fffc28] ; sub bh, ah ; jmp qword ptr [rax]
0x000000000019510f : inc dword ptr [rax + 0x5f] ; cld ; call rax
0x0000000000194ef7 : inc dword ptr [rax + 0x62] ; cld ; call rax
0x00000000001946cb : inc dword ptr [rax + 0x66] ; sti ; call qword ptr [rax - 0x1f000499]
0x00000000001945df : inc dword ptr [rax + 0xa] ; sti ; call qword ptr [rax]
0x0000000000194c27 : inc dword ptr [rax + 0xb] ; cld ; inc dword ptr [rax + 0xd] ; cld ; call rax
0x0000000000194c2b : inc dword ptr [rax + 0xd] ; cld ; call rax
0x0000000000194b7b : inc dword ptr [rax + 6] ; cld ; jmp qword ptr [rax]
0x0000000000194a7b : inc dword ptr [rax - 0x23] ; sti ; jmp qword ptr [rax]
0x00000000001949d7 : inc dword ptr [rax - 0x24] ; sti ; jmp qword ptr [rax]
0x00000000001949f3 : inc dword ptr [rax - 0x26] ; sti ; jmp qword ptr [rax]
0x0000000000194a93 : inc dword ptr [rax - 0x27] ; sti ; jmp qword ptr [rax]
0x0000000000194aaf : inc dword ptr [rax - 0x29] ; sti ; inc dword ptr [rax] ; fsincos ; call rax
0x0000000000194b63 : inc dword ptr [rax - 0x2e] ; sti ; call qword ptr [rax - 0x1f00042d]
0x0000000000194ecb : inc dword ptr [rax - 0x2f0003e6] ; sbb edi, esp ; jmp qword ptr [rax]
0x0000000000194e77 : inc dword ptr [rax - 0x2f0003ed] ; adc al, 0xfc ; jmp qword ptr [rax]
0x0000000000194cff : inc dword ptr [rax - 0x2f000412] ; out dx, eax ; sti ; jmp qword ptr [rax]
0x0000000000194b1f : inc dword ptr [rax - 0x2f000430] ; sar ebx, 1 ; jmp qword ptr [rax]
0x0000000000194b33 : inc dword ptr [rax - 0x2f00043e] ; ret
0x00000000001946db : inc dword ptr [rax - 0x2f000495] ; insb byte ptr [rdi], dx ; sti ; jmp qword ptr [rax]
0x0000000000194b0f : inc dword ptr [rax - 0x35] ; sti ; call qword ptr [rax - 0x1f000434]
0x0000000000188487 : inc dword ptr [rax - 0x46] ; jmp rsp
0x000000000004b995 : inc dword ptr [rax - 0x4df43] ; jmp qword ptr [rax]
0x0000000000187807 : inc dword ptr [rax - 0x4f000e03] ; std ; int1 ; jmp rax
0x000000000004dc56 : inc dword ptr [rax - 0x51743] ; jmp qword ptr [rax]
0x0000000000195af3 : inc dword ptr [rax - 0x52] ; cld ; call rax
0x000000000019591b : inc dword ptr [rax - 0x56] ; cld ; call rax
0x000000000019485f : inc dword ptr [rax - 0x58] ; std ; call rax
0x0000000000194833 : inc dword ptr [rax - 0x5f] ; std ; call qword ptr [rax]
0x00000000000d0e98 : inc dword ptr [rax - 0x76b7ffc8] ; ret
0x00000000001955fb : inc dword ptr [rax - 0x79] ; cld ; call rax
0x0000000000195423 : inc dword ptr [rax - 0x7d] ; cld ; call rax
0x0000000000194c87 : inc dword ptr [rax - 0x7f0003f6] ; or al, 0xfc ; call qword ptr [rax]
0x0000000000194cdb : inc dword ptr [rax - 9] ; sti ; call qword ptr [rax - 0x1f000408]
0x00000000001945ff : inc dword ptr [rax] ; adc bh, bl ; push rax ; adc bh, bl ; jmp rax
0x0000000000194bf3 : inc dword ptr [rax] ; add bh, ah ; jmp rax
0x00000000000f8db8 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f6
0x000000000004c945 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000005aea2 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x00000000000ec00a : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000000619eb : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000000607fd : inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xffff
0x00000000000b5abb : inc dword ptr [rax] ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x000000000017205d : inc dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000016f297 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000034eec : inc dword ptr [rax] ; add byte ptr [rcx], ch ; ret 0xd089
0x00000000001878a3 : inc dword ptr [rax] ; add dh, dl ; jmp qword ptr [rax]
0x0000000000187883 : inc dword ptr [rax] ; add edx, esi ; jmp qword ptr [rax]
0x00000000001878fb : inc dword ptr [rax] ; add esi, edx ; call qword ptr [rax]
0x0000000000194bef : inc dword ptr [rax] ; cld ; inc dword ptr [rax] ; add bh, ah ; jmp rax
0x0000000000194d9b : inc dword ptr [rax] ; cld ; jmp rax
0x0000000000194a17 : inc dword ptr [rax] ; fdiv st(3), st(0) ; jmp rax
0x00000000001949fb : inc dword ptr [rax] ; fdivp st(3) ; jmp rax
0x0000000000194ab3 : inc dword ptr [rax] ; fsincos ; call rax
0x00000000001876e7 : inc dword ptr [rax] ; in al, dx ; int1 ; call qword ptr [rax]
0x0000000000195d23 : inc dword ptr [rax] ; lahf ; cld ; push qword ptr [rax - 0x62] ; cld ; jmp rax
0x000000000019590b : inc dword ptr [rax] ; lodsb al, byte ptr [rsi] ; cld ; call qword ptr [rax + 0x20fffcab]
0x0000000000118b60 : inc dword ptr [rax] ; or eax, edi ; bswap eax ; ret
0x0000000000194f27 : inc dword ptr [rax] ; pop rbp ; cld ; call qword ptr [rax + 0x26fffc5c]
0x00000000001946eb : inc dword ptr [rax] ; pop rsp ; sti ; jmp qword ptr [rax + 0x20fffb73]
0x0000000000195363 : inc dword ptr [rax] ; push rbx ; cld ; push qword ptr [rax + 0x52] ; cld ; jmp rax
0x0000000000187837 : inc dword ptr [rax] ; push rcx ; call qword ptr [rax]
0x0000000000187827 : inc dword ptr [rax] ; push rcx ; push qword ptr [rax] ; push rcx ; jmp rax
0x000000000019515f : inc dword ptr [rax] ; push rsp ; cld ; push qword ptr [rax + 0x53] ; cld ; jmp rax
0x00000000000fea0c : inc dword ptr [rax] ; ret
0x0000000000195b23 : inc dword ptr [rax] ; test eax, 0xa890fffc ; cld ; jmp qword ptr [rax]
0x0000000000195413 : inc dword ptr [rax] ; test edi, esp ; call qword ptr [rax + 0x20fffc84]
0x0000000000188deb : inc dword ptr [rax] ; test esi, esp ; jmp rdx
0x000000000011ce94 : inc dword ptr [rbp + 0x31] ; rol byte ptr [rbp - 0x6bf0be40], cl ; ret 0x8545
0x000000000011d07a : inc dword ptr [rbp + 0x31] ; rol byte ptr [rbp - 0x6bf0be40], cl ; ret 0xf741
0x00000000001980fb : inc dword ptr [rbp + rsi + 0xfb40001] ; call rsp
0x000000000003a6e3 : inc dword ptr [rbp - 0x3db7f040] ; pop rbx ; ret
0x00000000000fae1c : inc dword ptr [rbp - 0x76608a40] ; out dx, eax ; call 0xf7039
0x0000000000063da9 : inc dword ptr [rbp - 0x76808b40] ; ret
0x0000000000068498 : inc dword ptr [rbp - 0x76818b40] ; ret
0x000000000012120f : inc dword ptr [rbp - 0x769b8740] ; ret
0x00000000001215e1 : inc dword ptr [rbp - 0x76a18740] ; ret
0x0000000000063a81 : inc dword ptr [rbp - 0x76cd8b40] ; ret
0x0000000000068a74 : inc dword ptr [rbp - 0x76e38b40] ; ret
0x000000000011ceea : inc dword ptr [rbp - 0x7b] ; dec dword ptr [rdi] ; lahf ; ret 0xc2e9
0x0000000000060068 : inc dword ptr [rbp - 0x7b] ; ror byte ptr [rdi], 0x85 ; ret 0x31
0x00000000000ff48f : inc dword ptr [rbp - 0x7ce38b40] ; ret
0x00000000000ff4da : inc dword ptr [rbp - 0x7cee8b40] ; ret
0x0000000000050e96 : inc dword ptr [rbx + 0x394401c3] ; jrcxz 0x50f1b ; ret 0x8945
0x0000000000053ad8 : inc dword ptr [rbx + 0x394401c3] ; jrcxz 0x53b5d ; ret
0x00000000000c4fa2 : inc dword ptr [rbx + 0x634801c3] ; fisttp dword ptr [rax + 0x39] ; ret
0x0000000000195a8f : inc dword ptr [rbx + rbp*4 - 4] ; call rsp
0x000000000019a523 : inc dword ptr [rbx + rbx - 0x5e1bfffe] ; stc ; call rsp
0x00000000000d7005 : inc dword ptr [rbx + rcx*4 + 0x73] ; sub al, 0x83 ; ret 0x4801
0x0000000000196d8b : inc dword ptr [rbx + rsi*4 - 0x6ecc0000] ; in eax, dx ; call rsp
0x000000000005a29b : inc dword ptr [rbx - 0x10b743] ; jmp qword ptr [rax]
0x000000000003337e : inc dword ptr [rbx - 0x2f7cfe08] ; dec dword ptr [rax - 0x7d] ; ret
0x000000000012280f : inc dword ptr [rbx - 0xc8b0a08] ; pop rbx ; ret
0x000000000003afaa : inc dword ptr [rbx] ; add byte ptr [rax], al ; xor eax, ecx ; ret
0x00000000000d71e3 : inc dword ptr [rbx] ; cmp byte ptr [rcx + 8], 2 ; jne 0xd71c9 ; jmp 0xd71b9
0x00000000000aa2a8 : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000000aa1cf : inc dword ptr [rbx] ; pop rbx ; ret
0x000000000006583f : inc dword ptr [rcx + 0x80e2] ; add dh, dh ; ret
0x0000000000057679 : inc dword ptr [rcx + 0xf] ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x00000000000eba4a : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret
0x0000000000124594 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x3945
0x0000000000188857 : inc dword ptr [rcx + rax*8 - 0x3e7b000d] ; jmp rsp
0x000000000019a96b : inc dword ptr [rcx + rdi + 0x36c40002] ; cli ; call rsp
0x0000000000067441 : inc dword ptr [rcx - 0x44] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x636b5
0x00000000000ed425 : inc dword ptr [rcx - 0x73] ; push rbp ; dec dword ptr [rax + 0x63] ; ret 0x8d48
0x00000000000b73f2 : inc dword ptr [rcx - 0x77] ; fisttp qword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x000000000002b76c : inc dword ptr [rcx - 0x77] ; ret
0x00000000000db17d : inc dword ptr [rcx - 0x77] ; ret 0x8b49
0x00000000000e34fa : inc dword ptr [rcx - 0x77] ; ror dword ptr [rdi], -0x6c ; ret 0x3ae9
0x00000000000ec093 : inc dword ptr [rcx - 0x7d] ; clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xc085
0x000000000012231a : inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x000000000006ad3e : inc dword ptr [rcx] ; add byte ptr [rax - 0x7d], cl ; clc ; add dword ptr [rax - 0x77], ecx ; ret 0x2b76
0x00000000001862a7 : inc dword ptr [rcx] ; imul ebp, ebp, 0xed75e4ff ; jmp rsp
0x0000000000173de9 : inc dword ptr [rcx] ; ja 0x173df4 ; ret
0x00000000001bbce6 : inc dword ptr [rcx] ; or ch, byte ptr [rdi + 5] ; ret
0x00000000001bbb80 : inc dword ptr [rcx] ; or ebx, eax ; add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x00000000000de5b4 : inc dword ptr [rcx] ; ret
0x00000000000d6468 : inc dword ptr [rcx] ; ret 0x5589
0x00000000000de1ba : inc dword ptr [rcx] ; ret 0x8b49
0x000000000019479b : inc dword ptr [rcx] ; test al, 0xfd ; call qword ptr [rcx + 0x21fffda8]
0x00000000000c5b50 : inc dword ptr [rdi + rcx + 0x49] ; ret
0x0000000000098563 : inc dword ptr [rdi + rcx - 0x4a] ; or byte ptr [rax - 0x77], cl ; ret
0x00000000000e04e7 : inc dword ptr [rdi + rcx - 0x4a] ; xor byte ptr [rax - 0x77], cl ; ret 0x8041
0x000000000019adfb : inc dword ptr [rdi + rdx*2 + 2] ; add ah, dl ; ret
0x000000000019adf3 : inc dword ptr [rdi + rdx*2] ; add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000018890f : inc dword ptr [rdi - 0x1d000c28] ; ret 0xfff3
0x00000000000db626 : inc dword ptr [rdi] ; jbe 0xdb639 ; mov eax, 0xc ; ret
0x0000000000194fe3 : inc dword ptr [rdx + 0x5d] ; cld ; call rdx
0x0000000000187f2f : inc dword ptr [rdx + 0x77] ; call rsp
0x0000000000187f2b : inc dword ptr [rdx + 0x77] ; inc dword ptr [rdx + 0x77] ; call rsp
0x000000000019a983 : inc dword ptr [rdx + rdi + 0x3cc40002] ; cli ; call rsp
0x00000000001959c7 : inc dword ptr [rdx - 0x54] ; cld ; call rdx
0x00000000001954cf : inc dword ptr [rdx - 0x7b] ; cld ; call rdx
0x00000000001862c7 : inc dword ptr [rdx] ; in eax, dx ; jmp rsp
0x0000000000194fd3 : inc dword ptr [rdx] ; pop rdi ; cld ; call qword ptr [rdx + 0x22fffc5e]
0x00000000001959b7 : inc dword ptr [rdx] ; scasb al, byte ptr [rdi] ; cld ; call qword ptr [rdx + 0x22fffcad]
0x00000000001954bf : inc dword ptr [rdx] ; xchg esp, edi ; call qword ptr [rdx + 0x22fffc86]
0x000000000004c86c : inc dword ptr [rip - 0x77cb800] ; dec dword ptr [rax - 0x77] ; ret
0x000000000014b19d : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x0000000000194f3f : inc dword ptr [rsi + 0x61] ; cld ; call rsi
0x000000000019a903 : inc dword ptr [rsi + rsi + 0x2b740002] ; cli ; call rsp
0x000000000018983f : inc dword ptr [rsi - 0x2d000a40] ; ret
0x0000000000195963 : inc dword ptr [rsi - 0x57] ; cld ; call rsi
0x0000000000195953 : inc dword ptr [rsi] ; stosd dword ptr [rdi], eax ; cld ; call qword ptr [rsi + 0x26fffcaa]
0x000000000019545b : inc dword ptr [rsi] ; test bh, ah ; call qword ptr [rsi + 0x26fffc83]
0x0000000000195597 : inc dword ptr [rsp + rax*4 - 4] ; call rsp
0x0000000000197393 : inc dword ptr [rsp + rbx*8 + 0x50340000] ; out dx, al ; call rsp
0x00000000001878eb : inc eax ; add dh, dl ; call rax
0x000000000018787b : inc eax ; add dl, dh ; jmp rax
0x000000000018789b : inc eax ; add edx, esi ; jmp rax
0x00000000001877f7 : inc eax ; cld ; int1 ; push rax ; cld ; int1 ; jmp qword ptr [rax]
0x000000000018871b : inc eax ; fpatan ; jmp qword ptr [rax]
0x0000000000187717 : inc eax ; in al, dx ; int1 ; call rax
0x0000000000194cbb : inc eax ; in al, dx ; sti ; call qword ptr [rax]
0x000000000018981f : inc eax ; mov esi, ebp ; call rsi
0x0000000000194cef : inc eax ; out -5, eax ; call qword ptr [rax - 0x1f000416]
0x0000000000194e87 : inc eax ; sbb ah, bh ; call qword ptr [rax]
0x0000000000034f09 : inc eax ; shr eax, 0x1f ; ret
0x0000000000194d0f : inc eax ; sti ; call qword ptr [rax]
0x00000000001877df : inc eax ; sti ; int1 ; push rax ; sti ; int1 ; jmp qword ptr [rax]
0x0000000000194dab : inc eax ; xor eax, 0x2850fffc ; cld ; call qword ptr [rax]
0x0000000000189d39 : inc ebx ; add dh, bh ; jmp rdi
0x00000000001404aa : inc ebx ; mov eax, 0xffffffff ; ret
0x00000000000368bc : inc ebx ; nop ; mov eax, edx ; ret
0x0000000000074e9c : inc ebx ; nop ; xor eax, eax ; ret
0x0000000000171b49 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000790f8 : inc ebx ; nop word ptr [rax + rax] ; ret
0x00000000001889c3 : inc edi ; hlt ; call rcx
0x0000000000188ae7 : inc edi ; push rax ; hlt ; call rcx
0x000000000005cb06 : inc esi ; add al, 1 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00000000000fdcf9 : inc esi ; jmp qword ptr [r8]
0x000000000019871b : inc esp ; add word ptr [rax], ax ; add al, 0x3e ; cmc ; jmp rsp
0x00000000001969eb : inc esp ; cdq ; add byte ptr [rax], al ; xor ch, bl ; jmp rsp
0x00000000001975bb : inc esp ; out 0, eax ; add ah, ah ; jns 0x1975b9 ; jmp rsp
0x000000000019ad43 : inc esp ; push rdx ; add al, byte ptr [rax] ; in al, -0x58 ; cli ; jmp rsp
0x0000000000196fdb : inc esp ; ret 0
0x00000000001972d3 : inc esp ; salc ; add byte ptr [rax], al ; test byte ptr [rdx], ch ; out dx, al ; jmp rsp
0x0000000000196c53 : inc esp ; test eax, 0x55b40000 ; in eax, dx ; jmp rsp
0x00000000000d6467 : inc qword ptr [rcx] ; ret 0x5589
0x000000000019fe3c : insb byte ptr [rdi], dx ; add byte ptr [r8], al ; jo 0x19fe77 ; jmp 0x19fe4a
0x0000000000146114 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000012d680 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add dh, dh ; ret 0xf04
0x00000000001baf66 : insb byte ptr [rdi], dx ; add dword ptr [rdx], ecx ; ret
0x0000000000034f8b : insb byte ptr [rdi], dx ; and al, 0xe8 ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x000000000003501a : insb byte ptr [rdi], dx ; and al, 0xe8 ; fstp xword ptr [rdi] ; ret
0x0000000000034ff8 : insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x000000000003519a : insb byte ptr [rdi], dx ; and al, 0xfe ; ret
0x0000000000035049 : insb byte ptr [rdi], dx ; and al, 8 ; fscale ; fstp st(1) ; ret
0x0000000000034f2a : insb byte ptr [rdi], dx ; and al, 8 ; ret
0x00000000001983f9 : insb byte ptr [rdi], dx ; call rsp
0x00000000001affb1 : insb byte ptr [rdi], dx ; cmc ; call qword ptr [rax]
0x00000000001afef1 : insb byte ptr [rdi], dx ; cmc ; call qword ptr [rcx]
0x00000000000f39e0 : insb byte ptr [rdi], dx ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x00000000001aff09 : insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x000000000018565e : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x0000000000187429 : insb byte ptr [rdi], dx ; int1 ; jmp qword ptr [rax]
0x0000000000131bc2 : insb byte ptr [rdi], dx ; mov eax, 1 ; ret
0x0000000000003670 : insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x00000000001884d8 : insb byte ptr [rdi], dx ; mov ebx, 0xad78fff3 ; jmp rdx
0x0000000000103f38 : insb byte ptr [rdi], dx ; mov ecx, 0x8b49fff1 ; jge 0x103f48 ; call rbx
0x0000000000194fac : insb byte ptr [rdi], dx ; pop rsp ; cld ; call qword ptr [rdx]
0x00000000001b043c : insb byte ptr [rdi], dx ; push rcx ; add dword ptr [rax], eax ; and byte ptr [rdx - 0xb], dh ; jmp qword ptr [rcx]
0x0000000000196ff4 : insb byte ptr [rdi], dx ; ret
0x0000000000018f40 : insb byte ptr [rdi], dx ; ret 0x18
0x000000000019988c : insb byte ptr [rdi], dx ; ret 1
0x000000000019cc3c : insb byte ptr [rdi], dx ; sbb dword ptr [rax], eax ; add al, dl ; adc ebp, ecx ; call qword ptr [rbx]
0x00000000000f5b80 : insb byte ptr [rdi], dx ; std ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000001946e1 : insb byte ptr [rdi], dx ; sti ; jmp qword ptr [rax]
0x00000000001baa3c : insb byte ptr [rdi], dx ; test dword ptr [rcx], 0xfb96a000 ; jmp qword ptr [rdx]
0x00000000001a4e3c : insb byte ptr [rdi], dx ; wait ; add byte ptr [rax], al ; add dh, ch ; in eax, dx ; call rsi
0x00000000001ae73c : insb byte ptr [rdi], dx ; xor al, 1 ; add byte ptr [rax], ah ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x0000000000148d80 : insd dword ptr [rdi], dx ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000096eef : insd dword ptr [rdi], dx ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000149c80 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000006cde1 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x000000000019ac01 : insd dword ptr [rdi], dx ; cli ; jmp rsp
0x00000000000c8b80 : insd dword ptr [rdi], dx ; cmc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000001b00b1 : insd dword ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x0000000000104207 : insd dword ptr [rdi], dx ; enter 0x72e8, -0x7b ; cli ; dec dword ptr [rax + 0x39] ; ret
0x0000000000186279 : insd dword ptr [rdi], dx ; in eax, dx ; jmp rsp
0x00000000000badaf : insd dword ptr [rdi], dx ; lodsb al, byte ptr [rsi] ; xor byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000018565f : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x0000000000001bf4 : insd dword ptr [rdi], dx ; ret 0x1bb7
0x0000000000183a0d : insd dword ptr [rdi], dx ; ret 0xb9b9
0x00000000000cea7f : insd dword ptr [rdi], dx ; ret 0xfffb
0x000000000018491f : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000000fd842 : int 0x31
0x00000000000485d3 : int 0x48
0x0000000000002c33 : int 0x80
0x000000000013283f : int 0xc2
0x00000000000883ef : int 0xc3
0x00000000000038ab : int 3
0x00000000001aa4bd : int1 ; add byte ptr [rax], al ; adc byte ptr [rbx], dl ; jmp qword ptr [rcx]
0x00000000001aa44d : int1 ; add byte ptr [rax], al ; adc byte ptr [rdx], 0xf2 ; call qword ptr [rdx]
0x0000000000050486 : int1 ; add eax, r8d ; ret
0x00000000000b986a : int1 ; call 0x8e987
0x00000000000b9869 : int1 ; call 0x8e988
0x0000000000187676 : int1 ; call qword ptr [rax]
0x00000000001a981a : int1 ; call qword ptr [rbx]
0x00000000001a8bea : int1 ; call qword ptr [rcx]
0x00000000001a922a : int1 ; call qword ptr [rdx]
0x00000000001a89da : int1 ; call qword ptr [rsi]
0x0000000000187666 : int1 ; call rax
0x000000000002185c : int1 ; call rbx
0x00000000001a9a12 : int1 ; call rdi
0x00000000001a9d6a : int1 ; call rsi
0x000000000018740e : int1 ; call rsp
0x0000000000110298 : int1 ; cmp dil, al ; mov eax, edx ; cmove eax, ecx ; ret
0x00000000001873ea : int1 ; dec dword ptr [rax + 0x6b] ; int1 ; call rax
0x000000000010220c : int1 ; dec dword ptr [rax - 0x75] ; jge 0x102218 ; call rbx
0x00000000001024bf : int1 ; dec dword ptr [rax - 0x75] ; jge 0x1024cb ; call rbx
0x0000000000104057 : int1 ; dec dword ptr [rax - 0x75] ; jge 0x104063 ; call rbx
0x00000000001020ca : int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000001024cd : int1 ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x00000000001020d7 : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x1020e3 ; call rbx
0x00000000001021fe : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x10220a ; call rbx
0x0000000000102341 : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x10234d ; call rbx
0x00000000001024b1 : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x1024bd ; call rbx
0x0000000000103ccf : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x103cdb ; call rbx
0x0000000000103df7 : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x103e03 ; call rbx
0x0000000000103f3a : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x103f46 ; call rbx
0x000000000010403b : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x104047 ; call rbx
0x0000000000197e22 : int1 ; dec esp ; and dword ptr [rcx], eax ; add ah, dl ; jnp 0x197e25 ; jmp rsp
0x0000000000003a9f : int1 ; imul esi ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x0000000000187806 : int1 ; inc dword ptr [rax - 0x4f000e03] ; std ; int1 ; jmp rax
0x00000000001876e6 : int1 ; inc dword ptr [rax] ; in al, dx ; int1 ; call qword ptr [rax]
0x0000000000187836 : int1 ; inc dword ptr [rax] ; push rcx ; call qword ptr [rax]
0x0000000000187826 : int1 ; inc dword ptr [rax] ; push rcx ; push qword ptr [rax] ; push rcx ; jmp rax
0x00000000001877f6 : int1 ; inc eax ; cld ; int1 ; push rax ; cld ; int1 ; jmp qword ptr [rax]
0x0000000000187716 : int1 ; inc eax ; in al, dx ; int1 ; call rax
0x00000000001877de : int1 ; inc eax ; sti ; int1 ; push rax ; sti ; int1 ; jmp qword ptr [rax]
0x000000000009e1ad : int1 ; je 0x9e1a4 ; ret
0x00000000000a9b5b : int1 ; jl 0xa9bac ; adc dword ptr [rsi - 1], edx ; ret
0x00000000000a9b7c : int1 ; jl 0xa9bcd ; adc dword ptr [rsi - 1], edx ; ret
0x00000000000a9b8f : int1 ; jl 0xa9be0 ; adc dword ptr [rsi - 1], edx ; ret
0x00000000000a9c64 : int1 ; jl 0xa9cb5 ; adc dword ptr [rsi - 1], edx ; ret
0x00000000000a9cbc : int1 ; jl 0xa9d0d ; adc dword ptr [rsi + 3], edx ; ret
0x00000000000a9d59 : int1 ; jl 0xa9daa ; adc dword ptr [rsi + 7], edx ; ret
0x000000000005c41b : int1 ; jmp 0x5c3e2
0x000000000005c41a : int1 ; jmp 0x5c3e3
0x000000000018781e : int1 ; jmp qword ptr [rax - 0x2f000e02]
0x0000000000187632 : int1 ; jmp qword ptr [rax - 0x2f000e18]
0x000000000018742a : int1 ; jmp qword ptr [rax]
0x00000000001a88ca : int1 ; jmp qword ptr [rcx]
0x00000000001a97ea : int1 ; jmp qword ptr [rdi]
0x000000000018766a : int1 ; jmp rax
0x00000000000aa265 : int1 ; jmp rcx
0x00000000001a8e32 : int1 ; jmp rdi
0x0000000000187416 : int1 ; jmp rsp
0x0000000000197c52 : int1 ; lcall ptr [rsi + rdx + 0x38240001] ; int1 ; jmp rsp
0x000000000015a38b : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000152e0f : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000012dfda : int1 ; mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000129abe : int1 ; mov rdi, r13 ; call r12
0x0000000000171623 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x00000000001bbc80 : int1 ; or byte ptr [rbx], al ; ret
0x000000000008e964 : int1 ; or eax, dword ptr [rax] ; ret
0x00000000000aa2ab : int1 ; pop rbx ; mov eax, eax ; ret
0x0000000000096aee : int1 ; pop rbx ; pop rbp ; ret
0x000000000018762e : int1 ; push qword ptr [rax - 0x18] ; int1 ; jmp qword ptr [rax - 0x2f000e18]
0x000000000018780a : int1 ; push qword ptr [rax - 0x1f000e03] ; std ; int1 ; call qword ptr [rax]
0x0000000000187712 : int1 ; push qword ptr [rax - 0x3f000e14] ; in al, dx ; int1 ; call rax
0x000000000018781a : int1 ; push qword ptr [rax - 2] ; int1 ; jmp qword ptr [rax - 0x2f000e02]
0x000000000018782a : int1 ; push qword ptr [rax] ; push rcx ; jmp rax
0x0000000000187406 : int1 ; push qword ptr [rbx + rbp*2 + 0x6bc4fff1] ; int1 ; call rsp
0x0000000000187412 : int1 ; push qword ptr [rbx + rbp*2 - 0xf] ; jmp rsp
0x00000000001877fa : int1 ; push rax ; cld ; int1 ; jmp qword ptr [rax]
0x00000000001877c6 : int1 ; push rax ; cli ; int1 ; call qword ptr [rax]
0x00000000001875de : int1 ; push rax ; in eax, -0xf ; call qword ptr [rax]
0x000000000018761e : int1 ; push rax ; out -0xf, eax ; call qword ptr [rax]
0x00000000001875fe : int1 ; push rax ; out 0xf1, al ; call qword ptr [rax]
0x000000000018785e : int1 ; push rax ; push rcx ; call qword ptr [rax]
0x00000000001877e2 : int1 ; push rax ; sti ; int1 ; jmp qword ptr [rax]
0x000000000000260b : int1 ; ret
0x0000000000185036 : int1 ; ret 0x5803
0x0000000000171627 : int1 ; sub eax, edx ; ret
0x000000000008215b : int1 ; sysenter
0x000000000004818d : int1 ; xor eax, eax ; pop rbx ; ret
0x00000000000969fe : int1 ; xor eax, eax ; ret
0x0000000000199b25 : iretd ; add dword ptr [rax], eax ; adc al, 0xf ; clc ; call rsp
0x00000000001a0d39 : iretd ; in al, dx ; jmp qword ptr [rax]
0x00000000001886c1 : iretd ; jmp rdi
0x0000000000088839 : iretd ; mov qword ptr [rbx], rsi ; mov qword ptr [rbx + 0x48], r9 ; call rcx
0x00000000001020d5 : iretd ; xlatb ; int1 ; dec dword ptr [rcx - 0x75] ; jge 0x1020e5 ; call rbx
0x0000000000104e04 : ja 0x104e13 ; ret
0x0000000000106ac4 : ja 0x106ad3 ; ret
0x0000000000106d06 : ja 0x106d12 ; ret
0x0000000000106db8 : ja 0x106dc3 ; ret
0x0000000000106df2 : ja 0x106e03 ; ret
0x00000000001079a3 : ja 0x1079b2 ; ret
0x0000000000107b23 : ja 0x107b32 ; ret
0x0000000000107fbd : ja 0x107fc2 ; ret
0x000000000010805f : ja 0x10806a ; ret
0x000000000010810f : ja 0x10811a ; ret
0x0000000000114f70 : ja 0x114f7b ; ret
0x0000000000114ff5 : ja 0x114fcc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011501d : ja 0x11503d ; ret
0x0000000000116ce2 : ja 0x116cf3 ; ret
0x0000000000116d92 : ja 0x116da3 ; ret
0x00000000001187d7 : ja 0x1187ea ; mov rax, rdi ; sar rax, 6 ; ret
0x0000000000123423 : ja 0x123428 ; ret
0x0000000000123750 : ja 0x12373b ; mov eax, 0xffffffff ; ret
0x00000000001237f9 : ja 0x123810 ; shl esi, 4 ; lea eax, dword ptr [rsi + 8] ; ret
0x000000000012afa1 : ja 0x12aff4 ; mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000012dffd : ja 0x12dfee ; mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000013b617 : ja 0x13b633 ; ret
0x000000000013b78f : ja 0x13b7b2 ; mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000013ba10 : ja 0x13ba40 ; mov rax, qword ptr [rdi + 0x18] ; ret
0x0000000000173deb : ja 0x173df2 ; ret
0x00000000001850a4 : ja 0x18502b ; ret 0x48f
0x0000000000187f31 : ja 0x187f28 ; call rsp
0x0000000000187f2d : ja 0x187f28 ; inc dword ptr [rdx + 0x77] ; call rsp
0x0000000000187f30 : ja 0x187f29 ; call rsp
0x0000000000187f2c : ja 0x187f29 ; inc dword ptr [rdx + 0x77] ; call rsp
0x000000000002daad : ja 0x2dac8 ; lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000003541e : ja 0x35443 ; ret
0x0000000000035726 : ja 0x35733 ; ret
0x0000000000035792 : ja 0x357a3 ; ret
0x00000000000357dc : ja 0x357e2 ; ret
0x00000000000038ea : ja 0x394c ; clc ; salc ; jb 0x3972 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x0000000000048a4e : ja 0x48aa0 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000050477 : ja 0x5045e ; mov eax, r8d ; ret
0x00000000000617dc : ja 0x61769 ; ret 0x348
0x0000000000062b03 : ja 0x62a90 ; ret 0x348
0x0000000000069c28 : ja 0x69bb5 ; ret 0x348
0x0000000000072f66 : ja 0x72f73 ; ret
0x0000000000077bb8 : ja 0x77bd1 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008e842 : ja 0x8e853 ; ret
0x0000000000093a48 : ja 0x93a42 ; ret 0x7401
0x000000000009640d : ja 0x963ef ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009ee2c : ja 0x9ee45 ; mov rax, rdi ; ret
0x000000000009f5b3 : ja 0x9f5b7 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000009fd06 : ja 0x9fd0a ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x00000000000a0453 : ja 0xa0457 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x00000000000a5327 : ja 0xa532d ; ret
0x00000000000a5343 : ja 0xa534d ; mov dword ptr [rdi], ecx ; ret
0x00000000000a5384 : ja 0xa5393 ; mov qword ptr [rdi], rcx ; ret
0x00000000000a5409 : ja 0xa541d ; ret
0x00000000000a545f : ja 0xa5477 ; ret
0x00000000000a54e1 : ja 0xa54fd ; ret
0x00000000000a6927 : ja 0xa6931 ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a6943 : ja 0xa6951 ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a6994 : ja 0xa69a7 ; mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a6a79 : ja 0xa6a91 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a6aef : ja 0xa6b0b ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a6b71 : ja 0xa6b91 ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a8407 : ja 0xa840d ; ret
0x00000000000a8423 : ja 0xa842d ; mov dword ptr [rdi], ecx ; ret
0x00000000000a8464 : ja 0xa8473 ; mov qword ptr [rdi], rcx ; ret
0x00000000000a84e9 : ja 0xa84fd ; ret
0x00000000000a853f : ja 0xa8557 ; ret
0x00000000000a85c1 : ja 0xa85dd ; ret
0x00000000000a8ed7 : ja 0xa8edd ; ret
0x00000000000a8ef3 : ja 0xa8efd ; mov dword ptr [rdi], ecx ; ret
0x00000000000a8f34 : ja 0xa8f43 ; mov qword ptr [rdi], rcx ; ret
0x00000000000a8fb9 : ja 0xa8fcd ; ret
0x00000000000a900f : ja 0xa9027 ; ret
0x00000000000a9091 : ja 0xa90ad ; ret
0x00000000000aa559 : ja 0xaa579 ; sub rdi, 0x10 ; add rax, rdi ; ret
0x00000000000abdf2 : ja 0xabe02 ; cmove rax, rcx ; ret
0x00000000000ac1ec : ja 0xac1fc ; mov eax, edi ; ret
0x00000000000bba0d : ja 0xbba1b ; ret
0x00000000000c79ad : ja 0xc79bb ; pop rbx ; ret
0x00000000000c8c27 : ja 0xc8c32 ; ret
0x00000000000cb5b6 : ja 0xcb5c2 ; ret
0x00000000000cb650 : ja 0xcb65a ; ret
0x00000000000cb741 : ja 0xcb74a ; ret
0x00000000000cc849 : ja 0xcc852 ; ret
0x00000000000cc8b9 : ja 0xcc8c2 ; ret
0x00000000000ccb0d : ja 0xccb12 ; ret
0x00000000000ccb8d : ja 0xccb92 ; ret
0x00000000000d837e : ja 0xd8397 ; mov eax, 2 ; ret
0x00000000000f56c1 : ja 0xf56cb ; xor eax, eax ; ret
0x00000000000f615e : ja 0xf60f6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f6192 : ja 0xf6183 ; ret
0x00000000000f633b : ja 0xf6343 ; ret
0x00000000000f638a : ja 0xf6393 ; ret
0x00000000000f63db : ja 0xf63e3 ; ret
0x00000000000f6433 : ja 0xf6443 ; ret
0x00000000000f6497 : ja 0xf64a3 ; ret
0x00000000000f64f0 : ja 0xf64fb ; ret
0x00000000000f66cf : ja 0xf66db ; ret
0x00000000000f6d99 : ja 0xf6dd3 ; ret
0x00000000000f6e3d : ja 0xf6e87 ; add rsp, 0x60 ; pop rbx ; ret
0x00000000000face3 : ja 0xfacf8 ; mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x00000000000fb218 : ja 0xfb223 ; ret
0x00000000000fb26c : ja 0xfb273 ; ret
0x00000000000fb9c0 : ja 0xfb9ca ; ret
0x00000000000fbaa3 : ja 0xfbaaf ; ret
0x00000000000fbaf9 : ja 0xfbb05 ; ret
0x00000000000fbee4 : ja 0xfbef2 ; ret
0x00000000000fc573 : ja 0xfc5a3 ; ret
0x00000000000fc790 : ja 0xfc79a ; ret
0x00000000000fc840 : ja 0xfc84a ; ret
0x00000000000fc8eb : ja 0xfc8f2 ; ret
0x00000000000fc95b : ja 0xfc962 ; ret
0x00000000000fc9dc : ja 0xfc9e2 ; ret
0x00000000000fca8c : ja 0xfca92 ; ret
0x00000000000fcfdc : ja 0xfcfe3 ; ret
0x00000000000fe6fd : ja 0xfe70b ; ret
0x00000000000fe791 : ja 0xfe79b ; ret
0x00000000000fe831 : ja 0xfe83b ; ret
0x00000000000fe885 : ja 0xfe893 ; ret
0x00000000000fe969 : ja 0xfe975 ; ret
0x00000000000022df : ja 0xffffffffd6104b6b ; ret
0x0000000000100c1f : jae 0x100c24 ; ret
0x0000000000100e8d : jae 0x100e92 ; ret
0x0000000000100ebd : jae 0x100ec2 ; ret
0x0000000000100ef6 : jae 0x100f2b ; ret
0x0000000000100f4d : jae 0x100f52 ; ret
0x0000000000100f7d : jae 0x100f82 ; ret
0x0000000000100fb0 : jae 0x100fb5 ; ret
0x0000000000100fdd : jae 0x100fe2 ; ret
0x000000000010100d : jae 0x101012 ; ret
0x000000000010103d : jae 0x101042 ; ret
0x000000000010106d : jae 0x101072 ; ret
0x0000000000105730 : jae 0x105735 ; ret
0x000000000010575d : jae 0x105762 ; ret
0x000000000010578d : jae 0x105792 ; ret
0x00000000001057c0 : jae 0x1057c5 ; ret
0x00000000001057f0 : jae 0x1057f5 ; ret
0x000000000010581d : jae 0x105822 ; ret
0x0000000000105850 : jae 0x105855 ; ret
0x000000000010587d : jae 0x105882 ; ret
0x00000000001058ad : jae 0x1058b2 ; ret
0x00000000001058e0 : jae 0x1058e5 ; ret
0x000000000010590d : jae 0x105912 ; ret
0x0000000000105940 : jae 0x105945 ; ret
0x0000000000106a2d : jae 0x106a32 ; ret
0x0000000000106a5d : jae 0x106a62 ; ret
0x0000000000106b8d : jae 0x106b92 ; ret
0x0000000000106bcd : jae 0x106bd2 ; ret
0x0000000000106bfd : jae 0x106c02 ; ret
0x0000000000106c2d : jae 0x106c32 ; ret
0x0000000000106c5d : jae 0x106c62 ; ret
0x0000000000106e80 : jae 0x106e85 ; ret
0x0000000000106ead : jae 0x106eb2 ; ret
0x0000000000106edd : jae 0x106ee2 ; ret
0x0000000000106f0d : jae 0x106f12 ; ret
0x0000000000106f50 : jae 0x106f55 ; ret
0x0000000000106f7d : jae 0x106f82 ; ret
0x0000000000106fad : jae 0x106fb2 ; ret
0x0000000000106fdd : jae 0x106fe2 ; ret
0x000000000010700d : jae 0x107012 ; ret
0x000000000010703d : jae 0x107042 ; ret
0x000000000010706d : jae 0x107072 ; ret
0x000000000010709d : jae 0x1070a2 ; ret
0x00000000001070cd : jae 0x1070d2 ; ret
0x0000000000107100 : jae 0x107105 ; ret
0x0000000000107139 : jae 0x107171 ; ret
0x000000000010718d : jae 0x107192 ; ret
0x00000000001071c0 : jae 0x1071c5 ; ret
0x00000000001071ed : jae 0x1071f2 ; ret
0x000000000010721d : jae 0x107222 ; ret
0x000000000010724d : jae 0x107252 ; ret
0x000000000010727d : jae 0x107282 ; ret
0x00000000001072ad : jae 0x1072b2 ; ret
0x00000000001072e0 : jae 0x1072e5 ; ret
0x0000000000107310 : jae 0x107315 ; ret
0x000000000010733d : jae 0x107342 ; ret
0x000000000010736d : jae 0x107372 ; ret
0x00000000001073a0 : jae 0x1073a5 ; ret
0x00000000001073d0 : jae 0x1073d5 ; ret
0x0000000000107400 : jae 0x107405 ; ret
0x0000000000107439 : jae 0x107471 ; ret
0x000000000010748d : jae 0x107492 ; ret
0x00000000001074c9 : jae 0x107501 ; ret
0x000000000010751d : jae 0x107522 ; ret
0x000000000010754d : jae 0x107552 ; ret
0x0000000000107589 : jae 0x1075c1 ; ret
0x00000000001075dd : jae 0x1075e2 ; ret
0x0000000000107610 : jae 0x107615 ; ret
0x000000000010763d : jae 0x107642 ; ret
0x000000000010766d : jae 0x107672 ; ret
0x00000000001076a0 : jae 0x1076a5 ; ret
0x00000000001076d6 : jae 0x10770b ; ret
0x000000000010772d : jae 0x107732 ; ret
0x0000000000107760 : jae 0x107765 ; ret
0x0000000000107790 : jae 0x107795 ; ret
0x00000000001077e6 : jae 0x10781b ; ret
0x000000000010783d : jae 0x107842 ; ret
0x0000000000107876 : jae 0x1078ab ; ret
0x00000000001078cd : jae 0x1078d2 ; ret
0x00000000001078fd : jae 0x107902 ; ret
0x0000000000107930 : jae 0x107935 ; ret
0x000000000010795d : jae 0x107962 ; ret
0x0000000000107a59 : jae 0x107a91 ; ret
0x0000000000107ab6 : jae 0x107aeb ; ret
0x0000000000107bd6 : jae 0x107c0b ; ret
0x0000000000107c39 : jae 0x107c71 ; ret
0x0000000000107c90 : jae 0x107c95 ; ret
0x0000000000107cbd : jae 0x107cc2 ; ret
0x0000000000107ced : jae 0x107cf2 ; ret
0x0000000000107d20 : jae 0x107d25 ; ret
0x0000000000108279 : jae 0x1082b1 ; ret
0x00000000001082ac : jae 0x1082b5 ; ret
0x00000000001082d9 : jae 0x108311 ; ret
0x000000000010832d : jae 0x108332 ; ret
0x000000000010835d : jae 0x108362 ; ret
0x000000000010838d : jae 0x108392 ; ret
0x00000000001083bd : jae 0x1083c2 ; ret
0x00000000001083f0 : jae 0x1083f5 ; ret
0x0000000000108420 : jae 0x108425 ; ret
0x000000000010844d : jae 0x108452 ; ret
0x000000000010847d : jae 0x108482 ; ret
0x00000000001084ad : jae 0x1084b2 ; ret
0x00000000001084dd : jae 0x1084e2 ; ret
0x000000000010ebac : jae 0x10ebd7 ; cmp byte ptr [rax], dil ; je 0x10ebe1 ; mov rdx, rax ; jmp 0x10ebce
0x000000000010eeb7 : jae 0x10eede ; cmp byte ptr [r8], r9b ; je 0x10eee5 ; mov rdx, r8 ; jmp 0x10eed5
0x000000000013b6f5 : jae 0x13b704 ; xor eax, eax ; ret
0x000000000013b735 : jae 0x13b744 ; xor eax, eax ; ret
0x000000000013fed0 : jae 0x13fed5 ; ret
0x000000000013ff20 : jae 0x13ff25 ; ret
0x0000000000142d24 : jae 0x142d07 ; mov eax, 1 ; ret
0x0000000000173bac : jae 0x173bbb ; call qword ptr [rbx]
0x0000000000173bac : jae 0x173bbf ; call qword ptr [rbx]
0x0000000000174967 : jae 0x174984 ; nop dword ptr [rax] ; call qword ptr [rbx]
0x0000000000183662 : jae 0x183644 ; jo 0x1836e0 ; mov ebp, 0xfb67d10d ; ret
0x00000000001844fe : jae 0x1844d9 ; push rsi ; pop rdx ; je 0x1844ce ; ret 0xacfc
0x00000000001946f1 : jae 0x1946f0 ; jmp qword ptr [rax]
0x00000000001a0be9 : jae 0x1a0c01 ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000001a1535 : jae 0x1a154d ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000001a1df7 : jae 0x1a1e05 ; ret
0x00000000001a6e01 : jae 0x1a6df4 ; jmp qword ptr [rax]
0x00000000001b0501 : jae 0x1b04fa ; jmp qword ptr [rcx]
0x00000000001b0531 : jae 0x1b052a ; jmp qword ptr [rcx]
0x00000000001b0549 : jae 0x1b0542 ; jmp qword ptr [rcx]
0x00000000001b0579 : jae 0x1b0572 ; jmp qword ptr [rcx]
0x000000000002cb2a : jae 0x2cb46 ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x000000000003575d : jae 0x35762 ; ret
0x0000000000035e1d : jae 0x35e22 ; ret
0x0000000000047ae7 : jae 0x47af0 ; xor eax, eax ; ret
0x00000000000697fc : jae 0x69789 ; ret 0x348
0x000000000006b31d : jae 0x6b322 ; ret
0x000000000006b350 : jae 0x6b355 ; ret
0x0000000000079548 : jae 0x79555 ; movzx eax, byte ptr [rax] ; ret
0x000000000007b203 : jae 0x7b1b7 ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000007cb7b : jae 0x7cba5 ; movzx eax, byte ptr [rax] ; ret
0x0000000000088c1e : jae 0x88c2e ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bbaed : jae 0xbbaf2 ; ret
0x00000000000bebdd : jae 0xbebe2 ; ret
0x00000000000bec0d : jae 0xbec12 ; ret
0x00000000000cb50d : jae 0xcb512 ; ret
0x00000000000cb700 : jae 0xcb705 ; ret
0x00000000000cb7dd : jae 0xcb7e2 ; ret
0x00000000000cb866 : jae 0xcb89b ; ret
0x00000000000cb8c6 : jae 0xcb8fb ; ret
0x00000000000cbc77 : jae 0xcbc7c ; ret
0x00000000000cbcfd : jae 0xcbd02 ; ret
0x00000000000cc80d : jae 0xcc812 ; ret
0x00000000000cc9ad : jae 0xcc9b2 ; ret
0x00000000000cc9dd : jae 0xcc9e2 ; ret
0x00000000000cca3d : jae 0xcca42 ; ret
0x00000000000cca6d : jae 0xcca72 ; ret
0x00000000000cca9d : jae 0xccaa2 ; ret
0x00000000000ccacd : jae 0xccad2 ; ret
0x00000000000cf176 : jae 0xcf18e ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000e024a : jae 0xe0496 ; movdqa xmm0, xmm2 ; jmp 0xe023c
0x00000000000e9cad : jae 0xe9cb2 ; ret
0x00000000000e9cdd : jae 0xe9ce2 ; ret
0x00000000000e9d0d : jae 0xe9d12 ; ret
0x00000000000e9d3d : jae 0xe9d42 ; ret
0x00000000000e9d6d : jae 0xe9d72 ; ret
0x00000000000e9d9d : jae 0xe9da2 ; ret
0x00000000000e9dcd : jae 0xe9dd2 ; ret
0x00000000000e9dfd : jae 0xe9e02 ; ret
0x00000000000f51c9 : jae 0xf5201 ; ret
0x00000000000f5229 : jae 0xf5261 ; ret
0x00000000000f629d : jae 0xf62a2 ; ret
0x00000000000f653d : jae 0xf6542 ; ret
0x00000000000f656d : jae 0xf6572 ; ret
0x00000000000f663d : jae 0xf6642 ; ret
0x00000000000f666d : jae 0xf6672 ; ret
0x00000000000f672d : jae 0xf6732 ; ret
0x00000000000f675d : jae 0xf6762 ; ret
0x00000000000f6796 : jae 0xf67cb ; ret
0x00000000000f69b6 : jae 0xf69eb ; ret
0x00000000000f6a16 : jae 0xf6a4b ; ret
0x00000000000f6a6d : jae 0xf6a72 ; ret
0x00000000000f6efd : jae 0xf6f02 ; ret
0x00000000000f7046 : jae 0xf707b ; ret
0x00000000000f709d : jae 0xf70a2 ; ret
0x00000000000f70cd : jae 0xf70d2 ; ret
0x00000000000f70fd : jae 0xf7102 ; ret
0x00000000000f712d : jae 0xf7132 ; ret
0x00000000000f715d : jae 0xf7162 ; ret
0x00000000000f7196 : jae 0xf71cb ; ret
0x00000000000f71ed : jae 0xf71f2 ; ret
0x00000000000f721d : jae 0xf7222 ; ret
0x00000000000f7a4d : jae 0xf7a52 ; ret
0x00000000000f7a7d : jae 0xf7a82 ; ret
0x00000000000f7aad : jae 0xf7ab2 ; ret
0x00000000000f7ae0 : jae 0xf7ae5 ; ret
0x00000000000f80bd : jae 0xf80c2 ; ret
0x00000000000f80f0 : jae 0xf80f5 ; ret
0x00000000000f811d : jae 0xf8122 ; ret
0x00000000000f814d : jae 0xf8152 ; ret
0x00000000000f817d : jae 0xf8182 ; ret
0x00000000000f81b0 : jae 0xf81b5 ; ret
0x00000000000f81dd : jae 0xf81e2 ; ret
0x00000000000f820d : jae 0xf8212 ; ret
0x00000000000f823d : jae 0xf8242 ; ret
0x00000000000fae76 : jae 0xfaeab ; ret
0x00000000000faf04 : jae 0xfaf57 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fb1e0 : jae 0xfb1e5 ; ret
0x00000000000fb959 : jae 0xfb991 ; ret
0x00000000000fc0ad : jae 0xfc0b2 ; ret
0x00000000000fc0dd : jae 0xfc0e2 ; ret
0x00000000000fc10d : jae 0xfc112 ; ret
0x00000000000fc4ad : jae 0xfc4b2 ; ret
0x00000000000fc68d : jae 0xfc692 ; ret
0x00000000000fc6c6 : jae 0xfc6fb ; ret
0x00000000000fc726 : jae 0xfc75b ; ret
0x00000000000fcc1d : jae 0xfcc22 ; ret
0x00000000000fccbd : jae 0xfccc2 ; ret
0x00000000000fccf9 : jae 0xfcd31 ; ret
0x00000000000fce4d : jae 0xfce52 ; ret
0x00000000000fce7d : jae 0xfce82 ; ret
0x00000000000fceb6 : jae 0xfceeb ; ret
0x00000000000fcf0d : jae 0xfcf12 ; ret
0x00000000000fcf46 : jae 0xfcf7b ; ret
0x00000000000fcf9d : jae 0xfcfa2 ; ret
0x00000000000fd30d : jae 0xfd312 ; ret
0x00000000000fd33d : jae 0xfd342 ; ret
0x00000000000fd36d : jae 0xfd372 ; ret
0x00000000000fe8bd : jae 0xfe8c2 ; ret
0x00000000000fe8ed : jae 0xfe8f2 ; ret
0x00000000000fecfb : jae 0xfed30 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000fed2f : jae 0xfed65 ; add byte ptr [rax - 0x76b7ffc8], al ; ret
0x00000000000fee04 : jae 0xfee3b ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rax + rdx - 0x18] ; jmp rbx
0x0000000000121e55 : jae 0xffffffff835a2022 ; ret 0x3904
0x0000000000102332 : jb 0x102310 ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000010420a : jb 0x104197 ; cli ; dec dword ptr [rax + 0x39] ; ret
0x000000000010e10b : jb 0x10e11f ; mov eax, 1 ; ret
0x000000000011410d : jb 0x114104 ; xor eax, eax ; ret
0x00000000001236d8 : jb 0x1236cb ; mov eax, 0xffffffff ; ret
0x00000000001236d7 : jb 0x1236cc ; mov eax, 0xffffffff ; ret
0x000000000012e001 : jb 0x12e025 ; ret
0x000000000012dffb : jb 0x12e02d ; ja 0x12dff0 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000014d2a1 : jb 0x14d28a ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x000000000014d304 : jb 0x14d2ed ; vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x000000000014d3a8 : jb 0x14d3b4 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000014d791 : jb 0x14d77a ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x000000000014d7f4 : jb 0x14d7dd ; vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x000000000014d898 : jb 0x14d8a4 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000014db34 : jb 0x14db1d ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x000000000014db94 : jb 0x14db7d ; vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x000000000014dc38 : jb 0x14dc44 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000150e1a : jb 0x150e2a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000150f6a : jb 0x150f7a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001510ba : jb 0x1510ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015120a : jb 0x15121a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015135a : jb 0x15136a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001514aa : jb 0x1514ba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001515fa : jb 0x15160a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015174a : jb 0x15175a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015189a : jb 0x1518aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001519ea : jb 0x1519fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151b3a : jb 0x151b4a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151c8a : jb 0x151c9a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151dda : jb 0x151dea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151f2a : jb 0x151f3a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015207a : jb 0x15208a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001537ea : jb 0x1537fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015393a : jb 0x15394a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153a8a : jb 0x153a9a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153bda : jb 0x153bea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153d2a : jb 0x153d3a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153e7a : jb 0x153e8a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153fca : jb 0x153fda ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015411a : jb 0x15412a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015426a : jb 0x15427a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001543ba : jb 0x1543ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015450a : jb 0x15451a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015465a : jb 0x15466a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001547aa : jb 0x1547ba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001548fa : jb 0x15490a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154a4a : jb 0x154a5a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001561ba : jb 0x1561ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015630a : jb 0x15631a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015645a : jb 0x15646a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001565aa : jb 0x1565ba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001566fa : jb 0x15670a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015684a : jb 0x15685a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015699a : jb 0x1569aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156aea : jb 0x156afa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156c3a : jb 0x156c4a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156d8a : jb 0x156d9a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156eda : jb 0x156eea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015702a : jb 0x15703a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015717a : jb 0x15718a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001572ca : jb 0x1572da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015741a : jb 0x15742a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000172297 : jb 0x1722a7 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x00000000001722a3 : jb 0x1722b9 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x00000000001722b3 : jb 0x1722bb ; mov byte ptr [rdi], cl ; ret
0x0000000000173bdb : jb 0x173bd1 ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000174979 : jb 0x174978 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000194758 : jb 0x194703 ; std ; push qword ptr [rdx - 0x5d] ; std ; call qword ptr [rax]
0x000000000019475c : jb 0x194704 ; std ; call qword ptr [rax]
0x00000000001978d9 : jb 0x1978cc ; jmp rsp
0x000000000019891d : jb 0x198926 ; add byte ptr [rbx + rax - 0xa], dl ; jmp rsp
0x00000000001b0429 : jb 0x1b0422 ; jmp qword ptr [rcx]
0x00000000001b0441 : jb 0x1b043a ; jmp qword ptr [rcx]
0x00000000001b0489 : jb 0x1b0482 ; jmp qword ptr [rcx]
0x00000000001b04d1 : jb 0x1b04ca ; call qword ptr [rsi]
0x00000000001b60e6 : jb 0x1b60f4 ; ret
0x00000000001b60e6 : jb 0x1b60fa ; ret
0x0000000000002b80 : jb 0x2b20 ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x000000000002da7e : jb 0x2da8b ; ret
0x00000000000038ee : jb 0x396e ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x00000000000711b5 : jb 0x711db ; mov dword ptr [rcx], eax ; ret
0x0000000000072c9c : jb 0x72c95 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000008383d : jb 0x8381f ; mov byte ptr [rax + rbx], r9b ; pop rbx ; ret
0x000000000009f18e : jb 0x9f19a ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000009f8e1 : jb 0x9f8ed ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000a002e : jb 0xa003a ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000a729a : jb 0xa72a9 ; add byte ptr [rax], al ; ret
0x00000000000a9bc5 : jb 0xa9bd4 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x00000000000a9bd0 : jb 0xa9be3 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x00000000000a9bdd : jb 0xa9be5 ; mov byte ptr [rdi], cl ; ret
0x00000000000cd11d : jb 0xcd126 ; add byte ptr [rbp - 0x27], dh ; xor eax, eax ; ret
0x00000000000d685d : jb 0xd67dd ; pop rbx ; ret
0x000000000012d5b3 : jbe 0x12d5c7 ; mov eax, 2 ; ret
0x000000000013ba0d : jbe 0x13ba29 ; add dword ptr [rdi + 0x28], esi ; mov rax, qword ptr [rdi + 0x18] ; ret
0x0000000000186211 : jbe 0x186202 ; jmp rdi
0x00000000001946f9 : jbe 0x1946f8 ; jmp qword ptr [rax]
0x0000000000198e01 : jbe 0x198dfb ; call rsp
0x00000000001b0699 : jbe 0x1b0692 ; jmp qword ptr [rcx]
0x00000000001b06b1 : jbe 0x1b06aa ; jmp qword ptr [rcx]
0x000000000002b767 : jbe 0x2b771 ; add byte ptr [rbx - 0x76be0008], al ; ret
0x0000000000002c0f : jbe 0x2be3 ; clc ; ret
0x0000000000047f0b : jbe 0x47f81 ; xor eax, eax ; ret
0x000000000004a45c : jbe 0x4a456 ; nop ; pop rbx ; ret
0x000000000005336f : jbe 0x532fc ; ret 0x8166
0x00000000000721ca : jbe 0x72140 ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x0000000000087cd6 : jbe 0x87cbc ; xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000008e136 : jbe 0x8e175 ; add rax, rdi ; ret
0x000000000008e146 : jbe 0x8e177 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000008e156 : jbe 0x8e177 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000008e166 : jbe 0x8e177 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000093ab3 : jbe 0x93ace ; lea rdi, qword ptr [rdi + 0x10] ; jne 0x93aa9 ; ret
0x00000000000a0879 : jbe 0xa0873 ; ret 0xf10
0x00000000000a2499 : jbe 0xa2493 ; ret 0xf10
0x00000000000db628 : jbe 0xdb637 ; mov eax, 0xc ; ret
0x00000000000f6028 : jbe 0xf6033 ; ret
0x00000000000fea76 : jbe 0xfeaac ; add byte ptr [rcx - 0x3a], al ; inc dword ptr [rax] ; ret
0x0000000000100be8 : je 0x100bf9 ; mov dword ptr [rip + 0x2c2620], edi ; ret
0x0000000000101c30 : je 0x101c3b ; pop rbx ; ret
0x0000000000103130 : je 0x103142 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000104b5e : je 0x104bfe ; call rax
0x0000000000104cd5 : je 0x104dd6 ; call rax
0x0000000000106b26 : je 0x106b2b ; ret
0x0000000000108cf4 : je 0x108cfb ; pop rbp ; ret
0x00000000001090fa : je 0x10910a ; add eax, 1 ; mov word ptr [rdx], ax ; ret
0x0000000000109349 : je 0x109357 ; add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x000000000010c0db : je 0x10c0f0 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000010ebb1 : je 0x10ebdc ; mov rdx, rax ; jmp 0x10ebc9
0x000000000010eebc : je 0x10eee0 ; mov rdx, r8 ; jmp 0x10eed0
0x00000000001122d2 : je 0x1122b2 ; mov rax, qword ptr [r12 + 0x38] ; jmp 0x1122a6
0x0000000000112a43 : je 0x112a57 ; mov eax, 7 ; ret
0x0000000000112a61 : je 0x112a89 ; mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x0000000000112a70 : je 0x112ad4 ; xor eax, eax ; pop rbx ; ret
0x000000000011418b : je 0x11419b ; ret
0x0000000000114839 : je 0x11483e ; ret
0x000000000011489d : je 0x1148a2 ; ret
0x0000000000114cba : je 0x114cc2 ; ret
0x0000000000114fb2 : je 0x114fe2 ; call rax
0x0000000000115432 : je 0x11544f ; sub ecx, dword ptr [rax - 0x7d] ; ret
0x000000000011596d : je 0x115980 ; lea rax, qword ptr [rip - 0x76966] ; ret
0x00000000001159ae : je 0x1159c0 ; lea rax, qword ptr [rip + 0x37d09] ; ret
0x0000000000115a5d : je 0x115a70 ; lea rax, qword ptr [rip - 0x76306] ; ret
0x0000000000115a9e : je 0x115ab0 ; lea rax, qword ptr [rip + 0x37fb9] ; ret
0x0000000000115ae7 : je 0x115af9 ; lea rax, qword ptr [rip - 0x6c010] ; ret
0x000000000011648c : je 0x1164a0 ; pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x0000000000116ddc : je 0x116dee ; add rsp, 8 ; ret
0x000000000011798c : je 0x1179a0 ; pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x000000000011d06f : je 0x11d09e ; adc byte ptr [rcx - 0x73], cl ; js 0x11d080 ; call 0x892e9
0x000000000011f1e7 : je 0x11f1f3 ; mov rdi, rbx ; call rax
0x000000000011f4df : je 0x11f4eb ; mov rdi, rbx ; call rax
0x000000000011f5ef : je 0x11f603 ; lea rdi, qword ptr [rip + 0x2a8108] ; call rax
0x000000000011f69a : je 0x11f6c7 ; or byte ptr [rcx + rcx*4 - 0x11], cl ; call r12
0x0000000000122813 : je 0x12280b ; pop rbx ; ret
0x0000000000127b4c : je 0x127b55 ; sub dword ptr [rax], eax ; test eax, eax ; je 0x127b60 ; ret
0x0000000000127b52 : je 0x127b5a ; ret
0x0000000000127bb1 : je 0x127bba ; ret
0x0000000000127bab : je 0x127bbb ; cmp dword ptr [rdi + 0x10], 2 ; je 0x127bc0 ; ret
0x000000000012a853 : je 0x12a83d ; xor eax, eax ; pop rbx ; ret
0x000000000012b093 : je 0x12b09f ; mov rdi, rsp ; call rax
0x000000000012b17e : je 0x12b18a ; mov rdi, rsp ; call rax
0x000000000012b839 : je 0x12b866 ; adc byte ptr [rax - 0x77], cl ; out dx, eax ; call r14
0x000000000012ba34 : je 0x12ba40 ; mov rdi, rbp ; call rax
0x000000000012bdb8 : je 0x12bdc2 ; ret
0x000000000012cac5 : je 0x12cad1 ; mov rdi, r14 ; call rax
0x000000000012d043 : je 0x12d054 ; xor eax, eax ; ret
0x000000000012d652 : je 0x12d65e ; mov rdi, rbp ; call rdx
0x000000000012db57 : je 0x12dc54 ; mov rdi, rbp ; call qword ptr [rbx]
0x0000000000131aa2 : je 0x131ab6 ; lea rdi, qword ptr [rbx + 0xc8] ; call rax
0x000000000013245a : je 0x132466 ; mov rdi, r12 ; call rax
0x000000000013263b : je 0x132649 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000132fd4 : je 0x132fe4 ; xor eax, eax ; ret
0x000000000013364d : je 0x13365e ; mov rdi, r15 ; call 0x1f8af
0x0000000000133666 : je 0x133671 ; call 0x1f8ac
0x0000000000133674 : je 0x13367f ; call 0x1f8ac
0x00000000001339db : je 0x1338ff ; mov rdi, rbp ; call rax
0x0000000000133915 : je 0x133921 ; mov rdi, r13 ; call rax
0x0000000000133a23 : je 0x133a37 ; mov eax, 1 ; ret
0x0000000000133b08 : je 0x133b14 ; mov rdi, rbp ; call rax
0x0000000000133d28 : je 0x133d34 ; mov rdi, rbp ; call rax
0x000000000013481f : je 0x13482d ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000134ecb : je 0x134ed7 ; mov rdi, r12 ; call rax
0x000000000013523f : je 0x13524d ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x0000000000137aea : je 0x137a78 ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x0000000000137a6f : je 0x137a7b ; pop rbx ; ret
0x0000000000137b13 : je 0x137b26 ; add rsp, 8 ; ret
0x0000000000137f21 : je 0x137f36 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001386fb : je 0x138702 ; ret
0x00000000001387db : je 0x1387e9 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000138ef4 : je 0x138f02 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000013a36d : je 0x13a3c8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013a42d : je 0x13a488 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013a4ed : je 0x13a548 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013a5ad : je 0x13a608 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013ae1b : je 0x13ae47 ; or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x000000000013af5f : je 0x13af8b ; or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x000000000013b0ad : je 0x13b0d8 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x000000000013b16d : je 0x13b198 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x000000000013b22d : je 0x13b258 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x000000000013b2ed : je 0x13b318 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x000000000013b5e1 : je 0x13b5f3 ; ret
0x000000000013d5a8 : je 0x13d5b4 ; xor eax, eax ; ret
0x00000000001421d1 : je 0x1421e6 ; add rsp, 8 ; ret
0x00000000001445a3 : je 0x14456d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000145275 : je 0x14527d ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000145373 : je 0x14533d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000014625a : je 0x146262 ; xchg eax, edx ; sub eax, edx ; ret
0x00000000001463b3 : je 0x14637d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000147f83 : je 0x147f4d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000149fb1 : je 0x149f98 ; movsxd rax, ecx ; add rax, rdi ; ret
0x000000000014a2a3 : je 0x14a26d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000014b933 : je 0x14b8fd ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000016eff7 : je 0x16f001 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000173696 : je 0x17369c ; call rdx
0x00000000001737ae : je 0x1737b9 ; call rax
0x0000000000173b90 : je 0x173b95 ; ret
0x00000000001837c8 : je 0x183793 ; xor al, 0xd8 ; ret
0x0000000000183a07 : je 0x183a04 ; jmp 0x1839de
0x0000000000184502 : je 0x1844ca ; ret 0xacfc
0x0000000000187414 : je 0x187484 ; int1 ; jmp rsp
0x0000000000188108 : je 0x1880a1 ; push qword ptr [rcx + rdx*4 - 0xd] ; jmp qword ptr [rdx]
0x000000000018810c : je 0x1880a2 ; jmp qword ptr [rdx]
0x0000000000196cd8 : je 0x196d57 ; in eax, dx ; jmp rsp
0x0000000000197138 : je 0x197147 ; out dx, al ; jmp rsp
0x0000000000197591 : je 0x197583 ; call rsp
0x0000000000197648 : je 0x197617 ; out dx, al ; jmp rsp
0x0000000000197690 : je 0x197679 ; out dx, al ; call rsp
0x0000000000198db1 : je 0x198dab ; call rsp
0x0000000000199de8 : je 0x199e44 ; clc ; jmp rsp
0x000000000019a280 : je 0x19a2d6 ; stc ; call rsp
0x000000000019a2f0 : je 0x19a34e ; stc ; jmp rsp
0x000000000019a908 : je 0x19a938 ; cli ; call rsp
0x00000000001a0be2 : je 0x1a0bf0 ; ret
0x00000000001a7444 : je 0x1a740e ; add byte ptr [rax], al ; pop rax ; fucomi st(7) ; jmp qword ptr [rbx]
0x00000000001a75c0 : je 0x1a75c7 ; add byte ptr [rax], al ; hlt ; ret 0
0x00000000001a7638 : je 0x1a763f ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x00000000001ac544 : je 0x1ac55f ; add dword ptr [rax], eax ; sbb bh, dl ; call qword ptr [rsi]
0x00000000001b0244 : je 0x1b029c ; add dword ptr [rax], eax ; cwde ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b0544 : je 0x1b059f ; add dword ptr [rax], eax ; test al, 0x73 ; cmc ; jmp qword ptr [rcx]
0x0000000000001cba : je 0x1ce6 ; ret
0x000000000001fb05 : je 0x1faa6 ; jmp 0x1facf
0x0000000000021857 : je 0x21883 ; sbb byte ptr [rbp - 0x77], cl ; int1 ; call rbx
0x0000000000024ff8 : je 0x25024 ; cmp byte ptr [rax + 0xf], cl ; ret 0x8949
0x0000000000025b54 : je 0x25b83 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000026864 : je 0x26892 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000028044 : je 0x28072 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x00000000000282ab : je 0x282da ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000028f14 : je 0x28f42 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000029183 : je 0x291b2 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000002a698 : je 0x2a6a3 ; pop rbx ; ret
0x000000000002a693 : je 0x2a6a8 ; cmp esi, 3 ; je 0x2a6a8 ; pop rbx ; ret
0x000000000002b025 : je 0x2b02b ; call rax
0x000000000002b396 : je 0x2b39c ; call rcx
0x000000000002c37b : je 0x2c381 ; call rax
0x000000000003319e : je 0x331c9 ; adc byte ptr [rcx - 0x77], cl ; ret 0x1274
0x00000000000334ee : je 0x3351d ; sub byte ptr [rcx - 0x17c7dbbc], cl ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x0000000000034c4d : je 0x34c3c ; ret
0x0000000000034f45 : je 0x34f6f ; call 0xffffffffe28511d9
0x0000000000035036 : je 0x34fdf ; ret
0x0000000000038370 : je 0x3839d ; sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call r15
0x00000000000628c3 : je 0x62850 ; ret 0x348
0x000000000006abf6 : je 0x6ac18 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000006b40a : je 0x6b413 ; ret
0x000000000006d7de : je 0x6d7ed ; mov eax, edx ; pop rbx ; ret
0x000000000006db43 : je 0x6db81 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006dd3a : je 0x6dd51 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000006ddea : je 0x6de01 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000006e018 : je 0x6e042 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000006edb5 : je 0x6edd1 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006f6b8 : je 0x6f6e3 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006fd03 : je 0x6fd16 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000070047 : je 0x70055 ; mov eax, edx ; pop rbx ; ret
0x0000000000070437 : je 0x70445 ; mov eax, esi ; pop rbx ; ret
0x00000000000705b9 : je 0x705c5 ; mov eax, esi ; pop rbx ; ret
0x0000000000070773 : je 0x707b4 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000709b6 : je 0x709c8 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000070f2d : je 0x70f3e ; mov eax, r8d ; pop rbx ; ret
0x00000000000710d0 : je 0x710e5 ; mov eax, edx ; pop rbx ; ret
0x0000000000071267 : je 0x71275 ; mov eax, edx ; pop rbx ; ret
0x0000000000071c06 : je 0x71c56 ; add esp, 0x20 ; pop rbx ; ret
0x0000000000071c05 : je 0x71c57 ; add esp, 0x20 ; pop rbx ; ret
0x00000000000729ec : je 0x729f2 ; ret
0x0000000000072a1a : je 0x72a7c ; pop rbp ; pop r12 ; ret
0x0000000000072abf : je 0x72b21 ; pop rbp ; pop r12 ; ret
0x0000000000072bfd : je 0x72c08 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000072c41 : je 0x72c4c ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000073178 : je 0x73187 ; mov eax, 0xffffffff ; ret
0x0000000000075ac5 : je 0x75ad5 ; mov eax, edx ; pop rbx ; ret
0x0000000000075eca : je 0x75ed5 ; mov eax, edx ; pop rbx ; ret
0x0000000000075fee : je 0x75ffd ; mov eax, esi ; pop rbx ; ret
0x0000000000076130 : je 0x76145 ; mov eax, esi ; pop rbx ; ret
0x0000000000076415 : je 0x76425 ; mov eax, edx ; pop rbx ; ret
0x0000000000076dba : je 0x76dc5 ; mov eax, edx ; pop rbx ; ret
0x000000000007743b : je 0x7744d ; mov dword ptr [rdi], edx ; ret
0x000000000007775c : je 0x7776f ; mov eax, 0xffffffff ; ret
0x0000000000077acc : je 0x77adf ; mov eax, 0xffffffff ; ret
0x0000000000077fb6 : je 0x77fc5 ; mov eax, edx ; pop rbx ; ret
0x000000000007834b : je 0x782f1 ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000783bf : je 0x783cb ; pop rbx ; ret
0x000000000007b1e3 : je 0x7b19d ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000007b333 : je 0x7b2ed ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000007b495 : je 0x7b4a2 ; ret
0x000000000007b4c7 : je 0x7b4d6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007beaa : je 0x7beb5 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000007db8d : je 0x7dd4d ; mov rdx, rax ; jmp 0x7dbb8
0x000000000007e0c6 : je 0x7e0d7 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007e1b4 : je 0x7e1ba ; call rax
0x000000000007ed57 : je 0x7ed64 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000083b62 : je 0x83b8b ; call rax
0x0000000000084532 : je 0x8455e ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x0000000000084b3b : je 0x84b41 ; call rax
0x0000000000086bd9 : je 0x86be2 ; ret
0x0000000000086e72 : je 0x86e87 ; mov eax, 0x16 ; ret
0x0000000000086f9e : je 0x87129 ; mov rsi, r14 ; call rax
0x00000000000884f8 : je 0x88502 ; ret
0x0000000000088e7b : je 0x88e8d ; lea rax, qword ptr [rip + 0x1777c] ; ret
0x0000000000089068 : je 0x8907a ; lea rax, qword ptr [rip + 0xe705f] ; ret
0x000000000008a75b : je 0x8a76d ; lea rax, qword ptr [rip + 0xda6ec] ; ret
0x000000000008a868 : je 0x8a87a ; lea rax, qword ptr [rip + 0xbf5af] ; ret
0x000000000008a9e5 : je 0x8aa0c ; movsx eax, dl ; ret
0x000000000008a9e5 : je 0x8aa0d ; movsx eax, dl ; ret
0x000000000008a9e0 : je 0x8aa39 ; cmp dl, 3 ; je 0x8aa11 ; movsx eax, dl ; ret
0x000000000008aaf2 : je 0x8ab06 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008ad24 : je 0x8ad2e ; bsf eax, edx ; ret
0x000000000008ad24 : je 0x8ad2f ; bsf eax, edx ; ret
0x000000000008adcd : je 0x8ade5 ; bsf rax, rdx ; ret
0x000000000008adcd : je 0x8ade6 ; bsf rax, rdx ; ret
0x000000000008ad6c : je 0x8adf9 ; bsf rax, rdx ; ret
0x000000000008af9c : je 0x8afc5 ; bsf rax, rdx ; ret
0x000000000008af9c : je 0x8afc6 ; bsf rax, rdx ; ret
0x000000000008af2c : je 0x8afd9 ; bsf rax, rdx ; ret
0x000000000008b0db : je 0x8b0ed ; lea rax, qword ptr [rip + 0x1713c] ; ret
0x000000000008c9bb : je 0x8c9cd ; lea rax, qword ptr [rip + 0xd9c3c] ; ret
0x000000000008ccd8 : je 0x8ccea ; lea rax, qword ptr [rip + 0xbd27f] ; ret
0x000000000008d068 : je 0x8d07a ; lea rax, qword ptr [rip + 0xbd01f] ; ret
0x000000000008e02c : je 0x8e083 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000008e1a5 : je 0x8e1b8 ; lea rax, qword ptr [rip + 0xdfab2] ; ret
0x000000000008e769 : je 0x8e77d ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000008e769 : je 0x8e77f ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000008e7b7 : je 0x8e7c9 ; lea rax, qword ptr [rip + 0x1b330] ; ret
0x000000000008e91d : je 0x8e930 ; lea rax, qword ptr [rip + 0x10e4a] ; ret
0x000000000008e95e : je 0x8e970 ; lea rax, qword ptr [rip + 0xbf109] ; ret
0x000000000008ee4b : je 0x8ee5d ; lea rax, qword ptr [rip + 0xda32c] ; ret
0x000000000008ef6b : je 0x8ef7d ; lea rax, qword ptr [rip + 0xdba1c] ; ret
0x00000000000939dd : je 0x939f0 ; lea rax, qword ptr [rip + 0xb63a] ; ret
0x00000000000939f8 : je 0x939fd ; ret
0x0000000000093a20 : je 0x93a32 ; lea rax, qword ptr [rip + 0xbcda7] ; ret
0x00000000000952ca : je 0x952de ; xor byte ptr [rdx + 0xe], 0x2a ; ret
0x0000000000095cba : je 0x95d11 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000095d71 : je 0x95d89 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000096244 : je 0x96257 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009e18a : je 0x9e183 ; ret
0x000000000009e189 : je 0x9e184 ; ret
0x000000000009e1ae : je 0x9e1a3 ; ret
0x000000000009e1aa : je 0x9e1a7 ; cmp ecx, esi ; je 0x9e1a7 ; ret
0x000000000009e1ff : je 0x9e1e3 ; ret
0x000000000009e77c : je 0x9e758 ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000a5629 : je 0xa567a ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000a6cb6 : je 0xa6d07 ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000a89ca : je 0xa8a1b ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000aa1dd : je 0xaa1a6 ; movzx eax, dl ; pop rbx ; ret
0x00000000000aa1b5 : je 0xaa1a8 ; movzx eax, cl ; pop rbx ; ret
0x00000000000aa1dd : je 0xaa1a8 ; movzx eax, dl ; pop rbx ; ret
0x00000000000aa302 : je 0xaa314 ; xor eax, eax ; ret
0x00000000000aa2fd : je 0xaa321 ; cmp eax, 2 ; je 0xaa319 ; xor eax, eax ; ret
0x00000000000aa34d : je 0xaa333 ; ret
0x00000000000aa395 : je 0xaa373 ; ret
0x00000000000ab2af : je 0xab2a1 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ab4e9 : je 0xab509 ; mov cl, dl ; and cl, 0xf ; je 0xab519 ; ret
0x00000000000ab4f0 : je 0xab512 ; ret
0x00000000000ab505 : je 0xab526 ; add rax, 2 ; ret
0x00000000000abb36 : je 0xabba6 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000abdef : je 0xabe0c ; cmp esi, dword ptr [rdi + 8] ; cmove rax, rcx ; ret
0x00000000000abe45 : je 0xabe58 ; lea rax, qword ptr [rip + 0xc3452] ; ret
0x00000000000ac008 : je 0xabfbd ; mov rax, rbx ; pop rbx ; ret
0x00000000000ac97e : je 0xac9ad ; sbb byte ptr [rcx + rcx*4 - 0x16], cl ; mov rdi, rbp ; call rbx
0x00000000000acc36 : je 0xacc65 ; sbb byte ptr [rcx + rcx*4 - 0x17], cl ; mov rdi, rbp ; call rbx
0x00000000000acee6 : je 0xacf15 ; sbb byte ptr [rcx + rcx*4 - 0x19], cl ; mov r9, r15 ; call rbx
0x00000000000ad098 : je 0xad0a5 ; test edx, edx ; jne 0xad097 ; ret
0x00000000000ad097 : je 0xad0a6 ; test edx, edx ; jne 0xad098 ; ret
0x00000000000b58be : je 0xb58eb ; sbb byte ptr [rbp + rcx*4 + 5], cl ; cwde ; ret 0x30
0x00000000000bb2c7 : je 0xbb2f4 ; sub al, 0x85 ; ror byte ptr [rdi], 0x94 ; ret 0x3840
0x00000000000bb37c : je 0xbb3ab ; mov rdi, qword ptr [rsp + 0x68] ; call r12
0x00000000000bb445 : je 0xbb470 ; cmp byte ptr [rax + 1], cl ; ret 0x6348
0x00000000000bb836 : je 0xbb865 ; mov rdi, qword ptr [rsp + 0x68] ; call r12
0x00000000000bda17 : je 0xbda42 ; cmp byte ptr [rcx + 1], cl ; ret
0x00000000000be682 : je 0xbe6b9 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000c2763 : je 0xc27ba ; ror byte ptr [rax - 0x7d], 1 ; ret
0x00000000000c6b60 : je 0xc6b7e ; mov rsi, rdi ; xor edi, edi ; call rax
0x00000000000cb961 : je 0xcb967 ; call rax
0x00000000000cbb0a : je 0xcbb13 ; call rdx
0x00000000000cbb93 : je 0xcbb9c ; call rax
0x00000000000cd03d : je 0xcd08c ; mov eax, 0x20 ; ret
0x00000000000cd0f9 : je 0xcd129 ; mov eax, 1 ; ret
0x00000000000cea7c : je 0xcea97 ; call 0x8acf4
0x00000000000d642f : je 0xd6459 ; or byte ptr [rcx], ch ; ret
0x00000000000d6840 : je 0xd67d9 ; pop rbx ; ret
0x00000000000d6872 : je 0xd680d ; pop rbx ; ret
0x00000000000d686d : je 0xd6833 ; and ebx, 8 ; je 0xd6812 ; pop rbx ; ret
0x00000000000d87b2 : je 0xd87c1 ; add dword ptr [rax - 0x7d], ecx ; rol byte ptr [rcx], 0x83 ; ret 0x4001
0x00000000000da4a1 : je 0xda4b5 ; xor eax, eax ; pop rbx ; ret
0x00000000000dbb19 : je 0xdbb47 ; or byte ptr [rbp - 0x9df8b0a], al ; ret
0x00000000000e0533 : je 0xe056f ; mov rdx, rax ; jmp 0xe04d3
0x00000000000e79d8 : je 0xe7a14 ; xor eax, eax ; ret
0x00000000000e7a37 : je 0xe7a47 ; mov eax, 2 ; ret
0x00000000000e86f7 : je 0xe8723 ; enter 0xf41, -0x62 ; ret 0x844
0x00000000000ef435 : je 0xef413 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ef9b4 : je 0xef9e8 ; mov edi, 0x5a ; call 0xcbc99
0x00000000000eff6e : je 0xeff99 ; cmp byte ptr [rax - 0x77], cl ; ret 0x8b44
0x00000000000f3964 : je 0xf398f ; cmp byte ptr [rax - 0x77], cl ; ret 0x69e9
0x00000000000f569a : je 0xf56a3 ; ret
0x00000000000fb1a0 : je 0xfb1bd ; neg eax ; pop rbx ; ret
0x00000000000fc30f : je 0xfc339 ; sbb byte ptr [rcx], al ; ret 0x8d48
0x00000000000fc3c8 : je 0xfc3f2 ; sbb byte ptr [rcx], al ; ret 0x8d48
0x00000000000fcb1e : je 0xfcb25 ; ret
0x00000000000fe993 : je 0xfe99e ; mov qword ptr [rax], rdx ; ret
0x00000000000fea62 : je 0xfea57 ; mov byte ptr [r8 - 1], 0 ; ret
0x00000000000feb92 : je 0xfebc8 ; add byte ptr [rax - 0x76b7ffc8], al ; ret
0x00000000000feb91 : je 0xfebc9 ; add byte ptr [rax - 0x76b7ffc8], al ; ret
0x000000000010c844 : jg 0x10c876 ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000132852 : jg 0x13289c ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x132868 ; ret
0x00000000001389d2 : jg 0x138a1c ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1389e8 ; ret
0x000000000014d2a0 : jg 0x14d31c ; loopne 0x14d271 ; jp 0x14d32d ; jp 0x14d2a0 ; ret
0x000000000014d34c : jg 0x14d35d ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x000000000014d790 : jg 0x14d80c ; loopne 0x14d761 ; jp 0x14d81d ; jp 0x14d790 ; ret
0x000000000014d83c : jg 0x14d84d ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x000000000014db33 : jg 0x14dbaf ; loopne 0x14db04 ; jp 0x14dbc0 ; jp 0x14db33 ; ret
0x000000000014dbdc : jg 0x14dbed ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x00000000001529f9 : jg 0x152a4c ; ret
0x0000000000152a7f : jg 0x152aca ; ret
0x0000000000152bf9 : jg 0x152c4c ; ret 0x894c
0x0000000000152c7f : jg 0x152cca ; ret 0x894c
0x00000000001553c9 : jg 0x15541c ; ret
0x000000000015544f : jg 0x15549a ; ret
0x00000000001555c9 : jg 0x15561c ; ret 0x894c
0x000000000015564f : jg 0x15569a ; ret 0x894c
0x0000000000157d99 : jg 0x157dec ; ret
0x0000000000157e1f : jg 0x157e6a ; ret
0x0000000000157f99 : jg 0x157fec ; ret 0x894c
0x000000000015801f : jg 0x15806a ; ret 0x894c
0x000000000015a368 : jg 0x15a3b9 ; loope 0x15a367 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015a3df : jg 0x15a42a ; ret 0xff2
0x000000000015a3f8 : jg 0x15a449 ; loop 0x15a3f7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015a46f : jg 0x15a4ba ; ret
0x000000000015a488 : jg 0x15a4d9 ; jrcxz 0x15a487 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015a518 : jg 0x15a569 ; in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015a598 : jg 0x15a5e9 ; in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015a618 : jg 0x15a669 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015a698 : jg 0x15a6e9 ; out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015a718 : jg 0x15a769 ; call 0x4f94b71a
0x000000000015a798 : jg 0x15a7e9 ; jmp 0x4f94b79a
0x000000000015a918 : jg 0x15a969 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a998 : jg 0x15a9e9 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015aa28 : jg 0x15aa79 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015aaa8 : jg 0x15aaf9 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015ab1c : jg 0x15ab27 ; ret
0x000000000015ab76 : jg 0x15ab89 ; ret
0x000000000015ab71 : jg 0x15abc1 ; psllq mm1, qword ptr [rdi] ; jg 0x15ab8e ; ret
0x000000000015abe6 : jg 0x15abf9 ; ret
0x000000000015ac56 : jg 0x15ac69 ; ret
0x000000000015ac51 : jg 0x15aca1 ; or eax, 0xf7f0ff3 ; ret
0x000000000015acc6 : jg 0x15acd9 ; ret
0x000000000015acc1 : jg 0x15ad11 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000015ad36 : jg 0x15ad49 ; ret
0x000000000015ad31 : jg 0x15ad81 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000015ada6 : jg 0x15adb9 ; ret
0x000000000015ada1 : jg 0x15adf1 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000015ae16 : jg 0x15ae29 ; ret
0x000000000015ae11 : jg 0x15ae61 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000015ae86 : jg 0x15ae99 ; ret
0x000000000015ae81 : jg 0x15aed1 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000015aef6 : jg 0x15af09 ; ret
0x000000000015af66 : jg 0x15af79 ; ret
0x000000000015afd6 : jg 0x15afe9 ; ret
0x000000000015afd1 : jg 0x15b021 ; add eax, 0xf7f0ff3 ; ret
0x000000000015b046 : jg 0x15b059 ; ret
0x000000000015b041 : jg 0x15b091 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b0b6 : jg 0x15b0c9 ; ret
0x000000000015b0b1 : jg 0x15b101 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b126 : jg 0x15b139 ; ret
0x000000000015b121 : jg 0x15b171 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b196 : jg 0x15b1a9 ; ret
0x000000000015b191 : jg 0x15b1e1 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000015ce38 : jg 0x15ce89 ; loope 0x15ce37 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015ceaf : jg 0x15cefa ; ret 0xff2
0x000000000015cec8 : jg 0x15cf19 ; loop 0x15cec7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015cf3f : jg 0x15cf8a ; ret
0x000000000015cf58 : jg 0x15cfa9 ; jrcxz 0x15cf57 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015cfe8 : jg 0x15d039 ; in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d068 : jg 0x15d0b9 ; in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d0e8 : jg 0x15d139 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d168 : jg 0x15d1b9 ; out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d1e8 : jg 0x15d239 ; call 0x4f94e1ea
0x000000000015d268 : jg 0x15d2b9 ; jmp 0x4f94e26a
0x000000000015d3e8 : jg 0x15d439 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015d468 : jg 0x15d4b9 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015d4f8 : jg 0x15d549 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015d578 : jg 0x15d5c9 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015d5ec : jg 0x15d5f7 ; ret
0x000000000015d646 : jg 0x15d659 ; ret
0x000000000015d641 : jg 0x15d691 ; psllq mm1, qword ptr [rdi] ; jg 0x15d65e ; ret
0x000000000015d6b6 : jg 0x15d6c9 ; ret
0x000000000015d726 : jg 0x15d739 ; ret
0x000000000015d721 : jg 0x15d771 ; or eax, 0xf7f0ff3 ; ret
0x000000000015d796 : jg 0x15d7a9 ; ret
0x000000000015d791 : jg 0x15d7e1 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000015d806 : jg 0x15d819 ; ret
0x000000000015d801 : jg 0x15d851 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000015d876 : jg 0x15d889 ; ret
0x000000000015d871 : jg 0x15d8c1 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000015d8e6 : jg 0x15d8f9 ; ret
0x000000000015d8e1 : jg 0x15d931 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000015d956 : jg 0x15d969 ; ret
0x000000000015d951 : jg 0x15d9a1 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000015d9c6 : jg 0x15d9d9 ; ret
0x000000000015da36 : jg 0x15da49 ; ret
0x000000000015daa6 : jg 0x15dab9 ; ret
0x000000000015daa1 : jg 0x15daf1 ; add eax, 0xf7f0ff3 ; ret
0x000000000015db16 : jg 0x15db29 ; ret
0x000000000015db11 : jg 0x15db61 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000015db86 : jg 0x15db99 ; ret
0x000000000015db81 : jg 0x15dbd1 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000015dbf6 : jg 0x15dc09 ; ret
0x000000000015dbf1 : jg 0x15dc41 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000015dc66 : jg 0x15dc79 ; ret
0x000000000015dc61 : jg 0x15dcb1 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000015f958 : jg 0x15f9a9 ; loope 0x15f957 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015f9cf : jg 0x15fa1a ; ret 0xff2
0x000000000015f9e8 : jg 0x15fa39 ; loop 0x15f9e7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015fa5f : jg 0x15faaa ; ret
0x000000000015fa78 : jg 0x15fac9 ; jrcxz 0x15fa77 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015fb08 : jg 0x15fb59 ; in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015fb88 : jg 0x15fbd9 ; in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015fc08 : jg 0x15fc59 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015fc88 : jg 0x15fcd9 ; out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015fd08 : jg 0x15fd59 ; call 0x4f950d0a
0x000000000015fd88 : jg 0x15fdd9 ; jmp 0x4f950d8a
0x000000000015ff08 : jg 0x15ff59 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015ff88 : jg 0x15ffd9 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000160018 : jg 0x160069 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000160098 : jg 0x1600e9 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016010c : jg 0x160117 ; ret
0x0000000000160166 : jg 0x160179 ; ret
0x0000000000160161 : jg 0x1601b1 ; psllq mm1, qword ptr [rdi] ; jg 0x16017e ; ret
0x00000000001601d6 : jg 0x1601e9 ; ret
0x0000000000160246 : jg 0x160259 ; ret
0x0000000000160241 : jg 0x160291 ; or eax, 0xf7f0ff3 ; ret
0x00000000001602b6 : jg 0x1602c9 ; ret
0x00000000001602b1 : jg 0x160301 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160326 : jg 0x160339 ; ret
0x0000000000160321 : jg 0x160371 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160396 : jg 0x1603a9 ; ret
0x0000000000160391 : jg 0x1603e1 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160406 : jg 0x160419 ; ret
0x0000000000160401 : jg 0x160451 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160476 : jg 0x160489 ; ret
0x0000000000160471 : jg 0x1604c1 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x00000000001604e6 : jg 0x1604f9 ; ret
0x0000000000160556 : jg 0x160569 ; ret
0x00000000001605c6 : jg 0x1605d9 ; ret
0x00000000001605c1 : jg 0x160611 ; add eax, 0xf7f0ff3 ; ret
0x0000000000160636 : jg 0x160649 ; ret
0x0000000000160631 : jg 0x160681 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000001606a6 : jg 0x1606b9 ; ret
0x00000000001606a1 : jg 0x1606f1 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160716 : jg 0x160729 ; ret
0x0000000000160711 : jg 0x160761 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160786 : jg 0x160799 ; ret
0x0000000000160781 : jg 0x1607d1 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000172165 : jg 0x172174 ; neg eax ; ret
0x0000000000172272 : jg 0x172282 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000172313 : jg 0x172364 ; loopne 0x172368 ; sub eax, edx ; vzeroupper ; ret
0x000000000018891c : jg 0x1888ea ; jmp qword ptr [rdx - 0x2f000c3b]
0x0000000000194711 : jg 0x194710 ; jmp qword ptr [rax]
0x0000000000195635 : jg 0x195635 ; jmp rax
0x0000000000026cff : jg 0x26c8c ; ret 0x5c77
0x00000000000347ab : jg 0x347fd ; sub eax, edx ; shr rax, 0x3f ; ret
0x0000000000034c4b : jg 0x34c52 ; je 0x34c3e ; ret
0x0000000000035032 : jg 0x3507c ; or eax, esi ; je 0x34fe3 ; ret
0x000000000003aca2 : jg 0x3aceb ; mov dword ptr [rax], edx ; mov dword ptr [rsi], edx ; ret
0x0000000000047b7b : jg 0x47be9 ; xor eax, eax ; ret
0x0000000000047d3e : jg 0x47c4f ; pop rbx ; ret
0x000000000004a1b4 : jg 0x4a1c1 ; ret 0x5488
0x0000000000058345 : jg 0x5835e ; test byte ptr [rbx - 0x7c00001b], bh ; ret
0x0000000000063dad : jg 0x63d3a ; ret
0x0000000000077437 : jg 0x773c5 ; inc byte ptr [rdx] ; je 0x77451 ; mov dword ptr [rdi], edx ; ret
0x000000000007d8c4 : jg 0x7d900 ; add byte ptr [rbx + rcx*4 + 0xd], cl ; ret 0x3454
0x000000000008ccdd : jg 0x8ccb5 ; or eax, dword ptr [rax] ; ret
0x000000000008e852 : jg 0x8e8a4 ; adc bl, dh ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000008e9f7 : jg 0x8ea10 ; jne 0x8e9e7 ; mov rax, rdi ; ret
0x0000000000093ab7 : jg 0x93ace ; jne 0x93aa5 ; ret
0x0000000000094f88 : jg 0x94f73 ; ret
0x000000000009f134 : jg 0x9f145 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x000000000009f148 : jg 0x9f159 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000009f5ba : jg 0x9f5b6 ; ret
0x000000000009f887 : jg 0x9f898 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x000000000009f89b : jg 0x9f8ac ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000009fd0d : jg 0x9fd09 ; ret
0x000000000009ffd4 : jg 0x9ffe5 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x000000000009ffe8 : jg 0x9fff9 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00000000000a045a : jg 0xa0456 ; ret
0x00000000000a53f6 : jg 0xa5401 ; ret
0x00000000000a5406 : jg 0xa5414 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a541a : jg 0xa5429 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a5439 : jg 0xa5447 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a5449 : jg 0xa5457 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a5459 : jg 0xa546a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a547a : jg 0xa5489 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a549a : jg 0xa54a9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a54ba : jg 0xa54c9 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a54da : jg 0xa54ec ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a551d : jg 0xa552f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a553d : jg 0xa554f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a555b : jg 0xa556b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a557b : jg 0xa558b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a559b : jg 0xa55ab ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a55bb : jg 0xa55cb ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a5b48 : jg 0xa5b53 ; jne 0xa6408 ; ret
0x00000000000a5b6c : jg 0xa5b78 ; jne 0xa6408 ; ret
0x00000000000a5b8f : jg 0xa5b9c ; jne 0xa6408 ; ret
0x00000000000a5baa : jg 0xa5bb8 ; jne 0xa6408 ; ret
0x00000000000a5bcd : jg 0xa5bdc ; jne 0xa6408 ; ret
0x00000000000a5bf2 : jg 0xa5c02 ; jne 0xa6408 ; ret
0x00000000000a5c10 : jg 0xa5c21 ; jne 0xa6408 ; ret
0x00000000000a5c2c : jg 0xa5c3e ; jne 0xa6408 ; ret
0x00000000000a5c4f : jg 0xa5c62 ; jne 0xa6408 ; ret
0x00000000000a5c74 : jg 0xa5c88 ; jne 0xa6408 ; ret
0x00000000000a5c92 : jg 0xa5ca7 ; jne 0xa6408 ; ret
0x00000000000a5cb2 : jg 0xa5cc8 ; jne 0xa6408 ; ret
0x00000000000a5cd4 : jg 0xa5ceb ; jne 0xa6408 ; ret
0x00000000000a5cf4 : jg 0xa5d0c ; jne 0xa6408 ; ret
0x00000000000a5d14 : jg 0xa5d2d ; jne 0xa6408 ; ret
0x00000000000a5d2e : jg 0xa5d48 ; jne 0xa6408 ; ret
0x00000000000a5d51 : jg 0xa5d6c ; jne 0xa6408 ; ret
0x00000000000a5d76 : jg 0xa5d92 ; jne 0xa6408 ; ret
0x00000000000a5d94 : jg 0xa5db1 ; jne 0xa6408 ; ret
0x00000000000a5db4 : jg 0xa5dd2 ; jne 0xa6408 ; ret
0x00000000000a5dd7 : jg 0xa5df6 ; jne 0xa6408 ; ret
0x00000000000a5df6 : jg 0xa5e16 ; jne 0xa6408 ; ret
0x00000000000a5e16 : jg 0xa5e37 ; jne 0xa6408 ; ret
0x00000000000a5e36 : jg 0xa5e58 ; jne 0xa6408 ; ret
0x00000000000a5e59 : jg 0xa5e7c ; jne 0xa6408 ; ret
0x00000000000a5e8e : jg 0xa5eb2 ; jne 0xa6408 ; ret
0x00000000000a5ebc : jg 0xa5ee1 ; jne 0xa6408 ; ret
0x00000000000a5eec : jg 0xa5f12 ; jne 0xa6408 ; ret
0x00000000000a5f18 : jg 0xa5f3f ; jne 0xa6408 ; ret
0x00000000000a5f48 : jg 0xa5f70 ; jne 0xa6408 ; ret
0x00000000000a5f78 : jg 0xa5fa1 ; jne 0xa6408 ; ret
0x00000000000a5fa8 : jg 0xa5fd2 ; jne 0xa6408 ; ret
0x00000000000a60c6 : jg 0xa60d1 ; ret
0x00000000000a60d9 : jg 0xa60e7 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000a60ea : jg 0xa60f9 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a6109 : jg 0xa6117 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a6119 : jg 0xa6127 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a612c : jg 0xa613d ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000a614a : jg 0xa6159 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a616a : jg 0xa6179 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a618a : jg 0xa6199 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a61ad : jg 0xa61bf ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000a61ed : jg 0xa61ff ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a620d : jg 0xa621f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a622b : jg 0xa623b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a624b : jg 0xa625b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a626b : jg 0xa627b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a628b : jg 0xa629b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a63c2 : jg 0xa63cd ; ret
0x00000000000a64f6 : jg 0xa652a ; ret
0x00000000000a6a66 : jg 0xa6a75 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a6a76 : jg 0xa6a88 ; mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a6aa9 : jg 0xa6abb ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a6ac9 : jg 0xa6adb ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a6bef : jg 0xa6c4f ; or eax, 0x1c478d48 ; ret
0x00000000000a71eb : jg 0xa71f6 ; jne 0xa7c18 ; ret
0x00000000000a7210 : jg 0xa721c ; jne 0xa7c18 ; ret
0x00000000000a7233 : jg 0xa7240 ; jne 0xa7c18 ; ret
0x00000000000a724e : jg 0xa725c ; jne 0xa7c18 ; ret
0x00000000000a7271 : jg 0xa7280 ; jne 0xa7c18 ; ret
0x00000000000a7296 : jg 0xa72a6 ; jne 0xa7c18 ; ret
0x00000000000a72b4 : jg 0xa72c5 ; jne 0xa7c18 ; ret
0x00000000000a72d0 : jg 0xa72e2 ; jne 0xa7c18 ; ret
0x00000000000a72f3 : jg 0xa7306 ; jne 0xa7c18 ; ret
0x00000000000a7318 : jg 0xa732c ; jne 0xa7c18 ; ret
0x00000000000a7346 : jg 0xa735b ; jne 0xa7c18 ; ret
0x00000000000a7366 : jg 0xa737c ; jne 0xa7c18 ; ret
0x00000000000a7388 : jg 0xa739f ; jne 0xa7c18 ; ret
0x00000000000a73b8 : jg 0xa73d0 ; jne 0xa7c18 ; ret
0x00000000000a73e8 : jg 0xa7401 ; jne 0xa7c18 ; ret
0x00000000000a7412 : jg 0xa742c ; jne 0xa7c18 ; ret
0x00000000000a7435 : jg 0xa7450 ; jne 0xa7c18 ; ret
0x00000000000a745a : jg 0xa7476 ; jne 0xa7c18 ; ret
0x00000000000a7488 : jg 0xa74a5 ; jne 0xa7c18 ; ret
0x00000000000a74b8 : jg 0xa74d6 ; jne 0xa7c18 ; ret
0x00000000000a74eb : jg 0xa750a ; jne 0xa7c18 ; ret
0x00000000000a751a : jg 0xa753a ; jne 0xa7c18 ; ret
0x00000000000a754a : jg 0xa756b ; jne 0xa7c18 ; ret
0x00000000000a757a : jg 0xa759c ; jne 0xa7c18 ; ret
0x00000000000a75ad : jg 0xa75d0 ; jne 0xa7c18 ; ret
0x00000000000a75e2 : jg 0xa7606 ; jne 0xa7c18 ; ret
0x00000000000a7610 : jg 0xa7635 ; jne 0xa7c18 ; ret
0x00000000000a7640 : jg 0xa7666 ; jne 0xa7c18 ; ret
0x00000000000a766c : jg 0xa7693 ; jne 0xa7c18 ; ret
0x00000000000a769c : jg 0xa76c4 ; jne 0xa7c18 ; ret
0x00000000000a76cc : jg 0xa76f5 ; jne 0xa7c18 ; ret
0x00000000000a76fc : jg 0xa7726 ; jne 0xa7c18 ; ret
0x00000000000a78a6 : jg 0xa78b5 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a78b9 : jg 0xa78cb ; mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a78f9 : jg 0xa790b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a7919 : jg 0xa792b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a7a3f : jg 0xa7a9f ; or eax, 0x1d478d48 ; ret
0x00000000000a7bd2 : jg 0xa7bdd ; ret
0x00000000000a7d06 : jg 0xa7d3e ; lea rax, qword ptr [rdi + 0x40] ; ret
0x00000000000a7d05 : jg 0xa7d8d ; xor byte ptr [rax - 0x73], cl ; ret
0x00000000000a84d6 : jg 0xa84e1 ; ret
0x00000000000a84e6 : jg 0xa84f4 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a84fa : jg 0xa8509 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a8519 : jg 0xa8527 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a8529 : jg 0xa8537 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a8539 : jg 0xa854a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a855a : jg 0xa8569 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a857a : jg 0xa8589 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a859a : jg 0xa85a9 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a85ba : jg 0xa85cc ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a85fd : jg 0xa860f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a861d : jg 0xa862f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a863b : jg 0xa864b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a865b : jg 0xa866b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a867b : jg 0xa868b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a869b : jg 0xa86ab ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a8fa6 : jg 0xa8fb1 ; ret
0x00000000000a8fb6 : jg 0xa8fc4 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a8fca : jg 0xa8fd9 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a8fe9 : jg 0xa8ff7 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a8ff9 : jg 0xa9007 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a9009 : jg 0xa901a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a902a : jg 0xa9039 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a904a : jg 0xa9059 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a906a : jg 0xa9079 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a908a : jg 0xa909c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a90cd : jg 0xa90df ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a90ed : jg 0xa90ff ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a910b : jg 0xa911b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a912b : jg 0xa913b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a914b : jg 0xa915b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a916b : jg 0xa917b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a9316 : jg 0xa9326 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a94ef : jg 0xa9550 ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000a950f : jg 0xa9570 ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a9586 : jg 0xa95bf ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a9585 : jg 0xa960e ; xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a9ba7 : jg 0xa9bb7 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00000000000a9b9d : jg 0xa9bbd ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x00000000000aa170 : jg 0xaa1ad ; ret 0x2b77
0x00000000000ab235 : jg 0xab23d ; neg eax ; ret
0x00000000000c6e57 : jg 0xc6e2a ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ccedc : jg 0xccee2 ; add byte ptr [rax], al ; ret
0x00000000000ccf2b : jg 0xccf34 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000ccf2b : jg 0xccf35 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000ffb1f : jg 0xffb29 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x89 ; ret 0xfffe
0x00000000001020db : jge 0x1020df ; call rbx
0x0000000000102202 : jge 0x102206 ; call rbx
0x0000000000102210 : jge 0x102214 ; call rbx
0x0000000000102345 : jge 0x102349 ; call rbx
0x00000000001024b5 : jge 0x1024b9 ; call rbx
0x00000000001024c3 : jge 0x1024c7 ; call rbx
0x0000000000102916 : jge 0x1028e1 ; mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000103cd3 : jge 0x103cd7 ; call rbx
0x0000000000103dfb : jge 0x103dff ; call rbx
0x0000000000103f3e : jge 0x103f42 ; call rbx
0x000000000010403f : jge 0x104043 ; call rbx
0x000000000010405b : jge 0x10405f ; call rbx
0x000000000013263f : jge 0x132653 ; call rax
0x00000000001387df : jge 0x1387f3 ; call rax
0x0000000000138ef8 : jge 0x138f0c ; call rax
0x00000000001723a0 : jge 0x1723b5 ; call r12
0x0000000000189830 : jge 0x1897c8 ; cmc ; jmp qword ptr [rbx]
0x0000000000195645 : jge 0x195645 ; call rax
0x00000000001956c1 : jge 0x1956c1 ; jmp qword ptr [rdx]
0x00000000001956c5 : jge 0x1956c9 ; jmp qword ptr [rdx + 0x22fffc7c]
0x0000000000195841 : jge 0x195841 ; jmp rax
0x000000000019d9b9 : jge 0x19d9a6 ; jmp qword ptr [rcx]
0x00000000001a2fdd : jge 0x1a2fe5 ; add byte ptr [rax + 0x47], dl ; in eax, dx ; jmp qword ptr [rax]
0x00000000001a6069 : jge 0x1a605b ; call qword ptr [rax]
0x0000000000038f5e : jge 0x38f63 ; call r14
0x000000000004723a : jge 0x47241 ; cmp cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x000000000007781b : jge 0x77824 ; mov rdx, rbx ; call 0x93a47
0x000000000009e65f : jge 0x9e667 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000ac0d6 : jge 0xac0db ; call r12
0x00000000000cc55f : jge 0xcc511 ; call 0x1f8b0
0x00000000000d6bba : jge 0xd6b93 ; mov edx, eax ; jmp 0xd6b9c
0x00000000000eaf6c : jge 0xeaef9 ; call r12
0x00000000000eb67a : jge 0xeb607 ; call r12
0x00000000000eb799 : jge 0xeb726 ; call r12
0x00000000000f6f92 : jge 0xf6fe4 ; add esp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x0000000000102570 : jl 0x10259e ; adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000106b24 : jl 0x106b69 ; je 0x106b2d ; ret
0x0000000000118acb : jl 0x118afa ; or bl, ch ; scasd eax, dword ptr [rdi] ; mov eax, edi ; bswap eax ; ret
0x0000000000127e79 : jl 0x127ea4 ; and byte ptr [rax - 0x77], cl ; ret
0x0000000000132f07 : jl 0x132f32 ; or byte ptr [rax + 0x63], cl ; ret
0x00000000001700bb : jl 0x1700c4 ; neg eax ; ret
0x00000000001867fc : jl 0x1867dd ; in eax, dx ; call rbx
0x00000000001867fc : jl 0x1867e1 ; in eax, dx ; call rbx
0x0000000000189f85 : jl 0x189f7f ; call qword ptr [rdx]
0x0000000000189fd5 : jl 0x189fcf ; call rsi
0x0000000000194709 : jl 0x194708 ; jmp qword ptr [rax]
0x000000000019564d : jl 0x19564d ; call rax
0x00000000001956c9 : jl 0x1956c9 ; jmp qword ptr [rdx]
0x00000000001956cd : jl 0x1956d1 ; jmp qword ptr [rdx + 0x22fffc7b]
0x0000000000195849 : jl 0x195849 ; jmp rax
0x00000000001975d9 : jl 0x1975cb ; call rsp
0x000000000019768c : jl 0x197685 ; add byte ptr [rax], al ; je 0x19767d ; out dx, al ; call rsp
0x00000000001a454c : jl 0x1a44e7 ; add byte ptr [rax], al ; adc byte ptr [rbx], al ; std ; jmp rsp
0x00000000001a7131 : jl 0x1a7124 ; call qword ptr [rdi]
0x00000000001a754c : jl 0x1a7517 ; add byte ptr [rax], al ; sub edi, edx ; call qword ptr [rdi]
0x00000000001aa44c : jl 0x1aa446 ; add byte ptr [rax], al ; adc byte ptr [rdx], 0xf2 ; call qword ptr [rdx]
0x00000000001aac4c : jl 0x1aac4e ; add byte ptr [rax], al ; loopne 0x1aac96 ; call rbx
0x00000000001af14c : jl 0x1af193 ; add dword ptr [rax], eax ; loopne 0x1af177 ; cmc ; jmp qword ptr [rcx]
0x00000000001b214c : jl 0x1b21c3 ; add dword ptr [rax], eax ; nop ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001b334c : jl 0x1b32d5 ; add dword ptr [rax], eax ; add byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00000000001b914c : jl 0x1b9133 ; add dword ptr [rax], eax ; sub ah, 0xf7 ; call rax
0x0000000000024366 : jl 0x24394 ; sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x0000000000024d01 : jl 0x24d2f ; sbb byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x000000000002510f : jl 0x2513d ; and byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x00000000000025e3 : jl 0x2576 ; loop 0x25c1 ; ret 0x23cb
0x0000000000025f30 : jl 0x25f5e ; cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000026869 : jl 0x26892 ; call rbx
0x0000000000026ca9 : jl 0x26cd7 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000027bfd : jl 0x27c2b ; and byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x000000000002a278 : jl 0x2a2a3 ; sub byte ptr [rcx - 0x77], al ; ret 0x8b4c
0x0000000000000452 : jl 0x468 ; sbb al, 0xc ; ret 0x4412
0x0000000000051788 : jl 0x51752 ; clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000072965 : jl 0x72901 ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000007a6bb : jl 0x7a706 ; movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007f27d : jl 0x7f27f ; dec dword ptr [rax - 0x7d] ; ret 0x4007
0x0000000000086fa0 : jl 0x86faa ; add byte ptr [rax], al ; mov rsi, r14 ; call rax
0x0000000000088e80 : jl 0x88efd ; add dword ptr [rax], eax ; ret
0x00000000000946f5 : jl 0x94720 ; adc byte ptr [rcx + 1], cl ; ret 0x1b8
0x000000000009e6ea : jl 0x9e755 ; add rax, rdi ; ret
0x000000000009e6fa : jl 0x9e757 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000009e71a : jl 0x9e757 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000009e73a : jl 0x9e757 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000009f0b4 : jl 0x9f103 ; adc dword ptr [rcx - 1], edi ; ret
0x000000000009f0f0 : jl 0x9f13f ; adc dword ptr [rcx - 1], ebx ; ret
0x000000000009f2ee : jl 0x9f33d ; adc dword ptr [rcx - 1], edi ; ret
0x000000000009f455 : jl 0x9f4a4 ; adc dword ptr [rcx + 7], edi ; ret
0x000000000009f5b7 : jl 0x9f606 ; adc dword ptr [rdi - 8], edi ; ret
0x000000000009f807 : jl 0x9f856 ; adc dword ptr [rcx - 1], edi ; ret
0x000000000009f843 : jl 0x9f892 ; adc dword ptr [rcx - 1], ebx ; ret
0x000000000009fa41 : jl 0x9fa90 ; adc dword ptr [rcx - 1], edi ; ret
0x000000000009fba8 : jl 0x9fbf7 ; adc dword ptr [rcx + 7], edi ; ret
0x000000000009fd0a : jl 0x9fd59 ; adc dword ptr [rdi - 8], edi ; ret
0x000000000009ff54 : jl 0x9ffa3 ; adc dword ptr [rcx - 1], edi ; ret
0x000000000009ff90 : jl 0x9ffdf ; adc dword ptr [rcx - 1], ebx ; ret
0x00000000000a018e : jl 0xa01dd ; adc dword ptr [rcx - 1], edi ; ret
0x00000000000a02f5 : jl 0xa0344 ; adc dword ptr [rcx + 7], edi ; ret
0x00000000000a0457 : jl 0xa04a6 ; adc dword ptr [rdi - 8], edi ; ret
0x00000000000a9b5c : jl 0xa9bab ; adc dword ptr [rsi - 1], edx ; ret
0x00000000000a9b7d : jl 0xa9bcc ; adc dword ptr [rsi - 1], edx ; ret
0x00000000000a9b90 : jl 0xa9bdf ; adc dword ptr [rsi - 1], edx ; ret
0x00000000000a9c65 : jl 0xa9cb4 ; adc dword ptr [rsi - 1], edx ; ret
0x00000000000a9cbd : jl 0xa9d0c ; adc dword ptr [rsi + 3], edx ; ret
0x00000000000a9d5a : jl 0xa9da9 ; adc dword ptr [rsi + 7], edx ; ret
0x00000000000bf7d0 : jl 0xbf827 ; ror byte ptr [rax - 0x46], 1 ; ret
0x00000000000c3bb9 : jl 0xc3be4 ; xor byte ptr [rax + 0x63], cl ; ret 0x894c
0x00000000000c8880 : jl 0xc88ae ; sbb byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x00000000000e11d9 : jl 0xe1205 ; add rax, rdx ; jmp rax
0x00000000000e26f0 : jl 0xe271b ; and byte ptr [rax - 0x77], cl ; ret 0x8949
0x00000000000e3407 : jl 0xe3436 ; sub byte ptr [rcx - 0x7d], al ; cld ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xf44
0x00000000000f3656 : jl 0xf3681 ; call 0x1f8ad
0x00000000000f3ae5 : jl 0xf3b10 ; sbb byte ptr [rax - 0x77], cl ; ret
0x00000000000f6dc4 : jl 0xf6df0 ; test al, 2 ; cmove eax, edx ; ret
0x00000000000f6dc4 : jl 0xf6df1 ; test al, 2 ; cmove eax, edx ; ret
0x00000000000fa8af : jl 0xfa8b7 ; add dword ptr [rax - 0x7d], ecx ; ret 0xe801
0x00000000001374f8 : jle 0x137510 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000149f46 : jle 0x149e61 ; movsxd rax, ecx ; ret
0x000000000014a18a : jle 0x14a0cb ; ret
0x0000000000186300 : jle 0x186367 ; in eax, dx ; jmp rsp
0x000000000018981d : jle 0x18981a ; inc eax ; mov esi, ebp ; call rsi
0x000000000019470d : jle 0x194710 ; jmp qword ptr [rax + 0x20fffb7f]
0x000000000019563d : jle 0x19563d ; call rax
0x00000000001956b9 : jle 0x1956b9 ; jmp qword ptr [rdx]
0x00000000001956bd : jle 0x1956c1 ; jmp qword ptr [rdx + 0x22fffc7d]
0x0000000000195839 : jle 0x195839 ; jmp rax
0x0000000000195835 : jle 0x195839 ; push qword ptr [rax + 0x7e] ; cld ; jmp rax
0x000000000019b0f1 : jle 0x19b0f1 ; call rsp
0x000000000019b0f0 : jle 0x19b0f2 ; call rsp
0x00000000001ac1e1 : jle 0x1ac1ef ; ret
0x000000000002a6e2 : jle 0x2a6f5 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000003180 : jle 0x317e ; add ebp, esi ; mov eax, 0xa1a3e95a ; ret 0xba88
0x000000000006849c : jle 0x68429 ; ret
0x0000000000083542 : jle 0x8356e ; xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000087945 : jle 0x87945 ; dec dword ptr [rax - 0x77] ; ret
0x000000000008ad6e : jle 0x8ad77 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000008ad6e : jle 0x8ad78 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000000cc77d : jle 0xcc78b ; ret
0x00000000000ccf89 : jle 0xccf8f ; add byte ptr [rax], al ; ret
0x00000000001015a2 : jmp 0x101568
0x00000000001064d0 : jmp 0x105a5c
0x000000000010c044 : jmp 0x10bd91
0x000000000010c074 : jmp 0x10bfac
0x000000000010d777 : jmp 0x10d69e
0x000000000010de90 : jmp 0x10de56
0x00000000001122d9 : jmp 0x11229f
0x0000000000117de1 : jmp 0x117da6
0x0000000000119b12 : jmp 0x1198d9
0x0000000000119ed2 : jmp 0x119ca9
0x000000000012628c : jmp 0x126251
0x0000000000131acf : jmp 0x131a95
0x0000000000136ae6 : jmp 0x136b0e
0x0000000000137d9e : jmp 0x137da8
0x00000000001816b2 : jmp 0x1816b4
0x00000000001816ba : jmp 0x1816bc
0x00000000001816be : jmp 0x1816c0
0x00000000001816c2 : jmp 0x1816c4
0x00000000001816c6 : jmp 0x1816c8
0x00000000001816ca : jmp 0x1816cc
0x00000000001816ce : jmp 0x1816d0
0x00000000001816d2 : jmp 0x1816d4
0x00000000001816d6 : jmp 0x1816d8
0x00000000001816da : jmp 0x1816dc
0x00000000001816e2 : jmp 0x1816e4
0x00000000001816e6 : jmp 0x1816e8
0x00000000001816ea : jmp 0x1816ec
0x00000000001816ee : jmp 0x1816f0
0x00000000001816f2 : jmp 0x1816f4
0x00000000001816f6 : jmp 0x1816f8
0x00000000001816fa : jmp 0x1816fc
0x00000000001816fe : jmp 0x181700
0x0000000000181702 : jmp 0x181704
0x0000000000181706 : jmp 0x181708
0x000000000018170a : jmp 0x18170c
0x000000000018170e : jmp 0x181710
0x0000000000181712 : jmp 0x181714
0x0000000000181716 : jmp 0x181718
0x000000000018171a : jmp 0x18171c
0x000000000018171e : jmp 0x181720
0x0000000000181722 : jmp 0x181724
0x0000000000181726 : jmp 0x181728
0x000000000018172a : jmp 0x18172c
0x000000000018172e : jmp 0x181730
0x0000000000181732 : jmp 0x181734
0x0000000000181736 : jmp 0x181738
0x000000000018173e : jmp 0x181740
0x0000000000181742 : jmp 0x181744
0x0000000000181746 : jmp 0x181748
0x0000000000181752 : jmp 0x181754
0x0000000000181766 : jmp 0x181768
0x000000000018176e : jmp 0x181770
0x00000000001817b6 : jmp 0x1817b8
0x00000000001817ba : jmp 0x1817bc
0x00000000001817be : jmp 0x1817c0
0x00000000001817c2 : jmp 0x1817c4
0x00000000001817c6 : jmp 0x1817c8
0x00000000001817ca : jmp 0x1817cc
0x00000000001817ce : jmp 0x1817d0
0x00000000001817d2 : jmp 0x1817d4
0x00000000001817d6 : jmp 0x1817d8
0x00000000001817da : jmp 0x1817dc
0x00000000001817de : jmp 0x1817e0
0x00000000001817e2 : jmp 0x1817e4
0x00000000001817e6 : jmp 0x1817e8
0x00000000001817ea : jmp 0x1817ec
0x00000000001817ee : jmp 0x1817f0
0x00000000001817f2 : jmp 0x1817f4
0x00000000001817f6 : jmp 0x1817f8
0x00000000001817fa : jmp 0x1817fc
0x00000000001817fe : jmp 0x181800
0x0000000000181802 : jmp 0x181804
0x0000000000181806 : jmp 0x181808
0x000000000018180a : jmp 0x18180c
0x000000000018180e : jmp 0x181810
0x0000000000181812 : jmp 0x181814
0x0000000000181816 : jmp 0x181818
0x000000000018181a : jmp 0x18181c
0x000000000018181e : jmp 0x181820
0x0000000000181822 : jmp 0x181824
0x0000000000181826 : jmp 0x181828
0x000000000018182a : jmp 0x18182c
0x000000000018182e : jmp 0x181830
0x0000000000181832 : jmp 0x181834
0x0000000000181836 : jmp 0x181838
0x000000000018183a : jmp 0x18183c
0x000000000018183e : jmp 0x181840
0x0000000000181842 : jmp 0x181844
0x0000000000181846 : jmp 0x181848
0x000000000018184a : jmp 0x18184c
0x000000000018184e : jmp 0x181850
0x0000000000181852 : jmp 0x181854
0x0000000000181856 : jmp 0x181858
0x000000000018185a : jmp 0x18185c
0x000000000018185e : jmp 0x181860
0x0000000000181862 : jmp 0x181864
0x0000000000181866 : jmp 0x181868
0x000000000018186a : jmp 0x18186c
0x0000000000181872 : jmp 0x181874
0x0000000000181876 : jmp 0x181878
0x000000000018187a : jmp 0x18187c
0x000000000018187e : jmp 0x181880
0x0000000000181882 : jmp 0x181884
0x0000000000181886 : jmp 0x181888
0x000000000018188a : jmp 0x18188c
0x000000000018188e : jmp 0x181890
0x0000000000181892 : jmp 0x181894
0x0000000000181896 : jmp 0x181898
0x000000000018189a : jmp 0x18189c
0x000000000018189e : jmp 0x1818a0
0x00000000001818a2 : jmp 0x1818a4
0x0000000000182cca : jmp 0x182d09
0x0000000000183a09 : jmp 0x1839dc
0x0000000000184a00 : jmp 0x184994
0x00000000001849ff : jmp 0x184995
0x000000000019695a : jmp 0x19695c
0x00000000001969f2 : jmp 0x1969f4
0x0000000000196b1a : jmp 0x196b1c
0x0000000000196b32 : jmp 0x196b34
0x000000000019fe42 : jmp 0x19fe44
0x000000000019fe41 : jmp 0x19fe45
0x000000000019fe92 : jmp 0x19fe94
0x00000000001a01e2 : jmp 0x1a01e4
0x00000000001a029a : jmp 0x1a029c
0x00000000001a031a : jmp 0x1a031c
0x000000000019d172 : jmp 0x1b9478
0x00000000001735c8 : jmp 0x1f8aa
0x000000000001fb07 : jmp 0x1facd
0x0000000000020496 : jmp 0x2045b
0x0000000000026a1b : jmp 0x2682e
0x0000000000036b61 : jmp 0x36aab
0x0000000000037b71 : jmp 0x37b7b
0x00000000000038b3 : jmp 0x3879
0x000000000003af75 : jmp 0x39c63083
0x0000000000040aa0 : jmp 0x3f8f1
0x0000000000099bdf : jmp 0x440b5e69
0x0000000000134433 : jmp 0x481349b4
0x0000000000048352 : jmp 0x483a4
0x00000000000e77b0 : jmp 0x48d10100
0x00000000001333e2 : jmp 0x48d2f672
0x00000000000700e2 : jmp 0x48f58a35
0x0000000000049f32 : jmp 0x49f84
0x00000000000c8413 : jmp 0x4c0cb3f7
0x000000000004f227 : jmp 0x4f203
0x000000000015a79a : jmp 0x4f94b798
0x000000000015a799 : jmp 0x4f94b799
0x000000000015d26a : jmp 0x4f94e268
0x000000000015d269 : jmp 0x4f94e269
0x000000000015fd8a : jmp 0x4f950d88
0x000000000015fd89 : jmp 0x4f950d89
0x0000000000052c1a : jmp 0x52c42
0x000000000005f7c1 : jmp 0x5baa2
0x000000000005c41c : jmp 0x5c3e1
0x0000000000060802 : jmp 0x5ca49
0x000000000005fb3a : jmp 0x5faff
0x000000000006040e : jmp 0x603d3
0x00000000000627b9 : jmp 0x6277e
0x0000000000067448 : jmp 0x636ae
0x0000000000065b3b : jmp 0x636b2
0x0000000000065a7a : jmp 0x64ba7
0x0000000000065a79 : jmp 0x64ba8
0x000000000006592b : jmp 0x65383
0x00000000000695c3 : jmp 0x6580f
0x0000000000069f0b : jmp 0x66196
0x0000000000072f2b : jmp 0x72ef1
0x0000000000072f2a : jmp 0x72ef2
0x0000000000116e54 : jmp 0x76d3a7a4
0x0000000000117007 : jmp 0x76d3a957
0x0000000000082154 : jmp 0x81e2b
0x0000000000083055 : jmp 0x8307d
0x0000000000083155 : jmp 0x8317d
0x0000000000084c69 : jmp 0x84aac
0x00000000001961c2 : jmp 0x871ecf
0x0000000000087cb2 : jmp 0x87c78
0x0000000000087e2a : jmp 0x87def
0x0000000000089124 : jmp 0x890ea
0x0000000000089278 : jmp 0x8923d
0x0000000000196302 : jmp 0x8f200f
0x000000000019638a : jmp 0x913097
0x000000000009571b : jmp 0x95571
0x0000000000095dcc : jmp 0x95d92
0x0000000000095f18 : jmp 0x95edd
0x00000000000960c2 : jmp 0x96087
0x0000000000099f14 : jmp 0x99f1e
0x000000000009a3f0 : jmp 0x9a3fa
0x000000000009cf92 : jmp 0x9c93a
0x000000000009d9cc : jmp 0x9c9c2
0x000000000009cab1 : jmp 0x9c9df
0x000000000009d9cd : jmp 0x9d9c3
0x00000000000a98fe : jmp 0xa98c4
0x00000000000a99cf : jmp 0xa9995
0x00000000000a9a3e : jmp 0xa9a04
0x00000000000ad5a4 : jmp 0xad387
0x00000000000ad9b3 : jmp 0xad7e7
0x00000000000b6de4 : jmp 0xb6e31
0x00000000000bece5 : jmp 0xbaf13
0x00000000000be08a : jmp 0xbdfca
0x00000000000be7bb : jmp 0xbe780
0x00000000000bf6fc : jmp 0xbf4ed
0x00000000000c1b1e : jmp 0xc1970
0x00000000000c7a90 : jmp 0xc7a56
0x00000000000c9d87 : jmp 0xc9c56
0x00000000000cd703 : jmp 0xcd61d
0x00000000000cc795 : jmp 0xcef5b
0x00000000000d4711 : jmp 0xd470b
0x00000000000d71eb : jmp 0xd71b1
0x00000000000eee51 : jmp 0xee5b0
0x00000000001070f4 : jmp 0xf1070fd
0x00000000000467c8 : jmp 0xfc6fedf
0x00000000000feda1 : jmp 0xfeda8
0x0000000000136faa : jmp 0xffffffff80d666c2
0x0000000000137231 : jmp 0xffffffff80d66949
0x0000000000003186 : jmp 0xffffffff88c2d331
0x00000000000bdaa8 : jmp 0xffffffffbece63f8
0x000000000012a232 : jmp 0xffffffffc098763d
0x00000000000d9b62 : jmp 0xffffffffc296dc73
0x00000000000ab143 : jmp 0xffffffffc30ab14c
0x0000000000048a51 : jmp 0xffffffffc31413a6
0x0000000000099313 : jmp 0xffffffffc332dc1d
0x000000000018685c : jmp 0xffffffffd4185649
0x0000000000188938 : jmp 0xffffffffe4187d18
0x00000000000acc3b : jmp 0xfffffffffffa558c
0x00000000000fdcfb : jmp qword ptr [r8]
0x000000000018b9e3 : jmp qword ptr [rax + 0x10fffa88]
0x000000000019531f : jmp qword ptr [rax + 0x10fffc53]
0x0000000000195337 : jmp qword ptr [rax + 0x10fffc58]
0x0000000000195cf7 : jmp qword ptr [rax + 0x10fffca4]
0x00000000001946ef : jmp qword ptr [rax + 0x20fffb73]
0x00000000001946f7 : jmp qword ptr [rax + 0x20fffb76]
0x00000000001946ff : jmp qword ptr [rax + 0x20fffb79]
0x0000000000194707 : jmp qword ptr [rax + 0x20fffb7c]
0x000000000019470f : jmp qword ptr [rax + 0x20fffb7f]
0x0000000000194717 : jmp qword ptr [rax + 0x20fffb82]
0x000000000019471f : jmp qword ptr [rax + 0x20fffb85]
0x0000000000195373 : jmp qword ptr [rax + 0x20fffc35]
0x00000000001953b7 : jmp qword ptr [rax + 0x20fffc37]
0x000000000019537b : jmp qword ptr [rax + 0x20fffc38]
0x00000000001953bf : jmp qword ptr [rax + 0x20fffc3a]
0x0000000000195383 : jmp qword ptr [rax + 0x20fffc3b]
0x00000000001953c7 : jmp qword ptr [rax + 0x20fffc3d]
0x000000000019538b : jmp qword ptr [rax + 0x20fffc3e]
0x00000000001953cf : jmp qword ptr [rax + 0x20fffc40]
0x0000000000195393 : jmp qword ptr [rax + 0x20fffc41]
0x00000000001953d7 : jmp qword ptr [rax + 0x20fffc43]
0x000000000019539b : jmp qword ptr [rax + 0x20fffc44]
0x00000000001953df : jmp qword ptr [rax + 0x20fffc46]
0x00000000001953a3 : jmp qword ptr [rax + 0x20fffc47]
0x00000000001953e7 : jmp qword ptr [rax + 0x20fffc49]
0x0000000000195317 : jmp qword ptr [rax + 0x20fffc54]
0x000000000019530f : jmp qword ptr [rax + 0x20fffc55]
0x0000000000195307 : jmp qword ptr [rax + 0x20fffc56]
0x00000000001952ff : jmp qword ptr [rax + 0x20fffc57]
0x0000000000194653 : jmp qword ptr [rax + 0x40fffb2d]
0x00000000001953ab : jmp qword ptr [rax - 0x1f0003b6]
0x000000000018679b : jmp qword ptr [rax - 0x2c001220]
0x000000000018781f : jmp qword ptr [rax - 0x2f000e02]
0x0000000000187633 : jmp qword ptr [rax - 0x2f000e18]
0x0000000000194af7 : jmp qword ptr [rax - 0x3d]
0x0000000000046056 : jmp qword ptr [rax]
0x0000000000187123 : jmp qword ptr [rbp + rbx*2 - 0x12]
0x000000000005ec08 : jmp qword ptr [rbx + rcx*4 + 1]
0x0000000000002563 : jmp qword ptr [rbx]
0x00000000001888b7 : jmp qword ptr [rcx]
0x00000000000f3fe3 : jmp qword ptr [rdi]
0x00000000001956df : jmp qword ptr [rdx + 0x12fffc79]
0x0000000000195be7 : jmp qword ptr [rdx + 0x12fffc9e]
0x00000000001956d7 : jmp qword ptr [rdx + 0x22fffc7a]
0x00000000001956cf : jmp qword ptr [rdx + 0x22fffc7b]
0x00000000001956c7 : jmp qword ptr [rdx + 0x22fffc7c]
0x00000000001956bf : jmp qword ptr [rdx + 0x22fffc7d]
0x0000000000194fbb : jmp qword ptr [rdx + 0x32fffc61]
0x000000000018891f : jmp qword ptr [rdx - 0x2f000c3b]
0x00000000000f3f62 : jmp qword ptr [rdx]
0x0000000000039ef1 : jmp qword ptr [rsi + 0xf]
0x00000000000dbbed : jmp qword ptr [rsi - 0x70]
0x00000000001531f4 : jmp qword ptr [rsi]
0x0000000000001b62 : jmp r10
0x00000000001507ed : jmp r9
0x00000000000bf686 : jmp rax
0x00000000000fee0d : jmp rbx
0x000000000002be4a : jmp rcx
0x000000000006ca54 : jmp rdi
0x0000000000001b63 : jmp rdx
0x000000000002e8f4 : jmp rsi
0x0000000000002a71 : jmp rsp
0x0000000000102888 : jne 0x102870 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000010547a : jne 0x105478 ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000001054ea : jne 0x1054e8 ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000011246e : jne 0x1124a7 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000114185 : jne 0x114199 ; cmp qword ptr [rdi], 0 ; je 0x1141a1 ; ret
0x00000000001141f8 : jne 0x114207 ; mov eax, 1 ; ret
0x0000000000114228 : jne 0x114234 ; xor eax, eax ; ret
0x0000000000114258 : jne 0x114264 ; xor eax, eax ; ret
0x0000000000114288 : jne 0x114294 ; xor eax, eax ; ret
0x00000000001142b8 : jne 0x1142c4 ; xor eax, eax ; ret
0x00000000001142e8 : jne 0x1142f4 ; xor eax, eax ; ret
0x0000000000114318 : jne 0x114324 ; xor eax, eax ; ret
0x0000000000114348 : jne 0x114354 ; xor eax, eax ; ret
0x0000000000114378 : jne 0x114384 ; xor eax, eax ; ret
0x00000000001143a8 : jne 0x1143b4 ; xor eax, eax ; ret
0x00000000001143d8 : jne 0x1143e4 ; xor eax, eax ; ret
0x0000000000114408 : jne 0x114414 ; xor eax, eax ; ret
0x0000000000114438 : jne 0x114444 ; xor eax, eax ; ret
0x0000000000114468 : jne 0x114474 ; xor eax, eax ; ret
0x0000000000114498 : jne 0x1144a4 ; xor eax, eax ; ret
0x00000000001144c8 : jne 0x1144d4 ; xor eax, eax ; ret
0x00000000001144f8 : jne 0x114504 ; xor eax, eax ; ret
0x0000000000114528 : jne 0x114534 ; xor eax, eax ; ret
0x0000000000114558 : jne 0x114564 ; xor eax, eax ; ret
0x0000000000114588 : jne 0x114594 ; xor eax, eax ; ret
0x00000000001145b8 : jne 0x1145c4 ; xor eax, eax ; ret
0x0000000000114618 : jne 0x114624 ; xor eax, eax ; ret
0x0000000000114648 : jne 0x114654 ; xor eax, eax ; ret
0x0000000000114678 : jne 0x114684 ; xor eax, eax ; ret
0x00000000001146a8 : jne 0x1146b4 ; xor eax, eax ; ret
0x00000000001146d8 : jne 0x1146e4 ; xor eax, eax ; ret
0x0000000000114708 : jne 0x114714 ; xor eax, eax ; ret
0x0000000000114738 : jne 0x114744 ; xor eax, eax ; ret
0x0000000000114768 : jne 0x114774 ; xor eax, eax ; ret
0x0000000000114798 : jne 0x1147a4 ; xor eax, eax ; ret
0x00000000001147e2 : jne 0x1147d9 ; pop rdx ; pop r10 ; ret
0x00000000001148d5 : jne 0x1148e3 ; ret
0x0000000000114ae4 : jne 0x114ac3 ; ret
0x0000000000114b1f : jne 0x114b17 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x0000000000114c77 : jne 0x114c17 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x0000000000115284 : jne 0x11526f ; lea rdi, qword ptr [rip - 0x16d] ; call rax
0x00000000001152b3 : jne 0x1152ac ; xor eax, eax ; leave ; ret
0x0000000000115cb4 : jne 0x115c5e ; mov rax, rdi ; add rsp, 8 ; ret
0x000000000011702a : jne 0x117040 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000001172f6 : jne 0x1172aa ; mov rax, rdi ; add rsp, 8 ; ret
0x000000000011f4c3 : jne 0x11f4b3 ; pop rbx ; ret
0x0000000000122dcc : jne 0x122da7 ; mov qword ptr [rsi], rcx ; xor eax, eax ; ret
0x00000000001235f4 : jne 0x123644 ; mov eax, r8d ; ret
0x0000000000125e9d : jne 0x125dea ; ret
0x0000000000127f8c : jne 0x127f92 ; ret
0x0000000000127fcc : jne 0x127fc0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012d0fd : jne 0x12d148 ; mov dword ptr [rsi], 0 ; ret
0x000000000012d9b5 : jne 0x12d9c8 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000012dabd : jne 0x12da57 ; xor eax, eax ; pop rbx ; ret
0x0000000000132858 : jne 0x132862 ; ret
0x0000000000136ae4 : jne 0x136af6 ; jmp 0x136b10
0x0000000000138757 : jne 0x138743 ; pop rbx ; ret
0x00000000001389d8 : jne 0x1389e2 ; ret
0x000000000013a2d3 : jne 0x13a2ca ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x000000000013bcb2 : jne 0x13bcc7 ; mov eax, 1 ; ret
0x000000000013bcf2 : jne 0x13bd07 ; mov eax, 1 ; ret
0x00000000001406dc : jne 0x1406ed ; xor eax, eax ; pop rbx ; ret
0x0000000000142ebb : jne 0x142e9e ; add rsp, 0x48 ; ret
0x0000000000142e9d : jne 0x142ed0 ; xor eax, eax ; add rsp, 0x48 ; ret
0x0000000000142f65 : jne 0x142f78 ; xor eax, eax ; add rsp, 0x48 ; ret
0x0000000000142fd8 : jne 0x142ff6 ; add rsp, 0x38 ; ret
0x0000000000143be8 : jne 0x143bf4 ; xor eax, eax ; ret
0x0000000000143c18 : jne 0x143c24 ; xor eax, eax ; ret
0x0000000000143c48 : jne 0x143c54 ; xor eax, eax ; ret
0x0000000000143c78 : jne 0x143c84 ; xor eax, eax ; ret
0x0000000000143ca8 : jne 0x143cb4 ; xor eax, eax ; ret
0x0000000000143cd8 : jne 0x143ce4 ; xor eax, eax ; ret
0x00000000001680a1 : jne 0x168656 ; ret
0x000000000016f23d : jne 0x16f267 ; xor eax, eax ; ret
0x000000000016e831 : jne 0x16f26b ; xor eax, eax ; ret
0x000000000016e859 : jne 0x16f277 ; xor eax, eax ; ret
0x000000000017007d : jne 0x1700a7 ; xor eax, eax ; ret
0x000000000016fe61 : jne 0x1700ab ; xor eax, eax ; ret
0x00000000001700b1 : jne 0x1700ba ; xor eax, eax ; ret
0x000000000016fe87 : jne 0x1700be ; xor eax, eax ; ret
0x00000000001701c5 : jne 0x170156 ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000170197 : jne 0x170156 ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000170196 : jne 0x170157 ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000171924 : jne 0x171b38 ; xor eax, eax ; ret
0x0000000000171b29 : jne 0x171b49 ; xor eax, eax ; ret
0x00000000001719d1 : jne 0x171b4d ; xor eax, eax ; ret
0x0000000000171b41 : jne 0x171b4e ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000172156 : jne 0x172164 ; xor eax, eax ; ret
0x000000000017202d : jne 0x172166 ; ret
0x000000000017391d : jne 0x17390e ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000173970 : jne 0x173950 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000173aad : jne 0x173a9d ; pop rbx ; ret
0x0000000000173b55 : jne 0x173b3b ; pop rbx ; ret
0x0000000000173cc8 : jne 0x173cd3 ; ret
0x0000000000173da9 : jne 0x173d9c ; pop rbx ; ret
0x000000000018627d : jne 0x18626e ; jmp rsp
0x0000000000186281 : jne 0x186272 ; jmp rsp
0x0000000000186285 : jne 0x186276 ; jmp rsp
0x0000000000186289 : jne 0x18627a ; jmp rsp
0x000000000018628d : jne 0x18627e ; jmp rsp
0x0000000000186291 : jne 0x186282 ; jmp rsp
0x0000000000186295 : jne 0x186286 ; jmp rsp
0x0000000000186299 : jne 0x18628a ; jmp rsp
0x000000000018629d : jne 0x18628e ; jmp rsp
0x00000000001862a1 : jne 0x186292 ; jmp rsp
0x00000000001862ad : jne 0x18629e ; jmp rsp
0x00000000001862b1 : jne 0x1862a2 ; jmp rsp
0x00000000001862b5 : jne 0x1862a6 ; jmp rsp
0x00000000001862c1 : jne 0x1862b2 ; jmp rsp
0x00000000001862c5 : jne 0x1862ba ; inc dword ptr [rdx] ; in eax, dx ; jmp rsp
0x00000000001862cd : jne 0x1862be ; jmp rsp
0x00000000001862d1 : jne 0x1862c2 ; jmp rsp
0x00000000001862d5 : jne 0x1862c6 ; jmp rsp
0x00000000001862d9 : jne 0x1862ca ; jmp rsp
0x0000000000186305 : jne 0x1862f6 ; jmp rsp
0x0000000000186309 : jne 0x1862fa ; jmp rsp
0x000000000018630d : jne 0x1862fe ; jmp rsp
0x00000000001880b9 : jne 0x1880b0 ; jmp qword ptr [rdx]
0x00000000001880bd : jne 0x1880b4 ; jmp qword ptr [rdx]
0x00000000001880c1 : jne 0x1880b8 ; jmp qword ptr [rdx]
0x00000000001880c5 : jne 0x1880bc ; jmp qword ptr [rdx]
0x00000000001880c9 : jne 0x1880c0 ; jmp qword ptr [rdx]
0x00000000001880cd : jne 0x1880c4 ; jmp qword ptr [rdx]
0x00000000001880d1 : jne 0x1880c8 ; jmp qword ptr [rdx]
0x00000000001880d5 : jne 0x1880cc ; jmp qword ptr [rdx]
0x00000000001880d9 : jne 0x1880d0 ; jmp qword ptr [rdx]
0x00000000001880dd : jne 0x1880d4 ; jmp qword ptr [rdx]
0x00000000001880e1 : jne 0x1880d8 ; jmp qword ptr [rdx]
0x00000000001880e5 : jne 0x1880dc ; jmp qword ptr [rdx]
0x00000000001880e9 : jne 0x1880e0 ; jmp qword ptr [rdx]
0x00000000001880ed : jne 0x1880e4 ; jmp qword ptr [rdx]
0x00000000001880f1 : jne 0x1880e8 ; jmp qword ptr [rdx]
0x00000000001880f5 : jne 0x1880ec ; jmp qword ptr [rdx]
0x00000000001880f9 : jne 0x1880f0 ; jmp qword ptr [rdx]
0x00000000001880fd : jne 0x1880f4 ; jmp qword ptr [rdx]
0x0000000000188101 : jne 0x1880f8 ; jmp qword ptr [rdx]
0x0000000000188111 : jne 0x188108 ; jmp qword ptr [rdx]
0x0000000000188115 : jne 0x18810c ; jmp qword ptr [rdx]
0x0000000000188119 : jne 0x188110 ; jmp qword ptr [rdx]
0x000000000018811d : jne 0x188114 ; jmp qword ptr [rdx]
0x0000000000188121 : jne 0x188118 ; jmp qword ptr [rdx]
0x0000000000188125 : jne 0x18811c ; jmp qword ptr [rdx]
0x0000000000188129 : jne 0x188120 ; jmp qword ptr [rdx]
0x000000000018812d : jne 0x188124 ; jmp qword ptr [rdx]
0x0000000000188131 : jne 0x18812c ; dec esp ; mov ebx, dr0 ; jmp qword ptr [rdx]
0x0000000000188139 : jne 0x188130 ; jmp qword ptr [rdx]
0x000000000018813d : jne 0x188134 ; jmp qword ptr [rdx]
0x0000000000188141 : jne 0x188138 ; jmp qword ptr [rdx]
0x0000000000188145 : jne 0x18813c ; jmp qword ptr [rdx]
0x0000000000188149 : jne 0x188140 ; jmp qword ptr [rdx]
0x000000000018814d : jne 0x188144 ; jmp qword ptr [rdx]
0x0000000000188151 : jne 0x188148 ; jmp qword ptr [rdx]
0x0000000000188155 : jne 0x18814c ; jmp qword ptr [rdx]
0x0000000000188159 : jne 0x188150 ; jmp qword ptr [rdx]
0x000000000018815d : jne 0x188154 ; jmp qword ptr [rdx]
0x0000000000188161 : jne 0x188158 ; jmp qword ptr [rdx]
0x0000000000188165 : jne 0x18815c ; jmp qword ptr [rdx]
0x0000000000188169 : jne 0x188160 ; jmp qword ptr [rdx]
0x000000000018816d : jne 0x188164 ; jmp qword ptr [rdx]
0x0000000000188171 : jne 0x188168 ; jmp qword ptr [rdx]
0x0000000000188175 : jne 0x18816c ; jmp qword ptr [rdx]
0x0000000000188179 : jne 0x188170 ; jmp qword ptr [rdx]
0x000000000018817d : jne 0x188174 ; jmp qword ptr [rdx]
0x0000000000188181 : jne 0x188178 ; jmp qword ptr [rdx]
0x00000000001946f5 : jne 0x1946f8 ; jmp qword ptr [rax + 0x20fffb76]
0x000000000019d5a9 : jne 0x19d596 ; jmp qword ptr [rcx]
0x000000000019d5d9 : jne 0x19d5c6 ; call qword ptr [rdx]
0x000000000019d5f1 : jne 0x19d5de ; call qword ptr [rdx]
0x00000000001a3bd1 : jne 0x1a3bc2 ; jmp qword ptr [rcx]
0x00000000001afef0 : jne 0x1aff61 ; cmc ; call qword ptr [rcx]
0x00000000001bb821 : jne 0x1bb81d ; call qword ptr [rdi]
0x0000000000033bc4 : jne 0x33ba2 ; ret
0x0000000000034ac0 : jne 0x34ad6 ; add rsp, 0x28 ; ret
0x0000000000034dfb : jne 0x34e0e ; add rsp, 0x28 ; ret
0x00000000000352f8 : jne 0x35303 ; ret
0x0000000000003796 : jne 0x3774 ; ret 0x975
0x000000000003a60c : jne 0x3a5d8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003a6bb : jne 0x3a6c3 ; pop rbx ; ret
0x0000000000047018 : jne 0x47016 ; mov rax, rbx ; pop rbx ; ret
0x0000000000048021 : jne 0x48007 ; mov eax, 1 ; ret
0x0000000000048047 : jne 0x4803c ; xor eax, eax ; ret
0x00000000000481b9 : jne 0x4819f ; mov eax, 1 ; ret
0x00000000000481df : jne 0x481d4 ; xor eax, eax ; ret
0x0000000000048487 : jne 0x48476 ; mov rax, rdx ; ret
0x0000000000048b3f : jne 0x48b36 ; mov rax, rdx ; ret
0x000000000004a6b1 : jne 0x4a69d ; mov rax, rsi ; ret
0x000000000004a735 : jne 0x4a715 ; mov rax, rsi ; ret
0x0000000000052c18 : jne 0x52c2a ; jmp 0x52c44
0x000000000006ac71 : jne 0x6ac86 ; mov rax, rbx ; pop rbx ; ret
0x0000000000071b41 : jne 0x71b33 ; ret
0x00000000000745dc : jne 0x745e3 ; pop rbx ; ret
0x0000000000078090 : jne 0x780a6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007a2c5 : jne 0x7a2d2 ; ret
0x000000000007ae71 : jne 0x7ae63 ; ret
0x000000000007bb91 : jne 0x7bba8 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000007bf02 : jne 0x7beed ; pop rbx ; ret
0x000000000007bf3c : jne 0x7bf35 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000007c776 : jne 0x7c76b ; ret
0x000000000007d86f : jne 0x7d841 ; mov rdi, rbx ; neg rdi ; call qword ptr [r15]
0x000000000007d887 : jne 0x7d8b8 ; xor edi, edi ; call qword ptr [r15]
0x0000000000083053 : jne 0x83065 ; jmp 0x8307f
0x0000000000083153 : jne 0x83165 ; jmp 0x8317f
0x0000000000087d0f : jne 0x87cc5 ; xor eax, eax ; pop rbx ; ret
0x0000000000088ba1 : jne 0x88b93 ; ret
0x0000000000088c4b : jne 0x88c43 ; ret
0x00000000000892cb : jne 0x892dd ; lea rax, qword ptr [rip + 0xc] ; ret
0x000000000008ae93 : jne 0x8ae9e ; xor rax, rax ; ret
0x000000000008b127 : jne 0x8b139 ; lea rax, qword ptr [rip + 0x10] ; ret
0x000000000008cdde : jne 0x8cda4 ; add rsp, 8 ; ret
0x000000000008ce01 : jne 0x8ce16 ; add rsp, 8 ; ret
0x000000000008e0e9 : jne 0x8e145 ; xor rax, rax ; ret
0x000000000008e0a9 : jne 0x8e169 ; xor rax, rax ; ret
0x000000000008e191 : jne 0x8e1a4 ; lea rax, qword ptr [rip + 0x26] ; ret
0x000000000008e8ba : jne 0x8e8a3 ; ret
0x000000000008eaa3 : jne 0x8e98f ; mov rax, rdi ; ret
0x000000000008e9f9 : jne 0x8e9e5 ; mov rax, rdi ; ret
0x000000000008efb7 : jne 0x8efc9 ; lea rax, qword ptr [rip + 0x80] ; ret
0x000000000008f01a : jne 0x8f02c ; lea rax, qword ptr [rip + 0xd] ; ret
0x00000000000912a7 : jne 0x912b9 ; lea rax, qword ptr [rip + 0x80] ; ret
0x000000000009130a : jne 0x9131c ; lea rax, qword ptr [rip + 0xd] ; ret
0x0000000000093a0c : jne 0x93a1f ; lea rax, qword ptr [rip + 0xb3db] ; ret
0x0000000000093b78 : jne 0x93a50 ; ret
0x0000000000093ab9 : jne 0x93aa3 ; ret
0x0000000000096016 : jne 0x96001 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000960c0 : jne 0x960cf ; jmp 0x96089
0x0000000000096955 : jne 0x9694d ; xor eax, eax ; pop rbx ; ret
0x0000000000096927 : jne 0x9695d ; mov rax, rdi ; pop rbx ; ret
0x00000000000969fd : jne 0x969f4 ; xor eax, eax ; ret
0x0000000000096aed : jne 0x96ae4 ; pop rbx ; pop rbp ; ret
0x000000000009cf90 : jne 0x9cf89 ; jmp 0x9c93c
0x000000000009d9ca : jne 0x9d9c3 ; jmp 0x9c9c4
0x000000000009e0b6 : jne 0x9e0ab ; ret
0x000000000009e0fa : jne 0x9e0eb ; ret
0x000000000009e154 : jne 0x9e133 ; ret
0x000000000009e1fa : jne 0x9e1e8 ; cmp r8d, ecx ; je 0x9e1e8 ; ret
0x000000000009e239 : jne 0x9e22c ; xor eax, eax ; ret
0x000000000009e292 : jne 0x9e274 ; xor eax, eax ; ret
0x000000000009e2f2 : jne 0x9e2e5 ; mov qword ptr [rdx], rcx ; ret
0x000000000009e3ab : jne 0x9e3a0 ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000009e429 : jne 0x9e411 ; pop rbx ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000009e65d : jne 0x9e6e8 ; xor eax, eax ; ret
0x000000000009e69a : jne 0x9e714 ; xor eax, eax ; ret
0x000000000009eddc : jne 0x9edc6 ; xor eax, eax ; sub eax, ecx ; ret
0x00000000000a5b4a : jne 0xa6406 ; ret
0x00000000000a71ed : jne 0xa7c16 ; ret
0x00000000000a9731 : jne 0xa9722 ; ret
0x00000000000a97e1 : jne 0xa97d2 ; ret
0x00000000000a9951 : jne 0xa9946 ; lea rax, qword ptr [rcx - 1] ; ret
0x00000000000a9aa1 : jne 0xa9a96 ; sub rax, 1 ; ret
0x00000000000aa3e7 : jne 0xaa3db ; ret
0x00000000000ab1b6 : jne 0xab232 ; ret
0x00000000000ab0df : jne 0xab236 ; ret
0x00000000000ab0be : jne 0xab238 ; xor eax, eax ; ret
0x00000000000ab261 : jne 0xab274 ; lea rax, qword ptr [rip + 0xf596] ; ret
0x00000000000ab623 : jne 0xab5eb ; ret
0x00000000000ab666 : jne 0xab659 ; mov dword ptr [rsi + 4], 0 ; ret
0x00000000000ab739 : jne 0xab725 ; xor eax, eax ; ret
0x00000000000abb1b : jne 0xabb76 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000abbf3 : jne 0xabbc3 ; ret
0x00000000000abbdd : jne 0xabbd3 ; ret
0x00000000000abcac : jne 0xabca4 ; xor eax, eax ; ret
0x00000000000abd08 : jne 0xabce6 ; mov rax, rdi ; ret
0x00000000000abe31 : jne 0xabe44 ; lea rax, qword ptr [rip + 0xe916] ; ret
0x00000000000abee5 : jne 0xabef2 ; mov dword ptr [r9 + 8], esi ; ret
0x00000000000abf23 : jne 0xabf1b ; ret
0x00000000000ad05b : jne 0xad016 ; mov rax, rdx ; ret
0x00000000000ad09c : jne 0xad093 ; ret
0x00000000000ba7f3 : jne 0xba7d0 ; ret
0x00000000000ba824 : jne 0xba81b ; ret
0x00000000000bf3e9 : jne 0xbf401 ; mov rax, rdx ; add rsp, 8 ; ret
0x00000000000ccf11 : jne 0xccede ; ret
0x00000000000ccf57 : jne 0xccee2 ; mov eax, 0x7d00 ; ret
0x00000000000cd019 : jne 0xcd042 ; ret
0x00000000000cd083 : jne 0xcd046 ; mov eax, 0x40 ; ret
0x00000000000cd120 : jne 0xcd0ff ; xor eax, eax ; ret
0x00000000000cd11c : jne 0xcd198 ; add byte ptr [rax], al ; jne 0xcd103 ; xor eax, eax ; ret
0x00000000000d0b40 : jne 0xd0b24 ; ret
0x00000000000d0b78 : jne 0xd0b3d ; mov eax, 1 ; ret
0x00000000000d0b88 : jne 0xd0b53 ; mov eax, 1 ; ret
0x00000000000d0c4e : jne 0xd0c0f ; mov eax, 1 ; ret
0x00000000000d0c66 : jne 0xd0c2c ; mov eax, 1 ; ret
0x00000000000d0dde : jne 0xd0dd0 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d688d : jne 0xd67dd ; pop rbx ; ret
0x00000000000d688c : jne 0xd67de ; pop rbx ; ret
0x00000000000d683a : jne 0xd6839 ; xor eax, eax ; cmp cl, byte ptr [rsi] ; je 0xd67df ; pop rbx ; ret
0x00000000000d71e9 : jne 0xd71c3 ; jmp 0xd71b3
0x00000000000ef06b : jne 0xef059 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f6f91 : jne 0xf7019 ; add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00000000000fae1f : jne 0xfadc6 ; mov edi, ebp ; call 0xf7036
0x00000000000fd841 : jne 0xfd815 ; xor eax, eax ; pop rbx ; ret
0x00000000000fda02 : jne 0xfd9d5 ; xor eax, eax ; pop rbx ; ret
0x0000000000115fd3 : jno 0x115fcd ; dec dword ptr [rax - 0x7f] ; ret
0x000000000016eaee : jno 0x16eafd ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001886c0 : jno 0x188694 ; jmp rdi
0x000000000019a389 : jno 0x19a386 ; call rsp
0x000000000019c469 : jno 0x19c46a ; jmp qword ptr [rdi]
0x00000000001a0666 : jno 0x1a0674 ; ret
0x00000000001a0666 : jno 0x1a067a ; ret
0x00000000001a240d : jno 0x1a2415 ; add al, dh ; and ebp, ebp ; call rdx
0x00000000001a5f09 : jno 0x1a5efb ; jmp qword ptr [rdx]
0x00000000001a5f08 : jno 0x1a5efc ; jmp qword ptr [rdx]
0x00000000001a6d71 : jno 0x1a6d64 ; call rax
0x00000000001b0381 : jno 0x1b037a ; jmp qword ptr [rcx]
0x00000000001b03b1 : jno 0x1b03aa ; jmp qword ptr [rcx]
0x00000000001b03c9 : jno 0x1b03c2 ; jmp qword ptr [rcx]
0x00000000001b03f9 : jno 0x1b03f2 ; jmp qword ptr [rcx]
0x00000000001b23d5 : jno 0x1b23de ; add al, bh ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001b23ed : jno 0x1b23f6 ; add byte ptr [rax], dl ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001b2405 : jno 0x1b240e ; add byte ptr [rax], ch ; and esi, esi ; jmp qword ptr [rsi]
0x00000000000021d7 : jno 0x2224 ; ret 0x1dd4
0x0000000000003957 : jno 0x39a1 ; xchg eax, ebx ; and cl, ah ; ret
0x0000000000048944 : jno 0x48996 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000000711b1 : jno 0x711bf ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x000000000009f0b0 : jno 0x9f0b9 ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x000000000009f2ea : jno 0x9f2f3 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x000000000009f451 : jno 0x9f462 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x000000000009f5b6 : jno 0x9f63a ; adc qword ptr [rdi - 8], rdi ; ret
0x000000000009f803 : jno 0x9f80c ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x000000000009fa3d : jno 0x9fa46 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x000000000009fba4 : jno 0x9fbb5 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x000000000009fd09 : jno 0x9fd8d ; adc qword ptr [rdi - 8], rdi ; ret
0x000000000009ff50 : jno 0x9ff59 ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x00000000000a018a : jno 0xa0193 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x00000000000a02f1 : jno 0xa0302 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x00000000000a0456 : jno 0xa04da ; adc qword ptr [rdi - 8], rdi ; ret
0x00000000000abee3 : jno 0xabef2 ; jne 0xabef4 ; mov dword ptr [r9 + 8], esi ; ret
0x00000000000abee9 : jno 0xabef6 ; ret
0x00000000000c0b55 : jno 0xc0ae2 ; ret 0xe283
0x00000000000c0be2 : jno 0xc0b6f ; ret 0xe283
0x00000000000c0caa : jno 0xc0c37 ; ret 0xe283
0x00000000000c0d1a : jno 0xc0ca7 ; ret 0xe283
0x00000000000c1053 : jno 0xc0fe0 ; ret 0xe283
0x00000000000c10ca : jno 0xc1057 ; ret 0xe283
0x00000000000c131a : jno 0xc12a7 ; ret 0xe283
0x00000000000c13aa : jno 0xc1337 ; ret 0xe283
0x00000000000c1c25 : jno 0xc1c1f ; ret
0x00000000000c2199 : jno 0xc2193 ; ret
0x00000000000c21e8 : jno 0xc21e2 ; ret
0x00000000000c22d3 : jno 0xc2260 ; ret 0xe283
0x00000000000c246b : jno 0xc23f8 ; ret 0xe283
0x00000000000c24fe : jno 0xc248b ; ret 0xe283
0x00000000000e2548 : jno 0xe254e ; dec dword ptr [rax - 0x77] ; ret
0x00000000000ff015 : jno 0xff04c ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000101701 : jnp 0x101756 ; sub al, 0 ; add rsp, 0x18 ; ret
0x000000000010ccbc : jnp 0x10ccee ; add byte ptr [rax - 0x77], cl ; ret 0x9ce9
0x000000000011f4be : jnp 0x11f510 ; test rdi, rdi ; jne 0x11f4b8 ; pop rbx ; ret
0x000000000013366f : jnp 0x13368a ; test rdi, rdi ; je 0x133684 ; call 0x1f8b1
0x0000000000134823 : jnp 0x13488f ; call rax
0x0000000000135243 : jnp 0x13529f ; call rax
0x00000000001834e5 : jnp 0x1834a2 ; ret
0x000000000018a045 : jnp 0x18a03f ; call qword ptr [rsi]
0x000000000018a041 : jnp 0x18a03f ; push rdx ; jnp 0x18a043 ; call qword ptr [rsi]
0x000000000018a044 : jnp 0x18a040 ; call qword ptr [rsi]
0x000000000018a040 : jnp 0x18a040 ; push rdx ; jnp 0x18a044 ; call qword ptr [rsi]
0x0000000000194705 : jnp 0x194708 ; jmp qword ptr [rax + 0x20fffb7c]
0x0000000000195655 : jnp 0x195655 ; call rax
0x00000000001956d1 : jnp 0x1956d1 ; jmp qword ptr [rdx]
0x00000000001956d5 : jnp 0x1956d9 ; jmp qword ptr [rdx + 0x22fffc7a]
0x0000000000195851 : jnp 0x195851 ; jmp rax
0x0000000000197e29 : jnp 0x197e1e ; jmp rsp
0x000000000019b999 : jnp 0x19b99a ; jmp qword ptr [rdx]
0x00000000001a2ea5 : jnp 0x1a2ead ; add byte ptr [rax + 0x44], ch ; in eax, dx ; jmp qword ptr [rdi]
0x00000000001a3da1 : jnp 0x1a3d92 ; call qword ptr [rcx]
0x00000000001a6011 : jnp 0x1a6003 ; jmp qword ptr [rcx]
0x00000000001b0971 : jnp 0x1b096a ; jmp qword ptr [rcx]
0x00000000001b0989 : jnp 0x1b0982 ; jmp qword ptr [rcx]
0x00000000001b09a1 : jnp 0x1b099a ; jmp qword ptr [rcx]
0x00000000001bba71 : jnp 0x1bba6d ; call qword ptr [rcx]
0x0000000000047015 : jnp 0x47021 ; add byte ptr [rbp - 0xa], dh ; mov rax, rbx ; pop rbx ; ret
0x00000000000fbe88 : jnp 0x481be2db ; add esp, 0x18 ; ret
0x0000000000103f2b : jns 0x103eed ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000012785d : jns 0x12786a ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x0000000000137b83 : jns 0x137b40 ; sub byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000001825ee : jns 0x182584 ; ret 0xf869
0x00000000001825ed : jns 0x182585 ; ret 0xf869
0x00000000001849fe : jns 0x184a55 ; jmp 0x184996
0x000000000018a285 : jns 0x18a27f ; call rsp
0x0000000000194701 : jns 0x194700 ; jmp qword ptr [rax]
0x00000000001956e1 : jns 0x1956e1 ; call qword ptr [rdx]
0x0000000000195821 : jns 0x195821 ; jmp rax
0x000000000019581d : jns 0x195821 ; push qword ptr [rax + 0x79] ; cld ; jmp rax
0x0000000000195861 : jns 0x195861 ; call rax
0x00000000001975c1 : jns 0x1975b3 ; jmp rsp
0x000000000019d709 : jns 0x19d6f6 ; call qword ptr [rcx]
0x00000000001a3d31 : jns 0x1a3d22 ; call qword ptr [rsi]
0x00000000001b2c85 : jns 0x1b2c8e ; add byte ptr [rax], cl ; cmp al, 0xf6 ; call qword ptr [rax]
0x0000000000001b2d : jns 0x1b38 ; ret
0x0000000000020490 : jns 0x20380 ; jmp 0x20461
0x0000000000029ae4 : jns 0x29d4cceb ; ret
0x0000000000002be3 : jns 0x2bb1 ; clc ; ret
0x0000000000003267 : jns 0x3242 ; ret 0x5a51
0x00000000000038ef : jns 0x3942 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x000000000009f0b7 : jns 0x9f0ba ; ret
0x000000000009f2f1 : jns 0x9f2f4 ; ret
0x000000000009f458 : jns 0x9f463 ; ret
0x000000000009f80a : jns 0x9f80d ; ret
0x000000000009fa44 : jns 0x9fa47 ; ret
0x000000000009fbab : jns 0x9fbb6 ; ret
0x000000000009ff57 : jns 0x9ff5a ; ret
0x00000000000a0191 : jns 0xa0194 ; ret
0x00000000000a02f8 : jns 0xa0303 ; ret
0x00000000000d71e6 : jns 0xd71f6 ; add dh, byte ptr [rbp - 0x2b] ; jmp 0xd71b6
0x00000000000e33ab : jns 0xe33ac ; dec dword ptr [rcx - 0x77] ; ret 0x448b
0x00000000000e33aa : jns 0xe33ad ; dec dword ptr [rcx - 0x77] ; ret 0x448b
0x00000000000fd3a4 : jns 0xfd3b2 ; mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x0000000000137590 : jns 0xffffffffc496be77 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000a9216 : jns 0xffffffffed3a957c ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000a9278 : jns 0xffffffffed3a99de ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a9298 : jns 0xffffffffed3a9afe ; mov byte ptr [rdi + 0xc], ch ; ret
0x0000000000132b63 : jo 0x132bc9 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000136692 : jo 0x1366f1 ; ret
0x00000000001816b8 : jo 0x1816d9 ; jmp 0x1816be
0x00000000001816e0 : jo 0x181701 ; jmp 0x1816e6
0x0000000000183664 : jo 0x1836de ; mov ebp, 0xfb67d10d ; ret
0x0000000000186884 : jo 0x1868de ; out dx, al ; call rax
0x0000000000187630 : jo 0x187621 ; int1 ; jmp qword ptr [rax - 0x2f000e18]
0x000000000018781c : jo 0x187823 ; int1 ; jmp qword ptr [rax - 0x2f000e02]
0x00000000001945dc : jo 0x1945ee ; sti ; inc dword ptr [rax + 0xa] ; sti ; call qword ptr [rax]
0x0000000000194868 : jo 0x194816 ; std ; call qword ptr [rax]
0x0000000000194b2c : jo 0x194b0b ; sti ; push qword ptr [rax - 0x7f000441] ; ret 0xfffb
0x0000000000194bd0 : jo 0x194bd9 ; cld ; push qword ptr [rax] ; add bh, ah ; call qword ptr [rax]
0x0000000000194cb8 : jo 0x194cac ; sti ; inc eax ; in al, dx ; sti ; call qword ptr [rax]
0x0000000000194d0c : jo 0x194d07 ; sti ; inc eax ; sti ; call qword ptr [rax]
0x0000000000194e84 : jo 0x194ea4 ; cld ; inc eax ; sbb ah, bh ; call qword ptr [rax]
0x0000000000195164 : jo 0x1951bc ; cld ; jmp rax
0x0000000000195368 : jo 0x1953bf ; cld ; jmp rax
0x0000000000195820 : jo 0x19589e ; cld ; jmp rax
0x0000000000195838 : jo 0x1958bb ; cld ; jmp rax
0x0000000000195d28 : jo 0x195ccb ; cld ; jmp rax
0x0000000000195d30 : jo 0x195cd2 ; cld ; call qword ptr [rax]
0x000000000019889d : jo 0x1988a6 ; add byte ptr [rax + rdi*8 - 0xb], ah ; jmp rsp
0x000000000019fe40 : jo 0x19fe73 ; jmp 0x19fe46
0x00000000001a228b : jo 0x1a2296 ; mov ebp, 0x41380e0a ; ret
0x00000000001a4a60 : jo 0x1a4a25 ; in eax, dx ; jmp qword ptr [rsi]
0x00000000001a6e00 : jo 0x1a6e78 ; out dx, eax ; jmp qword ptr [rax]
0x00000000001a7460 : jo 0x1a7446 ; out dx, eax ; call rsp
0x00000000001ab8d8 : jo 0x1ab8e6 ; ret
0x00000000001acf20 : jo 0x1aceac ; hlt ; call qword ptr [rsi]
0x00000000001b02f1 : jo 0x1b02ea ; jmp qword ptr [rcx]
0x00000000001b02f0 : jo 0x1b02eb ; jmp qword ptr [rcx]
0x00000000001b0309 : jo 0x1b0302 ; jmp qword ptr [rcx]
0x00000000001b08e0 : jo 0x1b095f ; cmc ; jmp qword ptr [rcx]
0x00000000001b23a5 : jo 0x1b23ae ; add al, cl ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001b23bd : jo 0x1b23c6 ; add al, ah ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001bb649 : jo 0x1bb645 ; call qword ptr [rdi]
0x00000000001bb679 : jo 0x1bb675 ; call qword ptr [rax]
0x00000000001bb769 : jo 0x1bb765 ; call rcx
0x00000000000292a6 : jo 0x292be ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000002e0b3 : jo 0x2e104 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002e0b2 : jo 0x2e105 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000041913 : jo 0x418a7 ; sar dword ptr [rdx + 1], -0x77 ; ret
0x0000000000045086 : jo 0x45091 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000060d6c : jo 0x60cf9 ; ret
0x0000000000071bba : jo 0x71bd2 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000075a1a : jo 0x759a7 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x0000000000075a19 : jo 0x759a8 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x0000000000079764 : jo 0x797b5 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ac864 : jo 0xac8b2 ; mov edi, ebp ; call rbx
0x00000000000acdee : jo 0xace40 ; mov edi, esp ; call rbx
0x00000000000b9b4c : jo 0xb9b60 ; xchg eax, ebp ; ret 0x8b4c
0x00000000000bf6fa : jo 0xbf703 ; jmp 0xbf4ef
0x00000000000dd82c : jo 0xdd854 ; hlt ; dec dword ptr [rcx - 0x77] ; ret 0x8949
0x00000000000e2545 : jo 0xe2537 ; push rbp ; jno 0xe2551 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e33a8 : jo 0xe339a ; jns 0xe33af ; dec dword ptr [rcx - 0x77] ; ret 0x448b
0x0000000000112a65 : jp 0x112abc ; mov rsi, rdx ; call rax
0x000000000012dfdd : jp 0x12e03d ; mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000131b42 : jp 0x131b4e ; ret
0x00000000001348b2 : jp 0x1348be ; ret
0x00000000001348ca : jp 0x1348d6 ; ret
0x0000000000135102 : jp 0x13510e ; ret
0x000000000013511a : jp 0x135126 ; ret
0x000000000013514a : jp 0x135156 ; ret
0x000000000014d2a6 : jp 0x14d29a ; ret
0x000000000014d309 : jp 0x14d2fd ; ret
0x000000000014d29f : jp 0x14d329 ; jb 0x14d28c ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x000000000014d2a4 : jp 0x14d329 ; jp 0x14d29c ; ret
0x000000000014d796 : jp 0x14d78a ; ret
0x000000000014d7f9 : jp 0x14d7ed ; ret
0x000000000014d78f : jp 0x14d819 ; jb 0x14d77c ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x000000000014d794 : jp 0x14d819 ; jp 0x14d78c ; ret
0x000000000014db39 : jp 0x14db2d ; ret
0x000000000014db99 : jp 0x14db8d ; ret
0x000000000014db32 : jp 0x14dbbc ; jb 0x14db1f ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x000000000014db37 : jp 0x14dbbc ; jp 0x14db2f ; ret
0x0000000000187fb1 : jp 0x187fa8 ; call qword ptr [rax]
0x000000000018a1c5 : jp 0x18a1bf ; call rdx
0x000000000019565d : jp 0x19565d ; call rax
0x00000000001956d9 : jp 0x1956d9 ; jmp qword ptr [rdx]
0x00000000001956dd : jp 0x1956e1 ; jmp qword ptr [rdx + 0x12fffc79]
0x0000000000195859 : jp 0x195859 ; jmp rax
0x0000000000195cf0 : jp 0x195c92 ; cld ; jmp qword ptr [rax]
0x0000000000196cd9 : jp 0x196cca ; jmp rsp
0x000000000019d761 : jp 0x19d74e ; call qword ptr [rax]
0x000000000019d7a9 : jp 0x19d796 ; jmp qword ptr [rsi]
0x00000000001b08c9 : jp 0x1b08c2 ; jmp qword ptr [rcx]
0x00000000001b08e1 : jp 0x1b08da ; jmp qword ptr [rcx]
0x00000000001b08f9 : jp 0x1b08f2 ; jmp qword ptr [rcx]
0x00000000001b0911 : jp 0x1b090a ; jmp qword ptr [rcx]
0x00000000001b0959 : jp 0x1b0952 ; jmp qword ptr [rcx]
0x0000000000023653 : jp 0x2366d ; mov qword ptr [rbp - 0x58], rdx ; call 0x1f8a8
0x0000000000002561 : jp 0x2545 ; jmp qword ptr [rbx]
0x0000000000002560 : jp 0x2546 ; jmp qword ptr [rbx]
0x000000000002cb28 : jp 0x2cb6b ; jae 0x2cb48 ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x0000000000003956 : jp 0x39d0 ; xchg eax, ebx ; and cl, ah ; ret
0x0000000000072f29 : jp 0x72f6e ; jmp 0x72ef3
0x000000000007dd07 : jp 0x7dd42 ; add byte ptr [rax - 0x77], cl ; ret 0x21e9
0x000000000008e985 : jp 0x8e97f ; ret 0x7401
0x00000000000bac11 : jp 0xbac26 ; pop rbp ; pop r12 ; pop r14 ; ret
0x00000000000be130 : jp 0xbe16b ; add byte ptr [rdx - 0x73], cl ; or al, 0x20 ; mov rdx, rax ; jmp 0xbe149
0x0000000000114833 : jrcxz 0x1147f8 ; cmp r11d, 0xa ; je 0x114844 ; ret
0x0000000000139fbf : jrcxz 0x13a004 ; call rsi
0x000000000015a48a : jrcxz 0x15a485 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015a489 : jrcxz 0x15a486 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015cf5a : jrcxz 0x15cf55 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015cf59 : jrcxz 0x15cf56 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015fa7a : jrcxz 0x15fa75 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015fa79 : jrcxz 0x15fa76 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000182445 : jrcxz 0x18249f ; ret
0x0000000000186681 : jrcxz 0x186676 ; dec dword ptr [rsi - 0x1d] ; in eax, dx ; jmp qword ptr [rbx]
0x0000000000186685 : jrcxz 0x186676 ; jmp qword ptr [rbx]
0x0000000000186680 : jrcxz 0x186677 ; dec dword ptr [rsi - 0x1d] ; in eax, dx ; jmp qword ptr [rbx]
0x0000000000186684 : jrcxz 0x186677 ; jmp qword ptr [rbx]
0x00000000001866ed : jrcxz 0x1866de ; jmp qword ptr [rbx]
0x00000000001866ec : jrcxz 0x1866df ; jmp qword ptr [rbx]
0x0000000000186701 : jrcxz 0x1866f6 ; dec dword ptr [rsi - 0x1d] ; in eax, dx ; jmp qword ptr [rbx]
0x0000000000186705 : jrcxz 0x1866f6 ; jmp qword ptr [rbx]
0x0000000000186700 : jrcxz 0x1866f7 ; dec dword ptr [rsi - 0x1d] ; in eax, dx ; jmp qword ptr [rbx]
0x0000000000186704 : jrcxz 0x1866f7 ; jmp qword ptr [rbx]
0x0000000000194a09 : jrcxz 0x194a08 ; call rax
0x0000000000197a21 : jrcxz 0x197a14 ; jmp rsp
0x0000000000199881 : jrcxz 0x19987e ; call qword ptr [rdx + rax*8 + 1]
0x000000000019afb9 : jrcxz 0x19afb7 ; jmp rsp
0x00000000001ae381 : jrcxz 0x1ae379 ; jmp qword ptr [rcx]
0x00000000001b5209 : jrcxz 0x1b5203 ; call rcx
0x00000000001b5bc9 : jrcxz 0x1b5bc8 ; call rsi
0x00000000001b96cd : jrcxz 0x1b96d6 ; add al, al ; div edi ; call qword ptr [rdx]
0x0000000000050e9c : jrcxz 0x50f15 ; ret 0x8945
0x0000000000053ade : jrcxz 0x53b57 ; ret
0x0000000000056778 : jrcxz 0x56772 ; ret 0xf40
0x0000000000084de3 : jrcxz 0x84e20 ; add byte ptr [rbp - 0xcf98740], al ; ret
0x00000000000c3d9f : jrcxz 0xc3db8 ; test byte ptr [rdx - 0x16000016], bh ; ret 0xfff3
0x00000000000d01be : jrcxz 0xd01ab ; ret 0xfffb
0x00000000000d6870 : jrcxz 0xd687f ; je 0xd680f ; pop rbx ; ret
0x00000000000ef06c : jrcxz 0xef0be ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010547f : js 0x1054df ; pop rbp ; ret
0x00000000001054ef : js 0x10554f ; pop rbp ; ret
0x0000000000109bd8 : js 0x109b64 ; loopne 0x109beb ; movzx eax, ax ; ret
0x0000000000109d08 : js 0x109c91 ; loopne 0x109d11 ; ret
0x0000000000109d98 : js 0x109d24 ; loopne 0x109da5 ; movzx eax, ax ; ret
0x000000000010a098 : js 0x10a024 ; loopne 0x10a0a7 ; movzx eax, ax ; ret
0x000000000010a571 : js 0x10a4fd ; loopne 0x10a584 ; movzx eax, ax ; ret
0x000000000010a671 : js 0x10a5fa ; loopne 0x10a67a ; ret
0x000000000010a6f1 : js 0x10a67d ; loopne 0x10a6fe ; movzx eax, ax ; ret
0x000000000010a971 : js 0x10a8fd ; loopne 0x10a980 ; movzx eax, ax ; ret
0x0000000000118af4 : js 0x118b09 ; mov eax, edi ; and eax, 0xffffff ; ret
0x0000000000118b74 : js 0x118b87 ; mov eax, edi ; shr eax, 0x18 ; ret
0x000000000011d074 : js 0x11d07b ; call 0x892e4
0x00000000001404d3 : js 0x1404e8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000186890 : js 0x1868e9 ; out dx, al ; call rax
0x00000000001884dc : js 0x18848e ; jmp rdx
0x0000000000189771 : js 0x18976a ; call rsi
0x0000000000189770 : js 0x18976b ; call rsi
0x000000000018b9dc : js 0x18b96a ; cli ; call qword ptr [rax]
0x00000000001946fd : js 0x194700 ; jmp qword ptr [rax + 0x20fffb79]
0x0000000000195669 : js 0x195669 ; jmp qword ptr [rax]
0x00000000001957a9 : js 0x1957a9 ; call rsp
0x00000000001957a8 : js 0x1957aa ; call rsp
0x00000000001a0298 : js 0x1a02f8 ; jmp 0x1a029e
0x00000000001a4138 : js 0x1a40c4 ; in eax, dx ; jmp qword ptr [rbx]
0x00000000001ac5e8 : js 0x1ac5c4 ; jmp qword ptr [rcx]
0x00000000001afcd8 : js 0x1afd37 ; cmc ; jmp qword ptr [rcx]
0x00000000001aff08 : js 0x1aff79 ; cmc ; jmp qword ptr [rcx]
0x00000000001b0158 : js 0x1b01cb ; cmc ; jmp qword ptr [rcx]
0x00000000001b03c8 : js 0x1b043e ; cmc ; jmp qword ptr [rcx]
0x00000000001b0761 : js 0x1b075a ; jmp qword ptr [rbx]
0x00000000001ba5b8 : js 0x1ba5d4 ; clc ; jmp qword ptr [rcx]
0x0000000000025b94 : js 0x25b9e ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc985
0x000000000002dd11 : js 0x2dc9d ; loopne 0x2dd24 ; movzx eax, ax ; ret
0x000000000002dd51 : js 0x2dcdd ; loopne 0x2dd5e ; movzx eax, ax ; ret
0x000000000002ddf1 : js 0x2dd7d ; loopne 0x2de00 ; movzx eax, ax ; ret
0x000000000002ded1 : js 0x2de5a ; loopne 0x2deda ; ret
0x000000000002df4a : js 0x2ded3 ; loopne 0x2df53 ; ret
0x000000000002df5a : js 0x2dee6 ; loopne 0x2df6d ; movzx eax, ax ; ret
0x000000000002df9a : js 0x2df26 ; loopne 0x2dfa7 ; movzx eax, ax ; ret
0x000000000002e03a : js 0x2dfc6 ; loopne 0x2e049 ; movzx eax, ax ; ret
0x000000000002e0c3 : js 0x2e114 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002e0c2 : js 0x2e115 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000002f99 : js 0x2f4f ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x0000000000032c06 : js 0x32c10 ; mov byte ptr [rax], 0x40 ; call 0x8ee67
0x0000000000032c1f : js 0x32c29 ; mov byte ptr [rax], 0x2e ; call 0x8ee67
0x0000000000032c38 : js 0x32c42 ; mov byte ptr [rax], 0x2e ; call 0x8ee67
0x00000000000346ae : js 0x346e0 ; call 0x1f8b0
0x0000000000075a1d : js 0x75a2b ; ret
0x0000000000084de8 : js 0x84df3 ; ret
0x00000000000cd177 : js 0xcd183 ; ret
0x00000000000dfeba : js 0xdfead ; call 0xffffffff810df2c3
0x00000000000e0fb6 : js 0xe0fc9 ; movsxd rdi, dword ptr [r11 + rdi*4] ; add rdi, r11 ; jmp rdi
0x00000000000e3518 : js 0xe3569 ; shl esi, 2 ; call 0x1f7f7
0x00000000000e4678 : js 0xe468b ; add al, 0x75 ; mov bl, 0x8b ; pop rax ; or bh, dh ; ret
0x00000000000f566c : js 0xf56be ; mov dword ptr [rdi + 0x80], edx ; ret
0x00000000000f6009 : js 0xf605b ; mov dword ptr [rdi + 0x100], edx ; ret
0x00000000000fc63b : js 0xfc60d ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fe962 : js 0xfe975 ; mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000000a91b8 : js 0xffffffffed3a941e ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a91e6 : js 0xffffffffed3a964c ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a9238 : js 0xffffffffed3a9a9e ; mov byte ptr [rdi + 9], ch ; ret
0x0000000000024c23 : lahf ; add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x00000000001b5205 : lahf ; add dword ptr [rax], eax ; cwde ; jrcxz 0x1b5207 ; call rcx
0x0000000000195b65 : lahf ; cld ; call rax
0x0000000000195be5 : lahf ; cld ; jmp qword ptr [rdx + 0x12fffc9e]
0x0000000000195d25 : lahf ; cld ; push qword ptr [rax - 0x62] ; cld ; jmp rax
0x00000000001b1159 : lahf ; cmc ; call rdi
0x0000000000184b23 : lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000000fae20 : lahf ; mov edi, ebp ; call 0xf7035
0x0000000000115cb5 : lahf ; mov rax, rdi ; add rsp, 8 ; ret
0x000000000014aefd : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000004c576 : lahf ; ret
0x000000000007365e : lahf ; ret 0x3841
0x00000000001025ee : lahf ; ret 0x3845
0x00000000000d50da : lahf ; ret 0x82eb
0x000000000018237d : lahf ; ret 0x871e
0x000000000011ceef : lahf ; ret 0xc2e9
0x000000000005fc0c : lahf ; ret 0xd129
0x0000000000061f22 : lahf ; ret 0xd329
0x000000000005fe6c : lahf ; ret 0xd629
0x00000000001012b3 : lahf ; ret 0xe883
0x00000000000aa169 : lahf ; ret 0xea81
0x000000000014b58d : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000101737 : lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x0000000000186fd7 : lcall ptr [rax + 0x5a] ; out dx, al ; call rax
0x0000000000186fd3 : lcall ptr [rax + 0x5a] ; out dx, al ; lcall ptr [rax + 0x5a] ; out dx, al ; call rax
0x000000000019879b : lcall ptr [rax + rbp*2 + 0x41140001] ; cmc ; call rsp
0x000000000019a803 : lcall ptr [rax + rsi + 0x17a40002] ; cli ; call rsp
0x0000000000186237 : lcall ptr [rax - 0x51] ; in eax, dx ; call rax
0x0000000000186233 : lcall ptr [rax - 0x51] ; in eax, dx ; lcall ptr [rax - 0x51] ; in eax, dx ; call rax
0x000000000018620b : lcall ptr [rax - 0x51] ; in eax, dx ; push rsi ; jbe 0x186208 ; jmp rdi
0x00000000001891ff : lcall ptr [rax] ; add dh, ch ; call rax
0x000000000018920b : lcall ptr [rax] ; add dh, ch ; jmp rax
0x00000000001891fb : lcall ptr [rax] ; add dh, ch ; lcall ptr [rax] ; add dh, ch ; call rax
0x0000000000189207 : lcall ptr [rax] ; add dh, ch ; lcall ptr [rax] ; add dh, ch ; jmp rax
0x000000000018689b : lcall ptr [rax] ; push rbp ; out dx, al ; call rax
0x0000000000122a15 : lcall ptr [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000011c865 : lcall ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x0000000000070ac5 : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x000000000019a7ab : lcall ptr [rbp + rbp + 0xbc40002] ; cli ; jmp rsp
0x0000000000197643 : lcall ptr [rbp + rbp*8 - 0x358c0000] ; out dx, al ; jmp rsp
0x000000000001fb73 : lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000073591 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000029e13 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000000b5ba1 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r14 ; ret
0x0000000000039ce2 : lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000070390 : lcall ptr [rbx + 0x5d] ; ret
0x0000000000085baf : lcall ptr [rbx - 0x3d] ; mov eax, 0xfffffffe ; pop rbx ; ret
0x0000000000197343 : lcall ptr [rcx + rbx*8 + 0x3ad40000] ; out dx, al ; call rsp
0x000000000019abfb : lcall ptr [rcx + rcx*2 + 0x6d640002] ; cli ; jmp rsp
0x0000000000196b13 : lcall ptr [rcx - 0x10bc0000] ; jmp 0x196b23
0x0000000000188aa3 : lcall ptr [rcx] ; push rax ; hlt ; jmp qword ptr [rbx]
0x0000000000188b6b : lcall ptr [rcx] ; push rdx ; hlt ; jmp qword ptr [rbx]
0x000000000018173b : lcall ptr [rdi + 0x22] ; jmp 0x181743
0x0000000000110f8a : lcall ptr [rdi + 0xf] ; xchg eax, esp ; ret 0x840
0x0000000000198343 : lcall ptr [rdi + rax*2 + 0x5fc40001] ; call rsp
0x000000000019a92b : lcall ptr [rdi + rsi + 0x2d540002] ; cli ; jmp rsp
0x0000000000195ae7 : lcall ptr [rdx + 0x2afffca8] ; test al, 0xfc ; call rax
0x00000000001860ab : lcall ptr [rdx + 0x64] ; in eax, dx ; call rsp
0x00000000001860a7 : lcall ptr [rdx + 0x64] ; in eax, dx ; lcall ptr [rdx + 0x64] ; in eax, dx ; call rsp
0x00000000001870a7 : lcall ptr [rsi + rbx*2] ; out dx, al ; jmp rsp
0x0000000000187113 : lcall ptr [rsi + rbx*2] ; out dx, al ; lcall ptr [rsi + rbx*2] ; out dx, al ; jmp rsp
0x0000000000197c53 : lcall ptr [rsi + rdx + 0x38240001] ; int1 ; jmp rsp
0x00000000001867db : lcall ptr [rsi] ; fsubp st(5) ; call rbx
0x0000000000199f2b : lcall ptr [rsp + rbp*8 - 0x651bffff] ; clc ; call rsp
0x000000000015ab16 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000079874 : lds r11d, ptr [r11 + 0x5d] ; pop r12 ; ret
0x00000000001a7814 : lds r8d, ptr [rax] ; add byte ptr [rax], bh ; cmp dh, al ; jmp qword ptr [rbx]
0x0000000000072caf : lea eax, dword ptr [r8 - 1] ; ret
0x000000000012351c : lea eax, dword ptr [r9 + r8 + 2] ; pop rbx ; ret
0x00000000000ba7b8 : lea eax, dword ptr [rax + rax - 1] ; ret
0x000000000008e114 : lea eax, dword ptr [rax + rdi + 0x10] ; ret
0x000000000008e124 : lea eax, dword ptr [rax + rdi + 0x20] ; ret
0x000000000009e6d4 : lea eax, dword ptr [rax + rdi + 0x30] ; ret
0x000000000008e0f4 : lea eax, dword ptr [rax + rdi - 0x10] ; ret
0x00000000000c6f52 : lea eax, dword ptr [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000072cb0 : lea eax, dword ptr [rax - 1] ; ret
0x00000000001236a0 : lea eax, dword ptr [rbp + rbx] ; pop rbx ; pop rbp ; ret
0x000000000012da9b : lea eax, dword ptr [rbx + 0x2260] ; pop rbx ; ret
0x00000000000abfb8 : lea eax, dword ptr [rbx - 4] ; pop rbx ; ret
0x00000000001b1dd4 : lea eax, dword ptr [rbx] ; mov es, word ptr [rdx] ; add ah, bh ; ret
0x000000000012351d : lea eax, dword ptr [rcx + rax + 2] ; pop rbx ; ret
0x000000000008cbbd : lea eax, dword ptr [rcx + rsi] ; ret
0x00000000000a9954 : lea eax, dword ptr [rcx - 1] ; ret
0x0000000000198eed : lea eax, dword ptr [rcx] ; add byte ptr [rdi + rcx*4 - 0xa], dl ; jmp rsp
0x00000000000a6a7c : lea eax, dword ptr [rdi + 0x10] ; ret
0x00000000000a6a91 : lea eax, dword ptr [rdi + 0x11] ; ret
0x00000000000a6aaf : lea eax, dword ptr [rdi + 0x12] ; ret
0x00000000000a6acf : lea eax, dword ptr [rdi + 0x13] ; ret
0x00000000000a6af2 : lea eax, dword ptr [rdi + 0x14] ; ret
0x00000000000a6b11 : lea eax, dword ptr [rdi + 0x15] ; ret
0x00000000000a6b31 : lea eax, dword ptr [rdi + 0x16] ; ret
0x00000000000a6b51 : lea eax, dword ptr [rdi + 0x17] ; ret
0x00000000000a6b74 : lea eax, dword ptr [rdi + 0x18] ; ret
0x00000000000a6b99 : lea eax, dword ptr [rdi + 0x19] ; ret
0x00000000000a6bb7 : lea eax, dword ptr [rdi + 0x1a] ; ret
0x00000000000a6bd7 : lea eax, dword ptr [rdi + 0x1b] ; ret
0x00000000000a6bf3 : lea eax, dword ptr [rdi + 0x1c] ; ret
0x00000000000a6c13 : lea eax, dword ptr [rdi + 0x1d] ; ret
0x00000000000a6c33 : lea eax, dword ptr [rdi + 0x1e] ; ret
0x00000000000a6c53 : lea eax, dword ptr [rdi + 0x1f] ; ret
0x00000000000a7aa3 : lea eax, dword ptr [rdi + 0x20] ; ret
0x00000000000a7d09 : lea eax, dword ptr [rdi + 0x40] ; ret
0x00000000000a69cd : lea eax, dword ptr [rdi + 0xa] ; ret
0x00000000000a69ed : lea eax, dword ptr [rdi + 0xb] ; ret
0x00000000000a6a0f : lea eax, dword ptr [rdi + 0xc] ; ret
0x00000000000a6a2f : lea eax, dword ptr [rdi + 0xd] ; ret
0x00000000000a6a4f : lea eax, dword ptr [rdi + 0xe] ; ret
0x00000000000a6a69 : lea eax, dword ptr [rdi + 0xf] ; ret
0x000000000009e034 : lea eax, dword ptr [rdi + 1] ; ret
0x000000000009e048 : lea eax, dword ptr [rdi + 2] ; ret
0x000000000009e053 : lea eax, dword ptr [rdi + 3] ; ret
0x000000000009e067 : lea eax, dword ptr [rdi + 4] ; ret
0x000000000009e077 : lea eax, dword ptr [rdi + 5] ; ret
0x000000000009e087 : lea eax, dword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a697b : lea eax, dword ptr [rdi + 6] ; ret
0x000000000009e027 : lea eax, dword ptr [rdi + 7] ; ret
0x00000000000a699a : lea eax, dword ptr [rdi + 8] ; ret
0x0000000000122830 : lea eax, dword ptr [rdi + 9] ; and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x00000000000a69af : lea eax, dword ptr [rdi + 9] ; ret
0x000000000008e149 : lea eax, dword ptr [rdi + rax + 0x10] ; ret
0x000000000008e159 : lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x000000000008e043 : lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x0000000000095d77 : lea eax, dword ptr [rdi + rax] ; ret
0x0000000000149e9a : lea eax, dword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x00000000001239a0 : lea eax, dword ptr [rdi + rsi + 8] ; ret
0x000000000002da65 : lea eax, dword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000008cab9 : lea eax, dword ptr [rdi + rsi] ; ret
0x00000000000aba0e : lea eax, dword ptr [rdi - 0x10] ; ret
0x00000000000abb71 : lea eax, dword ptr [rdi - 0xc] ; ret
0x00000000000abb91 : lea eax, dword ptr [rdi - 4] ; ret
0x00000000000abb81 : lea eax, dword ptr [rdi - 8] ; ret
0x00000000000a6903 : lea eax, dword ptr [rdi] ; ret
0x00000000001bbe16 : lea eax, dword ptr [rdi] ; rol byte ptr [rcx], cl ; ret 0xa
0x000000000016a8fd : lea eax, dword ptr [rdx + 0xa] ; ret
0x000000000016a91d : lea eax, dword ptr [rdx + 0xb] ; ret
0x000000000016a93f : lea eax, dword ptr [rdx + 0xc] ; ret
0x000000000016a95f : lea eax, dword ptr [rdx + 0xd] ; ret
0x000000000016a97f : lea eax, dword ptr [rdx + 0xe] ; ret
0x000000000016a80f : lea eax, dword ptr [rdx + 0xf] ; ret
0x000000000016a837 : lea eax, dword ptr [rdx + 1] ; ret
0x000000000016a84d : lea eax, dword ptr [rdx + 2] ; ret
0x000000000016a865 : lea eax, dword ptr [rdx + 3] ; ret
0x000000000016a87b : lea eax, dword ptr [rdx + 4] ; ret
0x000000000016a88d : lea eax, dword ptr [rdx + 5] ; ret
0x000000000016a8ab : lea eax, dword ptr [rdx + 6] ; ret
0x000000000016a7b7 : lea eax, dword ptr [rdx + 7] ; ret
0x000000000016a8bd : lea eax, dword ptr [rdx + 8] ; ret
0x000000000016a8dd : lea eax, dword ptr [rdx + 9] ; ret
0x0000000000072c9e : lea eax, dword ptr [rdx + rdi] ; ret
0x00000000000aa23c : lea eax, dword ptr [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x000000000016a825 : lea eax, dword ptr [rdx] ; ret
0x000000000008b12a : lea eax, dword ptr [rip + 0x10] ; ret
0x000000000008e920 : lea eax, dword ptr [rip + 0x10e4a] ; ret
0x000000000002cb39 : lea eax, dword ptr [rip + 0x15f826] ; ret
0x0000000000020931 : lea eax, dword ptr [rip + 0x16b574] ; ret
0x0000000000020941 : lea eax, dword ptr [rip + 0x16d443] ; ret
0x000000000008b0de : lea eax, dword ptr [rip + 0x1713c] ; ret
0x0000000000088e7e : lea eax, dword ptr [rip + 0x1777c] ; ret
0x000000000008e7ba : lea eax, dword ptr [rip + 0x1b330] ; ret
0x000000000008dc16 : lea eax, dword ptr [rip + 0x1ba24] ; cmove rax, rdx ; ret
0x000000000008e194 : lea eax, dword ptr [rip + 0x26] ; ret
0x000000000012b1c9 : lea eax, dword ptr [rip + 0x29cbd1] ; pop rbx ; ret
0x000000000012b191 : lea eax, dword ptr [rip + 0x29cc09] ; pop rbx ; ret
0x000000000012b0d2 : lea eax, dword ptr [rip + 0x29ccc8] ; pop rbx ; ret
0x00000000001016ab : lea eax, dword ptr [rip + 0x2c4c0f] ; pop rbp ; pop r12 ; ret
0x00000000000fda6e : lea eax, dword ptr [rip + 0x2c8584] ; ret
0x00000000000fd8ae : lea eax, dword ptr [rip + 0x2c8744] ; ret
0x000000000006ac34 : lea eax, dword ptr [rip + 0x35aac6] ; pop rbx ; pop rbp ; ret
0x00000000001159b1 : lea eax, dword ptr [rip + 0x37d09] ; ret
0x0000000000115aa1 : lea eax, dword ptr [rip + 0x37fb9] ; ret
0x000000000012a901 : lea eax, dword ptr [rip + 0x61a5e] ; ret
0x000000000008efba : lea eax, dword ptr [rip + 0x80] ; ret
0x0000000000093a0f : lea eax, dword ptr [rip + 0xb3db] ; ret
0x00000000000939e0 : lea eax, dword ptr [rip + 0xb63a] ; ret
0x0000000000093a23 : lea eax, dword ptr [rip + 0xbcda7] ; ret
0x000000000008d06b : lea eax, dword ptr [rip + 0xbd01f] ; ret
0x000000000008ccdb : lea eax, dword ptr [rip + 0xbd27f] ; ret
0x000000000008e961 : lea eax, dword ptr [rip + 0xbf109] ; ret
0x000000000008a86b : lea eax, dword ptr [rip + 0xbf5af] ; ret
0x00000000000ab26c : lea eax, dword ptr [rip + 0xc236e] ; ret
0x00000000000abe48 : lea eax, dword ptr [rip + 0xc3452] ; ret
0x00000000000abe50 : lea eax, dword ptr [rip + 0xc5d0a] ; ret
0x00000000000892ce : lea eax, dword ptr [rip + 0xc] ; ret
0x000000000008c9be : lea eax, dword ptr [rip + 0xd9c3c] ; ret
0x000000000008f01d : lea eax, dword ptr [rip + 0xd] ; ret
0x000000000008ee4e : lea eax, dword ptr [rip + 0xda32c] ; ret
0x000000000008a75e : lea eax, dword ptr [rip + 0xda6ec] ; ret
0x000000000008ef6e : lea eax, dword ptr [rip + 0xdba1c] ; ret
0x000000000008e1a8 : lea eax, dword ptr [rip + 0xdfab2] ; ret
0x000000000008e1b0 : lea eax, dword ptr [rip + 0xe223a] ; ret
0x000000000008906b : lea eax, dword ptr [rip + 0xe705f] ; ret
0x00000000000abe34 : lea eax, dword ptr [rip + 0xe916] ; ret
0x00000000000ab264 : lea eax, dword ptr [rip + 0xf596] ; ret
0x00000000000569a6 : lea eax, dword ptr [rip - 0x2fa] ; add rax, rdx ; jmp rax
0x00000000000f61b6 : lea eax, dword ptr [rip - 0x4c] ; cmove rax, rdx ; ret
0x0000000000115aea : lea eax, dword ptr [rip - 0x6c010] ; ret
0x0000000000115a60 : lea eax, dword ptr [rip - 0x76306] ; ret
0x0000000000115970 : lea eax, dword ptr [rip - 0x76966] ; ret
0x00000000001237fe : lea eax, dword ptr [rsi + 8] ; ret
0x00000000001a6795 : lea eax, dword ptr [rsi + rcx*4] ; add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x00000000001bad1a : lea eax, dword ptr [rsi + rcx*4] ; add ecx, dword ptr [rdi + 0x80e7002] ; ret
0x0000000000047031 : lea ebx, dword ptr [rax + 1] ; mov rax, rbx ; pop rbx ; ret
0x00000000000598ab : lea ebx, dword ptr [rax - 0x7b000011] ; ror byte ptr [rdi], 0x94 ; ret 0x7f3c
0x0000000000182c31 : lea ebx, dword ptr [rsi - 0x3271f33] ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000000ac183 : lea ecx, dword ptr [rax + 1] ; call rbx
0x00000000000ac2ae : lea ecx, dword ptr [rax + 4] ; call rbx
0x00000000000ac6ee : lea ecx, dword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00000000000be134 : lea ecx, dword ptr [rax] ; mov rdx, rax ; jmp 0xbe145
0x00000000001bbdbe : lea ecx, dword ptr [rax] ; rol byte ptr [rcx], cl ; ret 0xb
0x0000000000150850 : lea ecx, dword ptr [rbx + rcx] ; jmp r9
0x00000000000a51be : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x0000000000168106 : lea ecx, dword ptr [rdx + 0x10] ; jne 0x168659 ; ret
0x0000000000168404 : lea ecx, dword ptr [rdx + 0xa] ; jne 0x168659 ; ret
0x0000000000168424 : lea ecx, dword ptr [rdx + 0xb] ; jne 0x168659 ; ret
0x0000000000168444 : lea ecx, dword ptr [rdx + 0xc] ; jne 0x168659 ; ret
0x0000000000168466 : lea ecx, dword ptr [rdx + 0xd] ; jne 0x168659 ; ret
0x0000000000168486 : lea ecx, dword ptr [rdx + 0xe] ; jne 0x168659 ; ret
0x00000000001684a6 : lea ecx, dword ptr [rdx + 0xf] ; jne 0x168659 ; ret
0x00000000001682fc : lea ecx, dword ptr [rdx + 1] ; jne 0x168659 ; ret
0x000000000016831e : lea ecx, dword ptr [rdx + 2] ; jne 0x168659 ; ret
0x0000000000168344 : lea ecx, dword ptr [rdx + 3] ; jne 0x168659 ; ret
0x000000000016835c : lea ecx, dword ptr [rdx + 4] ; jne 0x168659 ; ret
0x00000000000720a1 : lea ecx, dword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000070506 : lea ecx, dword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x0000000000168382 : lea ecx, dword ptr [rdx + 5] ; jne 0x168659 ; ret
0x00000000001683a4 : lea ecx, dword ptr [rdx + 6] ; jne 0x168659 ; ret
0x00000000001683c2 : lea ecx, dword ptr [rdx + 7] ; jne 0x168659 ; ret
0x000000000016809e : lea ecx, dword ptr [rdx + 8] ; jne 0x168659 ; ret
0x00000000001683e4 : lea ecx, dword ptr [rdx + 9] ; jne 0x168659 ; ret
0x0000000000048350 : lea ecx, dword ptr [rdx] ; jmp 0x483a6
0x0000000000049f30 : lea ecx, dword ptr [rdx] ; jmp 0x49f86
0x0000000000059828 : lea ecx, dword ptr [rip - 0x7cc] ; add rax, rcx ; jmp rax
0x000000000010a4e7 : lea ecx, dword ptr [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000136729 : lea ecx, dword ptr [rsp + 0x10] ; call qword ptr [r10]
0x0000000000074f24 : lea ecx, dword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x000000000012c2d8 : lea ecx, dword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000075000 : lea ecx, dword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x000000000013653a : lea ecx, dword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x000000000012c1e6 : lea ecx, dword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x00000000000ac649 : lea ecx, dword ptr [rsp + 0x20] ; call rbx
0x00000000000ac2a9 : lea ecx, dword ptr [rsp + 0x20] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000ac17e : lea ecx, dword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000001378d2 : lea ecx, dword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x000000000012c00c : lea ecx, dword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x000000000012c77b : lea ecx, dword ptr [rsp + 0x30] ; call qword ptr [rax]
0x00000000000ba5ec : lea ecx, dword ptr [rsp + 0x30] ; mov rdi, qword ptr [rax] ; call r14
0x00000000000acb2a : lea ecx, dword ptr [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x0000000000137693 : lea ecx, dword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x00000000000acdeb : lea ecx, dword ptr [rsp + 0x70] ; mov rdi, r12 ; call rbx
0x00000000000ac861 : lea ecx, dword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x000000000011d073 : lea edi, dword ptr [rax + 1] ; call 0x892e5
0x0000000000032c1e : lea edi, dword ptr [rax + 1] ; mov byte ptr [rax], 0x2e ; call 0x8ee68
0x0000000000032c05 : lea edi, dword ptr [rax + 1] ; mov byte ptr [rax], 0x40 ; call 0x8ee68
0x000000000013263e : lea edi, dword ptr [rbp + 0x10] ; call rax
0x0000000000135242 : lea edi, dword ptr [rbx + 0x58] ; call rax
0x0000000000134822 : lea edi, dword ptr [rbx + 0x68] ; call rax
0x0000000000131aa5 : lea edi, dword ptr [rbx + 0xc8] ; call rax
0x0000000000038fdc : lea edi, dword ptr [rbx + rsi] ; call rax
0x000000000008e9f6 : lea edi, dword ptr [rdi + 0x10] ; jne 0x8e9e8 ; mov rax, rdi ; ret
0x0000000000093ab6 : lea edi, dword ptr [rdi + 0x10] ; jne 0x93aa6 ; ret
0x00000000000a5d2d : lea edi, dword ptr [rdi + 0x10] ; jne 0xa6409 ; ret
0x00000000000a7411 : lea edi, dword ptr [rdi + 0x10] ; jne 0xa7c19 ; ret
0x00000000000a5d50 : lea edi, dword ptr [rdi + 0x11] ; jne 0xa6409 ; ret
0x00000000000a7434 : lea edi, dword ptr [rdi + 0x11] ; jne 0xa7c19 ; ret
0x00000000000a5d75 : lea edi, dword ptr [rdi + 0x12] ; jne 0xa6409 ; ret
0x00000000000a7459 : lea edi, dword ptr [rdi + 0x12] ; jne 0xa7c19 ; ret
0x00000000000a5d93 : lea edi, dword ptr [rdi + 0x13] ; jne 0xa6409 ; ret
0x00000000000a7487 : lea edi, dword ptr [rdi + 0x13] ; jne 0xa7c19 ; ret
0x00000000000a5db3 : lea edi, dword ptr [rdi + 0x14] ; jne 0xa6409 ; ret
0x00000000000a74b7 : lea edi, dword ptr [rdi + 0x14] ; jne 0xa7c19 ; ret
0x00000000000a5dd6 : lea edi, dword ptr [rdi + 0x15] ; jne 0xa6409 ; ret
0x00000000000a74ea : lea edi, dword ptr [rdi + 0x15] ; jne 0xa7c19 ; ret
0x00000000000a5df5 : lea edi, dword ptr [rdi + 0x16] ; jne 0xa6409 ; ret
0x00000000000a7519 : lea edi, dword ptr [rdi + 0x16] ; jne 0xa7c19 ; ret
0x00000000000a5e15 : lea edi, dword ptr [rdi + 0x17] ; jne 0xa6409 ; ret
0x00000000000a7549 : lea edi, dword ptr [rdi + 0x17] ; jne 0xa7c19 ; ret
0x00000000000a5e35 : lea edi, dword ptr [rdi + 0x18] ; jne 0xa6409 ; ret
0x00000000000a7579 : lea edi, dword ptr [rdi + 0x18] ; jne 0xa7c19 ; ret
0x00000000000a5e58 : lea edi, dword ptr [rdi + 0x19] ; jne 0xa6409 ; ret
0x00000000000a75ac : lea edi, dword ptr [rdi + 0x19] ; jne 0xa7c19 ; ret
0x00000000000a5e8d : lea edi, dword ptr [rdi + 0x1a] ; jne 0xa6409 ; ret
0x00000000000a75e1 : lea edi, dword ptr [rdi + 0x1a] ; jne 0xa7c19 ; ret
0x00000000000a5ebb : lea edi, dword ptr [rdi + 0x1b] ; jne 0xa6409 ; ret
0x00000000000a760f : lea edi, dword ptr [rdi + 0x1b] ; jne 0xa7c19 ; ret
0x00000000000a5eeb : lea edi, dword ptr [rdi + 0x1c] ; jne 0xa6409 ; ret
0x00000000000a763f : lea edi, dword ptr [rdi + 0x1c] ; jne 0xa7c19 ; ret
0x00000000000a5f17 : lea edi, dword ptr [rdi + 0x1d] ; jne 0xa6409 ; ret
0x00000000000a766b : lea edi, dword ptr [rdi + 0x1d] ; jne 0xa7c19 ; ret
0x00000000000a5f47 : lea edi, dword ptr [rdi + 0x1e] ; jne 0xa6409 ; ret
0x00000000000a769b : lea edi, dword ptr [rdi + 0x1e] ; jne 0xa7c19 ; ret
0x00000000000a5f77 : lea edi, dword ptr [rdi + 0x1f] ; jne 0xa6409 ; ret
0x00000000000a76cb : lea edi, dword ptr [rdi + 0x1f] ; jne 0xa7c19 ; ret
0x00000000000a5fa7 : lea edi, dword ptr [rdi + 0x20] ; jne 0xa6409 ; ret
0x00000000000a76fb : lea edi, dword ptr [rdi + 0x20] ; jne 0xa7c19 ; ret
0x00000000000a5c73 : lea edi, dword ptr [rdi + 0xa] ; jne 0xa6409 ; ret
0x00000000000a7317 : lea edi, dword ptr [rdi + 0xa] ; jne 0xa7c19 ; ret
0x00000000000a5c91 : lea edi, dword ptr [rdi + 0xb] ; jne 0xa6409 ; ret
0x00000000000a7345 : lea edi, dword ptr [rdi + 0xb] ; jne 0xa7c19 ; ret
0x00000000000a5cb1 : lea edi, dword ptr [rdi + 0xc] ; jne 0xa6409 ; ret
0x00000000000a7365 : lea edi, dword ptr [rdi + 0xc] ; jne 0xa7c19 ; ret
0x00000000000a5cd3 : lea edi, dword ptr [rdi + 0xd] ; jne 0xa6409 ; ret
0x00000000000a7387 : lea edi, dword ptr [rdi + 0xd] ; jne 0xa7c19 ; ret
0x00000000000a5cf3 : lea edi, dword ptr [rdi + 0xe] ; jne 0xa6409 ; ret
0x00000000000a73b7 : lea edi, dword ptr [rdi + 0xe] ; jne 0xa7c19 ; ret
0x00000000000a5d13 : lea edi, dword ptr [rdi + 0xf] ; jne 0xa6409 ; ret
0x00000000000a73e7 : lea edi, dword ptr [rdi + 0xf] ; jne 0xa7c19 ; ret
0x00000000000a5b47 : lea edi, dword ptr [rdi + 1] ; jne 0xa6409 ; ret
0x00000000000a71ea : lea edi, dword ptr [rdi + 1] ; jne 0xa7c19 ; ret
0x00000000000a5b6b : lea edi, dword ptr [rdi + 2] ; jne 0xa6409 ; ret
0x00000000000a720f : lea edi, dword ptr [rdi + 2] ; jne 0xa7c19 ; ret
0x00000000000a5b8e : lea edi, dword ptr [rdi + 3] ; jne 0xa6409 ; ret
0x00000000000a7232 : lea edi, dword ptr [rdi + 3] ; jne 0xa7c19 ; ret
0x00000000000a5ba9 : lea edi, dword ptr [rdi + 4] ; jne 0xa6409 ; ret
0x00000000000a724d : lea edi, dword ptr [rdi + 4] ; jne 0xa7c19 ; ret
0x00000000000a5bcc : lea edi, dword ptr [rdi + 5] ; jne 0xa6409 ; ret
0x00000000000a7270 : lea edi, dword ptr [rdi + 5] ; jne 0xa7c19 ; ret
0x00000000000a5bf1 : lea edi, dword ptr [rdi + 6] ; jne 0xa6409 ; ret
0x00000000000a7295 : lea edi, dword ptr [rdi + 6] ; jne 0xa7c19 ; ret
0x00000000000a5c0f : lea edi, dword ptr [rdi + 7] ; jne 0xa6409 ; ret
0x00000000000a72b3 : lea edi, dword ptr [rdi + 7] ; jne 0xa7c19 ; ret
0x00000000000a5c2b : lea edi, dword ptr [rdi + 8] ; jne 0xa6409 ; ret
0x00000000000a72cf : lea edi, dword ptr [rdi + 8] ; jne 0xa7c19 ; ret
0x00000000000a5c4e : lea edi, dword ptr [rdi + 9] ; jne 0xa6409 ; ret
0x00000000000a72f2 : lea edi, dword ptr [rdi + 9] ; jne 0xa7c19 ; ret
0x0000000000023652 : lea edi, dword ptr [rdx + 0x10] ; mov qword ptr [rbp - 0x58], rdx ; call 0x1f8a9
0x000000000004b4d1 : lea edi, dword ptr [rip + 0x144a01] ; call 0x77738
0x000000000011fe51 : lea edi, dword ptr [rip + 0x2a7905] ; call rax
0x000000000011f5f2 : lea edi, dword ptr [rip + 0x2a8108] ; call rax
0x00000000000bf67d : lea edi, dword ptr [rip + 0xc8811] ; add rax, rdi ; jmp rax
0x0000000000115287 : lea edi, dword ptr [rip - 0x16d] ; call rax
0x00000000000f6225 : lea edi, dword ptr [rsp + 0xc] ; call rax
0x000000000007c77b : lea edx, dword ptr [rax + 0x60] ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000036899 : lea edx, dword ptr [rax - 1] ; mov dword ptr [rip + 0x38c7e6], edx ; ret
0x0000000000150924 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000009e3b8 : lea edx, dword ptr [rcx + 1] ; mov byte ptr [rcx], 0 ; mov qword ptr [rdi], rdx ; ret
0x0000000000072e2d : lea edx, dword ptr [rdx + rcx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000089366 : lea edx, dword ptr [rdx + rcx] ; jmp r10
0x000000000010a2c3 : lea edx, dword ptr [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x0000000000150d18 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x000000000012d5c1 : lea edx, dword ptr [rip + 0x2955b9] ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x0000000000136bb1 : lea edx, dword ptr [rip + 0x3609] ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000115a2b : lea edx, dword ptr [rip + 0x4012f] ; cmove rax, rdx ; ret
0x000000000008e766 : lea edx, dword ptr [rip + 0xc7404] ; cmove rax, rdx ; ret
0x0000000000071fe1 : lea edx, dword ptr [rsi + 4] ; mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x0000000000062003 : lea esi, dword ptr [rax - 0x77000005] ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000bcd2c : lea esi, dword ptr [rax] ; add byte ptr [rcx + 1], cl ; ret
0x00000000000dd9e1 : lea esi, dword ptr [rbx + rbp] ; call 0x93a49
0x00000000000711b0 : lea esi, dword ptr [rcx + 4] ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x0000000000002eea : lea esi, dword ptr [rdi] ; ret 0x793b
0x000000000004e5d7 : lea esi, dword ptr [rip + 0x1304] ; add rax, rsi ; jmp rax
0x00000000000450cf : lea esi, dword ptr [rip + 0x1cb] ; call rax
0x000000000006f15a : lea esi, dword ptr [rip + 0x30] ; call rax
0x000000000007be3a : lea esi, dword ptr [rip - 0x15e0] ; call rax
0x000000000007c22a : lea esi, dword ptr [rip - 0x19d0] ; call rax
0x000000000007c67a : lea esi, dword ptr [rip - 0x1e20] ; call rax
0x000000000006f453 : lea esi, dword ptr [rip - 0x2c9] ; call rax
0x000000000007ab6a : lea esi, dword ptr [rip - 0x310] ; call rax
0x000000000007adda : lea esi, dword ptr [rip - 0x580] ; call rax
0x000000000013aa6d : lea esi, dword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000012deb5 : lea esi, dword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013ae1a : lea esi, dword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x000000000013a3dd : lea esi, dword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000398b2 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000006d0d1 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000089365 : lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000038fdb : lea r15, qword ptr [rbx + r14] ; call rax
0x000000000015084f : lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000004834f : lea r9, qword ptr [rdx] ; jmp 0x483a7
0x0000000000049f2f : lea r9, qword ptr [rdx] ; jmp 0x49f87
0x0000000000136728 : lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x0000000000074f23 : lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x000000000012c2d7 : lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000074fff : lea r9, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x0000000000136539 : lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x000000000012c1e5 : lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x00000000000ac648 : lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00000000000ac2a8 : lea r9, qword ptr [rsp + 0x20] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000ac17d : lea r9, qword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000001378d1 : lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x000000000012c00b : lea r9, qword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x000000000012c77a : lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x00000000000ba5eb : lea r9, qword ptr [rsp + 0x30] ; mov rdi, qword ptr [rax] ; call r14
0x00000000000acb29 : lea r9, qword ptr [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x0000000000137692 : lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x00000000000acdea : lea r9, qword ptr [rsp + 0x70] ; mov rdi, r12 ; call rbx
0x00000000000ac860 : lea r9, qword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x00000000000cd139 : lea rax, qword ptr [rax + rax - 1] ; ret
0x000000000008e113 : lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000008e123 : lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x000000000009e6d3 : lea rax, qword ptr [rax + rdi + 0x30] ; ret
0x000000000008e0f3 : lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x00000000000c6f51 : lea rax, qword ptr [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012da9a : lea rax, qword ptr [rbx + 0x2260] ; pop rbx ; ret
0x00000000000abfb7 : lea rax, qword ptr [rbx - 4] ; pop rbx ; ret
0x000000000008cbbc : lea rax, qword ptr [rcx + rsi] ; ret
0x00000000000a9953 : lea rax, qword ptr [rcx - 1] ; ret
0x00000000000a6a7b : lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a6a90 : lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a6aae : lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a6ace : lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a6af1 : lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a6b10 : lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a6b30 : lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a6b50 : lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a6b73 : lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a6b98 : lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a6bb6 : lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a6bd6 : lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000a6bf2 : lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a6c12 : lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a6c32 : lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a6c52 : lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a7aa2 : lea rax, qword ptr [rdi + 0x20] ; ret
0x00000000000a7d08 : lea rax, qword ptr [rdi + 0x40] ; ret
0x00000000000a69cc : lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a69ec : lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a6a0e : lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a6a2e : lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a6a4e : lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a6a68 : lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000009e033 : lea rax, qword ptr [rdi + 1] ; ret
0x000000000009e047 : lea rax, qword ptr [rdi + 2] ; ret
0x000000000009e052 : lea rax, qword ptr [rdi + 3] ; ret
0x000000000009e066 : lea rax, qword ptr [rdi + 4] ; ret
0x000000000009e076 : lea rax, qword ptr [rdi + 5] ; ret
0x000000000009e086 : lea rax, qword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a697a : lea rax, qword ptr [rdi + 6] ; ret
0x000000000009e026 : lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a6999 : lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a69ae : lea rax, qword ptr [rdi + 9] ; ret
0x000000000008e148 : lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000008e158 : lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000008e042 : lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000095d76 : lea rax, qword ptr [rdi + rax] ; ret
0x0000000000149e99 : lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x000000000012399f : lea rax, qword ptr [rdi + rsi + 8] ; ret
0x000000000002da64 : lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000008cab8 : lea rax, qword ptr [rdi + rsi] ; ret
0x00000000000aba0d : lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000abb70 : lea rax, qword ptr [rdi - 0xc] ; ret
0x00000000000abb90 : lea rax, qword ptr [rdi - 4] ; ret
0x00000000000abb80 : lea rax, qword ptr [rdi - 8] ; ret
0x00000000000a6902 : lea rax, qword ptr [rdi] ; ret
0x000000000016a8fc : lea rax, qword ptr [rdx + 0xa] ; ret
0x000000000016a91c : lea rax, qword ptr [rdx + 0xb] ; ret
0x000000000016a93e : lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000016a95e : lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000016a97e : lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000016a80e : lea rax, qword ptr [rdx + 0xf] ; ret
0x000000000016a836 : lea rax, qword ptr [rdx + 1] ; ret
0x000000000016a84c : lea rax, qword ptr [rdx + 2] ; ret
0x000000000016a864 : lea rax, qword ptr [rdx + 3] ; ret
0x000000000016a87a : lea rax, qword ptr [rdx + 4] ; ret
0x000000000016a88c : lea rax, qword ptr [rdx + 5] ; ret
0x000000000016a8aa : lea rax, qword ptr [rdx + 6] ; ret
0x000000000016a7b6 : lea rax, qword ptr [rdx + 7] ; ret
0x000000000016a8bc : lea rax, qword ptr [rdx + 8] ; ret
0x000000000016a8dc : lea rax, qword ptr [rdx + 9] ; ret
0x000000000016a824 : lea rax, qword ptr [rdx] ; ret
0x000000000008b129 : lea rax, qword ptr [rip + 0x10] ; ret
0x000000000008e91f : lea rax, qword ptr [rip + 0x10e4a] ; ret
0x000000000002cb38 : lea rax, qword ptr [rip + 0x15f826] ; ret
0x0000000000020930 : lea rax, qword ptr [rip + 0x16b574] ; ret
0x0000000000020940 : lea rax, qword ptr [rip + 0x16d443] ; ret
0x000000000008b0dd : lea rax, qword ptr [rip + 0x1713c] ; ret
0x0000000000088e7d : lea rax, qword ptr [rip + 0x1777c] ; ret
0x000000000008e7b9 : lea rax, qword ptr [rip + 0x1b330] ; ret
0x000000000008e193 : lea rax, qword ptr [rip + 0x26] ; ret
0x000000000012b1c8 : lea rax, qword ptr [rip + 0x29cbd1] ; pop rbx ; ret
0x000000000012b190 : lea rax, qword ptr [rip + 0x29cc09] ; pop rbx ; ret
0x000000000012b0d1 : lea rax, qword ptr [rip + 0x29ccc8] ; pop rbx ; ret
0x00000000000fda6d : lea rax, qword ptr [rip + 0x2c8584] ; ret
0x00000000000fd8ad : lea rax, qword ptr [rip + 0x2c8744] ; ret
0x000000000006ac33 : lea rax, qword ptr [rip + 0x35aac6] ; pop rbx ; pop rbp ; ret
0x00000000001159b0 : lea rax, qword ptr [rip + 0x37d09] ; ret
0x0000000000115aa0 : lea rax, qword ptr [rip + 0x37fb9] ; ret
0x000000000012a900 : lea rax, qword ptr [rip + 0x61a5e] ; ret
0x000000000008efb9 : lea rax, qword ptr [rip + 0x80] ; ret
0x0000000000093a0e : lea rax, qword ptr [rip + 0xb3db] ; ret
0x00000000000939df : lea rax, qword ptr [rip + 0xb63a] ; ret
0x0000000000093a22 : lea rax, qword ptr [rip + 0xbcda7] ; ret
0x000000000008d06a : lea rax, qword ptr [rip + 0xbd01f] ; ret
0x000000000008ccda : lea rax, qword ptr [rip + 0xbd27f] ; ret
0x000000000008e960 : lea rax, qword ptr [rip + 0xbf109] ; ret
0x000000000008a86a : lea rax, qword ptr [rip + 0xbf5af] ; ret
0x00000000000ab26b : lea rax, qword ptr [rip + 0xc236e] ; ret
0x00000000000abe47 : lea rax, qword ptr [rip + 0xc3452] ; ret
0x00000000000abe4f : lea rax, qword ptr [rip + 0xc5d0a] ; ret
0x00000000000892cd : lea rax, qword ptr [rip + 0xc] ; ret
0x000000000008c9bd : lea rax, qword ptr [rip + 0xd9c3c] ; ret
0x000000000008f01c : lea rax, qword ptr [rip + 0xd] ; ret
0x000000000008ee4d : lea rax, qword ptr [rip + 0xda32c] ; ret
0x000000000008a75d : lea rax, qword ptr [rip + 0xda6ec] ; ret
0x000000000008ef6d : lea rax, qword ptr [rip + 0xdba1c] ; ret
0x000000000008e1a7 : lea rax, qword ptr [rip + 0xdfab2] ; ret
0x000000000008e1af : lea rax, qword ptr [rip + 0xe223a] ; ret
0x000000000008906a : lea rax, qword ptr [rip + 0xe705f] ; ret
0x00000000000abe33 : lea rax, qword ptr [rip + 0xe916] ; ret
0x00000000000ab263 : lea rax, qword ptr [rip + 0xf596] ; ret
0x0000000000115ae9 : lea rax, qword ptr [rip - 0x6c010] ; ret
0x0000000000115a5f : lea rax, qword ptr [rip - 0x76306] ; ret
0x000000000011596f : lea rax, qword ptr [rip - 0x76966] ; ret
0x00000000000abb49 : lea rax, qword ptr es:[rdi - 0x10] ; ret
0x0000000000047030 : lea rbx, qword ptr [rax + 1] ; mov rax, rbx ; pop rbx ; ret
0x00000000000a51bd : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000ac182 : lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000000ac2ad : lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000ac6ed : lea rcx, qword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00000000000be133 : lea rcx, qword ptr [rax + r12] ; mov rdx, rax ; jmp 0xbe146
0x0000000000070505 : lea rcx, qword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x000000000010a4e6 : lea rcx, qword ptr [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000011d072 : lea rdi, qword ptr [r8 + 1] ; call 0x892e6
0x0000000000032c1d : lea rdi, qword ptr [rax + 1] ; mov byte ptr [rax], 0x2e ; call 0x8ee69
0x0000000000032c04 : lea rdi, qword ptr [rax + 1] ; mov byte ptr [rax], 0x40 ; call 0x8ee69
0x000000000013263d : lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000135241 : lea rdi, qword ptr [rbx + 0x58] ; call rax
0x0000000000134821 : lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000131aa4 : lea rdi, qword ptr [rbx + 0xc8] ; call rax
0x000000000008e9f5 : lea rdi, qword ptr [rdi + 0x10] ; jne 0x8e9e9 ; mov rax, rdi ; ret
0x0000000000093ab5 : lea rdi, qword ptr [rdi + 0x10] ; jne 0x93aa7 ; ret
0x000000000004b4d0 : lea rdi, qword ptr [rip + 0x144a01] ; call 0x77739
0x000000000011fe50 : lea rdi, qword ptr [rip + 0x2a7905] ; call rax
0x000000000011f5f1 : lea rdi, qword ptr [rip + 0x2a8108] ; call rax
0x0000000000115286 : lea rdi, qword ptr [rip - 0x16d] ; call rax
0x00000000000f6224 : lea rdi, qword ptr [rsp + 0xc] ; call rax
0x0000000000150923 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000010a2c2 : lea rdx, qword ptr [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x0000000000150d17 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x00000000000450ce : lea rsi, qword ptr [rip + 0x1cb] ; call rax
0x000000000006f159 : lea rsi, qword ptr [rip + 0x30] ; call rax
0x000000000007be39 : lea rsi, qword ptr [rip - 0x15e0] ; call rax
0x000000000007c229 : lea rsi, qword ptr [rip - 0x19d0] ; call rax
0x000000000007c679 : lea rsi, qword ptr [rip - 0x1e20] ; call rax
0x000000000006f452 : lea rsi, qword ptr [rip - 0x2c9] ; call rax
0x000000000007ab69 : lea rsi, qword ptr [rip - 0x310] ; call rax
0x000000000007add9 : lea rsi, qword ptr [rip - 0x580] ; call rax
0x000000000013aa6c : lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000012deb4 : lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013ae19 : lea rsi, qword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x000000000013a3dc : lea rsi, qword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000398b1 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000000dbb0b : leave ; add dword ptr [rax], eax ; add dh, dh ; ret
0x0000000000031fc3 : leave ; add eax, 0x358d4800 ; ret
0x0000000000029a74 : leave ; call r15
0x00000000001888a5 : leave ; call rdx
0x0000000000002bec : leave ; clc ; ret
0x000000000019ae59 : leave ; cli ; jmp rsp
0x000000000008cd86 : leave ; cmove rax, rdx ; ret
0x0000000000149ed1 : leave ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x000000000002b395 : leave ; je 0x2b39d ; call rcx
0x000000000006b409 : leave ; je 0x6b414 ; ret
0x0000000000125e9c : leave ; jne 0x125deb ; ret
0x000000000009e0f9 : leave ; jne 0x9e0ec ; ret
0x000000000009e238 : leave ; jne 0x9e22d ; xor eax, eax ; ret
0x00000000000a9730 : leave ; jne 0xa9723 ; ret
0x00000000000a97e0 : leave ; jne 0xa97d3 ; ret
0x00000000000a9aa0 : leave ; jne 0xa9a97 ; sub rax, 1 ; ret
0x00000000000abbdc : leave ; jne 0xabbd4 ; ret
0x00000000000ad05a : leave ; jne 0xad017 ; mov rax, rdx ; ret
0x0000000000149e98 : leave ; lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x00000000000a4ca1 : leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x0000000000034a61 : leave ; mov dword ptr [rdi], ecx ; ret
0x00000000000aa3e4 : leave ; mov dword ptr [rdx], ecx ; jne 0xaa3de ; ret
0x0000000000126286 : leave ; mov eax, 0x200000 ; jmp 0x126257
0x000000000009dfff : leave ; movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x000000000009df5f : leave ; movsxd rax, dword ptr [r10 + r9*4] ; add r10, rax ; jmp r10
0x00000000000218e0 : leave ; not eax ; xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x00000000000bd633 : leave ; pop rbx ; or eax, 0x440f4800 ; ret 0x8d48
0x0000000000042341 : leave ; ret
0x00000000000190c0 : leave ; ret 0x18
0x0000000000086c13 : leave ; ret 0x33
0x0000000000140143 : leave ; sub byte ptr [rax], al ; call qword ptr [rax]
0x00000000000ac645 : leave ; xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x000000000007a781 : les r9d, ptr [r8 + 0x29] ; ret 0x8948
0x000000000018928b : ljmp ptr [rax + 0x28fff502] ; add esi, ebp ; call qword ptr [rcx]
0x00000000001978d3 : ljmp ptr [rax + rax + 0x72340001] ; out dx, eax ; jmp rsp
0x0000000000186723 : ljmp ptr [rax - 0x17] ; in eax, dx ; call rbx
0x000000000018928f : ljmp ptr [rax] ; add esi, ebp ; call qword ptr [rcx]
0x0000000000195baf : ljmp ptr [rbp + rbx*4 - 0x5aad0004] ; cld ; call rdx
0x000000000019820b : ljmp ptr [rbp + rdi + 0x2f240001] ; call rsp
0x0000000000196ff3 : ljmp ptr [rbx + rax*8] ; add byte ptr [rax + rbx*8], ah ; in eax, dx ; jmp rsp
0x000000000019a2eb : ljmp ptr [rbx + rcx + 0x59740002] ; stc ; jmp rsp
0x000000000019809b : ljmp ptr [rbx + rsi - 0x6a4bffff] ; jmp rsp
0x0000000000186833 : ljmp ptr [rbx] ; xlatb ; in eax, dx ; call rbx
0x0000000000189d35 : ljmp ptr [rcx - 0x3c000500] ; add dh, bh ; jmp rdi
0x0000000000127b64 : ljmp ptr [rcx] ; add byte ptr [rdx], al ; add rsp, 8 ; ret
0x00000000001866d3 : ljmp ptr [rcx] ; fucomp st(5) ; jmp qword ptr [rbx]
0x0000000000188743 : ljmp ptr [rdi + rdx*8] ; call rbx
0x000000000019b03b : ljmp ptr [rdi + rdx] ; add dword ptr [rax], eax ; xchg eax, esp ; sti ; jmp rsp
0x0000000000188557 : ljmp ptr [rdi] ; mov edx, 0xad3dfff3 ; jmp qword ptr [rax]
0x00000000001950e7 : ljmp ptr [rdx + 0x3afffc5c] ; pop rsp ; cld ; jmp rax
0x00000000001954a7 : ljmp ptr [rdx + rax*4 - 0x7dc30004] ; cld ; jmp rdx
0x0000000000195aeb : ljmp ptr [rdx] ; test al, 0xfc ; call rax
0x0000000000195a67 : ljmp ptr [rsi + 0x3efffca8] ; test al, 0xfc ; jmp rsp
0x000000000019aa13 : ljmp ptr [rsi + rdi + 0x49140002] ; cli ; jmp rsp
0x000000000019906b : ljmp ptr [rsi + rdx*4 + 1] ; add byte ptr [rcx + rax*8 - 0xa], al ; call rsp
0x0000000000194fab : ljmp ptr [rsp + rbx*2 - 4] ; call qword ptr [rdx]
0x00000000001aa3bd : lock add byte ptr [rax], al ; adc edx, esi ; jmp qword ptr [rcx]
0x000000000016e03e : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000019768d : lock add byte ptr [rax], al ; je 0x19767c ; out dx, al ; call rsp
0x000000000010d58e : lock add dword ptr [rax + 0x470f3af9], eax ; ret 0xc084
0x0000000000085c14 : lock add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000000fb914 : lock and byte ptr [rax - 0x77], cl ; ret
0x000000000018738e : lock dec dword ptr [rax] ; ret
0x000000000006bc31 : lodsb al, byte ptr [rsi] ; adc dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x0000000000121d3f : lodsb al, byte ptr [rsi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x0000000000144fb0 : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000019aa14 : lodsb al, byte ptr [rsi] ; add al, byte ptr ds:[rax] ; adc al, 0x49 ; cli ; jmp rsp
0x00000000001715d0 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000000001a5f05 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; jno 0x1a5eff ; jmp qword ptr [rdx]
0x00000000001978d4 : lodsb al, byte ptr [rsi] ; add byte ptr [rcx], al ; add byte ptr [rdx + rsi*2], dh ; out dx, eax ; jmp rsp
0x00000000001af87c : lodsb al, byte ptr [rsi] ; add dword ptr [r8], r8d ; adc byte ptr [rbx - 0xb], cl ; jmp rax
0x00000000001afd7c : lodsb al, byte ptr [rsi] ; add qword ptr [rax], rax ; and byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x000000000014325c : lodsb al, byte ptr [rsi] ; and al, 0x70 ; add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000003ea7b : lodsb al, byte ptr [rsi] ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000b51e1 : lodsb al, byte ptr [rsi] ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x00000000000b5d92 : lodsb al, byte ptr [rsi] ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000dfc6a : lodsb al, byte ptr [rsi] ; and al, 0xa4 ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0xb60f
0x000000000013c07a : lodsb al, byte ptr [rsi] ; and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000002b0ac : lodsb al, byte ptr [rsi] ; clc ; add byte ptr [rax], 0 ; add cl, ch ; ret 0xfffb
0x000000000019590d : lodsb al, byte ptr [rsi] ; cld ; call qword ptr [rax + 0x20fffcab]
0x0000000000195b05 : lodsb al, byte ptr [rsi] ; cld ; call qword ptr [rax]
0x00000000001959c9 : lodsb al, byte ptr [rsi] ; cld ; call rdx
0x00000000001959c5 : lodsb al, byte ptr [rsi] ; cld ; inc dword ptr [rdx - 0x54] ; cld ; call rdx
0x0000000000195949 : lodsb al, byte ptr [rsi] ; cld ; jmp rsi
0x00000000001aa87c : lodsb al, byte ptr [rsi] ; cmc ; add byte ptr [rax], al ; push rax ; and edx, esi ; jmp qword ptr [rcx]
0x000000000019eb7c : lodsb al, byte ptr [rsi] ; cmp byte ptr [rax], al ; add al, dh ; shr ecx, 1 ; call qword ptr [rdx]
0x0000000000029c94 : lodsb al, byte ptr [rsi] ; cmp dword ptr [rax], eax ; ret
0x000000000019820c : lodsb al, byte ptr [rsi] ; cmp eax, 0x2f240001 ; call rsp
0x0000000000196e49 : lodsb al, byte ptr [rsi] ; in eax, dx ; jmp rsp
0x00000000000bd250 : lodsb al, byte ptr [rsi] ; mov dl, 0x30 ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000007b204 : lodsb al, byte ptr [rsi] ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x00000000001455d4 : lodsb al, byte ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001852bd : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000019a2ec : lodsb al, byte ptr [rsi] ; or eax, dword ptr [rdx] ; add byte ptr [rcx + rbx*2 - 7], dh ; jmp rsp
0x00000000001b217c : lodsb al, byte ptr [rsi] ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; shl byte ptr [rcx], 0xf6 ; jmp qword ptr [rsi]
0x00000000001b037c : lodsb al, byte ptr [rsi] ; push rax ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001a757c : lodsb al, byte ptr [rsi] ; ret 0
0x00000000000badb0 : lodsb al, byte ptr [rsi] ; xor byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000001ae37c : lodsb al, byte ptr [rsi] ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; jrcxz 0x1ae37e ; jmp qword ptr [rcx]
0x000000000004616c : lodsd eax, dword ptr [rsi] ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000000000ada36 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000007da07 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000196cd5 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; je 0x196d5a ; in eax, dx ; jmp rsp
0x00000000001b60bd : lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; xor byte ptr [rdi - 9], al ; jmp qword ptr [rsi]
0x00000000001959bd : lodsd eax, dword ptr [rsi] ; cld ; jmp qword ptr [rdx]
0x0000000000195901 : lodsd eax, dword ptr [rsi] ; cld ; jmp rax
0x000000000018855d : lodsd eax, dword ptr [rsi] ; jmp qword ptr [rax]
0x00000000001884dd : lodsd eax, dword ptr [rsi] ; jmp rdx
0x00000000000ac009 : lodsd eax, dword ptr [rsi] ; mov rax, rbx ; pop rbx ; ret
0x0000000000149140 : lodsd eax, dword ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000ff19f : lodsd eax, dword ptr [rsi] ; outsd dx, dword ptr [rsi] ; sub al, 0 ; add rsp, 8 ; ret
0x0000000000048ab2 : lodsd eax, dword ptr [rsi] ; ret
0x0000000000019018 : lodsd eax, dword ptr [rsi] ; ret 0x18
0x00000000001735f7 : lodsd eax, dword ptr [rsi] ; ret 0xffea
0x0000000000128204 : lodsd eax, dword ptr [rsi] ; sub dword ptr [rax], eax ; mov rax, qword ptr fs:[rax] ; ret
0x00000000000ada35 : lodsq rax, qword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000110856 : loop 0x110864 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000110855 : loop 0x110865 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000012fb4c : loop 0x12fbd6 ; movzx eax, byte ptr [rax + rdx] ; mov byte ptr [rdi + 7], al ; ret
0x0000000000136e56 : loop 0x136de8 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000136fe9 : loop 0x136f7b ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000015a3fa : loop 0x15a3f5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015a3f9 : loop 0x15a3f6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015ceca : loop 0x15cec5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015cec9 : loop 0x15cec6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015f9ea : loop 0x15f9e5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015f9e9 : loop 0x15f9e6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000018565a : loop 0x1856af ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x0000000000186721 : loop 0x186716 ; ljmp ptr [rax - 0x17] ; in eax, dx ; call rbx
0x0000000000188dc8 : loop 0x188d53 ; hlt ; jmp rdx
0x0000000000188dcc : loop 0x188d57 ; hlt ; jmp rdx
0x0000000000188dd0 : loop 0x188d5b ; hlt ; jmp rdx
0x0000000000188dd4 : loop 0x188d5f ; hlt ; jmp rdx
0x0000000000188dd8 : loop 0x188d63 ; hlt ; jmp rdx
0x0000000000188ddc : loop 0x188d67 ; hlt ; jmp rdx
0x0000000000188de0 : loop 0x188d6b ; hlt ; jmp rdx
0x0000000000188de4 : loop 0x188d6f ; hlt ; call rsp
0x0000000000188df0 : loop 0x188d7b ; hlt ; jmp rdx
0x0000000000188df4 : loop 0x188d7f ; hlt ; jmp rdx
0x0000000000188df8 : loop 0x188d83 ; hlt ; jmp rdx
0x0000000000188dfc : loop 0x188d87 ; hlt ; jmp rdx
0x0000000000188e00 : loop 0x188d8b ; hlt ; jmp rdx
0x0000000000188e04 : loop 0x188d8f ; hlt ; jmp rdx
0x0000000000188e08 : loop 0x188d93 ; hlt ; jmp rdx
0x0000000000188e0c : loop 0x188d97 ; hlt ; jmp rdx
0x0000000000188e10 : loop 0x188d9b ; hlt ; jmp rdx
0x0000000000188e14 : loop 0x188d9f ; hlt ; jmp rdx
0x0000000000188e18 : loop 0x188da3 ; hlt ; jmp rdx
0x0000000000188e1c : loop 0x188da7 ; hlt ; jmp rdx
0x0000000000188e20 : loop 0x188dab ; hlt ; jmp rdx
0x0000000000188e24 : loop 0x188daf ; hlt ; jmp rdx
0x0000000000188e28 : loop 0x188db3 ; hlt ; jmp rdx
0x0000000000188e2c : loop 0x188db7 ; hlt ; jmp rdx
0x0000000000188e30 : loop 0x188dbb ; hlt ; jmp rdx
0x0000000000188e34 : loop 0x188dbf ; hlt ; jmp rdx
0x00000000001949c5 : loop 0x1949c4 ; call qword ptr [rax]
0x0000000000194ae9 : loop 0x194ae8 ; jmp qword ptr [rax]
0x000000000019afa9 : loop 0x19afa7 ; call rsp
0x000000000019c419 : loop 0x19c405 ; call qword ptr [rdx]
0x000000000019c418 : loop 0x19c406 ; call qword ptr [rdx]
0x00000000001ab5a1 : loop 0x1ab597 ; call qword ptr [rsi]
0x00000000001ae369 : loop 0x1ae361 ; call qword ptr [rsi]
0x00000000000025e5 : loop 0x25bf ; ret 0x23cb
0x000000000003a679 : loop 0x3a6a3 ; mov rax, rcx ; or rax, rdx ; ret
0x0000000000055cbd : loop 0x55c4a ; ret
0x000000000005f0bb : loop 0x5f0c4 ; dec dword ptr [rcx + rcx*4 - 1] ; call 0x7b2d8
0x0000000000065841 : loop 0x657c9 ; add byte ptr [rax], al ; add dh, dh ; ret
0x000000000006bc72 : loop 0x6bc04 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000000758f4 : loop 0x758fb ; mov eax, edx ; ret
0x00000000000759e4 : loop 0x759eb ; mov eax, edx ; ret
0x00000000000841e2 : loop 0x841e8 ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000871c4 : loop 0x87216 ; mov edi, edi ; call rax
0x000000000009eddd : loop 0x9ee15 ; shr byte ptr [rcx], 0xc8 ; ret
0x00000000000a5e1a : loop 0xa5e25 ; add byte ptr [rax], al ; ret
0x00000000000aa225 : loop 0xaa23f ; movsxd rsi, dword ptr [rax + rdx*4] ; add rax, rsi ; jmp rax
0x00000000000ac85f : loop 0xac8b6 ; lea ecx, dword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x00000000000acb28 : loop 0xacb7f ; lea ecx, dword ptr [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x00000000000befb3 : loop 0xbf007 ; mov esi, edi ; call 0x6b266
0x00000000000c12bf : loop 0xc12c5 ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000e454c : loop 0xe4558 ; xor esi, esi ; call 0x8e818
0x00000000000e469f : loop 0xe46a4 ; add esi, esi ; ret
0x00000000000ee292 : loop 0xee21b ; ret 0x850f
0x0000000000128203 : loope 0x1281ba ; sub dword ptr [rax], eax ; mov rax, qword ptr fs:[rax] ; ret
0x0000000000131a6e : loope 0x131a03 ; ret
0x0000000000137bb3 : loope 0x137b6f ; sub byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000015a36a : loope 0x15a365 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015a369 : loope 0x15a366 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015ce3a : loope 0x15ce35 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015ce39 : loope 0x15ce36 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015f95a : loope 0x15f955 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015f959 : loope 0x15f956 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016846b : loope 0x168472 ; add byte ptr [rax], al ; ret
0x00000000001702fb : loope 0x170305 ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000173b56 : loope 0x173bb5 ; ret
0x0000000000185939 : loope 0x18593c ; jmp qword ptr [rdi]
0x00000000001859b9 : loope 0x1859bc ; jmp qword ptr [rdi]
0x0000000000185a39 : loope 0x185a3c ; jmp qword ptr [rdi]
0x0000000000185ab9 : loope 0x185abc ; jmp qword ptr [rdi]
0x0000000000185b39 : loope 0x185b3c ; jmp qword ptr [rdi]
0x0000000000185bb9 : loope 0x185bbc ; jmp qword ptr [rdi]
0x0000000000186675 : loope 0x186666 ; jmp qword ptr [rbx]
0x0000000000186674 : loope 0x186667 ; jmp qword ptr [rbx]
0x000000000018a409 : loope 0x18a413 ; add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000194a05 : loope 0x194a04 ; call rax
0x000000000019748d : loope 0x197495 ; add ah, ah ; out dx, al ; jmp rsp
0x0000000000199de5 : loope 0x199dee ; add byte ptr [rdi + rdx*2 - 8], dh ; jmp rsp
0x00000000001a7461 : loope 0x1a7454 ; call rsp
0x00000000001ae2b1 : loope 0x1ae2a9 ; jmp qword ptr [rcx]
0x0000000000035d5e : loope 0x35d67 ; add byte ptr [rax], al ; adc byte ptr [rdi], cl ; ret 0x8b48
0x0000000000048947 : loope 0x48999 ; mov dword ptr [rdi], ecx ; ret
0x0000000000048978 : loope 0x489cb ; mov dword ptr [rdi - 8], ecx ; ret
0x00000000000489ed : loope 0x48a40 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x0000000000075801 : loope 0x757d6 ; mov dword ptr [rdi], ecx ; ret
0x0000000000093ebb : loope 0x93ecd ; movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x0000000000094062 : loope 0x940b9 ; or ecx, edx ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x000000000009412b : loope 0x9413d ; movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x00000000000a9629 : loope 0xa9698 ; nop dword ptr [rax + rax] ; ret
0x00000000000aa267 : loope 0xaa228 ; or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000aa34e : loope 0xaa345 ; ret
0x00000000000ab4ee : loope 0xab503 ; je 0xab514 ; ret
0x00000000000c7f8d : loope 0xc7f1a ; ret 0xf631
0x00000000000d67f9 : loope 0xd67fe ; add esi, esi ; ret
0x00000000001015a0 : loopne 0x1015a6 ; jmp 0x10156a
0x00000000001056ae : loopne 0x105714 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000109bbe : loopne 0x109bc4 ; ret
0x0000000000109bda : loopne 0x109be9 ; movzx eax, ax ; ret
0x0000000000109c4e : loopne 0x109c54 ; ret
0x0000000000109cee : loopne 0x109cf4 ; ret
0x0000000000109d0a : loopne 0x109d0f ; ret
0x0000000000109d7e : loopne 0x109d84 ; ret
0x0000000000109d9a : loopne 0x109da3 ; movzx eax, ax ; ret
0x0000000000109e0e : loopne 0x109e14 ; ret
0x0000000000109e9e : loopne 0x109ea4 ; ret
0x0000000000109f3e : loopne 0x109f44 ; ret
0x0000000000109fde : loopne 0x109fe4 ; ret
0x000000000010a07e : loopne 0x10a084 ; ret
0x000000000010a09a : loopne 0x10a0a5 ; movzx eax, ax ; ret
0x000000000010a10e : loopne 0x10a114 ; ret
0x000000000010a1a9 : loopne 0x10a1af ; ret
0x000000000010a23e : loopne 0x10a244 ; ret
0x000000000010a41a : loopne 0x10a420 ; ret
0x000000000010a560 : loopne 0x10a566 ; ret
0x000000000010a573 : loopne 0x10a582 ; movzx eax, ax ; ret
0x000000000010a5e0 : loopne 0x10a5e6 ; ret
0x000000000010a660 : loopne 0x10a666 ; ret
0x000000000010a673 : loopne 0x10a678 ; ret
0x000000000010a6e0 : loopne 0x10a6e6 ; ret
0x000000000010a6f3 : loopne 0x10a6fc ; movzx eax, ax ; ret
0x000000000010a760 : loopne 0x10a766 ; ret
0x000000000010a7e0 : loopne 0x10a7e6 ; ret
0x000000000010a860 : loopne 0x10a866 ; ret
0x000000000010a8e0 : loopne 0x10a8e6 ; ret
0x000000000010a960 : loopne 0x10a966 ; ret
0x000000000010a973 : loopne 0x10a97e ; movzx eax, ax ; ret
0x000000000010a9e0 : loopne 0x10a9e6 ; ret
0x000000000010aa5d : loopne 0x10aa63 ; ret
0x000000000010aae0 : loopne 0x10aae6 ; ret
0x000000000010ac8a : loopne 0x10ac90 ; ret
0x000000000011416b : loopne 0x114170 ; ret
0x0000000000114898 : loopne 0x1148ad ; cmp eax, 4 ; je 0x1148a7 ; ret
0x0000000000114a69 : loopne 0x114a7c ; pop rbp ; pop r12 ; ret
0x0000000000115285 : loopne 0x1152d7 ; lea edi, dword ptr [rip - 0x16d] ; call rax
0x0000000000122834 : loopne 0x122833 ; add eax, 0x10 ; ret
0x000000000012396b : loopne 0x123978 ; cdqe ; shr rax, 4 ; ret
0x0000000000137bd7 : loopne 0x137be0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000013ac3c : loopne 0x13acc4 ; add eax, 0x358d4800 ; ret 0x53e
0x000000000013bf31 : loopne 0x13bfa1 ; nop dword ptr [rax + rax] ; ret
0x000000000014d2a2 : loopne 0x14d26f ; jp 0x14d32b ; jp 0x14d29e ; ret
0x000000000014d792 : loopne 0x14d75f ; jp 0x14d81b ; jp 0x14d78e ; ret
0x000000000014db35 : loopne 0x14db02 ; jp 0x14dbbe ; jp 0x14db31 ; ret
0x0000000000150d71 : loopne 0x150d88 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000150d70 : loopne 0x150d89 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000150ec1 : loopne 0x150ed8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000150ec0 : loopne 0x150ed9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151011 : loopne 0x151028 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151010 : loopne 0x151029 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151161 : loopne 0x151178 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151160 : loopne 0x151179 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001512b1 : loopne 0x1512c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001512b0 : loopne 0x1512c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151401 : loopne 0x151418 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151400 : loopne 0x151419 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151551 : loopne 0x151568 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151550 : loopne 0x151569 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000015169f : loopne 0x1516b6 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000015169e : loopne 0x1516b7 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001517f1 : loopne 0x151808 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001517f0 : loopne 0x151809 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151941 : loopne 0x151958 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151940 : loopne 0x151959 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151a91 : loopne 0x151aa8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151a90 : loopne 0x151aa9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151be1 : loopne 0x151bf8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151be0 : loopne 0x151bf9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151d31 : loopne 0x151d48 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151d30 : loopne 0x151d49 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151e81 : loopne 0x151e98 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151e80 : loopne 0x151e99 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151fd1 : loopne 0x151fe8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151fd0 : loopne 0x151fe9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153741 : loopne 0x153758 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153740 : loopne 0x153759 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153891 : loopne 0x1538a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153890 : loopne 0x1538a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001539e1 : loopne 0x1539f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001539e0 : loopne 0x1539f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153b31 : loopne 0x153b48 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153b30 : loopne 0x153b49 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153c81 : loopne 0x153c98 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153c80 : loopne 0x153c99 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153dd1 : loopne 0x153de8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153dd0 : loopne 0x153de9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153f21 : loopne 0x153f38 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153f20 : loopne 0x153f39 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000015406f : loopne 0x154086 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000015406e : loopne 0x154087 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001541c1 : loopne 0x1541d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001541c0 : loopne 0x1541d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154311 : loopne 0x154328 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154310 : loopne 0x154329 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154461 : loopne 0x154478 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154460 : loopne 0x154479 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001545b1 : loopne 0x1545c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001545b0 : loopne 0x1545c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154701 : loopne 0x154718 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154700 : loopne 0x154719 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154851 : loopne 0x154868 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154850 : loopne 0x154869 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001549a1 : loopne 0x1549b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001549a0 : loopne 0x1549b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156111 : loopne 0x156128 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156110 : loopne 0x156129 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156261 : loopne 0x156278 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156260 : loopne 0x156279 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001563b1 : loopne 0x1563c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001563b0 : loopne 0x1563c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156501 : loopne 0x156518 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156500 : loopne 0x156519 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156651 : loopne 0x156668 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156650 : loopne 0x156669 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001567a1 : loopne 0x1567b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001567a0 : loopne 0x1567b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001568f1 : loopne 0x156908 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001568f0 : loopne 0x156909 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156a3f : loopne 0x156a56 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156a3e : loopne 0x156a57 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156b91 : loopne 0x156ba8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156b90 : loopne 0x156ba9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156ce1 : loopne 0x156cf8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156ce0 : loopne 0x156cf9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156e31 : loopne 0x156e48 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156e30 : loopne 0x156e49 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156f81 : loopne 0x156f98 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156f80 : loopne 0x156f99 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001570d1 : loopne 0x1570e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001570d0 : loopne 0x1570e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000157221 : loopne 0x157238 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000157220 : loopne 0x157239 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000157371 : loopne 0x157388 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000157370 : loopne 0x157389 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000172315 : loopne 0x172366 ; sub eax, edx ; vzeroupper ; ret
0x0000000000172314 : loopne 0x172367 ; sub eax, edx ; vzeroupper ; ret
0x0000000000182c34 : loopne 0x182c14 ; cld ; test al, 0x97 ; xchg eax, esp ; ret
0x000000000018679d : loopne 0x18678e ; call rbx
0x0000000000187810 : loopne 0x187812 ; int1 ; call qword ptr [rax]
0x0000000000187880 : loopne 0x187889 ; inc dword ptr [rax] ; add edx, esi ; jmp qword ptr [rax]
0x00000000001878a0 : loopne 0x1878aa ; inc dword ptr [rax] ; add dh, dl ; jmp qword ptr [rax]
0x0000000000194608 : loopne 0x194620 ; sti ; call rax
0x0000000000194748 : loopne 0x1946ef ; std ; call rax
0x00000000001949c1 : loopne 0x1949c0 ; call qword ptr [rax]
0x0000000000194a00 : loopne 0x1949e4 ; sti ; call rax
0x0000000000194ae5 : loopne 0x194ae4 ; jmp qword ptr [rax]
0x0000000000194bc4 : loopne 0x194bd2 ; cld ; jmp rax
0x0000000000194bc8 : loopne 0x194bd8 ; cld ; jmp rax
0x0000000000194cb0 : loopne 0x194c9a ; sti ; jmp qword ptr [rax]
0x00000000001953b0 : loopne 0x1953e9 ; cld ; jmp qword ptr [rax]
0x0000000000195d2c : loopne 0x195cd2 ; cld ; push qword ptr [rax - 0x63] ; cld ; call qword ptr [rax]
0x000000000019d170 : loopne 0x19d1c8 ; jmp 0x1b947a
0x00000000001a1c10 : loopne 0x1a1c11 ; in al, dx ; call qword ptr [rsi]
0x00000000001a4ad9 : loopne 0x1a4ae5 ; add ecx, dword ptr [rip + 0x380e0a03] ; ret
0x00000000001aac50 : loopne 0x1aac92 ; call rbx
0x00000000001aafc0 : loopne 0x1aaf68 ; call rdi
0x00000000001ad670 : loopne 0x1ad60f ; hlt ; jmp qword ptr [rcx]
0x00000000001af150 : loopne 0x1af173 ; cmc ; jmp qword ptr [rcx]
0x00000000001b0290 : loopne 0x1b0304 ; cmc ; jmp qword ptr [rcx]
0x00000000001b04d0 : loopne 0x1b0547 ; cmc ; call qword ptr [rsi]
0x00000000001b0bc0 : loopne 0x1b0b4b ; cmc ; jmp rax
0x00000000001b8cd9 : loopne 0x1b8cd4 ; jmp rdi
0x00000000001ba220 : loopne 0x1ba238 ; clc ; jmp qword ptr [rbx]
0x00000000001bbdca : loopne 0x1bbdd9 ; ret 0xb
0x00000000001bbe22 : loopne 0x1bbe30 ; ret 0xa
0x000000000002dd13 : loopne 0x2dd22 ; movzx eax, ax ; ret
0x000000000002dd53 : loopne 0x2dd5c ; movzx eax, ax ; ret
0x000000000002ddf3 : loopne 0x2ddfe ; movzx eax, ax ; ret
0x000000000002ded3 : loopne 0x2ded8 ; ret
0x000000000002df4c : loopne 0x2df51 ; ret
0x000000000002df5c : loopne 0x2df6b ; movzx eax, ax ; ret
0x000000000002df9c : loopne 0x2dfa5 ; movzx eax, ax ; ret
0x000000000002df23 : loopne 0x2dfa6 ; ret
0x000000000002e03c : loopne 0x2e047 ; movzx eax, ax ; ret
0x0000000000034e65 : loopne 0x34e71 ; ret
0x0000000000035177 : loopne 0x3515e ; fsub dword ptr [rip + 0x200] ; ret
0x0000000000036074 : loopne 0x360c4 ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000000000045a15 : loopne 0x45a3a ; or eax, edx ; ret
0x000000000004842d : loopne 0x48436 ; sub eax, 1 ; ret
0x0000000000052f75 : loopne 0x52f02 ; ret 0xe680
0x0000000000054eee : loopne 0x54e7b ; ret 0xe680
0x0000000000005ec0 : loopne 0x5eca ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x26
0x000000000006c42b : loopne 0x6c48d ; pop rbp ; pop r12 ; ret
0x000000000006c455 : loopne 0x6c4b7 ; pop rbp ; pop r12 ; ret
0x000000000006cb3b : loopne 0x6cb9d ; pop rbp ; pop r12 ; ret
0x000000000006cbbd : loopne 0x6cc1f ; pop rbp ; pop r12 ; ret
0x000000000006dd3f : loopne 0x6dd45 ; add byte ptr [rax], al ; jmp rax
0x000000000006dd6b : loopne 0x6dd71 ; add byte ptr [rax], al ; call rax
0x000000000006ddad : loopne 0x6ddb3 ; add byte ptr [rax], al ; call rax
0x000000000006ddef : loopne 0x6ddf5 ; add byte ptr [rax], al ; jmp rax
0x0000000000071fae : loopne 0x71f47 ; mov eax, 0xffffffff ; ret
0x0000000000077e36 : loopne 0x77e3b ; ret
0x0000000000077e46 : loopne 0x77e4b ; ret
0x0000000000078ee9 : loopne 0x78f50 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000078f97 : loopne 0x78ffe ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008e66d : loopne 0x8e6d1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008e702 : loopne 0x8e766 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009432d : loopne 0x94385 ; mov dword ptr [rdx + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000096017 : loopne 0x9606d ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009601a : loopne 0x9607c ; pop rbp ; pop r12 ; ret
0x00000000000a5f1c : loopne 0xa5f26 ; add byte ptr [rax], al ; ret
0x00000000000aa25d : loopne 0xaa277 ; movsxd rsi, dword ptr [rcx + rax*4] ; add rcx, rsi ; jmp rcx
0x00000000000ccc30 : loopne 0xccc96 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000d0ce2 : loopne 0xd0d44 ; pop rbp ; pop r12 ; ret
0x00000000000d0de2 : loopne 0xd0e44 ; pop rbp ; pop r12 ; ret
0x00000000000d5aa8 : loopne 0xd5aad ; ret
0x00000000000d6729 : loopne 0xd6732 ; add eax, 8 ; ret
0x00000000000d6775 : loopne 0xd677b ; ret
0x00000000000d6829 : loopne 0xd682f ; pop rbx ; ret
0x00000000000d87e3 : loopne 0xd87f7 ; ret
0x00000000000d908d : loopne 0xd90fe ; nop ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00000000000e3b17 : loopne 0xe3adf ; call 0x66d0c42b
0x0000000000131b07 : mov ah, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000001ac584 : mov ah, 0x12 ; add dword ptr [rax], eax ; sbb bh, dl ; jmp qword ptr [rcx]
0x000000000018264a : mov ah, 0x13 ; ret
0x000000000019cc84 : mov ah, 0x19 ; add byte ptr [rax], al ; call 0x1419b5a7
0x00000000001acf84 : mov ah, 0x1c ; add dword ptr [rax], eax ; mov byte ptr [rdi - 7], ah ; call qword ptr [rax]
0x00000000000b4d43 : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret 0x8341
0x00000000000da618 : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x947c
0x00000000000bb7d9 : mov ah, 0x24 ; mov eax, 0x41000000 ; call rsp
0x00000000001ad984 : mov ah, 0x26 ; add dword ptr [rax], eax ; call 0x221ace3b
0x00000000001add84 : mov ah, 0x2a ; add dword ptr [rax], eax ; cmp cl, dl ; hlt ; jmp rcx
0x00000000001adf84 : mov ah, 0x2c ; add dword ptr [rax], eax ; fcomp st(2) ; hlt ; call qword ptr [rbx]
0x00000000001b0184 : mov ah, 0x4e ; add dword ptr [rax], eax ; test al, 0x6e ; cmc ; jmp qword ptr [rcx]
0x00000000001b0484 : mov ah, 0x51 ; add dword ptr [rax], eax ; cwde ; jb 0x1b0487 ; jmp qword ptr [rcx]
0x0000000000196c58 : mov ah, 0x55 ; in eax, dx ; jmp rsp
0x00000000001b0984 : mov ah, 0x56 ; add dword ptr [rax], eax ; sbb byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x000000000019a388 : mov ah, 0x71 ; stc ; call rsp
0x000000000019891c : mov ah, 0x72 ; add dword ptr [rax], eax ; push rsp ; add esi, esi ; jmp rsp
0x0000000000197590 : mov ah, 0x74 ; out dx, al ; call rsp
0x00000000001b2c84 : mov ah, 0x79 ; add dword ptr [rax], eax ; or byte ptr [rsi + rsi*8], bh ; call qword ptr [rax]
0x0000000000195594 : mov ah, 0x84 ; cld ; inc dword ptr [rsp + rax*4 - 4] ; call rsp
0x00000000001980a0 : mov ah, 0x95 ; jmp rsp
0x0000000000182af0 : mov ah, 0xa5 ; ret
0x0000000000195a8c : mov ah, 0xab ; cld ; inc dword ptr [rbx + rbp*4 - 4] ; call rsp
0x0000000000196e90 : mov ah, 0xb3 ; in eax, dx ; jmp rsp
0x0000000000196ec4 : mov ah, 0xbc ; add byte ptr [rax], al ; in al, -0x49 ; in eax, dx ; call rsp
0x0000000000196fd8 : mov ah, 0xd3 ; in eax, dx ; inc esp ; ret 0
0x000000000019afb8 : mov ah, 0xe3 ; cli ; jmp rsp
0x00000000001998f0 : mov ah, 0xe5 ; idiv edi ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000001a4659 : mov ah, 0xe7 ; jmp qword ptr [rax]
0x00000000000b71eb : mov ah, 0xe9 ; ret
0x0000000000199f0c : mov ah, 0xeb ; add dword ptr [rax], eax ; push rsp ; xchg eax, esi ; clc ; jmp rsp
0x0000000000198100 : mov ah, 0xf ; call rsp
0x00000000001b4bf1 : mov ah, 0xf6 ; call rsi
0x00000000001953f5 : mov ah, bh ; call qword ptr [rax]
0x00000000001954b5 : mov ah, bh ; jmp rdx
0x0000000000182444 : mov ah, bl ; push rsi ; ret
0x0000000000050549 : mov ah, byte ptr [rdx - 0x76fffff6] ; ret 0xe680
0x00000000001a0c08 : mov ah, cl ; in al, dx ; jmp rbx
0x00000000001a6335 : mov al, 0 ; add al, bh ; mov esi, gs ; call qword ptr [rax]
0x00000000001a634d : mov al, 0 ; add al, dh ; mov esi, gs ; jmp qword ptr [rsi]
0x00000000001a63c5 : mov al, 0 ; add byte ptr [rax + 0x54], bl ; cli ; call qword ptr [rax]
0x00000000000eb298 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000001af120 : mov al, 0x1e ; cmc ; jmp qword ptr [rcx]
0x000000000012d94c : mov al, 0x23 ; add byte ptr [rax], al ; xor eax, eax ; jmp rcx
0x000000000012d904 : mov al, 0x23 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000018a8e0 : mov al, 0x28 ; cli ; jmp rax
0x00000000001350b9 : mov al, 0x48 ; add eax, ecx ; jmp rax
0x00000000000cd25e : mov al, 0x48 ; add eax, edx ; jmp rax
0x00000000000c48a5 : mov al, 0x48 ; add eax, esi ; jmp rax
0x000000000013bf28 : mov al, 0x48 ; shr edx, 3 ; add rax, rcx ; jmp rax
0x0000000000125f5d : mov al, 0x49 ; mov ebx, eax ; mov byte ptr [r11], 0 ; ret
0x0000000000188dc0 : mov al, 0x4f ; hlt ; jmp qword ptr [rsi]
0x00000000001868b4 : mov al, 0x55 ; out dx, al ; call rax
0x00000000001952f8 : mov al, 0x58 ; cld ; jmp qword ptr [rax]
0x000000000019510c : mov al, 0x5f ; cld ; inc dword ptr [rax + 0x5f] ; cld ; call rax
0x0000000000194ef4 : mov al, 0x62 ; cld ; inc dword ptr [rax + 0x62] ; cld ; call rax
0x00000000001b0260 : mov al, 0x6f ; cmc ; jmp qword ptr [rcx]
0x0000000000195668 : mov al, 0x78 ; cld ; jmp qword ptr [rax]
0x00000000001955f0 : mov al, 0x81 ; cld ; jmp qword ptr [rax]
0x0000000000195420 : mov al, 0x83 ; cld ; inc dword ptr [rax - 0x7d] ; cld ; call rax
0x00000000001955f8 : mov al, 0x87 ; cld ; inc dword ptr [rax - 0x79] ; cld ; call rax
0x00000000001ad640 : mov al, 0x9a ; hlt ; jmp qword ptr [rcx]
0x00000000001bbdc5 : mov al, 0xa ; sbb byte ptr [rax], al ; add al, ah ; or ch, byte ptr [rsi] ; ret 0xb
0x000000000019485c : mov al, 0xa7 ; std ; inc dword ptr [rax - 0x58] ; std ; call rax
0x0000000000195918 : mov al, 0xaa ; cld ; inc dword ptr [rax - 0x56] ; cld ; call rax
0x0000000000194830 : mov al, 0xaa ; std ; inc dword ptr [rax - 0x5f] ; std ; call qword ptr [rax]
0x0000000000194b30 : mov al, 0xbf ; sti ; inc dword ptr [rax - 0x2f00043e] ; ret
0x00000000001327b9 : mov al, 0xcc ; add eax, 0x358d4800 ; ret
0x00000000001875d8 : mov al, 0xe5 ; int1 ; call rax
0x00000000001875f8 : mov al, 0xe6 ; int1 ; call rax
0x0000000000187618 : mov al, 0xe7 ; int1 ; call rax
0x00000000000d14e8 : mov al, 0xe8 ; ret 0x42c
0x0000000000186670 : mov al, 0xeb ; in eax, dx ; dec dword ptr [rbp - 0x1f] ; in eax, dx ; jmp qword ptr [rbx]
0x00000000001876c0 : mov al, 0xeb ; int1 ; call rax
0x0000000000187714 : mov al, 0xec ; int1 ; inc eax ; in al, dx ; int1 ; call rax
0x00000000001a0931 : mov al, 0xec ; jmp qword ptr [rcx]
0x00000000001848f6 : mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x00000000000fd593 : mov al, 0xf3 ; ret
0x00000000001877c0 : mov al, 0xfa ; int1 ; call rax
0x000000000018780c : mov al, 0xfd ; int1 ; jmp rax
0x0000000000187858 : mov al, 0xff ; int1 ; call rax
0x00000000001a376d : mov al, 1 ; add ah, byte ptr [rbx + 0x41180e0a] ; ret
0x00000000001a95e5 : mov al, 1 ; add bl, byte ptr [rax + 0x41180e0a] ; ret
0x0000000000199655 : mov al, 1 ; add byte ptr [rdx + rcx*2 - 9], ah ; jmp rsp
0x00000000001a4889 : mov al, 1 ; add edi, dword ptr [rdi + 0x380e0a01] ; ret
0x00000000001878e8 : mov al, 2 ; inc eax ; add dh, dl ; call rax
0x00000000000a5f4c : mov al, 4 ; add byte ptr [rax], al ; ret
0x00000000000a5b4c : mov al, 8 ; add byte ptr [rax], al ; ret
0x00000000001bbe1d : mov al, 9 ; sbb byte ptr [rax], al ; add al, ah ; or dword ptr [rsi], ebp ; ret 0xa
0x00000000001a3d2d : mov al, byte ptr [rax] ; add byte ptr [rax], dl ; jns 0x1a3d26 ; call qword ptr [rsi]
0x00000000000a207b : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x00000000000a20a9 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000000a212d : mov al, byte ptr [rcx + 8] ; mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x000000000016a820 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x00000000000a2055 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000000a2065 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x000000000015b131 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000000bcca1 : mov bh, 0x1d ; pop rcx ; mov dr0, word ptr [rax] ; add byte ptr [rcx], ch ; ret 0x428d
0x000000000011be26 : mov bh, 0x2a ; add al, ch ; ret 0xf039
0x000000000002a21b : mov bh, 0x43 ; add al, 0x29 ; ret 0x8941
0x0000000000029d92 : mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x4676
0x000000000006ca50 : mov bh, 0x48 ; add edi, esi ; jmp rdi
0x0000000000033401 : mov bh, 0x48 ; add esi, edi ; jmp rsi
0x0000000000170198 : mov bh, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x00000000000fea75 : mov bh, 0x76 ; sub al, 0 ; mov byte ptr [r8 - 1], 0 ; ret
0x000000000002da67 : mov bh, 0x8b ; add al, 0x10 ; ret
0x0000000000002be8 : mov bh, 0xb1 ; or cl, cl ; clc ; ret
0x0000000000183924 : mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x000000000002dd16 : mov bh, 0xc0 ; ret
0x0000000000118b4c : mov bh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x0000000000196ec9 : mov bh, 0xed ; call rsp
0x0000000000003790 : mov bh, 0xfa ; add ebx, ebp ; in al, -0x12 ; jne 0x377a ; ret 0x975
0x00000000001081b3 : mov bh, 0xff ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000109bd6 : mov bh, 4 ; js 0x109b66 ; loopne 0x109bed ; movzx eax, ax ; ret
0x0000000000109d06 : mov bh, 4 ; js 0x109c93 ; loopne 0x109d13 ; ret
0x0000000000109d96 : mov bh, 4 ; js 0x109d26 ; loopne 0x109da7 ; movzx eax, ax ; ret
0x000000000010a096 : mov bh, 4 ; js 0x10a026 ; loopne 0x10a0a9 ; movzx eax, ax ; ret
0x000000000010a56f : mov bh, 4 ; js 0x10a4ff ; loopne 0x10a586 ; movzx eax, ax ; ret
0x000000000010a66f : mov bh, 4 ; js 0x10a5fc ; loopne 0x10a67c ; ret
0x000000000010a6ef : mov bh, 4 ; js 0x10a67f ; loopne 0x10a700 ; movzx eax, ax ; ret
0x000000000010a96f : mov bh, 4 ; js 0x10a8ff ; loopne 0x10a982 ; movzx eax, ax ; ret
0x000000000002dd0f : mov bh, 4 ; js 0x2dc9f ; loopne 0x2dd26 ; movzx eax, ax ; ret
0x000000000002dd4f : mov bh, 4 ; js 0x2dcdf ; loopne 0x2dd60 ; movzx eax, ax ; ret
0x000000000002ddef : mov bh, 4 ; js 0x2dd7f ; loopne 0x2de02 ; movzx eax, ax ; ret
0x000000000002decf : mov bh, 4 ; js 0x2de5c ; loopne 0x2dedc ; ret
0x000000000002df48 : mov bh, 4 ; js 0x2ded5 ; loopne 0x2df55 ; ret
0x000000000002df58 : mov bh, 4 ; js 0x2dee8 ; loopne 0x2df6f ; movzx eax, ax ; ret
0x000000000002df98 : mov bh, 4 ; js 0x2df28 ; loopne 0x2dfa9 ; movzx eax, ax ; ret
0x000000000002e038 : mov bh, 4 ; js 0x2dfc8 ; loopne 0x2e04b ; movzx eax, ax ; ret
0x00000000000c209d : mov bh, 5 ; ret
0x0000000000185033 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000000f5681 : mov bh, 7 ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x0000000000195d8d : mov bh, ah ; call rax
0x0000000000076ed1 : mov bh, bh ; dec dword ptr [rax - 0x77] ; ret 0x38b
0x000000000001f92b : mov bh, byte ptr [rdx] ; add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x000000000018b9c1 : mov bh, dl ; call qword ptr [rax]
0x000000000018b9e1 : mov bh, dl ; jmp qword ptr [rax + 0x10fffa88]
0x000000000018b9cd : mov bh, dl ; push qword ptr [rax] ; mov bh, dl ; call qword ptr [rax]
0x00000000001a6605 : mov bl, 0 ; add byte ptr [rax - 0x1c], cl ; out dx, al ; call qword ptr [rax]
0x0000000000171a8e : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000196d8d : mov bl, 0 ; add byte ptr [rcx + rdx*4], dh ; in eax, dx ; call rsp
0x000000000011947c : mov bl, 0x2a ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000ad05c : mov bl, 0x48 ; mov eax, edx ; ret
0x00000000000e467c : mov bl, 0x8b ; pop rax ; or bh, dh ; ret
0x0000000000184a03 : mov bl, 0x8e ; ret 0xdcd9
0x0000000000196e91 : mov bl, 0xed ; jmp rsp
0x0000000000001b13 : mov bl, 0xee ; enter 0x59e7, 0x5b ; ret 0x2a63
0x0000000000003af9 : mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x00000000001bb8b9 : mov bl, bh ; call rcx
0x0000000000125f61 : mov byte ptr [r11], 0 ; ret
0x0000000000082440 : mov byte ptr [r8 + rbx], r9b ; mov rax, r8 ; pop rbx ; ret
0x000000000007757c : mov byte ptr [r8 - 0x75], r9b ; or cl, byte ptr [rax - 0x7d] ; ret
0x00000000000fea09 : mov byte ptr [r8 - 1], 0 ; ret
0x000000000002fa5c : mov byte ptr [rax + 0x39], dl ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000013cf2c : mov byte ptr [rax + 1], cl ; ret 0x8948
0x00000000000bf680 : mov byte ptr [rax + rax], cl ; add rax, rdi ; jmp rax
0x0000000000082441 : mov byte ptr [rax + rbx], cl ; mov rax, r8 ; pop rbx ; ret
0x0000000000083840 : mov byte ptr [rax + rbx], cl ; pop rbx ; ret
0x000000000008383f : mov byte ptr [rax + rbx], r9b ; pop rbx ; ret
0x0000000000024208 : mov byte ptr [rax + rcx*2], 0x83 ; ret
0x0000000000045ae9 : mov byte ptr [rax + rdx], 0 ; ret
0x000000000007757d : mov byte ptr [rax - 0x75], cl ; or cl, byte ptr [rax - 0x7d] ; ret
0x00000000000fea0a : mov byte ptr [rax - 1], 0 ; ret
0x00000000001b6d28 : mov byte ptr [rax - 9], bl ; jmp rdx
0x000000000010de8d : mov byte ptr [rax], 0x20 ; jmp 0x10de59
0x0000000000032c21 : mov byte ptr [rax], 0x2e ; call 0x8ee65
0x0000000000032c08 : mov byte ptr [rax], 0x40 ; call 0x8ee65
0x000000000010436e : mov byte ptr [rax], 0xa ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001816b0 : mov byte ptr [rax], ah ; jmp 0x1816b6
0x000000000003595d : mov byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000000358c5 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000a4ca2 : mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x0000000000187514 : mov byte ptr [rbp - 0x40370003], bh ; std ; dec dword ptr [rax] ; ret 0xfffd
0x000000000019544c : mov byte ptr [rbp - 0x7aa90004], 0xfc ; jmp rsi
0x00000000000fd3a6 : mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x0000000000125f62 : mov byte ptr [rbx], 0 ; ret
0x0000000000002f96 : mov byte ptr [rbx], cl ; and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x0000000000096d74 : mov byte ptr [rcx + 0xf], 0x94 ; ret 0x8440
0x00000000001684e3 : mov byte ptr [rcx + 2], dl ; ret
0x0000000000168502 : mov byte ptr [rcx + 4], dl ; ret
0x0000000000168543 : mov byte ptr [rcx + 8], dl ; ret
0x000000000009e003 : mov byte ptr [rcx + rax - 0x38], cl ; jmp rax
0x000000000002be46 : mov byte ptr [rcx + rax - 0x3f], cl ; jmp rcx
0x000000000009e3bb : mov byte ptr [rcx], 0 ; mov qword ptr [rdi], rdx ; ret
0x000000000009e300 : mov byte ptr [rcx], 0 ; mov rcx, r8 ; mov qword ptr [rdx], rcx ; ret
0x000000000009e43a : mov byte ptr [rcx], 0 ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x00000000000481da : mov byte ptr [rcx], 0x48 ; cmp esi, edx ; jne 0x481d9 ; xor eax, eax ; ret
0x000000000002d50c : mov byte ptr [rcx], 0x83 ; ret
0x00000000000e3b31 : mov byte ptr [rcx], 0xf ; test dword ptr [rbx - 0xa000000], esi ; ret 0x7420
0x0000000000198dad : mov byte ptr [rcx], al ; add ah, al ; je 0x198daf ; call rsp
0x00000000001a61f0 : mov byte ptr [rcx], al ; ret
0x00000000001684c0 : mov byte ptr [rcx], dl ; ret
0x00000000000a931a : mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a78bb : mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a60db : mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000a932b : mov byte ptr [rdi + 0x10], cl ; xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a6a78 : mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a5408 : mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a9330 : mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a9352 : mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a9370 : mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a9390 : mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a6aee : mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a545e : mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a7941 : mov byte ptr [rdi + 0x14], dl ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a6131 : mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000a93b1 : mov byte ptr [rdi + 0x14], dl ; xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a93b6 : mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a93d2 : mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a93f2 : mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000a9412 : mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a79c3 : mov byte ptr [rdi + 0x18], cl ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a61b3 : mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000a9433 : mov byte ptr [rdi + 0x18], cl ; xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a6b70 : mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a54e0 : mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a9438 : mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a945a : mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a9478 : mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000a9498 : mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000a94b4 : mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000a94d4 : mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000a94f4 : mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000a9514 : mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a62b5 : mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000a9535 : mov byte ptr [rdi + 0x20], cl ; xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a953a : mov byte ptr [rdi + 0x21], ch ; ret
0x0000000000057554 : mov byte ptr [rdi + 0x39480001], dl ; ret
0x00000000000a958a : mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a9260 : mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a927e : mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a929e : mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a92c0 : mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a92e0 : mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a9300 : mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000a9196 : mov byte ptr [rdi + 1], ch ; ret
0x0000000000123422 : mov byte ptr [rdi + 1], dh ; ret
0x0000000000123421 : mov byte ptr [rdi + 1], sil ; ret
0x00000000001235f0 : mov byte ptr [rdi + 2], 0 ; jne 0x123648 ; mov eax, r8d ; ret
0x000000000009e043 : mov byte ptr [rdi + 2], 0 ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000009dfb3 : mov byte ptr [rdi + 2], 0 ; mov rax, rdi ; ret
0x00000000000a91a8 : mov byte ptr [rdi + 2], ch ; ret
0x00000000000a6926 : mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a5326 : mov byte ptr [rdi + 2], dh ; ret
0x00000000000a7749 : mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a5ff9 : mov byte ptr [rdi + 2], dl ; ret
0x00000000000a91b9 : mov byte ptr [rdi + 2], dl ; xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a91be : mov byte ptr [rdi + 3], ch ; ret
0x000000000009e062 : mov byte ptr [rdi + 4], 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000009dfd2 : mov byte ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x00000000000a91d6 : mov byte ptr [rdi + 4], ch ; ret
0x00000000000a6942 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a5342 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000a7777 : mov byte ptr [rdi + 4], dl ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a6017 : mov byte ptr [rdi + 4], dl ; ret
0x00000000000a91e7 : mov byte ptr [rdi + 4], dl ; xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a91ec : mov byte ptr [rdi + 5], ch ; ret
0x000000000009dfe9 : mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a91fe : mov byte ptr [rdi + 6], ch ; ret
0x000000000012fb52 : mov byte ptr [rdi + 7], al ; ret
0x00000000000a921c : mov byte ptr [rdi + 7], ch ; ret
0x00000000000d4e80 : mov byte ptr [rdi + 8], 0x15 ; mov eax, 1 ; ret
0x00000000000d4e41 : mov byte ptr [rdi + 8], 0x16 ; mov eax, 1 ; ret
0x00000000000d4eb0 : mov byte ptr [rdi + 8], 0x19 ; mov eax, 1 ; ret
0x00000000000d4ed7 : mov byte ptr [rdi + 8], 0x1a ; mov eax, 2 ; ret
0x00000000000d4f20 : mov byte ptr [rdi + 8], 0x1c ; mov eax, 2 ; ret
0x00000000000d4f0d : mov byte ptr [rdi + 8], 0x1e ; mov eax, 2 ; ret
0x00000000000d4e70 : mov byte ptr [rdi + 8], 1 ; mov eax, 1 ; ret
0x00000000000d4e50 : mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00000000000a9228 : mov byte ptr [rdi + 8], ch ; ret
0x00000000000a5383 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000000a77c9 : mov byte ptr [rdi + 8], dl ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000a6059 : mov byte ptr [rdi + 8], dl ; ret
0x00000000000a9239 : mov byte ptr [rdi + 8], dl ; xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000a923e : mov byte ptr [rdi + 9], ch ; ret
0x0000000000123606 : mov byte ptr [rdi + rdx], 0 ; ret
0x000000000012a8a4 : mov byte ptr [rdi - 0x11], cl ; dec dword ptr [rax - 0x77] ; ret
0x000000000009df46 : mov byte ptr [rdi - 1], al ; mov dword ptr [rdi - 7], eax ; mov rax, rdi ; ret
0x000000000015239b : mov byte ptr [rdi - 1], dl ; ret
0x00000000001acf88 : mov byte ptr [rdi - 7], ah ; call qword ptr [rax]
0x000000000009df90 : mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000000d4ea0 : mov byte ptr [rdi], 0x5b ; mov eax, 1 ; ret
0x00000000001aa9e8 : mov byte ptr [rdi], ah ; jmp qword ptr [rdi]
0x00000000000d4ef9 : mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00000000001af1c8 : mov byte ptr [rdi], bl ; cmc ; jmp qword ptr [rdx]
0x00000000000a9182 : mov byte ptr [rdi], ch ; ret
0x000000000009f192 : mov byte ptr [rdi], cl ; ret
0x000000000009dee1 : mov byte ptr [rdi], dh ; add rdi, 1 ; mov rax, rdi ; ret
0x00000000000a6900 : mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00000000000a5300 : mov byte ptr [rdi], dh ; ret
0x00000000000a7722 : mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a5fd2 : mov byte ptr [rdi], dl ; ret
0x00000000000a9192 : mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000a4e2a : mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x000000000016a849 : mov byte ptr [rdx + 2], al ; lea rax, qword ptr [rdx + 2] ; ret
0x00000000000a207e : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x000000000016a877 : mov byte ptr [rdx + 4], al ; lea rax, qword ptr [rdx + 4] ; ret
0x00000000000a20ac : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000000a4dc0 : mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x00000000000a2130 : mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x00000000001b08f8 : mov byte ptr [rdx - 0xb], bh ; jmp qword ptr [rcx]
0x000000000011c818 : mov byte ptr [rdx], 0 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000105571 : mov byte ptr [rdx], 0 ; pop rbx ; ret
0x00000000000b867d : mov byte ptr [rdx], 0x83 ; ret 0x4102
0x000000000016a822 : mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x00000000000a2057 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000007133a : mov byte ptr [rdx], bh ; movzx eax, dil ; ret
0x0000000000077e6a : mov byte ptr [rdx], bh ; ret
0x0000000000102d44 : mov byte ptr [rdx], cl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x0000000000071339 : mov byte ptr [rdx], dil ; movzx eax, dil ; ret
0x0000000000077e69 : mov byte ptr [rdx], dil ; ret
0x000000000002cae8 : mov byte ptr [rip + 0x397faf], dl ; ret
0x0000000000002478 : mov byte ptr [rip - 0x22beffe8], dh ; out 0xa9, al ; ret 0xbd07
0x000000000012394b : mov byte ptr [rsi + 3], bl ; pop rbx ; ret
0x000000000012394a : mov byte ptr [rsi + 3], r11b ; pop rbx ; ret
0x0000000000094f84 : mov byte ptr [rsi + rdx + 1], al ; jg 0x94f77 ; ret
0x00000000000712c4 : mov byte ptr [rsi - 0x3d770000], bl ; jmp 0x71266
0x000000000004a733 : mov byte ptr [rsi], al ; jne 0x4a717 ; mov rax, rsi ; ret
0x00000000000b93e4 : mov byte ptr [rsi], cl ; add eax, 0x75db8500 ; fsubr qword ptr [rcx] ; ret
0x000000000004a6af : mov byte ptr [rsi], dl ; jne 0x4a69f ; mov rax, rsi ; ret
0x000000000007e3a8 : mov byte ptr [rsp + 0x10], 0 ; call 0x4a677
0x000000000007544f : mov ch, 0 ; add byte ptr [rax], al ; mov edx, eax ; mov eax, edx ; pop rbx ; ret
0x000000000006e477 : mov ch, 0 ; add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x0000000000127882 : mov ch, 0x29 ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x0000000000182442 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x0000000000183783 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000184b1f : mov ch, 0x99 ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000001854ca : mov ch, 0xab ; ret
0x000000000000378f : mov ch, 0xb7 ; cli ; add ebx, ebp ; in al, -0x12 ; jne 0x377b ; ret 0x975
0x00000000001021ef : mov ch, 0xd6 ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000001866c8 : mov ch, 0xde ; in eax, dx ; jmp qword ptr [rbx]
0x00000000001979e1 : mov ch, 0xef ; call rsp
0x00000000001b15d1 : mov ch, 0xf5 ; call rdi
0x00000000001a7389 : mov ch, 0xfb ; call qword ptr [rax]
0x000000000016ebb6 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001a42b1 : mov ch, ch ; jmp qword ptr [rax]
0x000000000008e0ab : mov cl, 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000001a63f5 : mov cl, 0 ; add byte ptr [rax], ch ; scasd eax, dword ptr [rdi] ; out dx, al ; call qword ptr [rax]
0x0000000000173b8a : mov cl, 0x15 ; cmp byte ptr [rip + 0x1740025], bl ; ret
0x0000000000108cee : mov cl, 0x15 ; movsq qword ptr [rdi], qword ptr [rsi] ; sub eax, dword ptr [rax] ; je 0x108d01 ; pop rbp ; ret
0x0000000000003bac : mov cl, 0x22 ; xchg eax, ebp ; ret
0x0000000000114cb3 : mov cl, 0x24 ; sub eax, dword ptr [rax] ; test rax, rax ; je 0x114cc9 ; ret
0x00000000000881e8 : mov cl, 0x35 ; ret 0x33d6
0x0000000000114a1c : mov cl, 0x35 ; xchg byte ptr [rip + 0x3948002b], bh ; ret 0xd975
0x0000000000002be9 : mov cl, 0x65 ; or cl, cl ; clc ; ret
0x00000000000c6e7e : mov cl, 0x90 ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000888a3 : mov cl, 0xa6 ; xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x0000000000142810 : mov cl, 0xe9 ; add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000198fc9 : mov cl, 0xf6 ; jmp rsp
0x00000000000f2c71 : mov cl, 0xf9 ; dec dword ptr [rax - 0x77] ; ret 0x3145
0x00000000000d5a29 : mov cl, byte ptr [rax + 0x39] ; ret
0x000000000002c852 : mov cl, byte ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x0000000000091245 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x000000000009df63 : mov cl, byte ptr [rcx + 1] ; ret 0xff41
0x0000000000089364 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x00000000001848f2 : mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x000000000009f190 : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000019dd59 : mov cl, ch ; jmp rsp
0x00000000000ab4eb : mov cl, dl ; and cl, 0xf ; je 0xab517 ; ret
0x0000000000184bac : mov cs, edi ; ret 0x8b36
0x000000000014aa0e : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x00000000000a5320 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000001bce84 : mov dh, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x000000000007a53e : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007b206 : mov dh, 0 ; pop rbx ; ret
0x0000000000077e93 : mov dh, 0 ; ret
0x000000000015b1a1 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000008e294 : mov dh, 0x16 ; sub eax, edx ; ret
0x0000000000033bc0 : mov dh, 0x17 ; test dl, dl ; jne 0x33ba6 ; ret
0x000000000010b014 : mov dh, 0x2b ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000000e2fda : mov dh, 0x34 ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4001
0x0000000000025944 : mov dh, 0x34 ; adc dword ptr [rax + 0x39], ecx ; ret 0x8840
0x0000000000140756 : mov dh, 0x3c ; sub byte ptr [rax], al ; call qword ptr [rax]
0x000000000006c1b6 : mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000012d692 : mov dh, 0x40 ; or dh, dh ; ret 0x8802
0x00000000000d6bb6 : mov dh, 0x41 ; cmp eax, esi ; jge 0xd6b97 ; mov edx, eax ; jmp 0xd6ba0
0x00000000000ce7b5 : mov dh, 0x42 ; add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x00000000000ce107 : mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x000000000006c803 : mov dh, 0x42 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x0000000000046266 : mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000099151 : mov dh, 0x45 ; ret
0x000000000009d089 : mov dh, 0x45 ; ret 0x8348
0x0000000000099142 : mov dh, 0x45 ; ret 0x8349
0x000000000004bc43 : mov dh, 0x46 ; or al, 0x83 ; ret
0x0000000000171661 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000171651 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000171621 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000171641 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000171631 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x00000000000e04ea : mov dh, 0x48 ; xor byte ptr [rax - 0x77], cl ; ret 0x8041
0x0000000000025c59 : mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000d0e61 : mov dh, 0x4b ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00000000001838e2 : mov dh, 0x4e ; ret 0x474c
0x000000000010d5a3 : mov dh, 0x4f ; add dword ptr [rcx - 0x7d], ecx ; ret 0x8408
0x000000000012370d : mov dh, 0x52 ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x000000000006cdd9 : mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x00000000000d3b3b : mov dh, 0x55 ; add byte ptr [rcx], bh ; ret 0x840f
0x0000000000098b37 : mov dh, 0x55 ; ret
0x000000000009b145 : mov dh, 0x55 ; ret 0x8348
0x0000000000098b29 : mov dh, 0x55 ; ret 0x8349
0x0000000000171665 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x0000000000171655 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x0000000000171625 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x00000000000567b7 : mov dh, 0x56 ; or al, 0x83 ; ret
0x000000000005673a : mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x0000000000171635 : mov dh, 0x56 ; sub eax, edx ; ret
0x0000000000194f3c : mov dh, 0x61 ; cld ; inc dword ptr [rsi + 0x61] ; cld ; call rsi
0x000000000005e54e : mov dh, 0x75 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000195960 : mov dh, 0xa9 ; cld ; inc dword ptr [rsi - 0x57] ; cld ; call rsi
0x0000000000088955 : mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x000000000012dea8 : mov dh, 0xc0 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013b07c : mov dh, 0xc0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000012da2d : mov dh, 0xc0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000e9f1f : mov dh, 0xc0 ; cmova eax, edx ; ret
0x00000000000ba7b6 : mov dh, 0xc0 ; lea eax, dword ptr [rax + rax - 1] ; ret
0x00000000000cd137 : mov dh, 0xc0 ; lea rax, qword ptr [rax + rax - 1] ; ret
0x000000000003521d : mov dh, 0xc0 ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000d351f : mov dh, 0xc0 ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x00000000000c04bb : mov dh, 0xc0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000006c180 : mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x000000000006c2af : mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rsi, rax ; jmp rsi
0x000000000010e341 : mov dh, 0xc0 ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006b2fd : mov dh, 0xc0 ; neg eax ; pop rbx ; ret
0x000000000006b2ca : mov dh, 0xc0 ; neg eax ; ret
0x00000000001331d6 : mov dh, 0xc0 ; pop rbp ; pop r12 ; ret
0x000000000012edfb : mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x00000000000c6b8c : mov dh, 0xc0 ; pop rbx ; ret
0x0000000000035f1a : mov dh, 0xc0 ; ret
0x00000000000aa1b8 : mov dh, 0xc1 ; pop rbx ; ret
0x00000000000aa1e0 : mov dh, 0xc2 ; pop rbx ; ret
0x000000000007a6be : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000118b3e : mov dh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x0000000000077e63 : mov dh, 0xc7 ; mov qword ptr [rsi + 0x28], rcx ; mov byte ptr [rdx], dil ; ret
0x00000000000c2826 : mov dh, 0xc7 ; movsxd r8, dword ptr [rdx + r8*4] ; add rdx, r8 ; jmp rdx
0x000000000007133e : mov dh, 0xc7 ; ret
0x0000000000184b24 : mov dh, 0xc7 ; ret 0xe71f
0x00000000000c27ab : mov dh, 0xd1 ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x000000000008e2ba : mov dh, 0xd2 ; sub eax, edx ; ret
0x00000000000e07d0 : mov dh, 0xd6 ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rdx, rcx ; jmp rdx
0x000000000008a711 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000016dc94 : mov dh, 0xe ; sub eax, ecx ; ret
0x000000000005c19b : mov dh, 0xe4 ; movsxd rcx, dword ptr [rax + r12*4] ; add rax, rcx ; jmp rax
0x000000000005c3c8 : mov dh, 0xe4 ; movsxd rdx, dword ptr [rax + r12*4] ; add rax, rdx ; jmp rax
0x00000000000d9083 : mov dh, 0xed ; movsxd rdx, dword ptr [rax + rbp*4] ; add rax, rdx ; jmp rax
0x00000000000ac0d2 : mov dh, 0xf3 ; mov rdi, qword ptr [rbp] ; call r12
0x00000000000333fc : mov dh, 0xf6 ; movsxd rsi, dword ptr [rdi + rsi*4] ; add rsi, rdi ; jmp rsi
0x0000000000086e0c : mov dh, 0xff ; dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x000000000007a551 : mov dh, 2 ; ret
0x00000000000e4c72 : mov dh, 4 ; adc byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000d674c : mov dh, 4 ; xor byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000016dc91 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000008e291 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000008a714 : mov dh, 7 ; sub eax, ecx ; ret
0x00000000000bcfde : mov dh, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000006dc68 : mov dh, byte ptr [rax] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x00000000000aa34c : mov dh, byte ptr [rcx - 0xd] ; ret
0x0000000000198ea9 : mov dh, dh ; jmp rsp
0x00000000001a64e5 : mov dl, 0 ; add byte ptr [rax], cl ; fucomi st(6) ; jmp qword ptr [rsi]
0x0000000000003aa4 : mov dl, 0x1e ; ret
0x00000000000bd251 : mov dl, 0x30 ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000000c4833 : mov dl, 0x48 ; add edx, esi ; jmp rdx
0x00000000001951e8 : mov dl, 0x52 ; cld ; jmp qword ptr [rdx]
0x0000000000194fe0 : mov dl, 0x5d ; cld ; inc dword ptr [rdx + 0x5d] ; cld ; call rdx
0x000000000017401d : mov dl, 0x66 ; nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001956b8 : mov dl, 0x7e ; cld ; jmp qword ptr [rdx]
0x00000000001954cc : mov dl, 0x85 ; cld ; inc dword ptr [rdx - 0x7b] ; cld ; call rdx
0x00000000001959c4 : mov dl, 0xac ; cld ; inc dword ptr [rdx - 0x54] ; cld ; call rdx
0x00000000001a0319 : mov dl, 0xeb ; jmp qword ptr [rax]
0x000000000007db8f : mov dl, 1 ; add byte ptr [rax], al ; mov rdx, rax ; jmp 0x7dbb6
0x000000000010a2c5 : mov dl, 3 ; add al, 0xa ; ret
0x0000000000137a4a : mov dl, 5 ; sub dword ptr [rax], eax ; mov qword ptr fs:[rax], rdx ; ret
0x000000000018b9e5 : mov dl, bh ; call qword ptr [rax]
0x00000000000a5ff3 : mov dl, byte ptr [rsi + 2] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000a6012 : mov dl, byte ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a6053 : mov dl, byte ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x0000000000152420 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000000a7720 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a5fd0 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000a9190 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000bcca4 : mov dr0, word ptr [rax] ; add byte ptr [rcx], ch ; ret 0x428d
0x000000000011eace : mov dr1, word ptr [rbx + 0x448b0006] ; ret 0x4804
0x0000000000106b52 : mov dword ptr [0x2d0], eax ; pop rax ; pop rdi ; call rax
0x00000000000cc7a4 : mov dword ptr [0x2d0], eax ; ret
0x00000000000bac0f : mov dword ptr [r10 + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000007ed86 : mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x00000000000be7b3 : mov dword ptr [r12], 1 ; jmp 0xbe788
0x000000000012d0fe : mov dword ptr [r14], 0 ; ret
0x0000000000065a77 : mov dword ptr [r14], r13d ; jmp 0x64baa
0x00000000001237b0 : mov dword ptr [r8], edi ; mov qword ptr [r9], rcx ; ret
0x000000000003aca3 : mov dword ptr [r8], edx ; mov dword ptr [rsi], edx ; ret
0x0000000000123714 : mov dword ptr [r8], edx ; mov qword ptr [r9], r10 ; ret
0x0000000000114f50 : mov dword ptr [r8], edx ; xor eax, eax ; ret
0x00000000000abee7 : mov dword ptr [r9 + 8], esi ; ret
0x000000000009f186 : mov dword ptr [r9 - 2], ecx ; ret
0x000000000009f171 : mov dword ptr [r9 - 4], ecx ; ret
0x0000000000071b79 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000071bb9 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000072b19 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x00000000000773a9 : mov dword ptr [rax + 0x20], edx ; pop rbx ; ret
0x0000000000071b7d : mov dword ptr [rax + 0x40], ecx ; ret
0x0000000000072bb7 : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x0000000000023acc : mov dword ptr [rax + 0x50], ecx ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000023acf : mov dword ptr [rax + 0x54], edx ; ret
0x000000000006b41b : mov dword ptr [rax + 4], 1 ; xor eax, eax ; ret
0x000000000007ba4a : mov dword ptr [rax + 8], 0 ; ret
0x00000000000fd6de : mov dword ptr [rax + rax], ebp ; add rsp, 8 ; ret
0x000000000008e8de : mov dword ptr [rax + rdx - 2], ecx ; ret
0x0000000000134593 : mov dword ptr [rax - 0x76b70011], esp ; ret 0x8d48
0x000000000011a783 : mov dword ptr [rax - 0x76b7ffd6], esp ; ret 0x8d48
0x000000000005bd42 : mov dword ptr [rax - 0x7d], ecx ; ret 0x8d01
0x00000000000ecda4 : mov dword ptr [rax], 0 ; call 0x89088
0x000000000013bd7d : mov dword ptr [rax], 0 ; pop rbx ; ret
0x00000000000fca48 : mov dword ptr [rax], 0x16 ; mov eax, edi ; ret
0x0000000000101d28 : mov dword ptr [rax], 0x16 ; ret
0x00000000000bad10 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x0000000000033e90 : mov dword ptr [rax], 0x2a ; mov rax, rcx ; ret
0x0000000000081cda : mov dword ptr [rax], 0xc ; mov rax, rcx ; ret
0x0000000000082458 : mov dword ptr [rax], 0xc ; xor eax, eax ; ret
0x00000000001a7a25 : mov dword ptr [rax], 0xf044d800 ; jmp qword ptr [rdi]
0x00000000000fc594 : mov dword ptr [rax], 0xffffffff ; xor eax, eax ; ret
0x00000000000c76a8 : mov dword ptr [rax], 2 ; xor eax, eax ; ret
0x0000000000021228 : mov dword ptr [rax], 9 ; mov eax, edi ; ret
0x00000000000ab1a3 : mov dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000e9e84 : mov dword ptr [rax], eax ; mov eax, 0xffffffff ; ret
0x00000000000720a5 : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x000000000007050a : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x000000000005fb38 : mov dword ptr [rax], edi ; jmp 0x5fb01
0x00000000000627b7 : mov dword ptr [rax], edi ; jmp 0x62780
0x00000000000fe941 : mov dword ptr [rax], edi ; mov eax, 0xffffffff ; ret
0x00000000001237b1 : mov dword ptr [rax], edi ; mov qword ptr [r9], rcx ; ret
0x0000000000083536 : mov dword ptr [rax], edi ; ret
0x0000000000106a13 : mov dword ptr [rax], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000abf21 : mov dword ptr [rax], edx ; jne 0xabf1d ; ret
0x000000000012351a : mov dword ptr [rax], edx ; lea eax, dword ptr [r9 + r8 + 2] ; pop rbx ; ret
0x000000000003aca4 : mov dword ptr [rax], edx ; mov dword ptr [rsi], edx ; ret
0x00000000000e9eda : mov dword ptr [rax], edx ; mov eax, 0xffffffff ; ret
0x0000000000071fe5 : mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x0000000000123715 : mov dword ptr [rax], edx ; mov qword ptr [r9], r10 ; ret
0x000000000002d9d3 : mov dword ptr [rax], edx ; ret
0x0000000000072e31 : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x00000000000e9e83 : mov dword ptr [rax], r8d ; mov eax, 0xffffffff ; ret
0x00000000000f53a1 : mov dword ptr [rbp + 4], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000002cd96 : mov dword ptr [rbp - 0x130], ebx ; call 0x89088
0x00000000000d2654 : mov dword ptr [rbp - 0x2888], esi ; sub r10, rax ; jmp 0xd267b
0x000000000004d60e : mov dword ptr [rbp - 0x4e8], esi ; jmp rax
0x0000000000069f05 : mov dword ptr [rbp - 0x518], ecx ; jmp 0x6619c
0x0000000000023656 : mov dword ptr [rbp - 0x58], edx ; call 0x1f8a5
0x000000000005f017 : mov dword ptr [rbp - 0x610], ecx ; call 0x7b2d8
0x000000000005ca8d : mov dword ptr [rbp - 0x610], ecx ; call 0x88d98
0x000000000011350d : mov dword ptr [rbp - 0x70], eax ; mov eax, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], eax ; call rcx
0x0000000000113e43 : mov dword ptr [rbp - 0x70], edx ; mov rdx, r13 ; call rax
0x000000000011409c : mov dword ptr [rbp - 0x80], eax ; call r9
0x0000000000113513 : mov dword ptr [rbp - 0x80], eax ; call rcx
0x0000000000113aba : mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x0000000000113f80 : mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x0000000000113a54 : mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x00000000001135e3 : mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x000000000005221f : mov dword ptr [rbp - 0xb8], ecx ; mov rdi, rbx ; call rax
0x00000000001417ad : mov dword ptr [rbp], ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000044c81 : mov dword ptr [rbp], ebx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001189f5 : mov dword ptr [rbp], ebx ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003a5ea : mov dword ptr [rbp], edx ; call rax
0x00000000000708c2 : mov dword ptr [rbp], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000708c1 : mov dword ptr [rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002a6d1 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000078387 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x00000000000c7a88 : mov dword ptr [rbx + 0x10], eax ; mov rsi, rbp ; xor edx, edx ; jmp 0xc7a5e
0x0000000000142e26 : mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000000788e9 : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x000000000010e3f4 : mov dword ptr [rbx + 0x10], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013b9f5 : mov dword ptr [rbx + 0x18], 0 ; pop rbx ; ret
0x0000000000142dde : mov dword ptr [rbx + 0x18], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000010e424 : mov dword ptr [rbx + 0x18], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000076ae5 : mov dword ptr [rbx + 0x18], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007b0d3 : mov dword ptr [rbx + 0x20], eax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000013ba49 : mov dword ptr [rbx + 0x20], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e78fb : mov dword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x00000000000773d5 : mov dword ptr [rbx + 0x28], eax ; pop rbx ; ret
0x0000000000088789 : mov dword ptr [rbx + 0x30], ecx ; call rcx
0x0000000000088788 : mov dword ptr [rbx + 0x30], r9d ; call rcx
0x000000000003521f : mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000fb931 : mov dword ptr [rbx + 0x48], eax ; pop rbx ; ret
0x000000000008883e : mov dword ptr [rbx + 0x48], ecx ; call rcx
0x000000000007b13b : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000072cfa : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000079762 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000071c04 : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000072a18 : mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000078257 : mov dword ptr [rbx + 0x90], eax ; pop rbx ; ret
0x000000000002a6e7 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000010e3c4 : mov dword ptr [rbx + 8], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000035df8 : mov dword ptr [rbx + 8], edx ; add rsp, 0x40 ; pop rbx ; ret
0x000000000007b35a : mov dword ptr [rbx + 8], edx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x0000000000088c1d : mov dword ptr [rbx + 8], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000101d12 : mov dword ptr [rbx], 0 ; pop rbx ; ret
0x000000000013bc13 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x000000000007b45c : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000143051 : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000137a9f : mov dword ptr [rbx], eax ; pop rbx ; ret
0x0000000000101cb2 : mov dword ptr [rbx], eax ; setne al ; movzx eax, al ; pop rbx ; ret
0x0000000000136780 : mov dword ptr [rbx], eax ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000006de86 : mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000072b1c : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000088786 : mov dword ptr [rbx], edi ; mov dword ptr [rbx + 0x30], r9d ; call rcx
0x0000000000047d3c : mov dword ptr [rbx], edx ; jg 0x47c51 ; pop rbx ; ret
0x0000000000088ca3 : mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007b0d6 : mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000008883b : mov dword ptr [rbx], esi ; mov qword ptr [rbx + 0x48], r9 ; call rcx
0x0000000000131b24 : mov dword ptr [rcx + 0x10], edx ; mov eax, 1 ; ret
0x0000000000134918 : mov dword ptr [rcx + 0x48], eax ; mov eax, 1 ; ret
0x0000000000134875 : mov dword ptr [rcx + 0x54], eax ; mov eax, 1 ; ret
0x0000000000134945 : mov dword ptr [rcx + 0x58], eax ; mov eax, 1 ; ret
0x000000000000044d : mov dword ptr [rcx + 0x7c05000c], eax ; adc byte ptr [rsp + rcx], bl ; ret 0x4412
0x000000000002057d : mov dword ptr [rcx + 0x968], eax ; ret
0x0000000000168522 : mov dword ptr [rcx + 3], edx ; ret
0x00000000000ab620 : mov dword ptr [rcx + 4], eax ; jne 0xab5ee ; ret
0x0000000000168513 : mov dword ptr [rcx + 4], edx ; ret
0x00000000000ab61f : mov dword ptr [rcx + 4], r8d ; jne 0xab5ef ; ret
0x0000000000168584 : mov dword ptr [rcx + 5], edx ; ret
0x0000000000168594 : mov dword ptr [rcx + 6], edx ; ret
0x0000000000168563 : mov dword ptr [rcx + 7], edx ; ret
0x0000000000168554 : mov dword ptr [rcx + 8], edx ; ret
0x00000000000abee8 : mov dword ptr [rcx + 8], esi ; ret
0x000000000009df16 : mov dword ptr [rcx + rcx*4], 0x8948fc47 ; clc ; ret
0x000000000004818b : mov dword ptr [rcx + rsi*8], eax ; xor eax, eax ; pop rbx ; ret
0x00000000001087af : mov dword ptr [rcx - 0x7d], ecx ; ret 0x4c01
0x000000000009f187 : mov dword ptr [rcx - 2], ecx ; ret
0x000000000009f172 : mov dword ptr [rcx - 4], ecx ; ret
0x000000000009f161 : mov dword ptr [rcx - 8], ecx ; ret
0x00000000000d0b3c : mov dword ptr [rcx], 0xdf75d284 ; ret
0x00000000001999dd : mov dword ptr [rcx], 0xf7ee9400 ; jmp rsp
0x00000000000d6222 : mov dword ptr [rcx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000006040c : mov dword ptr [rcx], eax ; jmp 0x603d5
0x000000000003576a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000711b7 : mov dword ptr [rcx], eax ; ret
0x00000000000755a4 : mov dword ptr [rcx], eax ; xor eax, eax ; pop rbx ; ret
0x00000000001237b4 : mov dword ptr [rcx], ecx ; ret
0x0000000000071011 : mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x0000000000123788 : mov dword ptr [rcx], edi ; ret
0x000000000008de07 : mov dword ptr [rcx], edx ; add rsp, 0x100 ; ret
0x00000000001684e1 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 2], dl ; ret
0x0000000000168500 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x0000000000168541 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 8], dl ; ret
0x0000000000168520 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x0000000000168561 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 7], edx ; ret
0x0000000000168571 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 8], edx ; ret
0x0000000000168581 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 5], rdx ; ret
0x0000000000168591 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 6], rdx ; ret
0x00000000001685a1 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 7], rdx ; ret
0x00000000001685b1 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 8], rdx ; ret
0x000000000007d9cd : mov dword ptr [rcx], edx ; mov rax, rdx ; ret
0x0000000000168510 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x0000000000168551 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 8], dx ; ret
0x0000000000123718 : mov dword ptr [rcx], edx ; ret
0x00000000000f600b : mov dword ptr [rdi + 0x100], edx ; ret
0x00000000000f6042 : mov dword ptr [rdi + 0x108], eax ; xor eax, eax ; ret
0x00000000000a6a8d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a78dd : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a6acb : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a791b : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a6b4d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a799d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a545b : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a612e : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000a54dd : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x0000000000048aff : mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a934d : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a938b : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a940d : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a61b0 : mov dword ptr [rdi + 0x10], edx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000a5520 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a5540 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a5501 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000000f6030 : mov dword ptr [rdi + 0x10c], esi ; xor eax, eax ; ret
0x00000000000a6bb3 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a7a03 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000a5523 : mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a9473 : mov dword ptr [rdi + 0x17], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x000000000013b650 : mov dword ptr [rdi + 0x18], eax ; mov eax, 1 ; ret
0x000000000007b063 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000077777 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000000a6b95 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a79e5 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a6bd3 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000a7a23 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a5505 : mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a9455 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a9493 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000013b6e2 : mov dword ptr [rdi + 0x18], edx ; mov eax, 1 ; ret
0x000000000013b616 : mov dword ptr [rdi + 0x18], esi ; ret
0x00000000000becde : mov dword ptr [rdi + 0x20], 0 ; jmp 0xbaf1a
0x000000000010de8a : mov dword ptr [rdi + 0x28], ecx ; mov byte ptr [rax], 0x20 ; jmp 0x10de5c
0x000000000013512c : mov dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x000000000013b791 : mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000d610a : mov dword ptr [rdi + 0x2c], eax ; mov dword ptr [rdi + 0x30], r8d ; ret
0x00000000000d6109 : mov dword ptr [rdi + 0x2c], r8d ; mov dword ptr [rdi + 0x30], r8d ; ret
0x00000000000d610e : mov dword ptr [rdi + 0x30], eax ; ret
0x00000000000d610d : mov dword ptr [rdi + 0x30], r8d ; ret
0x00000000000942a1 : mov dword ptr [rdi + 0x38], ecx ; ret
0x00000000001350e4 : mov dword ptr [rdi + 0x38], edx ; mov eax, 1 ; ret
0x00000000000208ed : mov dword ptr [rdi + 0x48], 0x4804e7c1 ; add edi, ebp ; call rax
0x000000000007b093 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000007e94b : mov dword ptr [rdi + 0x58], ecx ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000036039 : mov dword ptr [rdi + 0x78], 0xffffffff ; ret
0x00000000000f566e : mov dword ptr [rdi + 0x80], edx ; ret
0x00000000000ab822 : mov dword ptr [rdi + 0xc], eax ; mov rax, rbx ; pop rbx ; ret
0x000000000012285f : mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x00000000000a6b0d : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a795d : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a547d : mov dword ptr [rdi + 0xe], ecx ; ret
0x00000000000a93cd : mov dword ptr [rdi + 0xe], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a6aab : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a78fb : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a6b2d : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a797d : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a543b : mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a936b : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a93ed : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x000000000015afe5 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015ae28 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b0c8 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x000000000015af75 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015adb8 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000003b363 : mov dword ptr [rdi + 2], edx ; ret
0x00000000000a6977 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a77a7 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000015af05 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015ad48 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a5367 : mov dword ptr [rdi + 3], edx ; ret
0x00000000000a9217 : mov dword ptr [rdi + 3], edx ; xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x000000000009e023 : mov dword ptr [rdi + 4], eax ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000009df83 : mov dword ptr [rdi + 4], eax ; mov rax, rdi ; ret
0x000000000007e94e : mov dword ptr [rdi + 4], eax ; ret
0x000000000003b35d : mov dword ptr [rdi + 4], eax ; xor eax, eax ; mov word ptr [rdi + 2], dx ; ret
0x000000000009e073 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a7789 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000015acd8 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000009df73 : mov dword ptr [rdi + 4], edx ; mov rax, rdi ; ret
0x00000000000a5359 : mov dword ptr [rdi + 4], edx ; ret
0x00000000000a91f9 : mov dword ptr [rdi + 4], edx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000f56c0 : mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x000000000009e022 : mov dword ptr [rdi + 4], r8d ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000009df82 : mov dword ptr [rdi + 4], r8d ; mov rax, rdi ; ret
0x00000000000a6a0b : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a784b : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000015ac68 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a53cb : mov dword ptr [rdi + 5], edx ; ret
0x00000000000a92bb : mov dword ptr [rdi + 5], edx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a6a2b : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a786b : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000015abf8 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a53db : mov dword ptr [rdi + 6], edx ; ret
0x00000000000a92db : mov dword ptr [rdi + 6], edx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a69c9 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a7809 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a6a4b : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a788b : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000015ab88 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a53a9 : mov dword ptr [rdi + 7], edx ; ret
0x00000000000a9279 : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a92fb : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000fe978 : mov dword ptr [rdi + 8], 0 ; ret
0x00000000000ac005 : mov dword ptr [rdi + 8], eax ; je 0xabfc0 ; mov rax, rbx ; pop rbx ; ret
0x000000000007b067 : mov dword ptr [rdi + 8], eax ; ret
0x0000000000048a84 : mov dword ptr [rdi + 8], ecx ; ret
0x00000000000a77eb : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a69e9 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a7829 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a69ab : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000482b4 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x000000000003ac84 : mov dword ptr [rdi + 8], edx ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000077e8f : mov dword ptr [rdi + 8], edx ; movzx eax, byte ptr [rax] ; ret
0x000000000003ac75 : mov dword ptr [rdi + 8], edx ; ret
0x00000000000a925b : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a9299 : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000fbaa2 : mov dword ptr [rdi + 8], esi ; ret
0x0000000000036462 : mov dword ptr [rdi + rax*8], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000123898 : mov dword ptr [rdi + rdx + 0x10], edx ; ret
0x0000000000123893 : mov dword ptr [rdi + rdx + 8], ecx ; mov qword ptr [rdi + rdx + 0x10], r10 ; ret
0x000000000014d3a3 : mov dword ptr [rdi + rdx - 2], ecx ; ret
0x000000000008e8e5 : mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000008e8ee : mov dword ptr [rdi + rdx - 8], ecx ; ret
0x00000000001520e5 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000152123 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000489ef : mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000015246c : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015a638 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015264c : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015a5b8 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015283c : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015a538 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000152a0d : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015a4a9 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000152c0d : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015a419 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000152e0d : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015a389 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000000a62f0 : mov dword ptr [rdi - 1], edx ; ret
0x00000000001527ed : mov dword ptr [rdi - 2], ecx ; ret
0x0000000000152605 : mov dword ptr [rdi - 2], edx ; ret
0x00000000001527e9 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x000000000009decf : mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x0000000000152bc9 : mov dword ptr [rdi - 4], ecx ; ret
0x000000000015229f : mov dword ptr [rdi - 4], edx ; ret
0x000000000009df2b : mov dword ptr [rdi - 5], eax ; mov rax, rdi ; ret
0x0000000000152bc6 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000009deb5 : mov dword ptr [rdi - 6], eax ; mov rax, rdi ; ret
0x0000000000152dc6 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000009df49 : mov dword ptr [rdi - 7], eax ; mov rax, rdi ; ret
0x0000000000152fc6 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000004897a : mov dword ptr [rdi - 8], ecx ; ret
0x0000000000152127 : mov dword ptr [rdi - 8], edx ; ret
0x000000000015229c : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152398 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000001522e4 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015a6b8 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000003a790 : mov dword ptr [rdi], 0 ; xor eax, eax ; pop rbx ; ret
0x00000000000bf95c : mov dword ptr [rdi], eax ; jmp 0xbf4ef
0x00000000000fe965 : mov dword ptr [rdi], eax ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000004a5cb : mov dword ptr [rdi], eax ; mov rax, rdi ; ret
0x0000000000048974 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000048a7e : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x000000000003654b : mov dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000000000054d36 : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009def2 : mov dword ptr [rdi], ecx ; add rdi, 2 ; mov rax, rdi ; ret
0x000000000009e050 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a6945 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a6997 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a6924 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a5324 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000a7747 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a5ff7 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; ret
0x000000000009dfd0 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x00000000000a7775 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a6015 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a77c7 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000a6057 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a6975 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a77a5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a5365 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x000000000009df80 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 4], r8d ; mov rax, rdi ; ret
0x00000000000a69c7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a7807 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a53a7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a69e7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a7827 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a53b7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000008e8e3 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x00000000000a9bc7 : mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x00000000000a53c8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a53d8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a53e8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x000000000008e8eb : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000009dfc0 : mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x000000000009df70 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
0x00000000000a5356 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a5398 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000a9bd3 : mov dword ptr [rdi], ecx ; mov word ptr [rsi - 2], cx ; ret
0x0000000000094067 : mov dword ptr [rdi], ecx ; pop rbx ; ret
0x000000000001f9c3 : mov dword ptr [rdi], ecx ; ret
0x00000000000a6914 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a7734 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a6932 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a7762 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a6984 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a77b4 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a6310 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a6351 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a6371 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a6381 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000a6391 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a63a1 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a6320 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a6361 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000034dc6 : mov dword ptr [rdi], edx ; ret
0x00000000000a91a4 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000a91d2 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000a9224 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000350b9 : mov dword ptr [rdi], esi ; fld xword ptr [rsp - 0x18] ; ret
0x000000000009e031 : mov dword ptr [rdi], esi ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000009dfb1 : mov dword ptr [rdi], esi ; mov byte ptr [rdi + 2], 0 ; mov rax, rdi ; ret
0x000000000009f16f : mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000014d38b : mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000004a03d : mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000009f15e : mov dword ptr [rdi], esi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000014d36e : mov dword ptr [rdi], esi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000009dfa1 : mov dword ptr [rdi], esi ; mov rax, rdi ; ret
0x000000000009f183 : mov dword ptr [rdi], esi ; mov word ptr [r9 - 2], cx ; ret
0x000000000014d3a0 : mov dword ptr [rdi], esi ; mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000004a063 : mov dword ptr [rdi], esi ; ret
0x00000000000f56a1 : mov dword ptr [rdi], esi ; xor eax, eax ; ret
0x00000000001351ec : mov dword ptr [rdx + 0x10], eax ; mov eax, 1 ; ret
0x000000000006dc67 : mov dword ptr [rdx + 0x130], ecx ; ret
0x00000000000783e5 : mov dword ptr [rdx + 0x130], edi ; pop rbx ; ret
0x000000000009432f : mov dword ptr [rdx + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007100e : mov dword ptr [rdx + 0x20], eax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x00000000000711b4 : mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x000000000012e000 : mov dword ptr [rdx + 0x20], esi ; ret
0x000000000012dfdc : mov dword ptr [rdx + 0x58], edi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000012dfe0 : mov dword ptr [rdx + 0x68], ecx ; ret
0x0000000000131bc0 : mov dword ptr [rdx + 0x6c], eax ; mov eax, 1 ; ret
0x00000000001350cc : mov dword ptr [rdx + 0xc], eax ; mov eax, 1 ; ret
0x00000000000bac10 : mov dword ptr [rdx + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000016a8a7 : mov dword ptr [rdx + 3], eax ; lea rax, qword ptr [rdx + 6] ; ret
0x00000000000a20ec : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x000000000016a889 : mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x00000000000a20ce : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000016a93b : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000016a8b9 : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 8] ; ret
0x0000000000166569 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x000000000016a95b : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000016a8d9 : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 9] ; ret
0x0000000000166579 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x000000000016a8f9 : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xa] ; ret
0x000000000016a97b : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x00000000000a2170 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x000000000006b3c4 : mov dword ptr [rdx + 8], eax ; add dword ptr [rdx + 4], 1 ; ret
0x000000000016a919 : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xb] ; ret
0x000000000016a80b : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x00000000000a2152 : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000131b41 : mov dword ptr [rdx + 8], edi ; ret
0x000000000006e4b4 : mov dword ptr [rdx], 5 ; pop rbx ; ret
0x00000000000fbe5f : mov dword ptr [rdx], eax ; add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x000000000016a834 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 1] ; ret
0x000000000016a862 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x000000000016a7b4 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 7] ; ret
0x0000000000078891 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000003544a : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000004a03f : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000000c954d : mov dword ptr [rdx], eax ; mov eax, esi ; add rsp, 0x48 ; ret
0x00000000000790f0 : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x00000000000a2069 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00000000000c8d32 : mov dword ptr [rdx], eax ; mov rax, rsi ; add rsp, 8 ; ret
0x000000000002e19d : mov dword ptr [rdx], eax ; ret
0x000000000007621f : mov dword ptr [rdx], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000aa3e5 : mov dword ptr [rdx], ecx ; jne 0xaa3dd ; ret
0x0000000000071ec6 : mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x00000000000e9bd7 : mov dword ptr [rdx], ecx ; pop rdx ; pop rcx ; pop rbx ; ret
0x000000000009e2f5 : mov dword ptr [rdx], ecx ; ret
0x00000000000e703b : mov dword ptr [rdx], edi ; ret
0x00000000000c93a3 : mov dword ptr [rdx], esi ; add rsp, 0x18 ; ret
0x00000000000c946d : mov dword ptr [rdx], esi ; add rsp, 8 ; ret
0x0000000000131b3e : mov dword ptr [rdx], esi ; mov qword ptr [rdx + 8], rdi ; ret
0x0000000000094557 : mov dword ptr [rdx], esp ; mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c954c : mov dword ptr [rdx], r8d ; mov eax, esi ; add rsp, 0x48 ; ret
0x0000000000173b4f : mov dword ptr [rip + 0x251beb], ebx ; jne 0x173b41 ; pop rbx ; ret
0x0000000000115228 : mov dword ptr [rip + 0x2b1f52], eax ; pop rbp ; ret
0x0000000000108ca0 : mov dword ptr [rip + 0x2ba59a], ebx ; pop rbx ; ret
0x0000000000100bea : mov dword ptr [rip + 0x2c2620], edi ; ret
0x00000000000fdc35 : mov dword ptr [rip + 0x2c6b65], eax ; mov rdx, rax ; jmp 0xfdbd7
0x00000000000368ab : mov dword ptr [rip + 0x38c7db], eax ; mov eax, edx ; ret
0x000000000003689c : mov dword ptr [rip + 0x38c7e6], edx ; ret
0x000000000001f928 : mov dword ptr [rip + 0x3a8a3a], edx ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000000e7de4 : mov dword ptr [rsi + 0x10], eax ; ret
0x000000000003b286 : mov dword ptr [rsi + 0x10], eax ; xor eax, eax ; ret
0x000000000003abf0 : mov dword ptr [rsi + 0x10], ecx ; mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x000000000003abf4 : mov dword ptr [rsi + 0x28], eax ; xor eax, eax ; ret
0x0000000000077e66 : mov dword ptr [rsi + 0x28], ecx ; mov byte ptr [rdx], dil ; ret
0x00000000000fb917 : mov dword ptr [rsi + 0x48], eax ; ret
0x00000000000face6 : mov dword ptr [rsi + 0x66], edx ; xor eax, eax ; ret
0x00000000000f55df : mov dword ptr [rsi + 0x78], eax ; xor eax, eax ; ret
0x000000000003b2d0 : mov dword ptr [rsi + 0xc], eax ; xor eax, eax ; ret
0x000000000003b317 : mov dword ptr [rsi + 0xe], eax ; xor eax, eax ; ret
0x00000000000ab668 : mov dword ptr [rsi + 4], 0 ; ret
0x00000000000e7dc7 : mov dword ptr [rsi + 8], 0 ; ret
0x000000000012d0e1 : mov dword ptr [rsi + 8], eax ; ret
0x00000000000e7de0 : mov dword ptr [rsi + 8], ecx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x0000000000047ff4 : mov dword ptr [rsi + rax*8], edx ; xor eax, eax ; pop rbx ; ret
0x00000000000ba821 : mov dword ptr [rsi + rcx], edx ; jne 0xba81e ; ret
0x00000000000a9bd6 : mov dword ptr [rsi - 2], ecx ; ret
0x00000000000a9bc9 : mov dword ptr [rsi - 4], ecx ; ret
0x000000000012d0ff : mov dword ptr [rsi], 0 ; ret
0x000000000009deb3 : mov dword ptr [rsi], 0x48fa4789 ; mov eax, edi ; ret
0x000000000012d190 : mov dword ptr [rsi], 0xa ; ret
0x000000000012d180 : mov dword ptr [rsi], 0xb ; ret
0x000000000012d1b0 : mov dword ptr [rsi], 0xc ; ret
0x000000000012d1a0 : mov dword ptr [rsi], 8 ; ret
0x00000000000bea78 : mov dword ptr [rsi], eax ; mov rdi, rbx ; call 0x8acf7
0x000000000007777b : mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000065a78 : mov dword ptr [rsi], ebp ; jmp 0x64ba9
0x0000000000122dcf : mov dword ptr [rsi], ecx ; xor eax, eax ; ret
0x0000000000122863 : mov dword ptr [rsi], edi ; ret
0x0000000000118aa1 : mov dword ptr [rsi], edi ; xor eax, eax ; ret
0x000000000003aca6 : mov dword ptr [rsi], edx ; ret
0x00000000000812e8 : mov dword ptr [rsp + 0x10], eax ; call rdi
0x0000000000034f25 : mov dword ptr [rsp + 0x10], eax ; fld xword ptr [rsp + 8] ; ret
0x00000000000811d1 : mov dword ptr [rsp + 0x10], eax ; xor edi, edi ; call qword ptr [rax]
0x000000000007ed87 : mov dword ptr [rsp + 0x14], eax ; pop r12 ; ret
0x00000000000812e3 : mov dword ptr [rsp + 0x18], eax ; mov qword ptr [rsp + 0x10], r8 ; call rdi
0x000000000012c007 : mov dword ptr [rsp + 0x18], edx ; lea r9, qword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x0000000000080eaf : mov dword ptr [rsp + 0x20], edx ; call qword ptr [rax]
0x000000000008122b : mov dword ptr [rsp + 0x20], edx ; call rax
0x0000000000081226 : mov dword ptr [rsp + 0x28], eax ; mov qword ptr [rsp + 0x20], r10 ; call rax
0x000000000012b7bd : mov dword ptr [rsp + 0x28], ecx ; call 0x137a66
0x00000000000335c9 : mov dword ptr [rsp + 0x28], ecx ; call 0x1f8a6
0x00000000000e11d8 : mov dword ptr [rsp + 0x40], edi ; add rax, rdx ; jmp rax
0x00000000000bb7d8 : mov dword ptr [rsp + 0xb8], esi ; call r12
0x0000000000133622 : mov dword ptr [rsp + 0xc], edx ; call 0x1f8a6
0x00000000000887f0 : mov dword ptr [rsp + 8], eax ; call qword ptr [rdx]
0x0000000000102486 : mov dword ptr [rsp + 8], eax ; call rbx
0x000000000013acdd : mov dword ptr [rsp + 8], eax ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000013bb1c : mov dword ptr [rsp + 8], eax ; xor eax, eax ; call rdx
0x0000000000034ff3 : mov dword ptr [rsp - 0x10], eax ; fld xword ptr [rsp - 0x18] ; ret
0x000000000004a1d6 : mov dword ptr [rsp - 0x14], eax ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000035195 : mov dword ptr [rsp - 2], edi ; fldcw word ptr [rsp - 2] ; ret
0x00000000000be7b4 : mov dword ptr [rsp], 1 ; jmp 0xbe787
0x0000000000088b60 : mov dword ptr [rsp], eax ; call qword ptr [rdx]
0x0000000000129d23 : mov dword ptr [rsp], ecx ; call r12
0x00000000000cc7a3 : mov dword ptr fs:[0x2d0], eax ; ret
0x00000000000ecda3 : mov dword ptr fs:[rax], 0 ; call 0x89089
0x00000000000fca47 : mov dword ptr fs:[rax], 0x16 ; mov eax, edi ; ret
0x0000000000101d27 : mov dword ptr fs:[rax], 0x16 ; ret
0x00000000000bad0f : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x0000000000082457 : mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x00000000000c76a7 : mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x0000000000021227 : mov dword ptr fs:[rax], 9 ; mov eax, edi ; ret
0x000000000005fb37 : mov dword ptr fs:[rax], edi ; jmp 0x5fb02
0x00000000000627b6 : mov dword ptr fs:[rax], edi ; jmp 0x62781
0x00000000000fe940 : mov dword ptr fs:[rax], edi ; mov eax, 0xffffffff ; ret
0x00000000000e9ed9 : mov dword ptr fs:[rax], edx ; mov eax, 0xffffffff ; ret
0x00000000000e9e82 : mov dword ptr fs:[rax], r8d ; mov eax, 0xffffffff ; ret
0x0000000000121680 : mov dword ptr fs:[rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006040b : mov dword ptr fs:[rcx], eax ; jmp 0x603d6
0x0000000000035769 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000006e4b3 : mov dword ptr fs:[rdx], 5 ; pop rbx ; ret
0x0000000000078890 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000035449 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000c93a2 : mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x00000000000c946c : mov dword ptr fs:[rdx], esi ; add rsp, 8 ; ret
0x000000000014d38a : mov dword ptr ss:[rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000152600 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000000a5310 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000fafc6 : mov eax, 0 ; cmova eax, edx ; ret
0x00000000001081f6 : mov eax, 0 ; cmovae rax, rsi ; ret
0x00000000000d617c : mov eax, 0 ; cmove eax, esi ; ret
0x0000000000096a55 : mov eax, 0 ; cmovne rax, rdi ; ret
0x000000000012b784 : mov eax, 0x10 ; pop rbx ; pop rbp ; ret
0x00000000000aa292 : mov eax, 0x10 ; pop rbx ; ret
0x0000000000123130 : mov eax, 0x100 ; ret
0x000000000012312a : mov eax, 0x101 ; ret
0x0000000000123136 : mov eax, 0x102 ; ret
0x0000000000123122 : mov eax, 0x104 ; ret
0x00000000000fc46d : mov eax, 0x14 ; sub eax, edx ; ret
0x00000000000f6023 : mov eax, 0x16 ; jbe 0xf6038 ; ret
0x0000000000086bd4 : mov eax, 0x16 ; je 0x86be7 ; ret
0x00000000000f5695 : mov eax, 0x16 ; je 0xf56a8 ; ret
0x0000000000086d70 : mov eax, 0x16 ; ret
0x00000000000f6058 : mov eax, 0x1c ; syscall ; neg eax ; ret
0x000000000017406a : mov eax, 0x1f0fffea ; add bl, dh ; ret
0x0000000000104072 : mov eax, 0x1f0ffff1 ; add bl, dh ; ret
0x00000000000cd05a : mov eax, 0x20 ; cmovne rax, rdx ; ret
0x00000000000aa28b : mov eax, 0x20 ; pop rbx ; ret
0x00000000000cd03f : mov eax, 0x20 ; ret
0x000000000002def7 : mov eax, 0x200 ; ret
0x0000000000126287 : mov eax, 0x200000 ; jmp 0x126256
0x00000000000aa284 : mov eax, 0x30 ; pop rbx ; ret
0x00000000000aa27d : mov eax, 0x40 ; pop rbx ; ret
0x00000000000cd085 : mov eax, 0x40 ; ret
0x00000000000bb7db : mov eax, 0x41000000 ; call rsp
0x0000000000182a3b : mov eax, 0x45155e93 ; ret 0x591c
0x000000000008edca : mov eax, 0x48fffffb ; mov eax, edi ; ret
0x00000000000f6620 : mov eax, 0x5f ; syscall ; ret
0x00000000000aa276 : mov eax, 0x60 ; pop rbx ; ret
0x00000000000cc7c0 : mov eax, 0x66 ; syscall ; ret
0x00000000000cc7e0 : mov eax, 0x68 ; syscall ; ret
0x00000000000cc7d0 : mov eax, 0x6b ; syscall ; ret
0x00000000000cc7f0 : mov eax, 0x6c ; syscall ; ret
0x00000000000cc7b0 : mov eax, 0x6e ; syscall ; ret
0x00000000000cca00 : mov eax, 0x6f ; syscall ; ret
0x00000000000ccf59 : mov eax, 0x7d00 ; ret
0x00000000000ccf88 : mov eax, 0x7e ; ret
0x00000000000ccf2a : mov eax, 0x7f ; cmovne rax, rdx ; ret
0x00000000000ccedb : mov eax, 0x7f ; ret
0x00000000000aa26f : mov eax, 0x80 ; pop rbx ; ret
0x000000000005cd44 : mov eax, 0x85fffff9 ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000c8f24 : mov eax, 0x8948002f ; ret 0x8d48
0x0000000000118fd9 : mov eax, 0x8949002a ; ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x00000000000f53b4 : mov eax, 0x89fffffe ; ret 0xcb8
0x0000000000104056 : mov eax, 0x8b48fff1 ; jge 0x104064 ; call rbx
0x0000000000103fce : mov eax, 0x8b49fff1 ; call rbx
0x0000000000104048 : mov eax, 0x8b49fff1 ; cmp al, 0x24 ; call rbx
0x000000000010403a : mov eax, 0x8b49fff1 ; jge 0x104048 ; call rbx
0x00000000000748f1 : mov eax, 0x8c48348 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000018738c : mov eax, 0x8fff0c0 ; ret
0x0000000000003184 : mov eax, 0xa1a3e95a ; ret 0xba88
0x0000000000196e25 : mov eax, 0xa8540000 ; in eax, dx ; jmp rsp
0x0000000000131c4f : mov eax, 0xb8000000 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000194879 : mov eax, 0xb851fffd ; std ; call qword ptr [rcx]
0x0000000000194909 : mov eax, 0xb851fffd ; std ; call rsi
0x0000000000194979 : mov eax, 0xb851fffd ; std ; jmp qword ptr [rax]
0x0000000000194889 : mov eax, 0xb851fffd ; std ; jmp rsi
0x00000000000db660 : mov eax, 0xc ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000db62a : mov eax, 0xc ; ret
0x000000000018be2c : mov eax, 0xc8fffb01 ; add ebx, edi ; call rax
0x00000000000bb940 : mov eax, 0xc9 ; syscall ; ret
0x0000000000118a90 : mov eax, 0xca ; add rsp, 0x28 ; ret
0x0000000000118a29 : mov eax, 0xca ; pop rbp ; pop r12 ; ret
0x0000000000114802 : mov eax, 0xca ; syscall ; pop rdx ; pop rsi ; ret
0x0000000000137bd6 : mov eax, 0xe0 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000106f30 : mov eax, 0xe4 ; syscall ; ret
0x00000000000695bf : mov eax, 0xe9fffffb ; ret 0xffff
0x00000000000ccf7f : mov eax, 0xfa ; ret
0x00000000000ccfa0 : mov eax, 0xfc17 ; ret
0x00000000000ccf0c : mov eax, 0xfde8 ; jne 0xccee3 ; ret
0x00000000001a6bad : mov eax, 0xff800000 ; out dx, al ; jmp rsi
0x00000000000ccf90 : mov eax, 0xfffa ; ret
0x00000000000cb57c : mov eax, 0xfffffff2 ; ret
0x0000000000085bb2 : mov eax, 0xfffffffe ; pop rbx ; ret
0x00000000000f625a : mov eax, 0xffffffff ; add rsp, 0x18 ; ret
0x000000000008aa22 : mov eax, 0xffffffff ; cmovae eax, ecx ; ret
0x0000000000072f61 : mov eax, 0xffffffff ; ja 0x72f78 ; ret
0x0000000000070ac1 : mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000039cde : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007038c : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000033efe : mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000353d7 : mov eax, 0xffffffff ; ret
0x00000000000fd5df : mov eax, 1 ; add rsp, 8 ; ret
0x0000000000172160 : mov eax, 1 ; jg 0x172179 ; neg eax ; ret
0x00000000000ab230 : mov eax, 1 ; jg 0xab242 ; neg eax ; ret
0x00000000001700b6 : mov eax, 1 ; jl 0x1700c9 ; neg eax ; ret
0x00000000000cd172 : mov eax, 1 ; js 0xcd188 ; ret
0x000000000004a05d : mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x00000000000d8d46 : mov eax, 1 ; mov rdx, r8 ; jmp 0xd8d61
0x0000000000070aad : mov eax, 1 ; pop rbp ; pop r12 ; ret
0x000000000007b992 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010e1a0 : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000012a860 : mov eax, 1 ; pop rbx ; ret
0x0000000000048023 : mov eax, 1 ; ret
0x00000000000ab551 : mov eax, 2 ; ret
0x0000000000114f46 : mov eax, 3 ; cmovne eax, edx ; ret
0x00000000000ab561 : mov eax, 3 ; ret
0x00000000000fd262 : mov eax, 3 ; syscall ; mov eax, edx ; ret
0x00000000001219a3 : mov eax, 3 ; syscall ; ret
0x00000000000ab571 : mov eax, 4 ; ret
0x00000000000ef40c : mov eax, 5 ; pop rbp ; pop r12 ; ret
0x0000000000105b1f : mov eax, 5 ; pop rbx ; pop rbp ; ret
0x00000000000ab581 : mov eax, 5 ; ret
0x00000000000ab591 : mov eax, 6 ; ret
0x00000000001126ec : mov eax, 7 ; pop rbx ; pop rbp ; ret
0x00000000000ab5a1 : mov eax, 7 ; ret
0x00000000000aa268 : mov eax, 8 ; pop rbx ; ret
0x00000000000f54b7 : mov eax, 9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000114098 : mov eax, dword ptr [r14 + 0x18] ; mov dword ptr [rbp - 0x80], eax ; call r9
0x0000000000033e7a : mov eax, dword ptr [r9 + rdx*4 + 8] ; add rax, qword ptr [rdi + 0x20] ; ret
0x00000000001059b9 : mov eax, dword ptr [rax + 0x108] ; ret
0x0000000000142d4f : mov eax, dword ptr [rax + 0x128] ; jmp rax
0x0000000000109360 : mov eax, dword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x0000000000071efc : mov eax, dword ptr [rax + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000109110 : mov eax, dword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x000000000007b16c : mov eax, dword ptr [rax + 0x18] ; jmp rax
0x0000000000127f87 : mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x127f97 ; ret
0x00000000000fcb18 : mov eax, dword ptr [rax + 0x18] ; test rax, rax ; je 0xfcb2b ; ret
0x0000000000072162 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000071faa : mov eax, dword ptr [rax + 0x28] ; jmp rax
0x0000000000114119 : mov eax, dword ptr [rax + 0x30] ; ret
0x0000000000109a87 : mov eax, dword ptr [rax + 0x38] ; ret
0x000000000010570c : mov eax, dword ptr [rax + 0x38] ; test eax, eax ; cmove eax, edx ; ret
0x000000000007b638 : mov eax, dword ptr [rax + 0x40] ; jmp rax
0x00000000001347c4 : mov eax, dword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000006f803 : mov eax, dword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000006fab1 : mov eax, dword ptr [rax + 0x48] ; jmp rax
0x0000000000074eb4 : mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000135064 : mov eax, dword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000003a716 : mov eax, dword ptr [rax + 0x58] ; ret
0x000000000002cb6e : mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000013a2e5 : mov eax, dword ptr [rax + 8] ; jmp rax
0x00000000001059a9 : mov eax, dword ptr [rax + 8] ; ret
0x0000000000088b9b : mov eax, dword ptr [rax + 8] ; test rax, rax ; jne 0x88b99 ; ret
0x000000000002def5 : mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002e0b7 : mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002da1f : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000002da68 : mov eax, dword ptr [rax + rdx] ; ret
0x000000000010a414 : mov eax, dword ptr [rax + rdx] ; shr eax, cl ; and eax, 1 ; ret
0x000000000002b01f : mov eax, dword ptr [rax + rsi*8] ; test rax, rax ; je 0x2b031 ; call rax
0x000000000013a2da : mov eax, dword ptr [rax] ; jmp rax
0x000000000002cb6c : mov eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000002decc : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000003a713 : mov eax, dword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000128209 : mov eax, dword ptr [rax] ; ret
0x000000000007e1af : mov eax, dword ptr [rax] ; test rax, rax ; je 0x7e1bf ; call rax
0x0000000000084b36 : mov eax, dword ptr [rax] ; test rax, rax ; je 0x84b46 ; call rax
0x00000000000695bd : mov eax, dword ptr [rbp - 0x448] ; jmp 0x65815
0x000000000010291c : mov eax, dword ptr [rbp - 0x48] ; call rax
0x00000000000222c1 : mov eax, dword ptr [rbp - 0x58] ; call rax
0x00000000000773d1 : mov eax, dword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x0000000000113510 : mov eax, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], eax ; call rcx
0x000000000001fc03 : mov eax, dword ptr [rbx + 4] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012df81 : mov eax, dword ptr [rbx + 8] ; mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000d1741 : mov eax, dword ptr [rbx] ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000137a6a : mov eax, dword ptr [rbx] ; test rax, rax ; je 0x137a80 ; pop rbx ; ret
0x00000000000a20e9 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000166566 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000166576 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x00000000000a216d : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000000a218d : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000014651a : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x0000000000147df2 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000033e7b : mov eax, dword ptr [rcx + rdx*4 + 8] ; add rax, qword ptr [rdi + 0x20] ; ret
0x000000000016a860 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x0000000000131bd0 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000000a2095 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000016a7b1 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x0000000000166481 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000016a831 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x00000000000a2066 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000072daf : mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x000000000007c790 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000007c7b8 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000001148d0 : mov eax, dword ptr [rdi + 0x10] ; test eax, eax ; jne 0x1148e8 ; ret
0x00000000000cbb8d : mov eax, dword ptr [rdi + 0x10] ; test rax, rax ; je 0xcbba2 ; call rax
0x000000000013ba13 : mov eax, dword ptr [rdi + 0x18] ; ret
0x000000000013b5b1 : mov eax, dword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000012d0de : mov eax, dword ptr [rdi + 0x20] ; mov dword ptr [rsi + 8], eax ; ret
0x00000000000c7e21 : mov eax, dword ptr [rdi + 0x20] ; ret
0x00000000001737a8 : mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x1737bf ; call rax
0x00000000000ab1b0 : mov eax, dword ptr [rdi + 0x24] ; cmp eax, dword ptr [rsi + 0x24] ; jne 0xab238 ; ret
0x00000000000ab1c5 : mov eax, dword ptr [rdi + 0x28] ; cmp eax, dword ptr [rsi + 0x28] ; jne 0xab238 ; ret
0x000000000012d137 : mov eax, dword ptr [rdi + 0x28] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000013b990 : mov eax, dword ptr [rdi + 0x28] ; ret
0x0000000000077411 : mov eax, dword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000ab1d0 : mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0xab238 ; ret
0x00000000000ab1eb : mov eax, dword ptr [rdi + 0x30] ; cmp eax, dword ptr [rsi + 0x30] ; jne 0xab238 ; ret
0x00000000000ab200 : mov eax, dword ptr [rdi + 0x34] ; cmp eax, dword ptr [rsi + 0x34] ; jne 0xab238 ; ret
0x00000000000ab215 : mov eax, dword ptr [rdi + 0x38] ; cmp eax, dword ptr [rsi + 0x38] ; jne 0xab238 ; ret
0x00000000000ab220 : mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0xab238 ; ret
0x000000000012d16f : mov eax, dword ptr [rdi + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000077301 : mov eax, dword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000074eb1 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00000000000d6780 : mov eax, dword ptr [rdi + 0x4c] ; ret
0x000000000007ca61 : mov eax, dword ptr [rdi + 0x68] ; ret
0x0000000000075a18 : mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x75a30 ; ret
0x00000000000f56b0 : mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000fba50 : mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x000000000013aa69 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000012deb1 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013b379 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000013b389 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000013a2e1 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x000000000013a2d6 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x0000000000138209 : mov eax, dword ptr [rdi + 8] ; mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x000000000013a3c1 : mov eax, dword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000012bcb7 : mov eax, dword ptr [rdi + 8] ; push 0 ; push 0x19 ; call qword ptr [rax]
0x00000000000abbed : mov eax, dword ptr [rdi + rax*4] ; test r8d, r8d ; jne 0xabbc9 ; ret
0x0000000000077370 : mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x0000000000077340 : mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x0000000000135150 : mov eax, dword ptr [rdi] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000007c77f : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x00000000001148e5 : mov eax, dword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x00000000000c7f30 : mov eax, dword ptr [rdi] ; ret
0x0000000000077e30 : mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x0000000000077e40 : mov eax, dword ptr [rdi] ; shr eax, 5 ; and eax, 1 ; ret
0x0000000000132854 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x132866 ; ret
0x0000000000132853 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x132867 ; ret
0x00000000001389d4 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1389e6 ; ret
0x00000000001389d3 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1389e7 ; ret
0x00000000000abca8 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0xabca8 ; xor eax, eax ; ret
0x000000000002de83 : mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x00000000000aa347 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0xaa339 ; ret
0x0000000000091246 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000012d5c8 : mov eax, dword ptr [rdx + rax*8] ; jmp rax
0x000000000002cb2d : mov eax, dword ptr [rdx + rdi*8 + 0x40] ; ret
0x0000000000074570 : mov eax, dword ptr [rdx] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e7038 : mov eax, dword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x00000000000720a7 : mov eax, dword ptr [rdx] ; pop rbx ; ret
0x000000000007050c : mov eax, dword ptr [rdx] ; ret
0x000000000007c771 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x7c770 ; ret
0x0000000000140754 : mov eax, dword ptr [rip + 0x283cb6] ; call qword ptr [rax]
0x0000000000140141 : mov eax, dword ptr [rip + 0x2842c9] ; call qword ptr [rax]
0x0000000000120711 : mov eax, dword ptr [rip + 0x2a4161] ; ret
0x0000000000109a81 : mov eax, dword ptr [rip + 0x2b93e9] ; mov eax, dword ptr [rax + 0x38] ; ret
0x000000000008352f : mov eax, dword ptr [rip + 0x33f9ab] ; mov qword ptr [rax], rdi ; ret
0x0000000000081305 : mov eax, dword ptr [rip + 0x341ac5] ; xor edi, edi ; call qword ptr [rax]
0x00000000000810e0 : mov eax, dword ptr [rip + 0x341cea] ; mov rdi, r14 ; call qword ptr [rax]
0x000000000007ca41 : mov eax, dword ptr [rip + 0x347ad9] ; ret
0x0000000000036870 : mov eax, dword ptr [rip + 0x38c812] ; ret
0x0000000000036860 : mov eax, dword ptr [rip + 0x38c826] ; ret
0x000000000002d9cc : mov eax, dword ptr [rip + 0x39541e] ; mov qword ptr [rax], rdx ; ret
0x0000000000029c91 : mov eax, dword ptr [rip + 0x39ac59] ; ret
0x0000000000021a51 : mov eax, dword ptr [rip + 0x3a6919] ; ret
0x0000000000021a41 : mov eax, dword ptr [rip + 0x3a6939] ; ret
0x0000000000114099 : mov eax, dword ptr [rsi + 0x18] ; mov dword ptr [rbp - 0x80], eax ; call r9
0x000000000002e0b1 : mov eax, dword ptr [rsi + 0x70] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002e0c1 : mov eax, dword ptr [rsi + 0x78] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002cb49 : mov eax, dword ptr [rsi + rax*8 + 0x80] ; ret
0x000000000010d83b : mov eax, dword ptr [rsi] ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000071fe7 : mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00000000000c80de : mov eax, dword ptr [rsp + 0x10] ; call rax
0x000000000002082a : mov eax, dword ptr [rsp + 0x18] ; call rax
0x00000000000ef787 : mov eax, dword ptr [rsp + 0x18] ; mov rdx, rax ; jmp 0xef7c9
0x000000000002436a : mov eax, dword ptr [rsp + 0x28] ; call rax
0x0000000000024d05 : mov eax, dword ptr [rsp + 0x30] ; call rax
0x0000000000038fd7 : mov eax, dword ptr [rsp + 0x30] ; lea r15, qword ptr [rbx + r14] ; call rax
0x00000000001122d5 : mov eax, dword ptr [rsp + 0x38] ; jmp 0x1122a3
0x0000000000035829 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000f6238 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x0000000000142ffe : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x38 ; ret
0x00000000000b95d4 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000003b029 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000cb95a : mov eax, dword ptr [rsp + 8] ; test rax, rax ; je 0xcb96e ; call rax
0x00000000000fd590 : mov eax, dword ptr [rsp - 0x50] ; ret
0x00000000000cb840 : mov eax, dword ptr [rsp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000109ae3 : mov eax, dword ptr [rsp] ; add rsp, 0x38 ; ret
0x0000000000109b44 : mov eax, dword ptr [rsp] ; add rsp, 0x40 ; ret
0x00000000000827dd : mov eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000123604 : mov eax, eax ; mov byte ptr [rdi + rdx], 0 ; ret
0x00000000000210b1 : mov eax, eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000fbc1d : mov eax, eax ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000052c40 : mov eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000fbcd8 : mov eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004a7c7 : mov eax, eax ; pop rbx ; ret
0x000000000005047a : mov eax, eax ; ret
0x000000000007905a : mov eax, ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000129aba : mov eax, ebp ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x000000000006e71b : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006ef39 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006e1f5 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006d313 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000500a2 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000483f3 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000000799cd : mov eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000094447 : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c86f4 : mov eax, ebx ; call rax
0x0000000000095719 : mov eax, ebx ; jmp 0x95573
0x000000000010556f : mov eax, ebx ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x000000000002a836 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006df2a : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000326ab : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000003aa9f : mov eax, ebx ; pop rbx ; ret
0x000000000010173a : mov eax, ebx ; pop rdx ; pop rbx ; ret
0x00000000000482b7 : mov eax, ecx ; adc eax, eax ; ret
0x000000000003a67c : mov eax, ecx ; or rax, rdx ; ret
0x000000000008702d : mov eax, ecx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000005b724 : mov eax, ecx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000033e97 : mov eax, ecx ; ret
0x0000000000045a12 : mov eax, ecx ; shl eax, 0x1e ; or eax, edx ; ret
0x0000000000115bb1 : mov eax, edi ; add rsp, 8 ; ret
0x000000000002df20 : mov eax, edi ; and eax, 0x7f ; ret
0x0000000000118af6 : mov eax, edi ; and eax, 0xffffff ; ret
0x0000000000118ad0 : mov eax, edi ; bswap eax ; ret
0x000000000003a691 : mov eax, edi ; cqo ; idiv rsi ; ret
0x00000000000fea07 : mov eax, edi ; mov byte ptr [r8 - 1], 0 ; ret
0x000000000009dfe7 : mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000002121b : mov eax, edi ; neg eax ; ret
0x000000000009eae5 : mov eax, edi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009692a : mov eax, edi ; pop rbx ; ret
0x000000000002122e : mov eax, edi ; ret
0x0000000000118ae0 : mov eax, edi ; ror ax, 8 ; ret
0x000000000003a622 : mov eax, edi ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x00000000001187da : mov eax, edi ; sar rax, 6 ; ret
0x0000000000118b76 : mov eax, edi ; shr eax, 0x18 ; ret
0x00000000000bae58 : mov eax, edx ; add rsp, 0x18 ; ret
0x00000000000fd497 : mov eax, edx ; add rsp, 0x48 ; ret
0x000000000008360d : mov eax, edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bf3ec : mov eax, edx ; add rsp, 8 ; ret
0x000000000011029c : mov eax, edx ; cmove eax, ecx ; ret
0x0000000000096f36 : mov eax, edx ; cmove rax, rbx ; pop rbx ; ret
0x00000000000cc77b : mov eax, edx ; jle 0xcc78d ; ret
0x00000000000c91af : mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000479d2 : mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000054b3a : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000084127 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000045c37 : mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000049075 : mov eax, edx ; pop rbx ; ret
0x00000000000218a5 : mov eax, edx ; ret
0x0000000000034ef1 : mov eax, edx ; sar eax, 0x10 ; ret
0x00000000000d6823 : mov eax, edx ; shr eax, 3 ; and eax, 1 ; pop rbx ; ret
0x00000000000c954f : mov eax, esi ; add rsp, 0x48 ; ret
0x000000000012e071 : mov eax, esi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c8d35 : mov eax, esi ; add rsp, 8 ; ret
0x000000000004a57e : mov eax, esi ; cmovae rax, rdi ; ret
0x00000000000352d7 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000006fbc4 : mov eax, esi ; pop rbp ; pop r12 ; ret
0x00000000000c7ad3 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006f958 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003a1c4 : mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000006b5e3 : mov eax, esi ; pop rbx ; ret
0x000000000004a6b4 : mov eax, esi ; ret
0x000000000017232b : mov eax, esi ; sub rax, rdx ; vzeroupper ; ret
0x000000000008e66c : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006c42a : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007170b : mov eax, r13d ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007c36c : mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000123603 : mov eax, r8d ; mov byte ptr [rdi + rdx], 0 ; ret
0x00000000000fbc1c : mov eax, r8d ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000052c3f : mov eax, r8d ; pop rbp ; pop r12 ; ret
0x00000000000fbcd7 : mov eax, r8d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000070f2f : mov eax, r8d ; pop rbx ; ret
0x0000000000050479 : mov eax, r8d ; ret
0x000000000013fda7 : mov eax, r9d ; ret
0x00000000001a228d : mov ebp, 0x41380e0a ; ret
0x00000000000fdca9 : mov ebp, 0x441f0f66 ; add byte ptr [rax], al ; ret
0x000000000009e6c1 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000009e6d1 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x000000000009e6b1 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000013bd63 : mov ebp, 0x8b48ffff ; cmp byte ptr [rax - 0x77], cl ; ret
0x0000000000187515 : mov ebp, 0xbfc8fffd ; std ; dec dword ptr [rax] ; ret 0xfffd
0x000000000017cc44 : mov ebp, 0xc000000f ; sldt word ptr [rax] ; ret
0x000000000018157d : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x0000000000194af1 : mov ebp, 0xc210fffb ; sti ; jmp qword ptr [rax - 0x3d]
0x00000000001889c0 : mov ebp, 0xc7fff44d ; hlt ; call rcx
0x000000000009e731 : mov ebp, 0xea8348c0 ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x000000000009e711 : mov ebp, 0xea8348c0 ; and byte ptr [rax + 1], cl ; ret 0x347c
0x000000000009e6f1 : mov ebp, 0xea8348c0 ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x000000000009e7e2 : mov ebp, 0xf80148c0 ; add rax, r8 ; ret
0x000000000008ca28 : mov ebp, 0xf80148c0 ; ret
0x000000000008ccac : mov ebp, 0xf80148c6 ; ret
0x0000000000183666 : mov ebp, 0xfb67d10d ; ret
0x000000000004dbe6 : mov ebp, 0xfffffb08 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000004e176 : mov ebp, 0xfffffb10 ; or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9522
0x000000000005645f : mov ebp, 0xfffffb58 ; call rax
0x000000000004c349 : mov ebp, 0xfffffb58 ; or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9522
0x00000000000ce892 : mov ebp, 0xfffffbd0 ; call r14
0x00000000000dbb4e : mov ebp, cs ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x000000000019affc : mov ebp, dr1 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; hlt ; cli ; call rsp
0x0000000000001bf1 : mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x000000000013283c : mov ebp, eax ; call 0x12eb14
0x0000000000101f77 : mov ebp, eax ; call rax
0x0000000000065929 : mov ebp, eax ; jmp 0x65385
0x0000000000137d99 : mov ebp, eax ; mov r12d, dword ptr [rax] ; jmp 0x137dad
0x00000000001a4401 : mov ebp, ebp ; call qword ptr [rdx]
0x00000000001a4389 : mov ebp, ebp ; call qword ptr [rsi]
0x0000000000102919 : mov ebp, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000000352dd : mov ebp, ecx ; nop ; jmp rdx
0x00000000000ae1a8 : mov ebp, edi ; setne dl ; jmp 0xae1bc
0x00000000000b0ac9 : mov ebp, edi ; setne dl ; jmp 0xb0adc
0x00000000000b3280 : mov ebp, edi ; setne dl ; jmp 0xb329c
0x0000000000102d1f : mov ebp, edi ; xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x000000000007d85d : mov ebp, edx ; call qword ptr [r15]
0x00000000001a6249 : mov ebp, esi ; call qword ptr [rcx]
0x0000000000129e25 : mov ebp, esp ; call r15
0x0000000000115114 : mov ebp, esp ; pop rbp ; ret
0x0000000000002d12 : mov ebx, 0x24d3e900 ; and eax, ebp ; clc ; ret
0x000000000008cfb1 : mov ebx, 0x39fffa98 ; ret
0x000000000011eacf : mov ebx, 0x448b0006 ; ret 0x4804
0x00000000001a6dfd : mov ebx, 0x73700000 ; out dx, eax ; jmp qword ptr [rax]
0x0000000000058348 : mov ebx, 0x83ffffe5 ; ret
0x0000000000103cc1 : mov ebx, 0x8b49fff1 ; call rbx
0x0000000000103cce : mov ebx, 0x8b49fff1 ; jge 0x103cdc ; call rbx
0x0000000000003671 : mov ebx, 0x952a6c41 ; ret
0x00000000000d50d3 : mov ebx, 0xa4 ; add dword ptr [rdi], ecx ; lahf ; ret 0x82eb
0x00000000001884d9 : mov ebx, 0xad78fff3 ; jmp rdx
0x0000000000114834 : mov ebx, 0xafb8341 ; je 0x114843 ; ret
0x0000000000196e8d : mov ebx, 0xb3b40000 ; in eax, dx ; jmp rsp
0x0000000000188529 : mov ebx, 0xb9fcfff3 ; call rcx
0x000000000018157b : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x0000000000188ae4 : mov ebx, 0xc7fff450 ; push rax ; hlt ; call rcx
0x0000000000131aa6 : mov ebx, 0xc8 ; call rax
0x000000000005f7bc : mov ebx, 2 ; jmp 0x5baa7
0x0000000000188135 : mov ebx, dr0 ; jmp qword ptr [rdx]
0x0000000000114b22 : mov ebx, dword ptr [rbp - 8] ; leave ; ret
0x0000000000102d26 : mov ebx, eax ; call rax
0x000000000012dabb : mov ebx, eax ; jne 0x12da59 ; xor eax, eax ; pop rbx ; ret
0x0000000000125f5f : mov ebx, eax ; mov byte ptr [r11], 0 ; ret
0x00000000000fc1d7 : mov ebx, eax ; mov rax, rbx ; pop rbx ; ret
0x00000000000372f7 : mov ebx, eax ; mov rdi, r12 ; call r15
0x000000000002c376 : mov ebx, edi ; test rax, rax ; je 0x2c386 ; call rax
0x000000000010d775 : mov ebx, edx ; jmp 0x10d6a0
0x00000000000c9d85 : mov ebx, edx ; jmp 0xc9c58
0x00000000001998ec : mov ebx, es ; add dword ptr [rax], eax ; mov ah, 0xe5 ; idiv edi ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000199bec : mov ebx, ss ; add dword ptr [rax], eax ; and al, 0x1c ; clc ; jmp rsp
0x000000000012d5c3 : mov ecx, 0x48002955 ; mov eax, dword ptr [rdx + rax*8] ; jmp rax
0x00000000000d90d3 : mov ecx, 0x83000005 ; ret 0x3902
0x00000000000d74c9 : mov ecx, 0x840f002e ; ret 2
0x00000000000c8db4 : mov ecx, 0x8948002f ; ret 0x8d48
0x0000000000103ea6 : mov ecx, 0x8b49fff1 ; call rbx
0x0000000000103f39 : mov ecx, 0x8b49fff1 ; jge 0x103f47 ; call rbx
0x0000000000196e45 : mov ecx, 0xac540000 ; in eax, dx ; jmp rsp
0x0000000000181579 : mov ecx, 0xbdbcbbba ; mov esi, 0xc2c1c0bf ; ret
0x0000000000033ed3 : mov ecx, 0xc031fffe ; pop rbx ; ret
0x0000000000188718 : mov ecx, 0xc0fff3ce ; fpatan ; jmp qword ptr [rax]
0x000000000002b390 : mov ecx, dword ptr [rax + rdi*8] ; test rcx, rcx ; je 0x2b3a2 ; call rcx
0x00000000001353f1 : mov ecx, dword ptr [rbp - 0x168] ; call rcx
0x000000000012afa7 : mov ecx, dword ptr [rcx + 0x18] ; jmp rcx
0x0000000000047c54 : mov ecx, dword ptr [rcx + rax - 0x27] ; jmp rcx
0x000000000009f16c : mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000013b6f0 : mov ecx, dword ptr [rdi + 0x28] ; cmp ecx, edx ; jae 0x13b709 ; xor eax, eax ; ret
0x000000000013b730 : mov ecx, dword ptr [rdi + 0x28] ; cmp ecx, edx ; jae 0x13b749 ; xor eax, eax ; ret
0x0000000000047b76 : mov ecx, dword ptr [rdi + 0x30] ; mov rdi, qword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x000000000015084e : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x0000000000074e8b : mov ecx, dword ptr [rdx + 0x48] ; cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x0000000000091243 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000000abbd9 : mov ecx, dword ptr [rdx] ; test ecx, ecx ; jne 0xabbd7 ; ret
0x0000000000047f06 : mov ecx, dword ptr [rsi + 0x30] ; mov rsi, qword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x0000000000152bc3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000152dc3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000152fc3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000a5340 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000a5381 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x000000000015afe3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015af73 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015af03 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015ae25 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015adb5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015ad45 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015acd5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015ac65 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015abf5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015ab85 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b0c5 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x00000000000a5321 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000131f95 : mov ecx, dword ptr [rsp + 0x18] ; call rcx
0x000000000013768e : mov ecx, dword ptr [rsp + 0x18] ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x0000000000131d9d : mov ecx, dword ptr [rsp + 0x20] ; call rcx
0x000000000012cd2d : mov ecx, dword ptr [rsp + 8] ; call rcx
0x00000000000d8d44 : mov ecx, eax ; mov eax, 1 ; mov rdx, r8 ; jmp 0xd8d63
0x000000000009e304 : mov ecx, eax ; mov qword ptr [rdx], rcx ; ret
0x000000000012d14c : mov ecx, eax ; movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x000000000009e316 : mov ecx, eax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x000000000012a231 : mov ecx, ebp ; call rbx
0x00000000000751d1 : mov ecx, ebp ; mov rdi, r15 ; xor r8d, r8d ; call rbx
0x00000000000acc3a : mov ecx, ebp ; mov rdi, rbp ; call rbx
0x000000000002be41 : mov ecx, ebx ; movsxd rcx, dword ptr [r8 + rcx*4] ; add rcx, r8 ; jmp rcx
0x000000000009dffe : mov ecx, ecx ; movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x00000000000aceed : mov ecx, edi ; call rbx
0x0000000000109bb9 : mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x000000000014d4a1 : mov ecx, edx ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000014d4a4 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000007b937 : mov ecx, edx ; xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00000000001a745c : mov ecx, es ; add byte ptr [rax], al ; jo 0x1a744a ; out dx, eax ; call rsp
0x000000000002185b : mov ecx, esi ; call rbx
0x0000000000129abd : mov ecx, esi ; mov rdi, r13 ; call r12
0x000000000010e624 : mov edi, 0x2000004 ; call rax
0x00000000001053e0 : mov edi, 0x24448b48 ; or byte ptr [rax + 0x39], cl ; ret
0x00000000000332e0 : mov edi, 0x24448b48 ; xor byte ptr [rax - 0x7d], cl ; ret
0x00000000001a488c : mov edi, 0x380e0a01 ; ret
0x0000000000133633 : mov edi, 0x488 ; call 0x1f877
0x0000000000103c2d : mov edi, 0x49ffffe3 ; mov edi, dword ptr [rdi] ; call rbx
0x00000000000ef9b6 : mov edi, 0x5a ; call 0xcbc97
0x000000000004760f : mov edi, 0x85000000 ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0x854d
0x0000000000067848 : mov edi, 0x89000000 ; ret 0x348
0x0000000000194b31 : mov edi, 0xc280fffb ; sti ; call rax
0x0000000000196f4d : mov edi, 0xc4d40000 ; in eax, dx ; jmp rsp
0x000000000006dd6a : mov edi, 0xe0 ; call rax
0x000000000006dd3e : mov edi, 0xe0 ; jmp rax
0x000000000009cfab : mov edi, 0xf700000b ; ret 0
0x00000000000346ad : mov edi, dword ptr [rax + 0x28] ; call 0x1f8b1
0x000000000011dc07 : mov edi, dword ptr [rax] ; call 0xf7038
0x00000000000ba5f1 : mov edi, dword ptr [rax] ; call r14
0x0000000000102483 : mov edi, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x00000000000ce891 : mov edi, dword ptr [rbp - 0x430] ; call r14
0x000000000005645e : mov edi, dword ptr [rbp - 0x4a8] ; call rax
0x00000000000cc55e : mov edi, dword ptr [rbp - 0x58] ; call 0x1f8b1
0x00000000000eaf6b : mov edi, dword ptr [rbp - 0x78] ; call r12
0x00000000000ac0d5 : mov edi, dword ptr [rbp] ; call r12
0x0000000000038f5d : mov edi, dword ptr [rbp] ; call r14
0x00000000001020da : mov edi, dword ptr [rbp] ; call rbx
0x000000000011f4bd : mov edi, dword ptr [rbx + 0x48] ; test rdi, rdi ; jne 0x11f4b9 ; pop rbx ; ret
0x0000000000133661 : mov edi, dword ptr [rbx] ; test rdi, rdi ; je 0x133676 ; call 0x1f8b1
0x0000000000132851 : mov edi, dword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x132869 ; ret
0x00000000001389d1 : mov edi, dword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1389e9 ; ret
0x0000000000047b7a : mov edi, dword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x000000000006dd69 : mov edi, dword ptr [rdi + 0xe0] ; call rax
0x000000000006dd3d : mov edi, dword ptr [rdi + 0xe0] ; jmp rax
0x0000000000102088 : mov edi, dword ptr [rdi] ; call rbx
0x0000000000072f28 : mov edi, dword ptr [rdx + 0x40] ; jmp 0x72ef4
0x0000000000112a64 : mov edi, dword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x0000000000183926 : mov edi, dword ptr [rdx] ; ret
0x0000000000102047 : mov edi, dword ptr [rsi] ; call rbx
0x000000000010256f : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000024071 : mov edi, dword ptr [rsp + 0x18] ; call r12
0x00000000000c887f : mov edi, dword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000024365 : mov edi, dword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x0000000000024d00 : mov edi, dword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000028aba : mov edi, dword ptr [rsp + 0x20] ; call r14
0x0000000000023e51 : mov edi, dword ptr [rsp + 0x20] ; call r15
0x000000000002510e : mov edi, dword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000024805 : mov edi, dword ptr [rsp + 0x30] ; call r12
0x0000000000025590 : mov edi, dword ptr [rsp + 0x30] ; call r14
0x0000000000025350 : mov edi, dword ptr [rsp + 0x30] ; call r15
0x00000000000248b9 : mov edi, dword ptr [rsp + 0x30] ; call rbx
0x00000000000282af : mov edi, dword ptr [rsp + 0x38] ; call r14
0x0000000000025b58 : mov edi, dword ptr [rsp + 0x38] ; call r15
0x0000000000028048 : mov edi, dword ptr [rsp + 0x38] ; call rbx
0x0000000000025f2f : mov edi, dword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000026868 : mov edi, dword ptr [rsp + 0x40] ; call rbx
0x0000000000026ca8 : mov edi, dword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x00000000000f3655 : mov edi, dword ptr [rsp + 0x48] ; call 0x1f8ae
0x000000000012cd49 : mov edi, dword ptr [rsp + 0x60] ; call rax
0x00000000000bb380 : mov edi, dword ptr [rsp + 0x68] ; call r12
0x00000000001024d0 : mov edi, dword ptr [rsp] ; call rbx
0x0000000000136634 : mov edi, eax ; call qword ptr [r10]
0x00000000000ec41c : mov edi, eax ; call r12
0x0000000000086d7a : mov edi, eax ; call rcx
0x0000000000136726 : mov edi, eax ; lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x0000000000136537 : mov edi, eax ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x000000000004a6ad : mov edi, eax ; mov byte ptr [rsi], dl ; jne 0x4a6a1 ; mov rax, rsi ; ret
0x0000000000133631 : mov edi, eax ; mov edi, 0x488 ; call 0x1f879
0x000000000012afa4 : mov edi, eax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x0000000000086108 : mov edi, eax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x0000000000139fbb : mov edi, ebp ; add rbx, r12 ; call r14
0x000000000017239c : mov edi, ebp ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x00000000000adec5 : mov edi, ebp ; call 0x4a164
0x00000000000f3785 : mov edi, ebp ; call 0xefa84
0x00000000000fae21 : mov edi, ebp ; call 0xf7034
0x000000000012db5e : mov edi, ebp ; call qword ptr [rbx]
0x000000000011f69e : mov edi, ebp ; call r12
0x000000000003919c : mov edi, ebp ; call r14
0x0000000000037337 : mov edi, ebp ; call r15
0x000000000002f6d9 : mov edi, ebp ; call rax
0x00000000000ac866 : mov edi, ebp ; call rbx
0x000000000013b7c1 : mov edi, ebp ; call rcx
0x000000000012d655 : mov edi, ebp ; call rdx
0x000000000012e048 : mov edi, ebp ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x000000000012c2d5 : mov edi, ebp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000013ad04 : mov edi, ebp ; mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x0000000000131f92 : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x0000000000131d9a : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000012a22e : mov edi, ebp ; mov rcx, r13 ; call rbx
0x00000000000378a4 : mov edi, ebp ; mov rdx, rbp ; call r15
0x0000000000084f93 : mov edi, ebp ; pop rbx ; pop rbp ; jmp rax
0x000000000012cf5d : mov edi, ebp ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x0000000000057f77 : mov edi, ebx ; call 0x1141b4
0x000000000013367c : mov edi, ebx ; call 0x1f8ac
0x00000000000bcffb : mov edi, ebx ; call 0x892e4
0x00000000000bea7b : mov edi, ebx ; call 0x8acf4
0x00000000000ce045 : mov edi, ebx ; call qword ptr [r15]
0x000000000012df88 : mov edi, ebx ; call qword ptr [rax]
0x0000000000029c47 : mov edi, ebx ; call r12
0x0000000000021be0 : mov edi, ebx ; call r14
0x000000000006caf9 : mov edi, ebx ; call r8
0x0000000000052226 : mov edi, ebx ; call rax
0x000000000017391b : mov edi, ebx ; jne 0x173910 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000129d20 : mov edi, ebx ; mov qword ptr [rsp], rcx ; call r12
0x0000000000129e22 : mov edi, ebx ; mov r13, rsp ; call r15
0x00000000000222be : mov edi, ebx ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x00000000000c80db : mov edi, ebx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000000876d6 : mov edi, ebx ; mov rdx, r15 ; call rax
0x000000000007d872 : mov edi, ebx ; neg rdi ; call qword ptr [r15]
0x00000000001735f3 : mov edi, ebx ; pop rbx ; jmp 0x1f8ad
0x000000000007215e : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000071fa6 : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000013a140 : mov edi, ebx ; pop rbx ; pop rbp ; jmp rax
0x0000000000173aa8 : mov edi, ebx ; test rdi, rdi ; jne 0x173aa2 ; pop rbx ; ret
0x0000000000088838 : mov edi, ecx ; mov qword ptr [rbx], rsi ; mov qword ptr [rbx + 0x48], r9 ; call rcx
0x0000000000133650 : mov edi, edi ; call 0x1f8ac
0x000000000005f0bf : mov edi, edi ; call 0x7b2d4
0x0000000000138210 : mov edi, edi ; call qword ptr [rax]
0x000000000013a09e : mov edi, edi ; call r14
0x0000000000073f55 : mov edi, edi ; call rax
0x0000000000102db4 : mov edi, edi ; call rbx
0x00000000000ff48d : mov edi, edi ; inc dword ptr [rbp - 0x7ce38b40] ; ret
0x00000000001378cf : mov edi, edi ; lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x0000000000080eac : mov edi, edi ; mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x000000000010a66c : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x00000000000751d4 : mov edi, edi ; xor r8d, r8d ; call rbx
0x00000000001148e8 : mov edi, edx ; jmp rax
0x000000000004a731 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x4a719 ; mov rax, rsi ; ret
0x00000000000c2097 : mov edi, es ; add al, byte ptr [rax] ; add byte ptr [rdi], cl ; mov bh, 5 ; ret
0x00000000000810e7 : mov edi, esi ; call qword ptr [rax]
0x000000000012cac8 : mov edi, esi ; call rax
0x0000000000102d94 : mov edi, esi ; call rbx
0x000000000012c1e3 : mov edi, esi ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000012cd2a : mov edi, esi ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x000000000013ae1f : mov edi, esp ; call qword ptr [rax]
0x00000000000372fa : mov edi, esp ; call r15
0x000000000012b096 : mov edi, esp ; call rax
0x0000000000074f29 : mov edi, esp ; call rbx
0x000000000013a1b1 : mov edi, esp ; call rdx
0x00000000000aceea : mov edi, esp ; mov r9, r15 ; call rbx
0x00000000001353ee : mov edi, esp ; mov rcx, qword ptr [rbp - 0x168] ; call rcx
0x0000000000088426 : mov edi, esp ; mov rdx, r13 ; mov rsi, rbp ; call rax
0x00000000000cb549 : mov edx, 0 ; cmove rax, rdx ; ret
0x0000000000123117 : mov edx, 0x102 ; cmove eax, edx ; ret
0x00000000001230da : mov edx, 0x104 ; cmove eax, edx ; ret
0x00000000001230bc : mov edx, 0x107 ; cmove eax, edx ; ret
0x00000000000091b9 : mov edx, 0x13 ; add byte ptr [rax], al ; ret
0x00000000000783e6 : mov edx, 0x130 ; pop rbx ; ret
0x0000000000021972 : mov edx, 0x2c ; call 0x2dc47
0x0000000000021953 : mov edx, 0x4a ; call 0x2dc47
0x00000000001a6d6d : mov edx, 0x71100000 ; out dx, eax ; call rax
0x0000000000103de9 : mov edx, 0x8b49fff1 ; call rbx
0x0000000000103e04 : mov edx, 0x8b49fff1 ; cmp al, 0x24 ; call rbx
0x0000000000103df6 : mov edx, 0x8b49fff1 ; jge 0x103e04 ; call rbx
0x0000000000188559 : mov edx, 0xad3dfff3 ; jmp qword ptr [rax]
0x0000000000182dde : mov edx, 0xcac982a4 ; call 0xffffffffaedacc5e
0x0000000000188934 : mov edx, 0xe9fff3cb ; fdiv st(3) ; jmp rbx
0x00000000000c3da2 : mov edx, 0xe9ffffea ; ret 0xfff3
0x000000000008dc19 : mov edx, 0xf480001 ; ret 0x66c3
0x0000000000023b87 : mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x000000000006febe : mov edx, 0xffffffff ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000010c708 : mov edx, 0xffffffff ; mov eax, edx ; ret
0x000000000003a6df : mov edx, 0xffffffff ; test eax, eax ; cmovs eax, edx ; pop rbx ; ret
0x000000000013acbc : mov edx, 0xffffffff ; xor eax, eax ; call r8
0x000000000013ad06 : mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x00000000001123cc : mov edx, 5 ; xor edi, edi ; call 0x2e629
0x00000000000218a0 : mov edx, 8 ; mov eax, edx ; ret
0x00000000000773a5 : mov edx, dword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000cbb04 : mov edx, dword ptr [rax + 0x18] ; test rdx, rdx ; je 0xcbb19 ; call rdx
0x00000000000efa08 : mov edx, dword ptr [rax] ; call 0xcbcf4
0x0000000000071ec8 : mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000020827 : mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000113a51 : mov edx, dword ptr [rbp + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x0000000000113963 : mov edx, dword ptr [rbp + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00000000001135e0 : mov edx, dword ptr [rbp - 0x30] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000113ab7 : mov edx, dword ptr [rbx + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x00000000000786a0 : mov edx, dword ptr [rbx + 0x40] ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x0000000000113f7d : mov edx, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x0000000000117ddf : mov edx, dword ptr [rbx] ; jmp 0x117da8
0x0000000000147def : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000014651d : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x0000000000073f4e : mov edx, dword ptr [rdi + 0x40] ; sub rdx, rsi ; mov rdi, r15 ; call rax
0x0000000000075406 : mov edx, dword ptr [rdi + 0xc0] ; mov eax, edx ; ret
0x00000000001148e1 : mov edx, dword ptr [rdi + 8] ; mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x0000000000036256 : mov edx, dword ptr [rdi] ; xor eax, eax ; test edx, edx ; sete al ; ret
0x0000000000088c45 : mov edx, dword ptr [rdx + 8] ; test rdx, rdx ; jne 0x88c49 ; ret
0x0000000000173690 : mov edx, dword ptr [rdx + rbp*8] ; test rdx, rdx ; je 0x1736a2 ; call rdx
0x0000000000113c6b : mov edx, dword ptr [rsi + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00000000000a5362 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00000000000a5353 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a53a3 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000ba7ed : mov edx, dword ptr [rsi + 8] ; cmp dword ptr [rdi + 8], edx ; jne 0xba7d6 ; ret
0x00000000000a53b3 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000152601 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000001529c0 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152251 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000a6930 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a7760 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a5330 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000a91d0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000a6981 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a77b1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a5371 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000a6911 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a7731 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a5311 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000010e620 : mov edx, dword ptr [rsp + 0x10] ; mov edi, 0x2000004 ; call rax
0x000000000010e51c : mov edx, dword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 8] ; call rax
0x0000000000083e69 : mov edx, dword ptr [rsp + 0x68] ; call rax
0x0000000000070045 : mov edx, eax ; je 0x70057 ; mov eax, edx ; pop rbx ; ret
0x000000000010ebb4 : mov edx, eax ; jmp 0x10ebc6
0x000000000010eebf : mov edx, eax ; jmp 0x10eecd
0x00000000001345d7 : mov edx, eax ; jmp 0x13459b
0x0000000000071137 : mov edx, eax ; jmp 0x710cb
0x00000000000712c8 : mov edx, eax ; jmp 0x71262
0x0000000000075b23 : mov edx, eax ; jmp 0x75ac0
0x0000000000076473 : mov edx, eax ; jmp 0x76410
0x0000000000076c10 : mov edx, eax ; jmp 0x76b97
0x000000000007801b : mov edx, eax ; jmp 0x77fb1
0x000000000007db94 : mov edx, eax ; jmp 0x7dbb1
0x0000000000086e10 : mov edx, eax ; jmp 0x86ddb
0x00000000000be138 : mov edx, eax ; jmp 0xbe141
0x00000000000cf9b2 : mov edx, eax ; jmp 0xcf951
0x00000000000d46d9 : mov edx, eax ; jmp 0xd46f8
0x00000000000d6bbc : mov edx, eax ; jmp 0xd6b9a
0x00000000000d8d4c : mov edx, eax ; jmp 0xd8d5b
0x00000000000e0536 : mov edx, eax ; jmp 0xe04d0
0x00000000000ef78c : mov edx, eax ; jmp 0xef7c4
0x00000000000fdc3c : mov edx, eax ; jmp 0xfdbd0
0x0000000000075453 : mov edx, eax ; mov eax, edx ; pop rbx ; ret
0x000000000014330e : mov edx, ebp ; add r9, qword ptr [rbp - 0x88] ; call rax
0x00000000000378a7 : mov edx, ebp ; call r15
0x0000000000113e47 : mov edx, ebp ; call rax
0x00000000000adec2 : mov edx, ebp ; mov rdi, rbp ; call 0x4a167
0x00000000000ac982 : mov edx, ebp ; mov rdi, rbp ; call rbx
0x0000000000037331 : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x000000000012ed23 : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000087f07 : mov edx, ebp ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000088429 : mov edx, ebp ; mov rsi, rbp ; call rax
0x000000000003734c : mov edx, ebp ; mov rsi, rbx ; mov rdi, r12 ; call r15
0x000000000007781e : mov edx, ebx ; call 0x93a44
0x00000000001135e7 : mov edx, ebx ; call rax
0x0000000000173da7 : mov edx, ebx ; jne 0x173d9e ; pop rbx ; ret
0x000000000012ec15 : mov edx, ebx ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000e976a : mov edx, ebx ; xor eax, eax ; call 0x55986
0x0000000000087e28 : mov edx, ecx ; jmp 0x87df1
0x000000000018b9dd : mov edx, edi ; call qword ptr [rax]
0x00000000000876d9 : mov edx, edi ; call rax
0x0000000000063b14 : mov edx, edi ; mov rsi, qword ptr [rip + 0x35f453] ; call rax
0x000000000011c62f : mov edx, edi ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000113a58 : mov edx, esi ; call rax
0x0000000000113abe : mov edx, esp ; call rax
0x00000000000871c3 : mov edx, esp ; mov rdi, r15 ; call rax
0x00000000000befb2 : mov edx, esp ; mov rsi, r15 ; call 0x6b267
0x00000000000adec1 : mov edx, r13d ; mov rdi, rbp ; call 0x4a168
0x00000000001a4135 : mov es, word ptr [rax] ; add byte ptr [rax - 0x79], bh ; in eax, dx ; jmp qword ptr [rbx]
0x000000000010a4e9 : mov es, word ptr [rbx] ; add al, 0x11 ; ret
0x00000000001b1dd6 : mov es, word ptr [rdx] ; add ah, bh ; ret
0x0000000000103296 : mov es, word ptr [rip - 0x9cf0000] ; mov rdi, r13 ; call rbx
0x00000000000a757e : mov es, word ptr [rsi] ; add byte ptr [rax], al ; ret
0x00000000001a4134 : mov es, word ptr fs:[rax] ; add byte ptr [rax - 0x79], bh ; in eax, dx ; jmp qword ptr [rbx]
0x000000000009e1e6 : mov esi, 0x39410704 ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0x3941
0x0000000000087cb3 : mov esi, 0x3948feda ; ret 0x3574
0x00000000000abaae : mov esi, 0x48000000 ; lea eax, dword ptr [rdi - 0x10] ; ret
0x0000000000023ac9 : mov esi, 0x48891b52 ; push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000126f3b : mov esi, 0x5c415d5b ; pop r13 ; pop r14 ; ret
0x0000000000108e56 : mov esi, 0x66002bd5 ; add dword ptr [rdx + rax*2], 1 ; ret
0x000000000009e211 : mov esi, 0x74c08407 ; and al, 0x39 ; ret 0x2574
0x000000000009e0d1 : mov esi, 0x74c08407 ; sub edi, dword ptr [rcx] ; ret 0x2774
0x000000000009e235 : mov esi, 0x75c9840f ; in eax, dx ; xor eax, eax ; ret
0x00000000001a712d : mov esi, 0x7cc00000 ; out dx, eax ; call qword ptr [rdi]
0x00000000001283f7 : mov esi, 0x83480153 ; ret
0x000000000009e14e : mov esi, 0x84450704 ; sal byte ptr [rbp - 0x26], 0xf3 ; ret
0x00000000000f1482 : mov esi, 0x89010544 ; ret
0x0000000000087005 : mov esi, 0x8948feda ; and byte ptr [rax + 0x31], cl ; ret 0x93be
0x000000000008cddf : mov esi, 0x8c48348 ; ret
0x000000000003d6cf : mov esi, 0xbe0f2414 ; ret 0x8349
0x000000000009e28d : mov esi, 0xc0844507 ; jne 0x9e279 ; xor eax, eax ; ret
0x0000000000187389 : mov esi, 0xc0b8fff0 ; lock dec dword ptr [rax] ; ret
0x000000000018157e : mov esi, 0xc2c1c0bf ; ret
0x000000000010e370 : mov esi, 0xc48348c3 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000009e0f5 : mov esi, 0xc984070c ; jne 0x9e0f0 ; ret
0x000000000009e0b1 : mov esi, 0xd2840714 ; jne 0x9e0b0 ; ret
0x00000000000aa164 : mov esi, 0xf000000 ; lahf ; ret 0xea81
0x00000000000ff0a6 : mov esi, 0xf233c03 ; xchg eax, ebp ; ret 0x2f3c
0x000000000009e185 : mov esi, 0xf2390714 ; je 0x9e188 ; ret
0x0000000000002bf1 : mov esi, 0xf8cbeb8f ; ret
0x000000000011c726 : mov esi, 0xfb83014f ; or dword ptr [rdi], ecx ; ret
0x0000000000102dd6 : mov esi, 1 ; call rbx
0x0000000000132837 : mov esi, 1 ; mov ebp, eax ; call 0x12eb19
0x0000000000102fc3 : mov esi, 1 ; mov rdi, r12 ; call rbx
0x0000000000102e8f : mov esi, 1 ; mov rdi, r13 ; call rbx
0x0000000000102e07 : mov esi, 1 ; mov rdi, r14 ; call rbx
0x000000000010324d : mov esi, 1 ; mov rdi, rbp ; call rbx
0x000000000006caf3 : mov esi, 1 ; mov rdi, rbx ; call r8
0x000000000006c3e0 : mov esi, 1 ; mov rdi, rbx ; call rax
0x0000000000101fc1 : mov esi, 2 ; jmp rax
0x0000000000103241 : mov esi, 2 ; mov rdi, r12 ; call rbx
0x0000000000102fb4 : mov esi, 2 ; mov rdi, r13 ; call rbx
0x0000000000102e80 : mov esi, 2 ; mov rdi, r14 ; call rbx
0x0000000000102df8 : mov esi, 2 ; mov rdi, r15 ; call rbx
0x0000000000101fdb : mov esi, 3 ; jmp rax
0x00000000001037bc : mov esi, 3 ; mov rdi, r12 ; call rbx
0x0000000000103813 : mov esi, 3 ; mov rdi, r13 ; call rbx
0x0000000000103893 : mov esi, 3 ; mov rdi, r14 ; call rbx
0x0000000000103993 : mov esi, 3 ; mov rdi, r15 ; call rbx
0x0000000000038f5a : mov esi, dword ptr [rdi] ; mov rdi, qword ptr [r13] ; call r14
0x0000000000063b17 : mov esi, dword ptr [rip + 0x35f453] ; call rax
0x000000000005be09 : mov esi, dword ptr [rip + 0x367161] ; call rax
0x000000000005b7b3 : mov esi, dword ptr [rip + 0x3677b7] ; call rax
0x000000000005000b : mov esi, dword ptr [rip + 0x372f5f] ; call rax
0x000000000004d38f : mov esi, dword ptr [rip + 0x375bdb] ; call rax
0x0000000000047f0a : mov esi, dword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x00000000000d6bb4 : mov esi, dword ptr [rsi + rsi*4] ; cmp r8d, esi ; jge 0xd6b99 ; mov edx, eax ; jmp 0xd6ba2
0x000000000014d389 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000012b838 : mov esi, dword ptr [rsp + 0x10] ; mov rdi, rbp ; call r14
0x0000000000021856 : mov esi, dword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x000000000003836f : mov esi, dword ptr [rsp + 0x18] ; mov rdi, r12 ; call r15
0x0000000000084531 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x00000000000248b4 : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000028043 : mov esi, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000083b61 : mov esi, dword ptr [rsp + 0x48] ; call rax
0x0000000000026863 : mov esi, dword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000010e521 : mov esi, dword ptr [rsp + 8] ; call rax
0x000000000011f699 : mov esi, dword ptr [rsp + 8] ; mov rdi, r13 ; call r12
0x00000000000960ba : mov esi, dword ptr [rsp] ; test rsi, rsi ; jne 0x960d5 ; jmp 0x9608f
0x00000000000e9767 : mov esi, eax ; mov rdx, rbx ; xor eax, eax ; call 0x55989
0x000000000014280f : mov esi, eax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000076982 : mov esi, ebp ; call 0x4d139
0x000000000008842c : mov esi, ebp ; call rax
0x0000000000189821 : mov esi, ebp ; call rsi
0x00000000000bcff8 : mov esi, ebp ; mov rdi, rbx ; call 0x892e7
0x000000000008524e : mov esi, ebp ; mov rdi, rbx ; call rax
0x00000000000c7a8c : mov esi, ebp ; xor edx, edx ; jmp 0xc7a5a
0x000000000003734f : mov esi, ebx ; mov rdi, r12 ; call r15
0x000000000013820d : mov esi, ebx ; mov rdi, r15 ; call qword ptr [rax]
0x000000000013a09b : mov esi, ebx ; mov rdi, r15 ; call r14
0x0000000000086d77 : mov esi, ebx ; mov rdi, rax ; call rcx
0x000000000013b7be : mov esi, ebx ; mov rdi, rbp ; call rcx
0x000000000013ead7 : mov esi, ecx ; sub rsp, 0x38 ; call 0x8acf8
0x00000000000befb5 : mov esi, edi ; call 0x6b264
0x0000000000039199 : mov esi, edi ; mov rdi, r13 ; call r14
0x00000000000c6b63 : mov esi, edi ; xor edi, edi ; call rax
0x00000000001325da : mov esi, edx ; add rdi, 0x10 ; jmp rcx
0x0000000000112a68 : mov esi, edx ; call rax
0x0000000000001bef : mov esi, edx ; mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x00000000000c48a0 : mov esi, edx ; movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x00000000000202f4 : mov esi, esi ; call 0xaa038
0x0000000000086fa5 : mov esi, esi ; call rax
0x000000000005645b : mov esi, esi ; mov rdi, qword ptr [rbp - 0x4a8] ; call rax
0x00000000000b9cc2 : mov esi, esi ; mov rdi, r12 ; call rbx
0x00000000000b9b32 : mov esi, esi ; mov rdi, r12 ; mov r9, r15 ; call rbx
0x000000000004b34b : mov esi, esi ; mov rdi, r13 ; call rax
0x00000000000378a1 : mov esi, esi ; mov rdi, r13 ; mov rdx, rbp ; call r15
0x000000000013b8e8 : mov esi, esi ; mov rdi, rbp ; call r12
0x00000000001350b4 : mov esi, esi ; movsxd rcx, dword ptr [rax + rsi*4] ; add rax, rcx ; jmp rax
0x00000000000cd259 : mov esi, esi ; movsxd rdx, dword ptr [rax + rsi*4] ; add rax, rdx ; jmp rax
0x0000000000131af4 : mov esi, esi ; movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x00000000000c482e : mov esi, esi ; movsxd rsi, dword ptr [rdx + rsi*4] ; add rdx, rsi ; jmp rdx
0x000000000013a3c5 : mov esi, esp ; call qword ptr [rax]
0x000000000003730b : mov esi, esp ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000086105 : mov esi, esp ; mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x00000000000f3782 : mov esi, esp ; mov rdi, rbp ; call 0xefa87
0x0000000000037334 : mov esi, esp ; mov rdi, rbp ; call r15
0x00000000000882d1 : mov esi, esp ; mov rdi, rbp ; call rax
0x000000000012a22b : mov esi, esp ; mov rdi, rbp ; mov rcx, r13 ; call rbx
0x000000000012df85 : mov esi, esp ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000087433 : mov esi, esp ; mov rdi, rbx ; call rax
0x0000000000129e1f : mov esi, esp ; mov rdi, rbx ; mov r13, rsp ; call r15
0x0000000000085e0a : mov esi, esp ; pop rbp ; pop r12 ; jmp rax
0x000000000008562d : mov esi, esp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000001a6339 : mov esi, gs ; call qword ptr [rax]
0x00000000001a6351 : mov esi, gs ; jmp qword ptr [rsi]
0x00000000000202f3 : mov esi, r14d ; call 0xaa039
0x000000000019782c : mov esp, 0x140000fd ; out dx, eax ; call rsp
0x000000000019929c : mov esp, 0x140001a2 ; adc edi, esi ; call rsp
0x00000000001998fc : mov esp, 0x140001c3 ; out 0xf7, al ; call rsp
0x00000000001971e4 : mov esp, 0x340000d1 ; sbb esi, ebp ; call rsp
0x0000000000198dfc : mov esp, 0x34000189 ; jbe 0x198e00 ; call rsp
0x0000000000197cec : mov esp, 0x4400011a ; pop rdx ; int1 ; jmp rsp
0x00000000001983f4 : mov esp, 0x4400014a ; insb byte ptr [rdi], dx ; call rsp
0x000000000008ee07 : mov esp, 0x440f48c7 ; ret 0xc083
0x00000000001384c1 : mov esp, 0x440f49df ; fmul qword ptr [rax - 0x7d] ; ret
0x000000000008e0f1 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000008e121 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000008e111 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x0000000000103de8 : mov esp, 0x49fff1ba ; mov edi, dword ptr [rsi] ; call rbx
0x0000000000126fe7 : mov esp, 0x5c415d5b ; pop r13 ; pop r14 ; ret
0x00000000001951b0 : mov esp, 0x62fffc51 ; pop rcx ; cld ; jmp rdx
0x00000000000d686e : mov esp, 0x7408e383 ; xchg eax, esi ; pop rbx ; ret
0x00000000001a618c : mov esp, 0x800000ae ; xchg dh, ch ; jmp rbx
0x00000000001bac8c : mov esp, 0x800001f9 ; clc ; call qword ptr [rbx]
0x000000000019a044 : mov esp, 0x840001f3 ; xlatb ; clc ; jmp rsp
0x000000000019a86c : mov esp, 0x84000233 ; and edx, edi ; call rsp
0x00000000000b653a : mov esp, 0x8824 ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000dd5f4 : mov esp, 0x89000000 ; ret 0xd139
0x0000000000103c3b : mov esp, 0x8b49fff1 ; call rbx
0x00000000001af48c : mov esp, 0xa0000141 ; sub ch, dh ; jmp qword ptr [rbx]
0x00000000000da8db : mov esp, 0xa824 ; add byte ptr [rcx], bh ; ret 0x8d0f
0x00000000001b238c : mov esp, 0xb0000170 ; and dh, dh ; jmp qword ptr [rsi]
0x0000000000196304 : mov esp, 0xb4000075 ; fucomp st(1) ; call rsp
0x000000000019a384 : mov esp, 0xb4000210 ; jno 0x19a38b ; call rsp
0x0000000000196ec5 : mov esp, 0xb7e40000 ; in eax, dx ; call rsp
0x00000000001ad38c : mov esp, 0xc0000120 ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x000000000008edf6 : mov esp, 0xc2440fc7 ; add eax, 1 ; ret
0x0000000000198dac : mov esp, 0xc4000188 ; je 0x198db0 ; call rsp
0x0000000000199e2c : mov esp, 0xc40001e4 ; clc ; jmp rsp
0x000000000019aa94 : mov esp, 0xc4000242 ; push rbp ; cli ; call rsp
0x00000000000dfc58 : mov esp, 0xc824 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8488
0x00000000001a568c : mov esp, 0xd00000a3 ; in al, -4 ; call qword ptr [rdx]
0x00000000001aec8c : mov esp, 0xd0000139 ; add dh, ch ; call qword ptr [rdi]
0x000000000008ae83 : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x00000000001a6f65 : mov esp, 0xda280000 ; cld ; call qword ptr [rax]
0x00000000001b028c : mov esp, 0xe000014f ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x0000000000197ffc : mov esp, 0xf400012e ; pop rsp ; call rsp
0x0000000000199c4c : mov esp, 0xf40001d5 ; and al, bh ; call rsp
0x0000000000095b7b : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x000000000008e101 : mov esp, 0xf80148c0 ; ret
0x0000000000067443 : mov esp, 2 ; jmp 0x636b3
0x0000000000195dd1 : mov esp, dr1 ; call rax
0x0000000000137d9c : mov esp, dword ptr [rax] ; jmp 0x137daa
0x00000000000203f8 : mov esp, eax ; call 0xaa158
0x00000000000352da : mov esp, eax ; mov rbp, r9 ; nop ; jmp rdx
0x0000000000186864 : mov esp, ebp ; in eax, dx ; call rbx
0x0000000000195dc9 : mov esp, edi ; call rax
0x00000000000cea7a : mov esp, edi ; je 0xcea99 ; call 0x8acf6
0x000000000005f7ba : mov esp, edi ; mov ebx, 2 ; jmp 0x5baa9
0x00000000000d46d4 : mov esp, edi ; xor eax, eax ; mov rdx, r8 ; jmp 0xd46fd
0x0000000000101f74 : mov esp, edx ; mov rbp, rax ; call rax
0x000000000009ea4d : mov esp, esi ; sub rsp, 8 ; call 0x8acf8
0x000000000007d858 : mov esp, esi ; xor edi, edi ; mov r13, rdx ; call qword ptr [r15]
0x000000000009432e : mov qword ptr [r10 + 0x18], r8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bea77 : mov qword ptr [r14], rax ; mov rdi, rbx ; call 0x8acf8
0x000000000009f160 : mov qword ptr [r9 - 8], rcx ; ret
0x0000000000123717 : mov qword ptr [r9], r10 ; ret
0x00000000001237b3 : mov qword ptr [r9], rcx ; ret
0x0000000000123787 : mov qword ptr [r9], rdi ; ret
0x000000000007d9cc : mov qword ptr [r9], rdx ; mov rax, rdx ; ret
0x0000000000071b78 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000071bb8 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000072b18 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x00000000000773a8 : mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x0000000000071b7c : mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000072bb6 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000007ba49 : mov qword ptr [rax + 8], 0 ; ret
0x00000000000fc593 : mov qword ptr [rax], -1 ; xor eax, eax ; ret
0x0000000000123519 : mov qword ptr [rax], r10 ; lea eax, dword ptr [r9 + r8 + 2] ; pop rbx ; ret
0x00000000000720a4 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000070509 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x0000000000083535 : mov qword ptr [rax], rdi ; ret
0x0000000000071fe4 : mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000002d9d2 : mov qword ptr [rax], rdx ; ret
0x0000000000072e30 : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000002cd95 : mov qword ptr [rbp - 0x130], rbx ; call 0x89089
0x00000000000d2653 : mov qword ptr [rbp - 0x2888], rsi ; sub r10, rax ; jmp 0xd267c
0x000000000004d60d : mov qword ptr [rbp - 0x4e8], rsi ; jmp rax
0x0000000000023655 : mov qword ptr [rbp - 0x58], rdx ; call 0x1f8a6
0x0000000000113e42 : mov qword ptr [rbp - 0x70], rdx ; mov rdx, r13 ; call rax
0x000000000003a5e9 : mov qword ptr [rbp], rdx ; call rax
0x000000000002a6d0 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000078386 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x0000000000142e25 : mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000000788e8 : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000142ddd : mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000076ae4 : mov qword ptr [rbx + 0x18], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013ba48 : mov qword ptr [rbx + 0x20], r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007b0d2 : mov qword ptr [rbx + 0x20], rax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x00000000000e78fa : mov qword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x00000000000773d4 : mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x000000000008883d : mov qword ptr [rbx + 0x48], r9 ; call rcx
0x00000000000fb930 : mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x000000000007b13a : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000078256 : mov qword ptr [rbx + 0x90], rax ; pop rbx ; ret
0x000000000007b359 : mov qword ptr [rbx + 8], rdx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x0000000000088c1c : mov qword ptr [rbx + 8], rsi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000101d11 : mov qword ptr [rbx], 0 ; pop rbx ; ret
0x0000000000143050 : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000137a9e : mov qword ptr [rbx], rax ; pop rbx ; ret
0x0000000000088785 : mov qword ptr [rbx], rdi ; mov dword ptr [rbx + 0x30], r9d ; call rcx
0x0000000000088ca2 : mov qword ptr [rbx], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008883a : mov qword ptr [rbx], rsi ; mov qword ptr [rbx + 0x48], r9 ; call rcx
0x0000000000131b23 : mov qword ptr [rcx + 0x10], rdx ; mov eax, 1 ; ret
0x000000000002057c : mov qword ptr [rcx + 0x968], rax ; ret
0x0000000000168583 : mov qword ptr [rcx + 5], rdx ; ret
0x0000000000168593 : mov qword ptr [rcx + 6], rdx ; ret
0x00000000001685a3 : mov qword ptr [rcx + 7], rdx ; ret
0x00000000001685b3 : mov qword ptr [rcx + 8], rdx ; ret
0x000000000004818a : mov qword ptr [rcx + rsi*8], rax ; xor eax, eax ; pop rbx ; ret
0x00000000000d6221 : mov qword ptr [rcx], rax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000755a3 : mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000168540 : mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x0000000000168560 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x0000000000168570 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x0000000000168580 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x0000000000168590 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x00000000001685a0 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x00000000001685b0 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x0000000000168550 : mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x0000000000168530 : mov qword ptr [rcx], rdx ; ret
0x00000000000f600a : mov qword ptr [rdi + 0x100], rdx ; ret
0x0000000000048afe : mov qword ptr [rdi + 0x10], r9 ; ret
0x00000000000a6b4c : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a799c : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a54dc : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a54bc : mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a940c : mov qword ptr [rdi + 0x10], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a61af : mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000a551f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a553f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a5500 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x000000000007b062 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000077776 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x000000000013b615 : mov qword ptr [rdi + 0x18], rsi ; ret
0x000000000010de89 : mov qword ptr [rdi + 0x28], rcx ; mov byte ptr [rax], 0x20 ; jmp 0x10de5d
0x000000000013512b : mov qword ptr [rdi + 0x28], rdx ; mov eax, 1 ; ret
0x00000000000942a0 : mov qword ptr [rdi + 0x38], r9 ; ret
0x00000000001350e3 : mov qword ptr [rdi + 0x38], rdx ; mov eax, 1 ; ret
0x000000000007b092 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000007e94a : mov qword ptr [rdi + 0x58], rcx ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000036038 : mov qword ptr [rdi + 0x78], -1 ; ret
0x00000000000f566d : mov qword ptr [rdi + 0x80], rdx ; ret
0x00000000000a6b0c : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a795c : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a547c : mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a93cc : mov qword ptr [rdi + 0xe], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a6b2c : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a797c : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a549c : mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a93ec : mov qword ptr [rdi + 0xf], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x000000000015ae27 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015adb7 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015ad47 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015acd7 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a6a0a : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a784a : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000015ac67 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a53ca : mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a92ba : mov qword ptr [rdi + 5], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a6a2a : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a786a : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000015abf7 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a53da : mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a92da : mov qword ptr [rdi + 6], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a6a4a : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a788a : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000015ab87 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a53ea : mov qword ptr [rdi + 7], rdx ; ret
0x00000000000a92fa : mov qword ptr [rdi + 7], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000fe977 : mov qword ptr [rdi + 8], 0 ; ret
0x00000000000482b3 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000048a83 : mov qword ptr [rdi + 8], r9 ; ret
0x000000000007b066 : mov qword ptr [rdi + 8], rax ; ret
0x000000000003ac83 : mov qword ptr [rdi + 8], rdx ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000077e8e : mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x000000000003ac74 : mov qword ptr [rdi + 8], rdx ; ret
0x00000000000fe967 : mov qword ptr [rdi + 8], rsi ; ret
0x0000000000036461 : mov qword ptr [rdi + rax*8], rcx ; xor eax, eax ; pop rbx ; ret
0x0000000000123897 : mov qword ptr [rdi + rdx + 0x10], r10 ; ret
0x000000000008e8ed : mov qword ptr [rdi + rdx - 8], rcx ; ret
0x00000000001520e4 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000152122 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000489ee : mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000015246b : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015a637 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015264b : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015a5b7 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015283b : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015a537 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000152a0c : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015a4a8 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000152c0c : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015a418 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000152e0c : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015a388 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000000a6330 : mov qword ptr [rdi - 1], rdx ; ret
0x0000000000048979 : mov qword ptr [rdi - 8], r9 ; ret
0x00000000001520e8 : mov qword ptr [rdi - 8], rcx ; ret
0x0000000000152126 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000015229b : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152397 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000001522e3 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015a6b7 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000054d35 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000094066 : mov qword ptr [rdi], r9 ; pop rbx ; ret
0x0000000000048948 : mov qword ptr [rdi], r9 ; ret
0x00000000000fe964 : mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000004a5ca : mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x000000000003654a : mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000a6996 : mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a6056 : mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a53a6 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a53b6 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000a53c7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a53d7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a53e7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x000000000008e8ea : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x00000000000a5397 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x000000000001f9c2 : mov qword ptr [rdi], rcx ; ret
0x00000000000a6983 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a77b3 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a6350 : mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a6370 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a6380 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000a6390 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a63a0 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a6360 : mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x000000000009e3af : mov qword ptr [rdi], rdx ; ret
0x00000000000a9223 : mov qword ptr [rdi], rdx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x000000000009f15d : mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000014d36d : mov qword ptr [rdi], rsi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000004a062 : mov qword ptr [rdi], rsi ; ret
0x000000000006dc66 : mov qword ptr [rdx + 0x130], rcx ; ret
0x00000000000783e4 : mov qword ptr [rdx + 0x130], rdi ; pop rbx ; ret
0x000000000007100d : mov qword ptr [rdx + 0x20], rax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x00000000000711b3 : mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x000000000012dfff : mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000012dfdb : mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000012dfdf : mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000016a93a : mov qword ptr [rdx + 5], rax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x00000000001665aa : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x000000000016a95a : mov qword ptr [rdx + 6], rax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x00000000001665ca : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x000000000016a97a : mov qword ptr [rdx + 7], rax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x00000000001665ea : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x000000000006b3c3 : mov qword ptr [rdx + 8], r8 ; add dword ptr [rdx + 4], 1 ; ret
0x000000000016a80a : mov qword ptr [rdx + 8], rax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x00000000001664da : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x0000000000131b40 : mov qword ptr [rdx + 8], rdi ; ret
0x000000000016a7b3 : mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x0000000000131c0a : mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x0000000000166483 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000002e19c : mov qword ptr [rdx], rax ; ret
0x000000000007621e : mov qword ptr [rdx], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000071ec5 : mov qword ptr [rdx], rcx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000009e2f4 : mov qword ptr [rdx], rcx ; ret
0x00000000000e703a : mov qword ptr [rdx], rdi ; ret
0x0000000000131b3d : mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x0000000000115227 : mov qword ptr [rip + 0x2b1f52], rax ; pop rbp ; ret
0x0000000000108c9f : mov qword ptr [rip + 0x2ba59a], rbx ; pop rbx ; ret
0x00000000000fdc34 : mov qword ptr [rip + 0x2c6b65], rax ; mov rdx, rax ; jmp 0xfdbd8
0x00000000000e7de3 : mov qword ptr [rsi + 0x10], r8 ; ret
0x000000000012d11e : mov qword ptr [rsi + 0x10], rax ; ret
0x000000000003b285 : mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x000000000003abf3 : mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x0000000000077e65 : mov qword ptr [rsi + 0x28], rcx ; mov byte ptr [rdx], dil ; ret
0x00000000000fb916 : mov qword ptr [rsi + 0x48], rax ; ret
0x00000000000f55de : mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x00000000000e7dc6 : mov qword ptr [rsi + 8], 0 ; ret
0x000000000012d0ee : mov qword ptr [rsi + 8], rax ; ret
0x00000000000e7ddf : mov qword ptr [rsi + 8], rcx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x0000000000047ff3 : mov qword ptr [rsi + rax*8], rdx ; xor eax, eax ; pop rbx ; ret
0x000000000007777a : mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x0000000000122dce : mov qword ptr [rsi], rcx ; xor eax, eax ; ret
0x0000000000122862 : mov qword ptr [rsi], rdi ; ret
0x0000000000118aa0 : mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x00000000000812e7 : mov qword ptr [rsp + 0x10], r8 ; call rdi
0x00000000000811d0 : mov qword ptr [rsp + 0x10], r8 ; xor edi, edi ; call qword ptr [rax]
0x0000000000080eae : mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x000000000008122a : mov qword ptr [rsp + 0x20], r10 ; call rax
0x000000000012b7bc : mov qword ptr [rsp + 0x28], r9 ; call 0x137a67
0x00000000000335c8 : mov qword ptr [rsp + 0x28], rcx ; call 0x1f8a7
0x00000000000e11d7 : mov qword ptr [rsp + 0x40], rdi ; add rax, rdx ; jmp rax
0x00000000000bb7d7 : mov qword ptr [rsp + 0xb8], r14 ; call r12
0x00000000000887ef : mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x0000000000102485 : mov qword ptr [rsp + 8], rax ; call rbx
0x000000000013bb1b : mov qword ptr [rsp + 8], rax ; xor eax, eax ; call rdx
0x0000000000088b5f : mov qword ptr [rsp], rax ; call qword ptr [rdx]
0x0000000000129d22 : mov qword ptr [rsp], rcx ; call r12
0x000000000007d9cb : mov qword ptr fs:[r9], rdx ; mov rax, rdx ; ret
0x0000000000137a4e : mov qword ptr fs:[rax], rdx ; ret
0x000000000003a5e8 : mov qword ptr fs:[rbp], rdx ; call rax
0x0000000000137a9d : mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000002e19b : mov qword ptr fs:[rdx], rax ; ret
0x000000000014d36c : mov qword ptr ss:[rdi], rsi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x0000000000182ddd : mov r10d, 0xcac982a4 ; call 0xffffffffaedacc5f
0x0000000000125f5e : mov r11, rax ; mov byte ptr [r11], 0 ; ret
0x00000000000203f7 : mov r12, rax ; call 0xaa159
0x00000000000cea79 : mov r12, rdi ; je 0xcea9a ; call 0x8acf7
0x00000000000d46d3 : mov r12, rdi ; xor eax, eax ; mov rdx, r8 ; jmp 0xd46fe
0x000000000009ea4c : mov r12, rsi ; sub rsp, 8 ; call 0x8acf9
0x000000000007d857 : mov r12, rsi ; xor edi, edi ; mov r13, rdx ; call qword ptr [r15]
0x0000000000067442 : mov r12d, 2 ; jmp 0x636b4
0x0000000000137d9b : mov r12d, dword ptr [rax] ; jmp 0x137dab
0x0000000000101f73 : mov r12d, edx ; mov rbp, rax ; call rax
0x00000000000ae1a7 : mov r13, r15 ; setne dl ; jmp 0xae1bd
0x00000000000b0ac8 : mov r13, r15 ; setne dl ; jmp 0xb0add
0x00000000000b327f : mov r13, r15 ; setne dl ; jmp 0xb329d
0x000000000007d85c : mov r13, rdx ; call qword ptr [r15]
0x0000000000129e24 : mov r13, rsp ; call r15
0x0000000000065928 : mov r13d, eax ; jmp 0x65386
0x0000000000102918 : mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x000000000013ead6 : mov r14, rcx ; sub rsp, 0x38 ; call 0x8acf9
0x00000000000fea06 : mov r8, rdi ; mov byte ptr [r8 - 1], 0 ; ret
0x00000000000eb297 : mov r8b, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000c8f23 : mov r8d, 0x8948002f ; ret 0x8d48
0x000000000002185a : mov r9, r14 ; call rbx
0x00000000000aceec : mov r9, r15 ; call rbx
0x00000000000cb57b : mov rax, -0xe ; ret
0x0000000000078260 : mov rax, -1 ; pop rbx ; ret
0x00000000000353d6 : mov rax, -1 ; ret
0x00000000000ab540 : mov rax, 1 ; ret
0x00000000000ab550 : mov rax, 2 ; ret
0x00000000000ab560 : mov rax, 3 ; ret
0x00000000000ab570 : mov rax, 4 ; ret
0x00000000000ab580 : mov rax, 5 ; ret
0x00000000000ab590 : mov rax, 6 ; ret
0x00000000000ab5a0 : mov rax, 7 ; ret
0x00000000001122d4 : mov rax, qword ptr [r12 + 0x38] ; jmp 0x1122a4
0x00000000001059b8 : mov rax, qword ptr [rax + 0x108] ; ret
0x0000000000142d4e : mov rax, qword ptr [rax + 0x128] ; jmp rax
0x000000000010935f : mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x000000000010910f : mov rax, qword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x000000000007b16b : mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000072161 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000071fa9 : mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000114118 : mov rax, qword ptr [rax + 0x30] ; ret
0x000000000007b637 : mov rax, qword ptr [rax + 0x40] ; jmp rax
0x00000000001347c3 : mov rax, qword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000006f802 : mov rax, qword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000006fab0 : mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000074eb3 : mov rax, qword ptr [rax + 0x4c] ; ret
0x0000000000135063 : mov rax, qword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000001059b0 : mov rax, qword ptr [rax + 0x58] ; ret
0x000000000013a2e4 : mov rax, qword ptr [rax + 8] ; jmp rax
0x00000000001059a8 : mov rax, qword ptr [rax + 8] ; ret
0x000000000002b01e : mov rax, qword ptr [rax + r14*8] ; test rax, rax ; je 0x2b032 ; call rax
0x000000000002df14 : mov rax, qword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002da1e : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000013a2d9 : mov rax, qword ptr [rax] ; jmp rax
0x000000000002cb6b : mov rax, qword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000003a712 : mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000128208 : mov rax, qword ptr [rax] ; ret
0x000000000007e1ae : mov rax, qword ptr [rax] ; test rax, rax ; je 0x7e1c0 ; call rax
0x0000000000084b35 : mov rax, qword ptr [rax] ; test rax, rax ; je 0x84b47 ; call rax
0x00000000000695bc : mov rax, qword ptr [rbp - 0x448] ; jmp 0x65816
0x000000000010291b : mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000000222c0 : mov rax, qword ptr [rbp - 0x58] ; call rax
0x00000000000773d0 : mov rax, qword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x0000000000137a69 : mov rax, qword ptr [rbx] ; test rax, rax ; je 0x137a81 ; pop rbx ; ret
0x0000000000166480 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00000000000cbb8c : mov rax, qword ptr [rdi + 0x10] ; test rax, rax ; je 0xcbba3 ; call rax
0x000000000013ba12 : mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000013b5b0 : mov rax, qword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000c7e20 : mov rax, qword ptr [rdi + 0x20] ; ret
0x00000000001737a7 : mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x1737c0 ; call rax
0x000000000012d136 : mov rax, qword ptr [rdi + 0x28] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000077410 : mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000012d16e : mov rax, qword ptr [rdi + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000077300 : mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000074eb0 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000007ca60 : mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000013aa68 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000012deb0 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013b378 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000013b388 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000013a2e0 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x000000000013a2d5 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x000000000013a3c0 : mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000012bcb6 : mov rax, qword ptr [rdi + 8] ; push 0 ; push 0x19 ; call qword ptr [rax]
0x000000000007c77e : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x00000000001148e4 : mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x000000000002deb2 : mov rax, qword ptr [rdx + rax*4 + 0x200] ; ret
0x000000000012d5c7 : mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x000000000002cb2c : mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x00000000000e7037 : mov rax, qword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x000000000007c770 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x7c771 ; ret
0x0000000000140753 : mov rax, qword ptr [rip + 0x283cb6] ; call qword ptr [rax]
0x0000000000140140 : mov rax, qword ptr [rip + 0x2842c9] ; call qword ptr [rax]
0x0000000000120710 : mov rax, qword ptr [rip + 0x2a4161] ; ret
0x0000000000081304 : mov rax, qword ptr [rip + 0x341ac5] ; xor edi, edi ; call qword ptr [rax]
0x000000000007ca40 : mov rax, qword ptr [rip + 0x347ad9] ; ret
0x0000000000029c90 : mov rax, qword ptr [rip + 0x39ac59] ; ret
0x0000000000021a50 : mov rax, qword ptr [rip + 0x3a6919] ; ret
0x0000000000021a40 : mov rax, qword ptr [rip + 0x3a6939] ; ret
0x000000000002cb48 : mov rax, qword ptr [rsi + rax*8 + 0x80] ; ret
0x00000000000c80dd : mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000020829 : mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000ef786 : mov rax, qword ptr [rsp + 0x18] ; mov rdx, rax ; jmp 0xef7ca
0x0000000000024369 : mov rax, qword ptr [rsp + 0x28] ; call rax
0x0000000000024d04 : mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000038fd6 : mov rax, qword ptr [rsp + 0x30] ; lea r15, qword ptr [rbx + r14] ; call rax
0x000000000003b028 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000fd58f : mov rax, qword ptr [rsp - 0x50] ; ret
0x0000000000109ae2 : mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x0000000000109b43 : mov rax, qword ptr [rsp] ; add rsp, 0x40 ; ret
0x0000000000128207 : mov rax, qword ptr fs:[rax] ; ret
0x0000000000094559 : mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008e66b : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006c429 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006e1f4 : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000827dc : mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000004a7c6 : mov rax, r8 ; pop rbx ; ret
0x000000000007e076 : mov rax, r8 ; ret
0x0000000000079059 : mov rax, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000006ef38 : mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006ef0b : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006db45 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009e350 : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000799cc : mov rax, rbx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000094446 : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c86f3 : mov rax, rbx ; call rax
0x000000000010556e : mov rax, rbx ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x000000000002a835 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006df29 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000326aa : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000003aa9e : mov rax, rbx ; pop rbx ; ret
0x0000000000101739 : mov rax, rbx ; pop rdx ; pop rbx ; ret
0x000000000003a67b : mov rax, rcx ; or rax, rdx ; ret
0x0000000000033e96 : mov rax, rcx ; ret
0x0000000000115bb0 : mov rax, rdi ; add rsp, 8 ; ret
0x000000000003a690 : mov rax, rdi ; cqo ; idiv rsi ; ret
0x000000000009dfe6 : mov rax, rdi ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000009eae4 : mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000096929 : mov rax, rdi ; pop rbx ; ret
0x000000000004a5cd : mov rax, rdi ; ret
0x00000000001187d9 : mov rax, rdi ; sar rax, 6 ; ret
0x00000000000bae57 : mov rax, rdx ; add rsp, 0x18 ; ret
0x000000000008360c : mov rax, rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bf3eb : mov rax, rdx ; add rsp, 8 ; ret
0x0000000000096f35 : mov rax, rdx ; cmove rax, rbx ; pop rbx ; ret
0x000000000010e2ab : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000084126 : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007dcb7 : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000049074 : mov rax, rdx ; pop rbx ; ret
0x0000000000048489 : mov rax, rdx ; ret
0x00000000000c8d34 : mov rax, rsi ; add rsp, 8 ; ret
0x000000000004a57d : mov rax, rsi ; cmovae rax, rdi ; ret
0x000000000006fbc3 : mov rax, rsi ; pop rbp ; pop r12 ; ret
0x00000000000c7ad2 : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006f957 : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003a1c3 : mov rax, rsi ; pop rbx ; pop rbp ; ret
0x000000000011c581 : mov rax, rsi ; pop rbx ; ret
0x000000000004a6b3 : mov rax, rsi ; ret
0x000000000017232a : mov rax, rsi ; sub rax, rdx ; vzeroupper ; ret
0x00000000000352dc : mov rbp, r9 ; nop ; jmp rdx
0x0000000000101f76 : mov rbp, rax ; call rax
0x0000000000115113 : mov rbp, rsp ; pop rbp ; ret
0x0000000000114b21 : mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x0000000000102d25 : mov rbx, rax ; call rax
0x000000000012daba : mov rbx, rax ; jne 0x12da5a ; xor eax, eax ; pop rbx ; ret
0x00000000000fc1d6 : mov rbx, rax ; mov rax, rbx ; pop rbx ; ret
0x00000000000372f6 : mov rbx, rax ; mov rdi, r12 ; call r15
0x000000000002c375 : mov rbx, rdi ; test rax, rax ; je 0x2c387 ; call rax
0x000000000002b38f : mov rcx, qword ptr [rax + r15*8] ; test rcx, rcx ; je 0x2b3a3 ; call rcx
0x00000000001353f0 : mov rcx, qword ptr [rbp - 0x168] ; call rcx
0x000000000012afa6 : mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00000000000a5380 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000131f94 : mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x0000000000131d9c : mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000012cd2c : mov rcx, qword ptr [rsp + 8] ; call rcx
0x000000000012a230 : mov rcx, r13 ; call rbx
0x00000000000751d0 : mov rcx, r13 ; mov rdi, r15 ; xor r8d, r8d ; call rbx
0x00000000000acc39 : mov rcx, r13 ; mov rdi, rbp ; call rbx
0x0000000000129abc : mov rcx, r14 ; mov rdi, r13 ; call r12
0x000000000009e303 : mov rcx, r8 ; mov qword ptr [rdx], rcx ; ret
0x000000000009e315 : mov rcx, rax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x000000000014d4a0 : mov rcx, rdx ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000014d4a3 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000001024cf : mov rdi, qword ptr [r12] ; call rbx
0x0000000000038f5c : mov rdi, qword ptr [r13] ; call r14
0x00000000001020d9 : mov rdi, qword ptr [r13] ; call rbx
0x0000000000102046 : mov rdi, qword ptr [r14] ; call rbx
0x0000000000102087 : mov rdi, qword ptr [r15] ; call rbx
0x00000000000ba5f0 : mov rdi, qword ptr [rax] ; call r14
0x0000000000102482 : mov rdi, qword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x00000000000ce890 : mov rdi, qword ptr [rbp - 0x430] ; call r14
0x000000000005645d : mov rdi, qword ptr [rbp - 0x4a8] ; call rax
0x00000000000eaf6a : mov rdi, qword ptr [rbp - 0x78] ; call r12
0x00000000000ac0d4 : mov rdi, qword ptr [rbp] ; call r12
0x000000000010220e : mov rdi, qword ptr [rbp] ; call rbx
0x0000000000047b79 : mov rdi, qword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x000000000006dd68 : mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000006dd3c : mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x0000000000072f27 : mov rdi, qword ptr [rdx + 0x40] ; jmp 0x72ef5
0x0000000000112a63 : mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x0000000000024070 : mov rdi, qword ptr [rsp + 0x18] ; call r12
0x0000000000028ab9 : mov rdi, qword ptr [rsp + 0x20] ; call r14
0x0000000000023e50 : mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000024804 : mov rdi, qword ptr [rsp + 0x30] ; call r12
0x000000000002558f : mov rdi, qword ptr [rsp + 0x30] ; call r14
0x000000000002534f : mov rdi, qword ptr [rsp + 0x30] ; call r15
0x00000000000248b8 : mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x00000000000282ae : mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000025b57 : mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000028047 : mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000026867 : mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x00000000000f3654 : mov rdi, qword ptr [rsp + 0x48] ; call 0x1f8af
0x000000000012cd48 : mov rdi, qword ptr [rsp + 0x60] ; call rax
0x00000000000bb37f : mov rdi, qword ptr [rsp + 0x68] ; call r12
0x000000000013ae1e : mov rdi, r12 ; call qword ptr [rax]
0x00000000000372f9 : mov rdi, r12 ; call r15
0x000000000013245c : mov rdi, r12 ; call rax
0x0000000000074f28 : mov rdi, r12 ; call rbx
0x00000000000acee9 : mov rdi, r12 ; mov r9, r15 ; call rbx
0x0000000000088425 : mov rdi, r12 ; mov rdx, r13 ; mov rsi, rbp ; call rax
0x000000000011f69d : mov rdi, r13 ; call r12
0x000000000003919b : mov rdi, r13 ; call r14
0x000000000002f6d8 : mov rdi, r13 ; call rax
0x0000000000102d6f : mov rdi, r13 ; call rbx
0x00000000000378a3 : mov rdi, r13 ; mov rdx, rbp ; call r15
0x00000000000810e6 : mov rdi, r14 ; call qword ptr [rax]
0x000000000012cac7 : mov rdi, r14 ; call rax
0x0000000000102d93 : mov rdi, r14 ; call rbx
0x000000000012c1e2 : mov rdi, r14 ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000012cd29 : mov rdi, r14 ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x000000000013364f : mov rdi, r15 ; call 0x1f8ad
0x000000000005f0be : mov rdi, r15 ; call 0x7b2d5
0x000000000013820f : mov rdi, r15 ; call qword ptr [rax]
0x000000000013a09d : mov rdi, r15 ; call r14
0x0000000000073f54 : mov rdi, r15 ; call rax
0x0000000000102db3 : mov rdi, r15 ; call rbx
0x00000000001378ce : mov rdi, r15 ; lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x0000000000080eab : mov rdi, r15 ; mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x00000000000751d3 : mov rdi, r15 ; xor r8d, r8d ; call rbx
0x0000000000136633 : mov rdi, rax ; call qword ptr [r10]
0x00000000000ec41b : mov rdi, rax ; call r12
0x0000000000086d79 : mov rdi, rax ; call rcx
0x0000000000136725 : mov rdi, rax ; lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x0000000000136536 : mov rdi, rax ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x000000000012afa3 : mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x0000000000086107 : mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x0000000000139fba : mov rdi, rbp ; add rbx, r12 ; call r14
0x000000000017239b : mov rdi, rbp ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x00000000000adec4 : mov rdi, rbp ; call 0x4a165
0x00000000000f3784 : mov rdi, rbp ; call 0xefa85
0x000000000012db5d : mov rdi, rbp ; call qword ptr [rbx]
0x000000000013b8ea : mov rdi, rbp ; call r12
0x000000000012b83c : mov rdi, rbp ; call r14
0x0000000000037336 : mov rdi, rbp ; call r15
0x0000000000084535 : mov rdi, rbp ; call rax
0x00000000000ac865 : mov rdi, rbp ; call rbx
0x000000000013b7c0 : mov rdi, rbp ; call rcx
0x000000000012d654 : mov rdi, rbp ; call rdx
0x000000000012c2d4 : mov rdi, rbp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000131f91 : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x0000000000131d99 : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000012a22d : mov rdi, rbp ; mov rcx, r13 ; call rbx
0x0000000000084f92 : mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000012cf5c : mov rdi, rbp ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x0000000000057f76 : mov rdi, rbx ; call 0x1141b5
0x000000000013367b : mov rdi, rbx ; call 0x1f8ad
0x00000000000bcffa : mov rdi, rbx ; call 0x892e5
0x00000000000bea7a : mov rdi, rbx ; call 0x8acf5
0x00000000000ce044 : mov rdi, rbx ; call qword ptr [r15]
0x000000000012df87 : mov rdi, rbx ; call qword ptr [rax]
0x0000000000029c46 : mov rdi, rbx ; call r12
0x0000000000021bdf : mov rdi, rbx ; call r14
0x000000000006caf8 : mov rdi, rbx ; call r8
0x0000000000052225 : mov rdi, rbx ; call rax
0x000000000017391a : mov rdi, rbx ; jne 0x173911 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000129d1f : mov rdi, rbx ; mov qword ptr [rsp], rcx ; call r12
0x0000000000129e21 : mov rdi, rbx ; mov r13, rsp ; call r15
0x00000000000222bd : mov rdi, rbx ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x00000000000c80da : mov rdi, rbx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000000876d5 : mov rdi, rbx ; mov rdx, r15 ; call rax
0x000000000007d871 : mov rdi, rbx ; neg rdi ; call qword ptr [r15]
0x00000000001735f2 : mov rdi, rbx ; pop rbx ; jmp 0x1f8ae
0x000000000007215d : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000071fa5 : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000013a13f : mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000001148e7 : mov rdi, rdx ; jmp rax
0x000000000012b095 : mov rdi, rsp ; call rax
0x000000000013a1b0 : mov rdi, rsp ; call rdx
0x00000000000773a4 : mov rdx, qword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000cbb03 : mov rdx, qword ptr [rax + 0x18] ; test rdx, rdx ; je 0xcbb1a ; call rdx
0x00000000000efa07 : mov rdx, qword ptr [rax] ; call 0xcbcf5
0x0000000000020826 : mov rdx, qword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000017368f : mov rdx, qword ptr [rdx + rbp*8] ; test rdx, rdx ; je 0x1736a3 ; call rdx
0x0000000000152250 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000a5370 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000083e68 : mov rdx, qword ptr [rsp + 0x68] ; call rax
0x0000000000113abd : mov rdx, r12 ; call rax
0x00000000000871c2 : mov rdx, r12 ; mov rdi, r15 ; call rax
0x00000000000befb1 : mov rdx, r12 ; mov rsi, r15 ; call 0x6b268
0x0000000000113e46 : mov rdx, r13 ; call rax
0x00000000000ac981 : mov rdx, r13 ; mov rdi, rbp ; call rbx
0x000000000012ed22 : mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000088428 : mov rdx, r13 ; mov rsi, rbp ; call rax
0x0000000000113a57 : mov rdx, r14 ; call rax
0x00000000000876d8 : mov rdx, r15 ; call rax
0x000000000011c62e : mov rdx, r15 ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000010eebe : mov rdx, r8 ; jmp 0x10eece
0x00000000000d46d8 : mov rdx, r8 ; jmp 0xd46f9
0x00000000000d8d4b : mov rdx, r8 ; jmp 0xd8d5c
0x000000000010ebb3 : mov rdx, rax ; jmp 0x10ebc7
0x00000000001345d6 : mov rdx, rax ; jmp 0x13459c
0x000000000007db93 : mov rdx, rax ; jmp 0x7dbb2
0x0000000000086e0f : mov rdx, rax ; jmp 0x86ddc
0x00000000000be137 : mov rdx, rax ; jmp 0xbe142
0x00000000000cf9b1 : mov rdx, rax ; jmp 0xcf952
0x00000000000e0535 : mov rdx, rax ; jmp 0xe04d1
0x00000000000e0534 : mov rdx, rax ; jmp 0xe04d2
0x00000000000ef78b : mov rdx, rax ; jmp 0xef7c5
0x00000000000fdc3b : mov rdx, rax ; jmp 0xfdbd1
0x00000000000378a6 : mov rdx, rbp ; call r15
0x0000000000087f06 : mov rdx, rbp ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000007781d : mov rdx, rbx ; call 0x93a45
0x00000000001135e6 : mov rdx, rbx ; call rax
0x0000000000173da6 : mov rdx, rbx ; jne 0x173d9f ; pop rbx ; ret
0x000000000012ec14 : mov rdx, rbx ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000e9769 : mov rdx, rbx ; xor eax, eax ; call 0x55987
0x0000000000087e27 : mov rdx, rcx ; jmp 0x87df2
0x0000000000038f59 : mov rsi, qword ptr [r15] ; mov rdi, qword ptr [r13] ; call r14
0x0000000000063b16 : mov rsi, qword ptr [rip + 0x35f453] ; call rax
0x000000000005be08 : mov rsi, qword ptr [rip + 0x367161] ; call rax
0x000000000005b7b2 : mov rsi, qword ptr [rip + 0x3677b7] ; call rax
0x000000000005000a : mov rsi, qword ptr [rip + 0x372f5f] ; call rax
0x000000000004d38e : mov rsi, qword ptr [rip + 0x375bdb] ; call rax
0x0000000000047f09 : mov rsi, qword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x000000000012b837 : mov rsi, qword ptr [rsp + 0x10] ; mov rdi, rbp ; call r14
0x0000000000021855 : mov rsi, qword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x000000000003836e : mov rsi, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call r15
0x0000000000084530 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x0000000000083b60 : mov rsi, qword ptr [rsp + 0x48] ; call rax
0x000000000010e520 : mov rsi, qword ptr [rsp + 8] ; call rax
0x000000000011f698 : mov rsi, qword ptr [rsp + 8] ; mov rdi, r13 ; call r12
0x000000000003730a : mov rsi, r12 ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x00000000000f3781 : mov rsi, r12 ; mov rdi, rbp ; call 0xefa88
0x0000000000037333 : mov rsi, r12 ; mov rdi, rbp ; call r15
0x00000000000882d0 : mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000012a22a : mov rsi, r12 ; mov rdi, rbp ; mov rcx, r13 ; call rbx
0x0000000000087432 : mov rsi, r12 ; mov rdi, rbx ; call rax
0x0000000000085e09 : mov rsi, r12 ; pop rbp ; pop r12 ; jmp rax
0x000000000008562c : mov rsi, r12 ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000008524d : mov rsi, r13 ; mov rdi, rbx ; call rax
0x0000000000086fa4 : mov rsi, r14 ; call rax
0x00000000000b9cc1 : mov rsi, r14 ; mov rdi, r12 ; call rbx
0x00000000000b9b31 : mov rsi, r14 ; mov rdi, r12 ; mov r9, r15 ; call rbx
0x000000000004b34a : mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000013b8e7 : mov rsi, r14 ; mov rdi, rbp ; call r12
0x00000000000befb4 : mov rsi, r15 ; call 0x6b265
0x0000000000039198 : mov rsi, r15 ; mov rdi, r13 ; call r14
0x000000000014280e : mov rsi, rax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000008842b : mov rsi, rbp ; call rax
0x00000000000bcff7 : mov rsi, rbp ; mov rdi, rbx ; call 0x892e8
0x0000000000088146 : mov rsi, rbp ; mov rdi, rbx ; call rax
0x00000000000c7a8b : mov rsi, rbp ; xor edx, edx ; jmp 0xc7a5b
0x000000000003734e : mov rsi, rbx ; mov rdi, r12 ; call r15
0x000000000013820c : mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x000000000013a09a : mov rsi, rbx ; mov rdi, r15 ; call r14
0x0000000000086d76 : mov rsi, rbx ; mov rdi, rax ; call rcx
0x000000000013b7bd : mov rsi, rbx ; mov rdi, rbp ; call rcx
0x00000000000c6b62 : mov rsi, rdi ; xor edi, edi ; call rax
0x00000000001325d9 : mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x0000000000112a67 : mov rsi, rdx ; call rax
0x000000000013a3c4 : mov rsi, rsp ; call qword ptr [rax]
0x000000000012df84 : mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000352d9 : mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000009f185 : mov word ptr [r9 - 2], cx ; ret
0x000000000007cb48 : mov word ptr [rax + rax], dr0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000019d75c : mov word ptr [rax + rax], fs ; add byte ptr [rax], dl ; jp 0x19d753 ; call qword ptr [rax]
0x000000000019c75c : mov word ptr [rax + rax], ss ; add al, dh ; outsd dx, dword ptr [rsi] ; std ; call qword ptr [rcx]
0x000000000008e8dd : mov word ptr [rax + rdx - 2], cx ; ret
0x000000000013c6f5 : mov word ptr [rax - 0x39], cs ; ret
0x00000000000a5b70 : mov word ptr [rax], cs ; add byte ptr [rax], al ; ret
0x00000000001a5c5c : mov word ptr [rcx + 0x4cc00000], gs ; out dx, al ; call qword ptr [rdx]
0x0000000000168512 : mov word ptr [rcx + 4], dx ; ret
0x0000000000168553 : mov word ptr [rcx + 8], dx ; ret
0x00000000001b075c : mov word ptr [rcx + rax], ss ; adc byte ptr [rax - 0xb], bh ; jmp qword ptr [rbx]
0x0000000000196e44 : mov word ptr [rcx - 0x53ac0000], dr1 ; in eax, dx ; jmp rsp
0x00000000001684e0 : mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x00000000001684d0 : mov word ptr [rcx], dx ; ret
0x0000000000198ea5 : mov word ptr [rcx], es ; add byte ptr [rdx + rcx*4 - 0xa], dl ; jmp rsp
0x00000000000a6a8c : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a78dc : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a541c : mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a934c : mov word ptr [rdi + 0x10], cx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a6b94 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a79e4 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a5504 : mov word ptr [rdi + 0x18], cx ; ret
0x00000000000a9454 : mov word ptr [rdi + 0x18], cx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x000000000015b0c7 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x000000000003b362 : mov word ptr [rdi + 2], dx ; ret
0x000000000009e072 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a7788 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000009df72 : mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
0x00000000000a5358 : mov word ptr [rdi + 4], dx ; ret
0x00000000000a91f8 : mov word ptr [rdi + 4], dx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000a77ea : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a69aa : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000a539a : mov word ptr [rdi + 8], dx ; ret
0x00000000000a925a : mov word ptr [rdi + 8], dx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x000000000014d3a2 : mov word ptr [rdi + rdx - 2], cx ; ret
0x00000000001a4a5c : mov word ptr [rdi - 0x3f900000], ss ; in eax, dx ; jmp qword ptr [rsi]
0x00000000001527ec : mov word ptr [rdi - 2], cx ; ret
0x0000000000152604 : mov word ptr [rdi - 2], dx ; ret
0x00000000001527e8 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x00000000000a5323 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000a5ff6 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000a9bd2 : mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000015b0cb : mov word ptr [rdi], cx ; ret
0x00000000000a6913 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a7733 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a5313 : mov word ptr [rdi], dx ; ret
0x00000000000a91a3 : mov word ptr [rdi], dx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x000000000009e030 : mov word ptr [rdi], si ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000009dfa0 : mov word ptr [rdi], si ; mov rax, rdi ; ret
0x000000000009f182 : mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x000000000014d39f : mov word ptr [rdi], si ; mov word ptr [rdi + rdx - 2], cx ; ret
0x00000000000f56a0 : mov word ptr [rdi], si ; xor eax, eax ; ret
0x0000000000131bbf : mov word ptr [rdx + 0x6c], ax ; mov eax, 1 ; ret
0x000000000016a888 : mov word ptr [rdx + 4], ax ; lea rax, qword ptr [rdx + 5] ; ret
0x00000000000a20cd : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x00000000000a2151 : mov word ptr [rdx + 8], ax ; mov rax, rdi ; ret
0x000000000016a833 : mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x00000000000a2068 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000001090ff : mov word ptr [rdx], ax ; ret
0x00000000001baf7a : mov word ptr [rdx], cs ; ret
0x00000000001a69d3 : mov word ptr [rdx], es ; push rdx ; ret
0x00000000001a64a2 : mov word ptr [rip + 0x3068345], es ; mov byte ptr [rcx], al ; ret
0x00000000000face5 : mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x000000000003b2cf : mov word ptr [rsi + 0xc], ax ; xor eax, eax ; ret
0x000000000003b316 : mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x00000000001a615c : mov word ptr [rsi - 0x79800000], gs ; out dx, al ; call qword ptr [rsi]
0x00000000000a9bd5 : mov word ptr [rsi - 2], cx ; ret
0x00000000000f5683 : mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000001aa730 : mov word ptr [rsi], es ; add dword ptr [rdi], 2 ; ret
0x00000000001baf60 : mov word ptr [rsi], es ; add dword ptr [rdi], 3 ; insb byte ptr [rdi], dx ; add dword ptr [rdx], ecx ; ret
0x00000000001adaf0 : mov word ptr [rsi], es ; add qword ptr [r15], 3 ; popfq ; add ecx, dword ptr [rdx] ; ret
0x00000000001af808 : mov word ptr [rsi], es ; add qword ptr [rdi], 2 ; cwde ; ret
0x0000000000034ff2 : mov word ptr [rsp - 0x10], ax ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000035194 : mov word ptr [rsp - 2], di ; fldcw word ptr [rsp - 2] ; ret
0x000000000014d39e : mov word ptr ss:[rdi], si ; mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000003dec9 : movabs al, byte ptr [0x293ff08348000000] ; ret 0xfa81
0x00000000001b2622 : movabs al, byte ptr [0x41200e0a01a00320] ; ret
0x00000000000da772 : movabs al, byte ptr [0x834801538d000000] ; ret
0x00000000000cff4d : movabs al, byte ptr [0x8348e18948000000] ; ret 0x480f
0x000000000006363d : movabs al, byte ptr [0x840fc08548000000] ; ret 3
0x00000000000623a2 : movabs al, byte ptr [0x894810b60ffffff9] ; ret
0x00000000000ff80c : movabs al, byte ptr [0x8948c08548fff76a] ; ret
0x0000000000083eac : movabs al, byte ptr [0x8948c08548fffff6] ; ret
0x00000000000833d4 : movabs al, byte ptr [0xd8d48e789440010] ; ret 0x10a1
0x0000000000072f23 : movabs al, byte ptr [0xeb407a8b48000000] ; ret
0x00000000000e2ea9 : movabs byte ptr [0x840fc08545000001], al ; ret 0xfffd
0x00000000000d685b : movabs dword ptr [0x5bffffff73820fc8], eax ; ret
0x0000000000086dc9 : movabs dword ptr [0x8948c08548ffffb6], eax ; ret 0x575
0x000000000000087f : movabs eax, dword ptr [0x10c0449000e] ; ret 0x440c
0x00000000000c395f : movabs eax, dword ptr [0x840ff68545000c9f] ; ret
0x0000000000033bfb : movabs eax, dword ptr [0x8948c08548fffebc] ; ret
0x0000000000055bdb : movabs eax, dword ptr [0x8948c5394900038d] ; ret 0x830f
0x000000000010fd3b : movabs eax, dword ptr [0x8948f6894c000043] ; ret 0x3bf
0x000000000011f13d : movabs eax, dword ptr [0x940f01ff83410000] ; ret 0xc085
0x000000000004bb07 : movabs eax, dword ptr [0xfffb5885c7fffffd] ; call qword ptr [rax]
0x0000000000034b20 : movapd xmm0, xmm1 ; add rsp, 0x28 ; ret
0x000000000003491f : movapd xmm0, xmm1 ; ret
0x0000000000034b21 : movaps xmm0, xmm1 ; add rsp, 0x28 ; ret
0x0000000000034abd : movaps xmm0, xmm1 ; jne 0x34ad9 ; add rsp, 0x28 ; ret
0x0000000000034df8 : movaps xmm0, xmm1 ; jne 0x34e11 ; add rsp, 0x28 ; ret
0x0000000000034920 : movaps xmm0, xmm1 ; ret
0x0000000000150d72 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000150d6e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000150e1c : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000034dc3 : movd mm0, eax ; mov dword ptr [rdi], edx ; ret
0x0000000000034846 : movd mm0, eax ; ret
0x0000000000034845 : movd mm0, rax ; ret
0x000000000003491c : movd mm1, eax ; movapd xmm0, xmm1 ; ret
0x0000000000034caa : movd mm1, eax ; movaps xmm0, xmm1 ; ret
0x00000000000348af : movd mm1, eax ; movsd qword ptr [rdi], xmm1 ; ret
0x0000000000034c26 : movd mm1, eax ; movss dword ptr [rdi], xmm1 ; ret
0x000000000003491b : movd mm1, rax ; movapd xmm0, xmm1 ; ret
0x00000000000348ae : movd mm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x0000000000034dc2 : movd xmm0, eax ; mov dword ptr [rdi], edx ; ret
0x0000000000034bfc : movd xmm0, eax ; ret
0x0000000000034ca9 : movd xmm1, eax ; movaps xmm0, xmm1 ; ret
0x0000000000034c25 : movd xmm1, eax ; movss dword ptr [rdi], xmm1 ; ret
0x00000000000e0250 : movdqa xmm0, xmm2 ; jmp 0xe0236
0x00000000000a53f0 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000a6c4d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a7a9d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x00000000000a62b0 : movdqu xmmword ptr [rdi + 0x10], xmm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000a55bd : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a7d03 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; lea rax, qword ptr [rdi + 0x40] ; ret
0x00000000000a64f3 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; ret
0x000000000015ad9f : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015ad2f : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015acbf : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015ac4f : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a6bed : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a7a3d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a555d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000015abdf : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a6c0d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a7a5d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a557d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000015ab6f : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a6c2d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a7a7d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a559d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000015b18f : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b11f : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b0af : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b03f : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015afcf : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015af5f : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015aeef : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015ae7f : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015ae0f : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000008e83c : movdqu xmmword ptr [rdi + rdx - 0x10], xmm0 ; ja 0x8e859 ; ret
0x000000000008e855 : movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x000000000015a2fb : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x000000000015a36b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000a63b0 : movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00000000000a78a4 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a6a64 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a60d7 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000a5404 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a5447 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a5437 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a54b8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a5478 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a5498 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a5418 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a55b9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a5559 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a5579 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a5599 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a53f4 : movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000a9314 : movdqu xmmword ptr [rdi], xmm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x000000000015ab74 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a21b2 : movlpd qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00000000000a21d2 : movlpd qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00000000000a21f2 : movlpd qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00000000000a203c : movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a1fe6 : movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000a21b3 : movlps qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00000000000a21d3 : movlps qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00000000000a21f3 : movlps qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00000000000a203d : movlps qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a1fe7 : movlps qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x000000000010159b : movmskpd eax, xmm0 ; and eax, 1 ; jmp 0x10156f
0x000000000010159c : movmskps eax, xmm0 ; and eax, 1 ; jmp 0x10156e
0x0000000000188aa0 : movmskps esi, xmm4 ; lcall ptr [rcx] ; push rax ; hlt ; jmp qword ptr [rbx]
0x00000000000e0251 : movq mm0, mm2 ; jmp 0xe0235
0x00000000000a53f1 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000a6c4e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a7a9e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x00000000000a62b1 : movq qword ptr [rdi + 0x10], mm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000a55be : movq qword ptr [rdi + 0x10], mm2 ; ret
0x00000000000a950e : movq qword ptr [rdi + 0x10], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a7d04 : movq qword ptr [rdi + 0x30], mm7 ; lea rax, qword ptr [rdi + 0x40] ; ret
0x00000000000a64f4 : movq qword ptr [rdi + 0x30], mm7 ; ret
0x00000000000a9584 : movq qword ptr [rdi + 0x30], mm7 ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x000000000015ada0 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015ad30 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015acc0 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015ac50 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a6bee : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a7a3e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a555e : movq qword ptr [rdi + 0xd], mm2 ; ret
0x00000000000a94ae : movq qword ptr [rdi + 0xd], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x000000000015abe0 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a6c0e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a7a5e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a557e : movq qword ptr [rdi + 0xe], mm2 ; ret
0x00000000000a94ce : movq qword ptr [rdi + 0xe], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x000000000015ab70 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a6c2e : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a7a7e : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a559e : movq qword ptr [rdi + 0xf], mm2 ; ret
0x00000000000a94ee : movq qword ptr [rdi + 0xf], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x000000000015b190 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b120 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b0b0 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b040 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015afd0 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015af60 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015aef0 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015ae80 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015ae10 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000008e83d : movq qword ptr [rdi + rdx - 0x10], mm0 ; ja 0x8e858 ; ret
0x000000000008e856 : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000015a2fc : movq qword ptr [rdi - 0x10], mm0 ; ret
0x000000000015a36c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015aaa7 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015aa27 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a997 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a917 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a897 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a817 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a797 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a717 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a697 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a617 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a597 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a517 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a487 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a3f7 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a367 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000a63b1 : movq qword ptr [rdi - 1], mm0 ; ret
0x00000000000a78a5 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a6a65 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a60d8 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000a5405 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a5458 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a612b : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000a5448 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a5438 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a54b9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a5479 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a5499 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a5419 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a55ba : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a555a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a557a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a559a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a53f5 : movq qword ptr [rdi], mm0 ; ret
0x00000000000a9315 : movq qword ptr [rdi], mm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x000000000015ab75 : movq qword ptr [rdi], mm1 ; ret
0x0000000000034844 : movq xmm0, rax ; ret
0x000000000003491a : movq xmm1, rax ; movapd xmm0, xmm1 ; ret
0x00000000000348ad : movq xmm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x000000000019a454 : movsb byte ptr [rdi], byte ptr [rsi] ; adc eax, 0x86040002 ; stc ; call rsp
0x000000000006841a : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000d50d4 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx], al ; setg dl ; jmp 0xd5067
0x00000000000dfc6c : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0xb60f
0x00000000001b56f5 : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; test al, 0xf2 ; sti ; call rcx
0x00000000001bb674 : movsb byte ptr [rdi], byte ptr [rsi] ; add eax, dword ptr [rdx] ; add al, bl ; jo 0x1bb67a ; call qword ptr [rax]
0x00000000001afe74 : movsb byte ptr [rdi], byte ptr [rsi] ; add qword ptr [r8], rax ; fsubr dword ptr [rbx - 0xb] ; jmp qword ptr [rcx]
0x000000000019ab04 : movsb byte ptr [rdi], byte ptr [rsi] ; add r8b, byte ptr [rax] ; pop rcx ; cli ; call rsp
0x0000000000197e8c : movsb byte ptr [rdi], byte ptr [rsi] ; and eax, 0xfb040001 ; int1 ; call rsp
0x0000000000195cfd : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; call qword ptr [rax + 0x10fffca3]
0x0000000000195cf9 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; call qword ptr [rax]
0x000000000019b000 : movsb byte ptr [rdi], byte ptr [rsi] ; hlt ; cli ; call rsp
0x00000000001837a2 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000188485 : movsb byte ptr [rdi], byte ptr [rsi] ; inc dword ptr [rax - 0x46] ; jmp rsp
0x0000000000188481 : movsb byte ptr [rdi], byte ptr [rsi] ; jmp rsp
0x00000000001849fd : movsb byte ptr [rdi], byte ptr [rsi] ; jns 0x184a56 ; jmp 0x184997
0x0000000000198eec : movsb byte ptr [rdi], byte ptr [rsi] ; lea eax, dword ptr [rcx] ; add byte ptr [rdi + rcx*4 - 0xa], dl ; jmp rsp
0x0000000000196cd4 : movsb byte ptr [rdi], byte ptr [rsi] ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; je 0x196d5b ; in eax, dx ; jmp rsp
0x0000000000199de4 : movsb byte ptr [rdi], byte ptr [rsi] ; loope 0x199def ; add byte ptr [rdi + rdx*2 - 8], dh ; jmp rsp
0x00000000001999dc : movsb byte ptr [rdi], byte ptr [rsi] ; mov dword ptr [rcx], 0xf7ee9400 ; jmp rsp
0x0000000000196e24 : movsb byte ptr [rdi], byte ptr [rsi] ; mov eax, 0xa8540000 ; in eax, dx ; jmp rsp
0x000000000019a2bc : movsb byte ptr [rdi], byte ptr [rsi] ; or al, byte ptr [rdx] ; add byte ptr [rsp + rdx*2 - 7], dl ; call rsp
0x000000000019ab40 : movsb byte ptr [rdi], byte ptr [rsi] ; pop rbx ; cli ; jmp rsp
0x000000000019aac8 : movsb byte ptr [rdi], byte ptr [rsi] ; push rdi ; cli ; jmp rsp
0x00000000001b0574 : movsb byte ptr [rdi], byte ptr [rsi] ; push rdx ; add dword ptr [rax], eax ; fdiv dword ptr [rbx - 0xb] ; jmp qword ptr [rcx]
0x000000000018848d : movsb byte ptr [rdi], byte ptr [rsi] ; push rsp ; movsd dword ptr [rdi], dword ptr [rsi] ; jmp rsp
0x0000000000035037 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000196fd4 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0
0x00000000000befb8 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xfffa
0x00000000001b7574 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 1
0x000000000019a5b0 : movsb byte ptr [rdi], byte ptr [rsi] ; sar ecx, -1 ; xor al, 0x20 ; add al, byte ptr [rax] ; xchg eax, esp ; ret 0xfff9
0x0000000000194841 : movsb byte ptr [rdi], byte ptr [rsi] ; std ; call qword ptr [rax + 0x10fffda4]
0x0000000000194845 : movsb byte ptr [rdi], byte ptr [rsi] ; std ; call qword ptr [rax]
0x0000000000194781 : movsb byte ptr [rdi], byte ptr [rsi] ; std ; jmp rcx
0x0000000000108d72 : movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, dword ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000108d65 : movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000013eb44 : movsd dword ptr [rdi], dword ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000007567f : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000196b9d : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; in al, -0x2b ; in al, dx ; call rsp
0x000000000010edea : movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rbx - 0x76b3fe18], al ; ret 0x2b49
0x00000000001bbbb2 : movsd dword ptr [rdi], dword ptr [rsi] ; add ebp, eax ; add ebp, esi ; add al, byte ptr [rax] ; ret
0x0000000000195bb5 : movsd dword ptr [rdi], dword ptr [rsi] ; cld ; call rdx
0x0000000000195cf5 : movsd dword ptr [rdi], dword ptr [rsi] ; cld ; jmp qword ptr [rax + 0x10fffca4]
0x00000000001ad8c1 : movsd dword ptr [rdi], dword ptr [rsi] ; hlt ; call rax
0x0000000000185035 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000018847d : movsd dword ptr [rdi], dword ptr [rsi] ; jmp rsp
0x00000000001848f1 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x000000000009e314 : movsd dword ptr [rdi], dword ptr [rsi] ; mov rcx, rax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x0000000000188479 : movsd dword ptr [rdi], dword ptr [rsi] ; push rsp ; movsd dword ptr [rdi], dword ptr [rsi] ; jmp rsp
0x00000000000489a2 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000018fe8 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x18
0x0000000000194849 : movsd dword ptr [rdi], dword ptr [rsi] ; std ; call qword ptr [rax + 0x10fffda5]
0x000000000019484d : movsd dword ptr [rdi], dword ptr [rsi] ; std ; call qword ptr [rax]
0x0000000000194789 : movsd dword ptr [rdi], dword ptr [rsi] ; std ; jmp rcx
0x0000000000108cf1 : movsd dword ptr [rdi], dword ptr [rsi] ; sub eax, dword ptr [rax] ; je 0x108cfe ; pop rbp ; ret
0x0000000000108ca3 : movsd dword ptr [rdi], dword ptr [rsi] ; sub eax, dword ptr [rax] ; pop rbx ; ret
0x00000000000348b2 : movsd qword ptr [rdi], xmm1 ; ret
0x000000000003487b : movsd qword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x00000000000baec8 : movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x000000000004a193 : movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000142815 : movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000108cf0 : movsq qword ptr [rdi], qword ptr [rsi] ; sub eax, dword ptr [rax] ; je 0x108cff ; pop rbp ; ret
0x0000000000034c29 : movss dword ptr [rdi], xmm1 ; ret
0x0000000000034c10 : movss dword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x000000000004a14d : movss xmm0, dword ptr [rsp - 4] ; ret
0x000000000010e36f : movsx eax, bl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008a9e7 : movsx eax, dl ; ret
0x000000000009e0f4 : movsx ecx, byte ptr [rdi + rax] ; test cl, cl ; jne 0x9e0f1 ; ret
0x000000000009e234 : movsx ecx, byte ptr [rdi] ; test cl, cl ; jne 0x9e231 ; xor eax, eax ; ret
0x000000000009e184 : movsx edx, byte ptr [rdi + rax] ; cmp edx, esi ; je 0x9e189 ; ret
0x000000000009e0b0 : movsx edx, byte ptr [rdi + rax] ; test dl, dl ; jne 0x9e0b1 ; ret
0x00000000000c2828 : movsxd r8, dword ptr [rdx + r8*4] ; add rdx, r8 ; jmp rdx
0x0000000000089361 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000015877b : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x000000000015084b : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000009e000 : movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x000000000009df60 : movsxd rax, dword ptr [r10 + r9*4] ; add r10, rax ; jmp r10
0x000000000009de97 : movsxd rax, dword ptr [r10 + rax*4] ; add r10, rax ; jmp r10
0x0000000000084b14 : movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0x000000000002ebb7 : movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x000000000004b5c2 : movsxd rax, dword ptr [rax + rdx*4] ; add rax, rdi ; jmp rax
0x0000000000063834 : movsxd rax, dword ptr [rcx + rax*4] ; add rcx, rax ; jmp rcx
0x00000000000d3521 : movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x00000000000210b3 : movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000006c182 : movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x000000000006c2b1 : movsxd rax, dword ptr [rsi + rax*4] ; add rsi, rax ; jmp rsi
0x000000000002e8ed : movsxd rax, dword ptr [rsi + rcx*4] ; add rsi, rax ; jmp rsi
0x00000000000aa197 : movsxd rax, dword ptr [rsi + rdi*4] ; add rsi, rax ; jmp rsi
0x000000000003ab3a : movsxd rax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x0000000000149fb4 : movsxd rax, ecx ; add rax, rdi ; ret
0x0000000000149e78 : movsxd rax, ecx ; add rax, rdi ; sub rax, r8 ; ret
0x000000000014a0cd : movsxd rax, ecx ; add rax, rdi ; sub rax, rdx ; ret
0x0000000000149f4d : movsxd rax, ecx ; ret
0x0000000000149ff4 : movsxd rbx, ebx ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x00000000000a5a2a : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x0000000000047c51 : movsxd rcx, dword ptr [r11 + rcx*4] ; add rcx, r11 ; jmp rcx
0x000000000016dc7d : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00000000000a51b9 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000002be43 : movsxd rcx, dword ptr [r8 + rcx*4] ; add rcx, r8 ; jmp rcx
0x000000000005c19d : movsxd rcx, dword ptr [rax + r12*4] ; add rax, rcx ; jmp rax
0x0000000000093ebd : movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x00000000001350b6 : movsxd rcx, dword ptr [rax + rsi*4] ; add rax, rcx ; jmp rax
0x0000000000033287 : movsxd rcx, dword ptr [rdi + rcx*4] ; add rcx, rdi ; jmp rcx
0x00000000000f25ac : movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x0000000000149e69 : movsxd rcx, ebx ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x0000000000149ed0 : movsxd rcx, ecx ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x0000000000149e97 : movsxd rcx, ecx ; lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x00000000000e0fb8 : movsxd rdi, dword ptr [r11 + rdi*4] ; add rdi, r11 ; jmp rdi
0x000000000002e0b5 : movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002df45 : movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000015091f : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000005c0f8 : movsxd rdx, dword ptr [rax + r12*4] ; add rax, rdx ; jmp rax
0x00000000000d111e : movsxd rdx, dword ptr [rax + r14*4] ; add rax, rdx ; jmp rax
0x00000000000d9085 : movsxd rdx, dword ptr [rax + rbp*4] ; add rax, rdx ; jmp rax
0x0000000000084868 : movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x000000000002ec95 : movsxd rdx, dword ptr [rax + rcx*4] ; add rax, rdx ; jmp rax
0x000000000005bf02 : movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x00000000000cd25b : movsxd rdx, dword ptr [rax + rsi*4] ; add rax, rdx ; jmp rax
0x0000000000063df5 : movsxd rdx, dword ptr [rcx + rdx*4] ; add rcx, rdx ; jmp rcx
0x00000000000e07d2 : movsxd rdx, dword ptr [rcx + rdx*4] ; add rdx, rcx ; jmp rdx
0x0000000000123782 : movsxd rdx, eax ; add rdi, rdx ; mov qword ptr [r9], rdi ; ret
0x0000000000123601 : movsxd rdx, edx ; mov eax, r8d ; mov byte ptr [rdi + rdx], 0 ; ret
0x00000000000aa227 : movsxd rsi, dword ptr [rax + rdx*4] ; add rax, rsi ; jmp rax
0x00000000000c48a2 : movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x00000000000aa25f : movsxd rsi, dword ptr [rcx + rax*4] ; add rcx, rsi ; jmp rcx
0x000000000006ca4d : movsxd rsi, dword ptr [rdi + rsi*4] ; add rdi, rsi ; jmp rdi
0x00000000000333fe : movsxd rsi, dword ptr [rdi + rsi*4] ; add rsi, rdi ; jmp rsi
0x00000000000c4830 : movsxd rsi, dword ptr [rdx + rsi*4] ; add rdx, rsi ; jmp rdx
0x000000000018970d : movsxd rsi, ebp ; call qword ptr [rbx]
0x00000000001715ec : movsxd rsi, esi ; ret 0x7520
0x00000000000fba6a : movups xmm0, xmmword ptr [rax] ; add bl, al ; nop ; xor eax, eax ; ret
0x000000000003afd9 : movups xmm0, xmmword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000baec9 : movups xmm0, xmmword ptr [rsp - 0x10] ; ret
0x000000000004a14e : movups xmm0, xmmword ptr [rsp - 4] ; ret
0x000000000004a194 : movups xmm0, xmmword ptr [rsp - 8] ; ret
0x0000000000099cc7 : movups xmm1, xmmword ptr [rdi] ; xchg eax, ebx ; ret
0x0000000000099cc6 : movups xmm9, xmmword ptr [rdi] ; xchg eax, ebx ; ret
0x000000000003b161 : movups xmmword ptr [rbx], xmm0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000348b3 : movups xmmword ptr [rdi], xmm1 ; ret
0x000000000003487c : movups xmmword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x0000000000034c11 : movups xmmword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x000000000012dea7 : movzx eax, al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013b07b : movzx eax, al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000012da2c : movzx eax, al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000e9f1e : movzx eax, al ; cmova eax, edx ; ret
0x00000000000ba7b5 : movzx eax, al ; lea eax, dword ptr [rax + rax - 1] ; ret
0x00000000000cd136 : movzx eax, al ; lea rax, qword ptr [rax + rax - 1] ; ret
0x000000000003521c : movzx eax, al ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000c04ba : movzx eax, al ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000010e340 : movzx eax, al ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006b2fc : movzx eax, al ; neg eax ; pop rbx ; ret
0x000000000006b2c9 : movzx eax, al ; neg eax ; ret
0x00000000001331d5 : movzx eax, al ; pop rbp ; pop r12 ; ret
0x000000000012edfa : movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000000c6b8b : movzx eax, al ; pop rbx ; ret
0x0000000000035f19 : movzx eax, al ; ret
0x000000000002dd15 : movzx eax, ax ; ret
0x00000000000c2825 : movzx eax, bh ; movsxd r8, dword ptr [rdx + r8*4] ; add rdx, r8 ; jmp rdx
0x000000000007133d : movzx eax, bh ; ret
0x000000000007a6bc : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012fb4e : movzx eax, byte ptr [rax + rdx] ; mov byte ptr [rdi + 7], al ; ret
0x000000000007bee6 : movzx eax, byte ptr [rax - 1] ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000007a53d : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007b205 : movzx eax, byte ptr [rax] ; pop rbx ; ret
0x0000000000077e92 : movzx eax, byte ptr [rax] ; ret
0x000000000008a6f8 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000016dc90 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000008e290 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000008a713 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000007a550 : movzx eax, byte ptr [rdx] ; ret
0x000000000007a6bd : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000aa1b7 : movzx eax, cl ; pop rbx ; ret
0x0000000000118b3d : movzx eax, dh ; or eax, edi ; bswap eax ; ret
0x000000000007133c : movzx eax, dil ; ret
0x00000000000aa1df : movzx eax, dl ; pop rbx ; ret
0x0000000000118b4b : movzx eax, si ; or eax, edi ; bswap eax ; ret
0x0000000000118b3c : movzx eax, sil ; or eax, edi ; bswap eax ; ret
0x000000000002dece : movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x00000000000f5680 : movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000000a972a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xa9729 ; ret
0x00000000000a97da : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xa97d9 ; ret
0x000000000016eb34 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x000000000008a710 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000016dc93 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000001081b2 : movzx edi, di ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000033bbf : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x33ba7 ; ret
0x000000000009ecf1 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x000000000014462f : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000009eb83 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x0000000000171614 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x0000000000171674 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x0000000000171664 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000171654 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000171644 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000171634 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000171624 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000015aac0 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000016e8e7 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x00000000001715fb : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x000000000015b1a0 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000008e293 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000008e2b9 : movzx edx, dl ; sub eax, edx ; ret
0x000000000015aa40 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000015b130 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000ac0d1 : movzx esi, bl ; mov rdi, qword ptr [rbp] ; call r12
0x00000000000f80a4 : movzx rax, al ; ret
0x000000000008caf7 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000034941 : mulps xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x0000000000034ccf : mulps xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x0000000000034940 : mulsd xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x0000000000034cce : mulss xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x000000000006e6d7 : neg byte ptr [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000013658f : neg eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000136bda : neg eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000035767 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010e343 : neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006b2ff : neg eax ; pop rbx ; ret
0x000000000002121d : neg eax ; ret
0x0000000000087ad1 : neg ebx ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x000000000007d875 : neg edi ; call qword ptr [r15]
0x00000000000f6dc1 : neg edx ; cmp dword ptr [rsp - 0x58], 2 ; cmove eax, edx ; ret
0x000000000007d874 : neg rdi ; call qword ptr [r15]
0x00000000000e3498 : nop ; add al, 0xf ; xchg eax, esp ; ret 0x9848
0x0000000000073e18 : nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000007a30c : nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000015a1f7 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000035a83 : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000016df9c : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000023ff3 : nop ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000000fcc8d : nop ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000c1802 : nop ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x00000000001a0bdd : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; je 0x1a0bf5 ; ret
0x00000000001a0beb : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x000000000004b5c5 : nop ; add rax, rdi ; jmp rax
0x000000000005bf05 : nop ; add rax, rdx ; jmp rax
0x00000000000aa22a : nop ; add rax, rsi ; jmp rax
0x00000000000b95df : nop ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000006abff : nop ; add rsp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000021a2f : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000778ff : nop ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000194eac : nop ; and al, 0xfc ; call rax
0x00000000000757ff : nop ; and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x00000000001b2150 : nop ; and esi, esi ; jmp qword ptr [rsi]
0x000000000008e0ef : nop ; bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x000000000009e69f : nop ; bsr eax, eax ; add rax, rdi ; ret
0x000000000009e82f : nop ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x0000000000194ce0 : nop ; clc ; sti ; jmp rax
0x0000000000195d9d : nop ; cld ; call rax
0x0000000000189829 : nop ; cmc ; jmp qword ptr [rcx]
0x0000000000194854 : nop ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp qword ptr [rax]
0x000000000003511f : nop ; fstp st(1) ; add rsp, 8 ; ret
0x00000000001ad139 : nop ; hlt ; call qword ptr [rcx]
0x00000000001ad121 : nop ; hlt ; jmp qword ptr [rcx]
0x00000000001a3030 : nop ; in eax, dx ; call rbx
0x00000000001b0530 : nop ; jae 0x1b052b ; jmp qword ptr [rcx]
0x00000000001880b5 : nop ; jmp qword ptr [rdx]
0x00000000000352df : nop ; jmp rdx
0x00000000001a3da0 : nop ; jnp 0x1a3d93 ; call qword ptr [rcx]
0x000000000011c8ad : nop ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x00000000000d908f : nop ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x000000000015241f : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000114f4f : nop ; mov dword ptr [r8], edx ; xor eax, eax ; ret
0x00000000001525ff : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000000f661f : nop ; mov eax, 0x5f ; syscall ; ret
0x00000000000ccf8f : nop ; mov eax, 0xfffa ; ret
0x0000000000071faf : nop ; mov eax, 0xffffffff ; ret
0x00000000000ac33f : nop ; mov eax, 1 ; ret
0x0000000000114097 : nop ; mov eax, dword ptr [r14 + 0x18] ; mov dword ptr [rbp - 0x80], eax ; call r9
0x000000000011350f : nop ; mov eax, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], eax ; call rcx
0x00000000000ab1cf : nop ; mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0xab239 ; ret
0x00000000000ab21f : nop ; mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0xab239 ; ret
0x00000000000fba4f : nop ; mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x0000000000077e2f : nop ; mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x000000000003685f : nop ; mov eax, dword ptr [rip + 0x38c826] ; ret
0x000000000010a4ef : nop ; mov eax, edi ; ret
0x0000000000118adf : nop ; mov eax, edi ; ror ax, 8 ; ret
0x00000000000368bf : nop ; mov eax, edx ; ret
0x00000000001529bf : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000a692f : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000007825f : nop ; mov rax, -1 ; pop rbx ; ret
0x000000000007be6f : nop ; mov rax, -1 ; ret
0x000000000007740f : nop ; mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000772ff : nop ; mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x000000000013a2df : nop ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x000000000013a3bf : nop ; mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000012070f : nop ; mov rax, qword ptr [rip + 0x2a4161] ; ret
0x00000000000d0cdf : nop ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007d4c8 : nop ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009e23f : nop ; mov rax, rdi ; ret
0x0000000000113e45 : nop ; mov rdx, r13 ; call rax
0x000000000008452f : nop ; mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x00000000000f569f : nop ; mov word ptr [rdi], si ; xor eax, eax ; ret
0x00000000000a53ef : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000194844 : nop ; movsb byte ptr [rdi], byte ptr [rsi] ; std ; call qword ptr [rax]
0x000000000019484c : nop ; movsd dword ptr [rdi], dword ptr [rsi] ; std ; call qword ptr [rax]
0x0000000000084b13 : nop ; movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0x00000000000f567f : nop ; movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000001ae4c0 : nop ; out 0xf4, al ; jmp qword ptr [rbx]
0x00000000001b0170 : nop ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x000000000011019f : nop ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f615f : nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004a45f : nop ; pop rbx ; ret
0x0000000000195134 : nop ; pop rcx ; cld ; call qword ptr [rax]
0x00000000001afcf0 : nop ; pop rdx ; cmc ; jmp qword ptr [rcx]
0x0000000000194f2c : nop ; pop rsp ; cld ; jmp qword ptr [rsi]
0x0000000000188109 : nop ; push qword ptr [rcx + rdx*4 - 0xd] ; jmp qword ptr [rdx]
0x0000000000195350 : nop ; push rbp ; cld ; call qword ptr [rax]
0x0000000000195340 : nop ; push rdi ; cld ; call qword ptr [rax]
0x0000000000195348 : nop ; push rsi ; cld ; call qword ptr [rax]
0x0000000000195358 : nop ; push rsp ; cld ; call qword ptr [rax]
0x000000000002058f : nop ; ret
0x0000000000002f9e : nop ; ret 0x5bdb
0x0000000000194b68 : nop ; sar ebx, cl ; jmp rax
0x00000000001a0e00 : nop ; shr ah, 1 ; call rsp
0x00000000001aeb20 : nop ; std ; hlt ; jmp qword ptr [rcx]
0x00000000001946d0 : nop ; sti ; jmp rax
0x0000000000195910 : nop ; stosd dword ptr [rdi], eax ; cld ; jmp qword ptr [rax]
0x000000000007c7bf : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000195b28 : nop ; test al, 0xfc ; jmp qword ptr [rax]
0x0000000000195418 : nop ; test bh, ah ; jmp qword ptr [rax]
0x00000000001ac600 : nop ; xlatb ; jmp qword ptr [rcx]
0x0000000000194e4c : nop ; xor al, 0xfc ; jmp qword ptr [rax]
0x0000000000194e48 : nop ; xor bh, ah ; call qword ptr [rax + 0x20fffc34]
0x0000000000194dcc : nop ; xor eax, 0x2820fffc ; cld ; jmp rax
0x00000000000c6e7f : nop ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000074e9f : nop ; xor eax, eax ; ret
0x0000000000194dc8 : nop ; xor edi, esp ; call qword ptr [rax + 0x20fffc35]
0x000000000008e16f : nop ; xor rax, rax ; ret
0x0000000000143218 : nop dword ptr [rax + rax] ; call rcx
0x00000000000350c3 : nop dword ptr [rax + rax] ; fstp st(1) ; ret
0x00000000001735c3 : nop dword ptr [rax + rax] ; jmp 0x1f8af
0x0000000000072f6b : nop dword ptr [rax + rax] ; mov eax, dword ptr [rdx] ; ret
0x0000000000070093 : nop dword ptr [rax + rax] ; mov eax, edi ; ret
0x00000000000a532b : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000114113 : nop dword ptr [rax + rax] ; mov rax, qword ptr [rax + 0x30] ; ret
0x00000000001059a3 : nop dword ptr [rax + rax] ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000033e9b : nop dword ptr [rax + rax] ; mov rax, rcx ; ret
0x00000000000a659b : nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x000000000012bd9b : nop dword ptr [rax + rax] ; pop rbx ; ret
0x0000000000045a23 : nop dword ptr [rax + rax] ; ret
0x000000000003a7eb : nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000039ef3 : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000ab23b : nop dword ptr [rax + rax] ; xor rax, rax ; ret
0x000000000006b425 : nop dword ptr [rax] ; add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x00000000000ab50c : nop dword ptr [rax] ; add rax, 1 ; ret
0x0000000000173ca5 : nop dword ptr [rax] ; add rsp, 8 ; ret
0x0000000000142ed4 : nop dword ptr [rax] ; call qword ptr [rax]
0x0000000000174969 : nop dword ptr [rax] ; call qword ptr [rbx]
0x00000000000abe15 : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000abe05 : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000abe0d : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000ccf85 : nop dword ptr [rax] ; mov eax, 0x7e ; ret
0x00000000000368b4 : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x0000000000088ba5 : nop dword ptr [rax] ; mov eax, 1 ; ret
0x000000000012d89d : nop dword ptr [rax] ; mov eax, 2 ; ret
0x00000000000c7f2d : nop dword ptr [rax] ; mov eax, dword ptr [rdi] ; ret
0x000000000007453d : nop dword ptr [rax] ; mov eax, dword ptr [rdx] ; ret
0x000000000002df1d : nop dword ptr [rax] ; mov eax, edi ; and eax, 0x7f ; ret
0x00000000000a5ffd : nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000076c0d : nop dword ptr [rax] ; mov edx, eax ; jmp 0x76b9a
0x0000000000093fe4 : nop dword ptr [rax] ; mov qword ptr [rdi], rcx ; ret
0x00000000001059ad : nop dword ptr [rax] ; mov rax, qword ptr [rax + 0x58] ; ret
0x0000000000083e65 : nop dword ptr [rax] ; mov rdx, qword ptr [rsp + 0x68] ; call rax
0x0000000000083b5c : nop dword ptr [rax] ; mov rsi, qword ptr [rsp + 0x48] ; call rax
0x0000000000084224 : nop dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000b957c : nop dword ptr [rax] ; pop rbx ; ret
0x000000000002bd51 : nop dword ptr [rax] ; ret
0x0000000000110345 : nop dword ptr [rax] ; sub eax, edi ; ret
0x00000000000d71ed : nop dword ptr [rax] ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000083845 : nop dword ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x000000000006ac84 : nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000034a5d : nop dword ptr [rax] ; xor ecx, ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000000a5fb7 : nop dword ptr cs:[rax + rax] ; ret
0x0000000000143217 : nop word ptr [rax + rax] ; call rcx
0x00000000000350c2 : nop word ptr [rax + rax] ; fstp st(1) ; ret
0x00000000001735c2 : nop word ptr [rax + rax] ; jmp 0x1f8b0
0x0000000000072f6a : nop word ptr [rax + rax] ; mov eax, dword ptr [rdx] ; ret
0x0000000000033e9a : nop word ptr [rax + rax] ; mov rax, rcx ; ret
0x00000000000a659a : nop word ptr [rax + rax] ; mov rax, rdi ; ret
0x000000000012bd9a : nop word ptr [rax + rax] ; pop rbx ; ret
0x0000000000045a2a : nop word ptr [rax + rax] ; ret
0x000000000003a7ea : nop word ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000039ef2 : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000ab23a : nop word ptr [rax + rax] ; xor rax, rax ; ret
0x00000000000becbe : not eax ; add eax, 0x16e ; ret
0x000000000013bc81 : not eax ; add rsp, 8 ; shr eax, 0x1f ; ret
0x00000000000d6772 : not eax ; and eax, 2 ; ret
0x0000000000034780 : not eax ; and eax, edx ; ret
0x0000000000035f53 : not eax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x00000000000218e1 : not eax ; xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x0000000000035f52 : not rax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x0000000000194b81 : or ah, bh ; jmp qword ptr [rax]
0x00000000001ae728 : or ah, ch ; hlt ; jmp qword ptr [rcx]
0x0000000000066293 : or al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x348
0x00000000001455a7 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001491b9 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001455d5 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000fc5aa : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000081cdc : or al, 0 ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x00000000000db661 : or al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000892d0 : or al, 0 ; add byte ptr [rax], al ; ret
0x000000000008245a : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000006627c : or al, 0 ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000000044f : or al, 0 ; add eax, 0xc1c107c ; ret 0x4412
0x00000000000bf681 : or al, 0 ; add rax, rdi ; jmp rax
0x00000000000fbe42 : or al, 0 ; add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x000000000008e76a : or al, 0 ; cmove rax, rdx ; ret
0x00000000000ab270 : or al, 0 ; ret
0x0000000000094f82 : or al, 0x16 ; mov byte ptr [rsi + rdx + 1], al ; jg 0x94f79 ; ret
0x000000000008a6f6 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x0000000000082442 : or al, 0x18 ; mov rax, r8 ; pop rbx ; ret
0x0000000000083841 : or al, 0x18 ; pop rbx ; ret
0x00000000000be135 : or al, 0x20 ; mov rdx, rax ; jmp 0xbe144
0x0000000000129d24 : or al, 0x24 ; call r12
0x0000000000106caa : or al, 0x30 ; ror byte ptr [rcx], 0xf8 ; ret
0x0000000000053947 : or al, 0x31 ; div dh ; ret 0x4050
0x000000000013301b : or al, 0x31 ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000001ae6dc : or al, 0x34 ; add dword ptr [rax], eax ; adc bl, ch ; hlt ; jmp rdx
0x00000000000cb6b2 : or al, 0x48 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003582c : or al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x000000000011702b : or al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000003ab3e : or al, 0x48 ; add esp, 0x18 ; ret
0x00000000000c8bf3 : or al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000143001 : or al, 0x48 ; add esp, 0x38 ; ret
0x0000000000035bd9 : or al, 0x48 ; add esp, 0x90 ; pop rbx ; ret
0x0000000000070e43 : or al, 0x48 ; add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000122861 : or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x00000000000ab824 : or al, 0x48 ; mov eax, ebx ; pop rbx ; ret
0x000000000006dd3b : or al, 0x48 ; mov edi, dword ptr [rdi + 0xe0] ; jmp rax
0x00000000001b00dc : or al, 0x4e ; add dword ptr [rax], eax ; and byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b08dc : or al, 0x56 ; add dword ptr [rax], eax ; jo 0x1b0963 ; cmc ; jmp qword ptr [rcx]
0x00000000000c6c03 : or al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008aaf3 : or al, 0x5b ; pop rbp ; pop r12 ; ret
0x00000000001870a4 : or al, 0x5d ; out dx, al ; lcall ptr [rsi + rbx*2] ; out dx, al ; jmp rsp
0x00000000000bac12 : or al, 0x5d ; pop r12 ; pop r14 ; ret
0x0000000000114a6a : or al, 0x5d ; pop r12 ; ret
0x000000000008dce8 : or al, 0x75 ; fisttp qword ptr [rax - 1] ; ret 0xff48
0x00000000001a2fdc : or al, 0x7d ; add byte ptr [rax], al ; push rax ; in eax, dx ; jmp qword ptr [rax]
0x000000000006c68a : or al, 0x7e ; ret
0x00000000000004b3 : or al, 0x80 ; push rbx ; add al, 4 ; ret 0x6080
0x00000000000a5a2c : or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000004bc45 : or al, 0x83 ; ret
0x000000000005152c : or al, 0x85 ; sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x000000000009e002 : or al, 0x88 ; add rax, r9 ; jmp rax
0x0000000000093ebf : or al, 0x88 ; add rax, rcx ; jmp rax
0x000000000002be45 : or al, 0x88 ; add rcx, r8 ; jmp rcx
0x00000000000e6b55 : or al, 0x89 ; push rsp ; ret
0x000000000011842b : or al, 0x89 ; ret 0x6ae9
0x00000000000f25ae : or al, 0x8a ; add rdx, rcx ; jmp rdx
0x0000000000089363 : or al, 0x8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000091244 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000015877d : or al, 0x8b ; add r9, r11 ; jmp r9
0x0000000000047c53 : or al, 0x8b ; add rcx, r11 ; jmp rcx
0x000000000015084d : or al, 0x8b ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000003d485 : or al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000010a4e8 : or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000033289 : or al, 0x8f ; add rcx, rdi ; jmp rcx
0x000000000016dc7f : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x00000000000a51bb : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000005c19f : or al, 0xa0 ; add rax, rcx ; jmp rax
0x00000000001bbbb1 : or al, 0xa5 ; add ebp, eax ; add ebp, esi ; add al, byte ptr [rax] ; ret
0x00000000001a5bdc : or al, 0xa9 ; add byte ptr [rax], al ; out dx, al ; call qword ptr [rax]
0x0000000000002bce : or al, 0xaf ; xbegin 0xfffffffff8c6efd2 ; ret
0x0000000000150851 : or al, 0xb ; jmp r9
0x00000000000a51bf : or al, 0xb ; jmp rcx
0x00000000001350b8 : or al, 0xb0 ; add rax, rcx ; jmp rax
0x000000000013bf27 : or al, 0xb0 ; shr rdx, 3 ; add rax, rcx ; jmp rax
0x00000000001350ce : or al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000003645f : or al, 0xc2 ; mov qword ptr [rdi + rax*8], rcx ; xor eax, eax ; pop rbx ; ret
0x0000000000036463 : or al, 0xc7 ; xor eax, eax ; pop rbx ; ret
0x00000000001a8cdc : or al, 0xda ; add byte ptr [rax], al ; add byte ptr [rsi], ch ; int1 ; jmp qword ptr [rcx]
0x00000000001a90dc : or al, 0xde ; add byte ptr [rax], al ; and byte ptr [rcx + rsi*8 - 1], dl ; ret
0x00000000000ab125 : or al, 0xf ; test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x00000000000a5cb3 : or al, 0xf ; test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x000000000015acc3 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000035793 : or al, 0xf3 ; ret
0x00000000001aa8dc : or al, 0xf6 ; add byte ptr [rax], al ; push rax ; and edx, esi ; jmp qword ptr [rcx]
0x00000000001221a2 : or al, 0xf6 ; ret 0xc602
0x000000000006cddb : or al, 0xf6 ; ret 0xf04
0x000000000005673c : or al, 0xf6 ; ret 0xf08
0x0000000000100905 : or al, 0xf7 ; ret 0xfc07
0x000000000002b391 : or al, 0xf8 ; test rcx, rcx ; je 0x2b3a1 ; call rcx
0x0000000000194c8d : or al, 0xfc ; call qword ptr [rax]
0x0000000000194b89 : or al, 0xfc ; jmp qword ptr [rax]
0x0000000000194cad : or al, 0xfc ; jmp rax
0x00000000000f5f42 : or al, 1 ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000000884 : or al, 1 ; add byte ptr [rax], al ; ret 0x440c
0x00000000000f6032 : or al, 1 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000a5ef0 : or al, 5 ; add byte ptr [rax], al ; ret
0x000000000011de5c : or al, 7 ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000009e0f6 : or al, 7 ; test cl, cl ; jne 0x9e0ef ; ret
0x000000000009cabf : or al, byte ptr [rax] ; add bh, dh ; ret 0
0x00000000000970fb : or al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000b347d : or al, byte ptr [rax] ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x0000000000037361 : or al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x39], r9b ; ret
0x000000000014477d : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147391 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001447a1 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000102a0 : or al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000010af2 : or al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000eb793 : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x78] ; call r12
0x000000000012d192 : or al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000df2b1 : or al, byte ptr [rax] ; movsxd rax, dword ptr [rax + rdx*4] ; add rax, rdi ; jmp rax
0x00000000000e1538 : or al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000e57be : or al, byte ptr [rax] ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x00000000000abbda : or al, byte ptr [rbp - 0xc0e8a37] ; ret
0x000000000003cfb1 : or al, byte ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8348
0x000000000006f1fd : or al, byte ptr [rcx + rcx*8 - 0x7cb7b58c] ; ret 0x8001
0x0000000000125b69 : or al, byte ptr [rcx - 0x7d] ; ret 0x4101
0x00000000000004b1 : or al, byte ptr [rcx] ; or al, 0x80 ; push rbx ; add al, 4 ; ret 0x6080
0x00000000001955ec : or al, byte ptr [rdx - 0x7e4f0004] ; cld ; jmp qword ptr [rax]
0x000000000019a2bd : or al, byte ptr [rdx] ; add byte ptr [rsp + rdx*2 - 7], dl ; call rsp
0x000000000014c777 : or al, byte ptr es:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000009ea52 : or al, ch ; cwde ; ret 0xfffe
0x000000000012a8a2 : or al, ch ; mov byte ptr [rdi - 0x11], cl ; dec dword ptr [rax - 0x77] ; ret
0x00000000000fae17 : or al, ch ; ret
0x00000000000dd078 : or al, ch ; ret 0xfb69
0x0000000000194b85 : or bh, ah ; jmp qword ptr [rax]
0x0000000000194ca9 : or bh, ah ; push qword ptr [rax] ; or al, 0xfc ; jmp rax
0x000000000013b437 : or bh, bh ; push rax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001945e1 : or bh, bl ; call qword ptr [rax]
0x000000000008aa21 : or bh, byte ptr [rax - 1] ; cmovae eax, ecx ; ret
0x000000000007775d : or bh, byte ptr [rax - 1] ; ret
0x00000000000b943f : or bh, byte ptr [rcx] ; ret
0x00000000000e467f : or bh, dh ; ret
0x00000000000ff55f : or bh, dh ; ret 0xfc07
0x00000000001b5bc8 : or bl, ah ; sti ; call rsi
0x000000000012a80e : or bl, al ; mov eax, 1 ; ret
0x00000000000abe13 : or bl, al ; nop dword ptr [rax] ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000001059ab : or bl, al ; nop dword ptr [rax] ; mov rax, qword ptr [rax + 0x58] ; ret
0x00000000001239a3 : or bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000123800 : or bl, al ; nop word ptr [rax + rax] ; ret
0x00000000001a64e8 : or bl, bl ; out dx, al ; jmp qword ptr [rsi]
0x00000000001bbdc6 : or bl, byte ptr [rax] ; add byte ptr [rax], al ; loopne 0x1bbddd ; ret 0xb
0x00000000000022dc : or bl, byte ptr [rbx + 0x38] ; ja 0xffffffffd6104b6e ; ret
0x0000000000096245 : or bl, byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000e9bd8 : or bl, byte ptr [rdx + 0x59] ; pop rbx ; ret
0x0000000000118acd : or bl, ch ; scasd eax, dword ptr [rdi] ; mov eax, edi ; bswap eax ; ret
0x0000000000078018 : or bl, ch ; xchg eax, edx ; mov edx, eax ; jmp 0x77fb4
0x000000000015ae83 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000002da7f : or bl, dh ; ret
0x00000000000d4ed8 : or byte ptr [r10], r11b ; mov eax, 2 ; ret
0x000000000012bcb8 : or byte ptr [r10], r13b ; push 0x19 ; call qword ptr [rax]
0x00000000000d4e51 : or byte ptr [r10], r8b ; xor eax, eax ; ret
0x0000000000033e3d : or byte ptr [r11 + r9*4 + 0x4f], r9b ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x00000000000ac006 : or byte ptr [r13 + r13*4 + 0x48], r14b ; mov eax, ebx ; pop rbx ; ret
0x00000000000a214f : or byte ptr [r14 - 0x77], spl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000d4e42 : or byte ptr [r14], r10b ; mov eax, 1 ; ret
0x00000000000d4f0e : or byte ptr [r14], r11b ; mov eax, 2 ; ret
0x0000000000073fc7 : or byte ptr [r8 + 0x29], r9b ; ret
0x00000000000d6792 : or byte ptr [r8 + 0x63], r9b ; ret 0xf53
0x00000000000d4f21 : or byte ptr [r8 + r15*4], r11b ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000013b37a : or byte ptr [r8 - 0x75], r9b ; jmp rax
0x00000000000a212e : or byte ptr [r8 - 0x76b7f7be], cl ; clc ; ret
0x00000000001664d8 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000012df82 : or byte ptr [r8 - 0x77], cl ; out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x000000000013820a : or byte ptr [r8 - 0x77], r9b ; fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x00000000000eac21 : or byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x0000000000039f22 : or byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x0000000000102947 : or byte ptr [r8 - 0x7d], r9b ; ret
0x000000000014c952 : or byte ptr [r8], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000be8a3 : or byte ptr [r9 + 0x39], cl ; ret 0x8e0f
0x00000000000d8e74 : or byte ptr [r9 + 0x63], r9b ; ret 0x4c6
0x00000000000a218e : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x000000000007244f : or byte ptr [r9 - 0x77], r9b ; ret
0x00000000000d4eb1 : or byte ptr [r9], r11b ; mov eax, 1 ; ret
0x00000000000d4e71 : or byte ptr [r9], r8b ; mov eax, 1 ; ret
0x000000000012b783 : or byte ptr [rax + 0x10], bh ; pop rbx ; pop rbp ; ret
0x0000000000073fc8 : or byte ptr [rax + 0x29], cl ; ret
0x000000000013f1d4 : or byte ptr [rax + 0x29], cl ; ret 0x1be
0x000000000013fe57 : or byte ptr [rax + 0x29], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x1be
0x00000000000bb253 : or byte ptr [rax + 0x29], r9b ; ret
0x000000000007cb77 : or byte ptr [rax + 0x39], cl ; enter 0x2373, 0xf ; mov dh, 0 ; ret
0x00000000001053e5 : or byte ptr [rax + 0x39], cl ; ret
0x0000000000081b9c : or byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000048dd5 : or byte ptr [rax + 0x39], cl ; ret 0x8949
0x0000000000132f09 : or byte ptr [rax + 0x63], cl ; ret
0x00000000000d6793 : or byte ptr [rax + 0x63], cl ; ret 0xf53
0x00000000001a96aa : or byte ptr [rax + 0xb], cl ; push rdx ; ret
0x00000000001af624 : or byte ptr [rax + 0xb], cl ; ret
0x00000000001ac1ed : or byte ptr [rax + 0xb], dl ; ret
0x0000000000118b3b : or byte ptr [rax + 0xf], al ; mov dh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x000000000010e19f : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x00000000000310dc : or byte ptr [rax + 1], cl ; ret
0x0000000000105b1e : or byte ptr [rax + 5], bh ; pop rbx ; pop rbp ; ret
0x00000000001126eb : or byte ptr [rax + 7], bh ; pop rbx ; pop rbp ; ret
0x00000000001a76af : or byte ptr [rax + rax], bh ; add ah, ah ; ret
0x000000000004b118 : or byte ptr [rax + rcx*4 - 0x73], al ; push -0x76000005 ; ret 0x8941
0x00000000000d4f22 : or byte ptr [rax + rdi*4], bl ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000ddc3b : or byte ptr [rax - 0x3f], 0xe0 ; add cl, byte ptr [rax - 0x77] ; ret
0x000000000012f51b : or byte ptr [rax - 0x3f], cl ; in eax, dx ; adc byte ptr [rcx - 0x7d], cl ; ret 0x8320
0x000000000008e91e : or byte ptr [rax - 0x73], cl ; add eax, 0x10e4a ; ret
0x000000000008e192 : or byte ptr [rax - 0x73], cl ; add eax, 0x26 ; ret
0x0000000000093a0d : or byte ptr [rax - 0x73], cl ; add eax, 0xb3db ; ret
0x00000000000939de : or byte ptr [rax - 0x73], cl ; add eax, 0xb63a ; ret
0x00000000000abe46 : or byte ptr [rax - 0x73], cl ; add eax, 0xc3452 ; ret
0x000000000008e1a6 : or byte ptr [rax - 0x73], cl ; add eax, 0xdfab2 ; ret
0x00000000000abe32 : or byte ptr [rax - 0x73], cl ; add eax, 0xe916 ; ret
0x00000000000ab262 : or byte ptr [rax - 0x73], cl ; add eax, 0xf596 ; ret
0x000000000011596e : or byte ptr [rax - 0x73], cl ; add eax, 0xfff8969a ; ret
0x0000000000115a5e : or byte ptr [rax - 0x73], cl ; add eax, 0xfff89cfa ; ret
0x000000000013ae18 : or byte ptr [rax - 0x73], cl ; je 0x13ae4a ; or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x000000000013af5c : or byte ptr [rax - 0x73], cl ; je 0x13af8e ; or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x000000000007ecc3 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x0000000000109ae1 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x0000000000109b42 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x40 ; ret
0x0000000000102481 : or byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x00000000000f38d6 : or byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x77] ; ret
0x00000000000dc2df : or byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000013b37b : or byte ptr [rax - 0x75], cl ; jmp rax
0x000000000006dd67 : or byte ptr [rax - 0x75], cl ; mov edi, 0xe0 ; call rax
0x000000000012d16d : or byte ptr [rax - 0x75], cl ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000135062 : or byte ptr [rax - 0x75], cl ; push rax ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000a212f : or byte ptr [rax - 0x76b7f7be], cl ; clc ; ret
0x00000000001135e5 : or byte ptr [rax - 0x77], 0xda ; call rax
0x0000000000088ccb : or byte ptr [rax - 0x77], cl ; adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000038f3a : or byte ptr [rax - 0x77], cl ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000a2040 : or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000001187d8 : or byte ptr [rax - 0x77], cl ; clc ; sar rax, 6 ; ret
0x00000000000326a9 : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000013820b : or byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x000000000013a13e : or byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x00000000001664d9 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000012df83 : or byte ptr [rax - 0x77], cl ; out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x0000000000084f91 : or byte ptr [rax - 0x77], cl ; out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x000000000012cf5b : or byte ptr [rax - 0x77], cl ; out dx, eax ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x000000000007dcb6 : or byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000098567 : or byte ptr [rax - 0x77], cl ; ret
0x000000000012f165 : or byte ptr [rax - 0x77], cl ; ret 0x314c
0x000000000013b0af : or byte ptr [rax - 0x77], cl ; ret 0x4489
0x00000000000ef3fb : or byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000023433 : or byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000039f23 : or byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000088b9d : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x13], 0xf3 ; ret
0x0000000000088c47 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x0000000000088ea9 : or byte ptr [rax - 0x7bf0ffc8], al ; ret 0
0x0000000000081b98 : or byte ptr [rax - 0x7d], cl ; call 0xffffffffc24163af
0x0000000000081b97 : or byte ptr [rax - 0x7d], cl ; call 0xffffffffc24163b0
0x0000000000082698 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000048bf6 : or byte ptr [rax - 0x7d], cl ; ret
0x0000000000094076 : or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000940fe : or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000000000006e5be : or byte ptr [rax - 0x7d], cl ; ret 0x4803
0x0000000000054cf2 : or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x000000000007038b : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x000000000007407d : or byte ptr [rax - 9], cl ; fimul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], cl ; ret
0x00000000001449dc : or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001059ba : or byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x000000000007dba4 : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000007db65 : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x8948
0x00000000001449dd : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147531 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144a01 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000bbb57 : or byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; cli ; ret 0x10
0x000000000007ba4c : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000007d35e : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x0000000000019be0 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cdq ; ret
0x00000000000191a8 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cld ; ret 0x18
0x0000000000019d18 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cmc ; ret
0x0000000000019148 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; in al, dx ; ret 0x18
0x0000000000019ca0 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; in eax, dx ; ret
0x0000000000018f38 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 0x18
0x0000000000019d00 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; int1 ; ret
0x00000000000190b8 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; leave ; ret 0x18
0x0000000000019010 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lodsd eax, dword ptr [rsi] ; ret 0x18
0x0000000000018fe0 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x18
0x0000000000018ec0 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret 0x18
0x0000000000018ed8 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rsp ; ret 0x18
0x0000000000018e90 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; ret 0x18
0x0000000000019298 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rsp ; ret
0x0000000000018ea8 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rsp ; ret 0x18
0x0000000000018fc8 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pushfq ; ret 0x18
0x00000000000189e0 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000185a8 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18
0x000000000000b530 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x56
0x0000000000018248 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x0000000000018fb0 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, ebp ; ret 0x18
0x00000000000218a1 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edx ; ret
0x00000000000aa269 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000012d1a2 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000f2a5c : or byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000f3fde : or byte ptr [rax], al ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdi]
0x000000000004a5c8 : or byte ptr [rax], al ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x00000000001055ad : or byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x00000000001081b0 : or byte ptr [rax], al ; movzx edi, di ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000a925d : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a929b : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a923b : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x000000000006ab7b : or byte ptr [rax], dl ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000014af4e : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000004872c : or byte ptr [rbp + 0x39], cl ; sal dword ptr [rbp + rsi*2 + 0x4c], -0x77 ; ret 0xf749
0x000000000012369f : or byte ptr [rbp + 0x5b001d44], cl ; pop rbp ; ret
0x00000000000ac007 : or byte ptr [rbp + rbp*4 + 0x48], dh ; mov eax, ebx ; pop rbx ; ret
0x00000000000d6464 : or byte ptr [rbp + rcx*4 + 0x4a], al ; inc dword ptr [rcx] ; ret 0x5589
0x00000000000ba7f2 : or byte ptr [rbp - 0x28], dh ; ret
0x000000000003d30d : or byte ptr [rbp - 0x57f2faf], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000abcf9 : or byte ptr [rbp - 0x75], al ; sbb al, byte ptr [rcx - 0x75] ; add dword ptr [rcx + 0x39], eax ; ret
0x00000000000dbb1b : or byte ptr [rbp - 0x9df8b0a], al ; ret
0x0000000000003cdf : or byte ptr [rbx + 0x4e], ch ; ret 0x6bba
0x000000000001fc02 : or byte ptr [rbx + 0x5d5b0443], cl ; pop r12 ; ret
0x000000000012e08b : or byte ptr [rbx + 0x5d], bl ; add eax, edx ; ret
0x0000000000071f02 : or byte ptr [rbx + 0x5d], bl ; jmp rax
0x0000000000032db3 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000088c1f : or byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000021a33 : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000007908a : or byte ptr [rbx + 0x5d], bl ; sub rax, rdx ; ret
0x00000000001a4d8f : or byte ptr [rbx + 0xe], ch ; adc byte ptr [rbx + 0xaa30202], al ; ret
0x00000000001a4d9a : or byte ptr [rbx + rcx + 0x43], al ; ret
0x000000000019c8b5 : or byte ptr [rbx + rcx + 0x7e], cl ; ret
0x0000000000173759 : or byte ptr [rbx + rcx*4 + 0x25], cl ; call qword ptr [rcx]
0x0000000000033e3e : or byte ptr [rbx + rcx*4 + 0x4f], cl ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x0000000000050157 : or byte ptr [rbx - 0x1776cf3b], al ; pop rbx ; pop rbp ; ret
0x0000000000188348 : or byte ptr [rbx - 0x5826000d], ch ; jmp qword ptr [rax]
0x000000000013d50e : or byte ptr [rbx - 0x6bf0f502], al ; ret
0x000000000006d381 : or byte ptr [rbx - 0x76fefbbe], al ; ret 0xe281
0x00000000000709b7 : or byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000001afd68 : or byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x000000000018176c : or byte ptr [rbx], ah ; jmp 0x181772
0x00000000001bbc81 : or byte ptr [rbx], al ; ret
0x0000000000112665 : or byte ptr [rbx], ch ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000049fcb : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x00000000000be8a4 : or byte ptr [rcx + 0x39], cl ; ret 0x8e0f
0x0000000000054b39 : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x0000000000141ee5 : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x00000000000e0fb7 : or byte ptr [rcx + 0x63], cl ; cmp al, 0xbb ; add rdi, r11 ; jmp rdi
0x00000000000d8e75 : or byte ptr [rcx + 0x63], cl ; ret 0x4c6
0x00000000001a066a : or byte ptr [rcx + 0xb], cl ; ret
0x000000000006c1b3 : or byte ptr [rcx + 0xf], al ; mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x00000000000483eb : or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000049070 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x000000000013e313 : or byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8b41
0x000000000011f69c : or byte ptr [rcx + rcx*4 - 0x11], cl ; call r12
0x000000000013ae1d : or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x0000000000037d57 : or byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbp ; call r15
0x000000000013364e : or byte ptr [rcx + rcx*4 - 1], cl ; call 0x1f8ae
0x0000000000039197 : or byte ptr [rcx + rcx*4 - 2], cl ; mov rdi, r13 ; call r14
0x00000000000483f2 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000007757a : or byte ptr [rcx - 0x74b777bb], cl ; or cl, byte ptr [rax - 0x7d] ; ret
0x00000000000d642c : or byte ptr [rcx - 0x75], cl ; je 0xd645c ; or byte ptr [rcx], ch ; ret
0x00000000000a218f : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x00000000000d9b63 : or byte ptr [rcx - 0x77], al ; ret 0xff25
0x0000000000072450 : or byte ptr [rcx - 0x77], cl ; ret
0x000000000003ce5f : or byte ptr [rcx - 0x77], cl ; ret 0x44c6
0x0000000000109bb8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x109bca ; ret
0x0000000000109c48 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x109c5a ; ret
0x0000000000109ce8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x109cfa ; ret
0x0000000000109d78 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x109d8a ; ret
0x0000000000109e08 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x109e1a ; ret
0x0000000000109e98 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x109eaa ; ret
0x0000000000109f38 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x109f4a ; ret
0x0000000000109fd8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x109fea ; ret
0x000000000010a078 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a08a ; ret
0x000000000010a108 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a11a ; ret
0x000000000010a1a3 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a1b5 ; ret
0x000000000010a238 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a24a ; ret
0x000000000010a55a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a56c ; ret
0x000000000010a5da : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a5ec ; ret
0x000000000010a65a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a66c ; ret
0x000000000010a6da : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a6ec ; ret
0x000000000010a75a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a76c ; ret
0x000000000010a7da : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a7ec ; ret
0x000000000010a85a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a86c ; ret
0x000000000010a8da : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a8ec ; ret
0x000000000010a95a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a96c ; ret
0x000000000010a9da : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a9ec ; ret
0x000000000010aa57 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10aa69 ; ret
0x000000000010aada : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10aaec ; ret
0x0000000000083119 : or byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x000000000003908a : or byte ptr [rcx - 0x7d], cl ; ret
0x00000000000e3218 : or byte ptr [rcx - 0x7d], cl ; ret 0x4501
0x0000000000037601 : or byte ptr [rcx - 0x7d], cl ; ret 0xf301
0x00000000000e814a : or byte ptr [rcx - 0x9ce8c28], cl ; ret
0x0000000000181750 : or byte ptr [rcx], ah ; jmp 0x181756
0x00000000000f5f52 : or byte ptr [rcx], al ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000359cf : or byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000000f6044 : or byte ptr [rcx], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000d4ef7 : or byte ptr [rcx], al ; mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00000000000d4e72 : or byte ptr [rcx], al ; mov eax, 1 ; ret
0x00000000000ba7ef : or byte ptr [rcx], bh ; push rdi ; or byte ptr [rbp - 0x28], dh ; ret
0x000000000013ec43 : or byte ptr [rcx], bh ; ret 0x3875
0x00000000000d4eb2 : or byte ptr [rcx], bl ; mov eax, 1 ; ret
0x00000000000b94bd : or byte ptr [rcx], ch ; ret
0x0000000000124d1c : or byte ptr [rcx], cl ; ret 0xb60f
0x0000000000115180 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x0000000000022b4e : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000e70fb : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000007dcf3 : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000007c7ff : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000001852be : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000001a377b : or byte ptr [rdi + 0xb], al ; add dh, byte ptr [rbp + 0x41180e0a] ; ret
0x00000000001a1df4 : or byte ptr [rdi + 0xb], al ; jae 0x1a1e08 ; ret
0x000000000019fa91 : or byte ptr [rdi + 0xe], al ; adc byte ptr [rbx + 0xaae0202], al ; ret
0x0000000000026ec3 : or byte ptr [rdi], 0x94 ; ret 0x8348
0x000000000002a219 : or byte ptr [rdi], cl ; mov bh, 0x43 ; add al, 0x29 ; ret 0x8941
0x000000000002dd14 : or byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x000000000007b35c : or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000077e91 : or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000000ce7b3 : or byte ptr [rdi], cl ; mov dh, 0x42 ; add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x000000000006c801 : or byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x0000000000077efb : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000012edf9 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x00000000000453a8 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000035d54 : or byte ptr [rdi], cl ; ret 0xc289
0x0000000000150e1b : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x00000000000474ff : or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc221
0x000000000004c34e : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9522
0x000000000002086a : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000019d33a : or byte ptr [rdx + 0xb], cl ; pop rdi ; ret
0x00000000001b0428 : or byte ptr [rdx - 0xb], dh ; jmp qword ptr [rcx]
0x00000000000d71e7 : or byte ptr [rdx], al ; jne 0xd71c5 ; jmp 0xd71b5
0x00000000000d4e52 : or byte ptr [rdx], al ; xor eax, eax ; ret
0x00000000000d4ed9 : or byte ptr [rdx], bl ; mov eax, 2 ; ret
0x000000000012bcb9 : or byte ptr [rdx], ch ; push 0x19 ; call qword ptr [rax]
0x00000000000fba52 : or byte ptr [rip + 0x100f], ah ; ret
0x00000000000fba51 : or byte ptr [rip + 0x100f], r12b ; ret
0x0000000000194c0c : or byte ptr [rip + 0x10fffc], 0xfc ; call rax
0x00000000000fbd3a : or byte ptr [rip - 0x80000000], 0x39 ; ret 0x8e75
0x00000000000a4d41 : or byte ptr [rsi + 0xf], ah ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x000000000010eebb : or byte ptr [rsi + rbx + 0x4c], dh ; mov edx, eax ; jmp 0x10eed1
0x00000000000d6871 : or byte ptr [rsi + rdx*4 + 0x5b], dh ; ret
0x00000000001b2c88 : or byte ptr [rsi + rsi*8], bh ; call qword ptr [rax]
0x00000000000a2150 : or byte ptr [rsi - 0x77], ah ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000001b00c8 : or byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001af0a8 : or byte ptr [rsi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000000d4f0f : or byte ptr [rsi], bl ; mov eax, 2 ; ret
0x00000000000ed320 : or byte ptr [rsi], cl ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000000d4e43 : or byte ptr [rsi], dl ; mov eax, 1 ; ret
0x0000000000003cde : or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x00000000000960c1 : or ch, bl ; ret 0x1f0f
0x00000000001bbce8 : or ch, byte ptr [rdi + 5] ; ret
0x00000000001bbdcb : or ch, byte ptr [rsi] ; ret 0xb
0x0000000000197139 : or ch, dh ; jmp rsp
0x00000000000475ff : or cl, al ; call 0xffffffffc28db72b
0x00000000000d9b60 : or cl, al ; jmp 0xffffffffc296dc75
0x00000000000d9b5f : or cl, al ; jmp 0xffffffffc296dc76
0x00000000000d9c63 : or cl, al ; out dx, al ; or byte ptr [rcx - 0x77], al ; ret 0xff25
0x000000000003504b : or cl, bl ; std ; fstp st(1) ; ret
0x00000000000ba897 : or cl, byte ptr [rax + 0x29] ; ret 0x8941
0x0000000000029d94 : or cl, byte ptr [rax + 0x39] ; ret 0x4676
0x00000000000ab735 : or cl, byte ptr [rax + 0x39] ; ret 0xe575
0x000000000007a52e : or cl, byte ptr [rax + 1] ; ret 0x8948
0x0000000000078b07 : or cl, byte ptr [rax + 1] ; ret 0x8949
0x000000000006627b : or cl, byte ptr [rax + rax] ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000072eef : or cl, byte ptr [rax - 0x77] ; ret
0x00000000000e7986 : or cl, byte ptr [rax - 0x77] ; ret 0xa1e8
0x00000000000c0b92 : or cl, byte ptr [rax - 0x77] ; ror dword ptr [rax - 0x7d], cl ; ret 0xf601
0x000000000006f69c : or cl, byte ptr [rax - 0x7d] ; ret
0x000000000008d23a : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x00000000000d8d4f : or cl, byte ptr [rax - 0x7d] ; ret 0x8304
0x000000000004abda : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000003d44d : or cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000071ec7 : or cl, byte ptr [rbx + 0x5bd08910] ; ret
0x0000000000118b75 : or cl, byte ptr [rcx + 0x18e8c1f8] ; ret
0x000000000001f963 : or cl, byte ptr [rcx + 0x1c829f0] ; sar dword ptr [rcx], 1 ; ret 0xffb8
0x000000000013d88f : or cl, byte ptr [rcx + 0x39] ; ret
0x000000000010de02 : or cl, byte ptr [rcx - 0x77] ; fmul qword ptr [rcx + 0x29] ; fisttp word ptr [rax - 0x77] ; ret
0x0000000000118af5 : or cl, byte ptr [rcx - 0xda08] ; inc dword ptr [rax] ; ret
0x0000000000168406 : or cl, byte ptr [rdi] ; test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x000000000008595a : or cl, byte ptr [rdi] ; xchg dword ptr [rcx + rax - 0x7cb70000], ebx ; ret 0xe96e
0x000000000003d313 : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000013d511 : or cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x00000000000356e7 : or cl, ch ; ret
0x00000000000e4c60 : or cl, ch ; ret 0xfffe
0x0000000000002beb : or cl, cl ; clc ; ret
0x000000000008cd85 : or cl, cl ; cmove rax, rdx ; ret
0x000000000015ada3 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000104e05 : or dh, bl ; ret
0x0000000000083050 : or dh, byte ptr [rax + rax] ; jne 0x83068 ; jmp 0x83082
0x00000000000aa3e6 : or dh, byte ptr [rbp - 0x11] ; ret
0x0000000000081773 : or dh, dh ; ret 0x7404
0x00000000000f6943 : or dh, dh ; ret 0x7540
0x000000000012d694 : or dh, dh ; ret 0x8802
0x00000000000816e6 : or dh, dh ; ret 0xf04
0x000000000001fe58 : or dh, dh ; ret 0xf08
0x000000000002f3de : or dh, dh ; ret 0xfdf
0x00000000001945e0 : or dil, bl ; call qword ptr [rax]
0x0000000000094d22 : or dl, byte ptr [rcx - 0x76b70001] ; ret 0xc031
0x000000000006bd4a : or dl, byte ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000006651e : or dword ptr [eax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000083150 : or dword ptr [rax + rax], esi ; jne 0x83168 ; jmp 0x83182
0x000000000011f5f0 : or dword ptr [rax - 0x73], ecx ; cmp eax, 0x2a8108 ; call rax
0x0000000000131aa3 : or dword ptr [rax - 0x73], ecx ; mov ebx, 0xc8 ; call rax
0x000000000010df39 : or dword ptr [rax - 0x7d], ecx ; call 0xffffffffc34a2749
0x00000000000988eb : or dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000008903e : or dword ptr [rax - 1], ecx ; ret 0xc148
0x0000000000020580 : or dword ptr [rax], eax ; add bl, dh ; ret
0x000000000014490d : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014adff : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144867 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000073bdf : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000002122a : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edi ; ret
0x00000000000f54b8 : or dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006651f : or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000000a4295 : or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000000757f4 : or dword ptr [rax], eax ; add rsp, 0x80 ; ret
0x00000000000efa05 : or dword ptr [rax], eax ; mov rdx, qword ptr [rax] ; call 0xcbcf7
0x00000000000f1883 : or dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000f25aa : or dword ptr [rax], eax ; movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x00000000000f1d77 : or dword ptr [rax], eax ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x00000000001bbe1e : or dword ptr [rax], ebx ; add byte ptr [rax], al ; loopne 0x1bbe34 ; ret 0xa
0x000000000003d42d : or dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000016f0b6 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000012d9b6 : or dword ptr [rbx + 0x31], ebx ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000010d7e6 : or dword ptr [rbx + 0x5d], ebx ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013479c : or dword ptr [rbx - 0x76b7fffb], esp ; ret 0xff31
0x00000000000ee48b : or dword ptr [rbx - 0x7af0f508], eax ; ret 0xa
0x000000000006dd76 : or dword ptr [rbx], 0x20 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000078900 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000007cfd8 : or dword ptr [rbx], 8 ; pop rbx ; ret
0x000000000004887c : or dword ptr [rcx + 0x39], ecx ; ret 0x870f
0x000000000008a998 : or dword ptr [rcx + 0xf], eax ; xchg eax, esi ; ret 0xc031
0x0000000000070f2e : or dword ptr [rcx + rcx*4 - 0x40], eax ; pop rbx ; ret
0x0000000000085926 : or dword ptr [rcx - 0x7d], ecx ; cli ; adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x0000000000095214 : or dword ptr [rcx - 0x7d], ecx ; ret
0x00000000000d4860 : or dword ptr [rcx - 0x7d], ecx ; ret 0x4c01
0x0000000000085b09 : or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x0000000000142f66 : or dword ptr [rcx], esi ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x0000000000035f33 : or dword ptr [rdi + rax*8], edx ; xor eax, eax ; ret
0x000000000006dd80 : or dword ptr [rdi], 0x20 ; ret
0x00000000000fbb07 : or dword ptr [rdi], 0x80000000 ; xor eax, eax ; ret
0x0000000000036076 : or dword ptr [rdi], eax ; xor eax, eax ; ret
0x000000000011c72b : or dword ptr [rdi], ecx ; ret
0x00000000001683e6 : or dword ptr [rdi], ecx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x000000000008a942 : or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0xc031
0x000000000010126a : or dword ptr [rdi], ecx ; xchg edi, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001017ea : or dword ptr [rdi], ecx ; xchg edi, esp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000019a27d : or dword ptr [rdx], eax ; add byte ptr [rcx + rdx*2 - 7], dh ; call rsp
0x0000000000120263 : or dword ptr [rsi + 0x2a], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000001adf02 : or dword ptr [rsi], 0x54028310 ; ret
0x00000000000269b0 : or dword ptr [rsi], 0xea810000 ; ret 0
0x00000000001bbe23 : or dword ptr [rsi], ebp ; ret 0xa
0x0000000000136bb3 : or dword ptr [rsi], esi ; add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000087e22 : or eax, 0x10453e ; mov rdx, rcx ; jmp 0x87df7
0x00000000000fc02a : or eax, 0x10c48348 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000194c0d : or eax, 0x10fffc ; cld ; call rax
0x00000000000347eb : or eax, 0x15f2c0 ; orpd xmm0, xmm1 ; ret
0x00000000001889e0 : or eax, 0x17fff44e ; hlt ; jmp qword ptr [rcx]
0x0000000000188b04 : or eax, 0x17fff451 ; push rcx ; hlt ; jmp qword ptr [rcx]
0x0000000000116b54 : or eax, 0x1c0d8b48 ; ret
0x00000000000a6bf1 : or eax, 0x1c478d48 ; ret
0x00000000000a7a41 : or eax, 0x1d478d48 ; ret
0x0000000000168468 : or eax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x000000000007bb92 : or eax, 0x28c48348 ; pop rbx ; pop rbp ; ret
0x00000000000f6c07 : or eax, 0x29058b48 ; ret 0x2c
0x00000000000fbfe1 : or eax, 0x30 ; mov dword ptr [rdi + 8], eax ; ret
0x00000000000b9d1e : or eax, 0x358d4800 ; ret 0xd3b
0x00000000001a4adc : or eax, 0x380e0a03 ; ret
0x00000000000f9fc2 : or eax, 0x3948fff9 ; ret
0x00000000000b00ee : or eax, 0x3d8d4800 ; hlt ; ret
0x00000000000b01a9 : or eax, 0x3d8d4800 ; push rsp ; ret
0x000000000006c1e2 : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000006c90a : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x00000000000bd635 : or eax, 0x440f4800 ; ret 0x8d48
0x0000000000095d72 : or eax, 0x48c0bc0f ; lea eax, dword ptr [rdi + rax] ; ret
0x00000000000bf3ea : or eax, 0x48d08948 ; add esp, 8 ; ret
0x000000000006ac72 : or eax, 0x5bd88948 ; ret
0x0000000000137f22 : or eax, 0x5c415d5b ; ret
0x00000000000a5cd5 : or eax, 0x724850f ; add byte ptr [rax], al ; ret
0x000000000003d4a1 : or eax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000001454b7 : or eax, 0x83480000 ; ret 0x4910
0x0000000000147051 : or eax, 0x83480000 ; ret 0xe910
0x00000000001454e5 : or eax, 0x83480000 ; ret 0xeb10
0x00000000000a7389 : or eax, 0x880850f ; add byte ptr [rax], al ; ret
0x000000000006e2fa : or eax, 0x8c48348 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000008ce02 : or eax, 0x8c48348 ; ret
0x0000000000071134 : or eax, 0xc2890000 ; jmp 0x710ce
0x000000000017c999 : or eax, 0xdbf0000 ; add byte ptr [rax], al ; ret 0xd
0x00000000001848f3 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x0000000000102dae : or eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x000000000015ac53 : or eax, 0xf7f0ff3 ; ret
0x000000000002db93 : or eax, 0xf8834800 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000059829 : or eax, 0xfffff834 ; add rax, rcx ; jmp rax
0x000000000001faff : or eax, 0xffffffff ; cmp r9, rax ; je 0x1faac ; jmp 0x1fad5
0x000000000003576d : or eax, 0xffffffff ; ret
0x00000000001a47a7 : or eax, dword ptr [r14 + rcx + 0x18] ; ret
0x00000000000836e6 : or eax, dword ptr [rax] ; add al, ch ; ret 0xff9c
0x000000000009cfac : or eax, dword ptr [rax] ; add bh, dh ; ret 0
0x00000000000573ff : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001446ad : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001471f1 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001446d1 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000000dd98 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 6
0x00000000001a7634 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; je 0x1a7643 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x000000000012d182 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000d1759 : or eax, dword ptr [rax] ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000000d111c : or eax, dword ptr [rax] ; movsxd rdx, dword ptr [rax + r14*4] ; add rax, rdx ; jmp rax
0x00000000000cd5c9 : or eax, dword ptr [rax] ; movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x000000000008a86f : or eax, dword ptr [rax] ; ret
0x000000000002a694 : or eax, dword ptr [rbx + 0x67403fe] ; pop rbx ; ret
0x00000000001abea5 : or eax, dword ptr [rcx] ; add al, bh ; test dh, bl ; call qword ptr [rsi]
0x00000000001bc2a8 : or eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000019a2ed : or eax, dword ptr [rdx] ; add byte ptr [rcx + rbx*2 - 7], dh ; jmp rsp
0x0000000000036838 : or eax, dword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000001baf78 : or eax, dword ptr [rdx] ; mov word ptr [rdx], cs ; ret
0x000000000019f0de : or eax, dword ptr [rdx] ; ret 0x900e
0x00000000001a47a8 : or eax, dword ptr [rsi + rcx + 0x18] ; ret
0x00000000001af7c7 : or eax, dword ptr [rsi + rcx + 0x38] ; ret
0x0000000000034ca7 : or eax, ecx ; movd xmm1, eax ; movaps xmm0, xmm1 ; ret
0x0000000000034b57 : or eax, ecx ; sar eax, 0x1f ; not eax ; and eax, edx ; ret
0x0000000000118b40 : or eax, edi ; bswap eax ; ret
0x0000000000106c96 : or eax, edi ; ret
0x0000000000034a55 : or eax, edx ; movq xmm0, rax ; ret
0x0000000000106cd2 : or eax, edx ; or rax, rsi ; or rax, rdi ; ret
0x000000000003a67f : or eax, edx ; ret
0x0000000000035034 : or eax, esi ; je 0x34fe1 ; ret
0x00000000001a74a9 : or eax, esi ; jmp rbx
0x0000000000106cd5 : or eax, esi ; or rax, rdi ; ret
0x000000000007c7b4 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000006de84 : or ebp, eax ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006fd04 : or ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000010c0dc : or ebx, dword ptr [rbx - 0x77] ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000001bbb82 : or ebx, eax ; add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x00000000001945dd : or ebx, edi ; inc dword ptr [rax + 0xa] ; sti ; call qword ptr [rax]
0x000000000015ae13 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000075a1e : or ebx, esi ; ret
0x0000000000082f1a : or ecx, dword ptr [rax - 0x3f] ; out dx, al ; add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x000000000007ee14 : or ecx, dword ptr [rax - 0x3f] ; out dx, eax ; add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x00000000000c0ede : or ecx, dword ptr [rax - 0x77] ; fimul dword ptr [rax - 0x7d] ; ret
0x000000000006fef7 : or ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x000000000010bceb : or ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000ff197 : or ecx, dword ptr [rax - 0x7d] ; ret 0x4808
0x00000000001103bd : or ecx, dword ptr [rax - 0x7d] ; ret 0x4830
0x00000000000ec97b : or ecx, dword ptr [rax - 0x7d] ; ret 0xf01
0x0000000000024bbd : or ecx, dword ptr [rax - 0x7d] ; rol byte ptr [rax + rcx*2], 0x83 ; ret
0x000000000007cfd9 : or ecx, dword ptr [rax] ; pop rbx ; ret
0x000000000003d469 : or ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000ab1c4 : or ecx, dword ptr [rbx + 0x463b2847] ; sub byte ptr [rbp + 0x63], dh ; ret
0x00000000000ab214 : or ecx, dword ptr [rbx + 0x463b3847] ; cmp byte ptr [rbp + 0x13], dh ; ret
0x00000000000a5c93 : or ecx, dword ptr [rdi] ; test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x00000000001a1dbe : or ecx, dword ptr [rdx + 0xa] ; ret
0x0000000000094064 : or ecx, edx ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x000000000008e963 : or ecx, esi ; or eax, dword ptr [rax] ; ret
0x0000000000174099 : or edi, dword ptr [rax + 0x1f0fffea] ; add bl, dh ; ret
0x00000000000ccf0b : or edi, dword ptr [rax + 0xfde8] ; jne 0xccee4 ; ret
0x000000000010e10c : or edi, dword ptr [rax + 1] ; ret
0x000000000012d5b4 : or edi, dword ptr [rax + 2] ; ret
0x0000000000112a44 : or edi, dword ptr [rax + 7] ; ret
0x0000000000113476 : or edi, dword ptr [rcx] ; ret 0xf7e
0x00000000001945e5 : or edi, ebx ; jmp rax
0x0000000000173bad : or edi, edi ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000a9627 : or edi, edi ; loope 0xa969a ; nop dword ptr [rax + rax] ; ret
0x000000000019a7b1 : or edi, edx ; jmp rsp
0x0000000000194c29 : or edi, esp ; inc dword ptr [rax + 0xd] ; cld ; call rax
0x0000000000194bc9 : or edi, esp ; jmp rax
0x00000000000795d1 : or edx, dword ptr [rcx + 0xf480034] ; ret 0x8948
0x000000000006bc0e : or edx, dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000001b6f52 : or esi, dword ptr [r14 + r9 + 0x18] ; ret
0x00000000001a1df6 : or esi, dword ptr [rbx + 0xa] ; ret
0x00000000001a0be8 : or esi, dword ptr [rbx + 0xe] ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x000000000012b1f4 : or esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000001b6f53 : or esi, dword ptr [rsi + rcx + 0x18] ; ret
0x00000000000fba9e : or esi, eax ; xor eax, eax ; mov dword ptr [rdi + 8], esi ; ret
0x000000000015ad33 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000000f6434 : or esi, ebx ; ret
0x000000000006dd77 : or esp, dword ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000078901 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000002f97 : or esp, dword ptr [rdx] ; js 0x2f51 ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000000face4 : or esp, dword ptr [rsi - 0x77] ; push rsi ; xor ax, ax ; ret
0x000000000012b193 : or esp, ecx ; sub dword ptr [rax], eax ; pop rbx ; ret
0x0000000000194bc5 : or esp, edi ; jmp rax
0x0000000000035f32 : or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x0000000000036075 : or qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000001683e5 : or qword ptr [rdi], rcx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x000000000019a27c : or qword ptr [rdx], r8 ; add byte ptr [rcx + rdx*2 - 7], dh ; call rsp
0x0000000000078017 : or r11b, bpl ; xchg eax, edx ; mov edx, eax ; jmp 0x77fb5
0x000000000015ae82 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x000000000015ae12 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x000000000015ada2 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x00000000001a1df5 : or r14d, dword ptr [r11 + 0xa] ; ret
0x000000000015ad32 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00000000000fae16 : or r8b, r13b ; ret
0x00000000001baf77 : or r8d, dword ptr [r10] ; mov word ptr [rdx], cs ; ret
0x00000000001af7c6 : or r8d, dword ptr [r14 + r9 + 0x38] ; ret
0x0000000000035033 : or r8d, esi ; je 0x34fe2 ; ret
0x0000000000094063 : or r9, r10 ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x00000000000d9c62 : or r9b, al ; out dx, al ; or byte ptr [rcx - 0x77], al ; ret 0xff25
0x0000000000029d93 : or r9b, byte ptr [r8 + 0x39] ; ret 0x4676
0x00000000001a1dbd : or r9d, dword ptr [r10 + 0xa] ; ret
0x0000000000168467 : or rax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x000000000006c1e1 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000006c909 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x000000000003576c : or rax, 0xffffffffffffffff ; ret
0x00000000001b9a56 : or rax, qword ptr [r14 + r9 + 0x38] ; ret
0x000000000014c652 : or rax, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000036837 : or rax, qword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000106cd7 : or rax, rdi ; ret
0x0000000000034a54 : or rax, rdx ; movq xmm0, rax ; ret
0x000000000003a67e : or rax, rdx ; ret
0x0000000000106cd4 : or rax, rsi ; or rax, rdi ; ret
0x000000000012d693 : or sil, sil ; ret 0x8802
0x00000000000347f0 : orpd xmm0, xmm1 ; ret
0x00000000000347f1 : orps xmm0, xmm1 ; ret
0x0000000000034bbe : orps xmm0, xmm3 ; ret
0x0000000000111782 : out -0x18, eax ; cwde ; ret
0x00000000000f5502 : out -0x18, eax ; push -0x76000003 ; ret 0xcb8
0x000000000005add7 : out -0x18, eax ; ret
0x00000000001886c4 : out -0x29, eax ; dec dword ptr [rbp - 0x33] ; jmp rax
0x00000000001024bd : out -0x2d, eax ; int1 ; dec dword ptr [rax - 0x75] ; jge 0x1024cd ; call rbx
0x00000000001837a0 : out -0x31, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000000398f5 : out -0x77, eax ; ret
0x00000000000302fe : out -0x77, eax ; ret 0x8948
0x00000000000f0bb9 : out -0x77, eax ; ret 0x8b48
0x000000000002df33 : out -0x80, eax ; sete al ; ret
0x00000000001854c8 : out -0xb, eax ; mov ch, 0xab ; ret
0x00000000001ae571 : out -0xc, eax ; jmp qword ptr [rcx]
0x000000000015a69a : out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000187621 : out -0xf, eax ; call qword ptr [rax]
0x0000000000187619 : out -0xf, eax ; call rax
0x000000000018761d : out -0xf, eax ; push rax ; out -0xf, eax ; call qword ptr [rax]
0x0000000000194cf1 : out -5, eax ; call qword ptr [rax - 0x1f000416]
0x00000000001a98e5 : out 0, al ; add al, bh ; out 0xf1, al ; jmp qword ptr [rdi]
0x00000000001975bd : out 0, eax ; add ah, ah ; jns 0x1975b7 ; jmp rsp
0x0000000000118b49 : out 0x10, eax ; movzx eax, si ; or eax, edi ; bswap eax ; ret
0x000000000002dcbe : out 0x15, eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000111df1 : out 0x31, eax ; shr al, 0xb7 ; ret
0x00000000000372fb : out 0x41, eax ; call rdi
0x000000000003730c : out 0x48, al ; mov edi, dword ptr [rsp + 0x20] ; call r15
0x0000000000086106 : out 0x48, al ; mov edi, eax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x00000000000f3783 : out 0x48, al ; mov edi, ebp ; call 0xefa86
0x0000000000037335 : out 0x48, al ; mov edi, ebp ; call r15
0x00000000000882d2 : out 0x48, al ; mov edi, ebp ; call rax
0x000000000012a22c : out 0x48, al ; mov edi, ebp ; mov rcx, r13 ; call rbx
0x000000000012df86 : out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x0000000000087434 : out 0x48, al ; mov edi, ebx ; call rax
0x0000000000129e20 : out 0x48, al ; mov edi, ebx ; mov r13, rsp ; call r15
0x00000000000ab2b0 : out 0x48, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000048488 : out 0x48, eax ; mov eax, edx ; ret
0x00000000001353ef : out 0x48, eax ; mov ecx, dword ptr [rbp - 0x168] ; call rcx
0x00000000000fea05 : out 0x49, eax ; mov eax, edi ; mov byte ptr [r8 - 1], 0 ; ret
0x00000000000d0ddf : out 0x4c, eax ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000088427 : out 0x4c, eax ; mov edx, ebp ; mov rsi, rbp ; call rax
0x00000000000aceeb : out 0x4d, eax ; mov ecx, edi ; call rbx
0x0000000000001b16 : out 0x59, eax ; pop rbx ; ret 0x2a63
0x000000000008562e : out 0x5b, al ; pop rbp ; pop r12 ; jmp rax
0x000000000007bf03 : out 0x5b, al ; ret
0x0000000000138758 : out 0x5b, eax ; ret
0x0000000000085e0b : out 0x5d, al ; pop r12 ; jmp rax
0x000000000000247e : out 0xa9, al ; ret 0xbd07
0x000000000003689e : out 0xc7, al ; cmp byte ptr [rax], al ; ret
0x000000000013a00e : out 0xe8, al ; pop rsp ; pop rax ; out dx, al ; dec dword ptr [rax - 0x77] ; ret
0x00000000000d4ab8 : out 0xe8, al ; ret 0xfd7c
0x00000000000f5d01 : out 0xe8, al ; sub dword ptr [rax], eax ; cli ; dec dword ptr [rax + 0x39] ; ret
0x00000000000cc951 : out 0xe8, al ; test eax, 0x39fffffe ; ret
0x00000000001866e9 : out 0xed, al ; dec dword ptr [rsi - 0x1d] ; in eax, dx ; jmp qword ptr [rbx]
0x00000000001866b1 : out 0xed, al ; dec ebx ; fsubp st(5) ; jmp qword ptr [rbx]
0x0000000000186689 : out 0xed, al ; jmp qword ptr [rbx]
0x00000000001866d1 : out 0xed, al ; ljmp ptr [rcx] ; fucomp st(5) ; jmp qword ptr [rbx]
0x00000000000828e0 : out 0xf, al ; xchg byte ptr [rcx], ah ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000187601 : out 0xf1, al ; call qword ptr [rax]
0x00000000001a9819 : out 0xf1, al ; call qword ptr [rbx]
0x00000000001875f9 : out 0xf1, al ; call rax
0x00000000001a97e9 : out 0xf1, al ; jmp qword ptr [rdi]
0x00000000001875fd : out 0xf1, al ; push rax ; out 0xf1, al ; call qword ptr [rax]
0x000000000015a61a : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000094f89 : out 0xf3, al ; ret
0x00000000001ae4c1 : out 0xf4, al ; jmp qword ptr [rbx]
0x00000000001ae521 : out 0xf4, al ; jmp qword ptr [rcx]
0x0000000000199901 : out 0xf7, al ; call rsp
0x000000000006f674 : out 0xff, al ; push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000001bc908 : out 1, eax ; add byte ptr [rax], al ; ret 4
0x00000000000e351b : out 2, al ; call 0x1f7f4
0x00000000001237fc : out 4, al ; lea eax, dword ptr [rsi + 8] ; ret
0x000000000012399d : out 4, al ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x00000000000208f1 : out 4, eax ; add rdi, rbp ; call rax
0x000000000011d8f3 : out dx, al ; adc bh, dh ; ret 0x8080
0x0000000000093ed9 : out dx, al ; adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x000000000012db59 : out dx, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x0000000000047d26 : out dx, al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc083
0x00000000001aa1bd : out dx, al ; add byte ptr [rax], al ; rol byte ptr [rdi], 1 ; call rsi
0x000000000012341f : out dx, al ; add dword ptr [rax - 0x78], eax ; ja 0x12342c ; ret
0x0000000000096953 : out dx, al ; add dword ptr [rbp - 0xf], esi ; xor eax, eax ; pop rbx ; ret
0x00000000000969fb : out dx, al ; add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x000000000004d68f : out dx, al ; add eax, 0xf8834800 ; dec dword ptr [rcx - 0x77] ; ret
0x000000000012341c : out dx, al ; add eax, dword ptr [rbx - 0x77bffe12] ; ja 0x12342f ; ret
0x0000000000082f1d : out dx, al ; add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x0000000000076983 : out dx, al ; call 0x4d138
0x00000000001a5be2 : out dx, al ; call qword ptr [rax]
0x00000000001a624a : out dx, al ; call qword ptr [rcx]
0x00000000001a5c62 : out dx, al ; call qword ptr [rdx]
0x00000000001a6162 : out dx, al ; call qword ptr [rsi]
0x000000000008842d : out dx, al ; call rax
0x00000000001970e2 : out dx, al ; call rsp
0x000000000013a012 : out dx, al ; dec dword ptr [rax - 0x77] ; ret
0x0000000000130647 : out dx, al ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000013363b : out dx, al ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x00000000001870a2 : out dx, al ; dec dword ptr [rbx*2 + 0x5e1cffee] ; out dx, al ; jmp rsp
0x000000000019748a : out dx, al ; dec esp ; loope 0x197498 ; add ah, ah ; out dx, al ; jmp rsp
0x00000000001971b2 : out dx, al ; dec esp ; rol byte ptr [rax], 1 ; add byte ptr [rbp + rdx - 0x12], dl ; jmp rsp
0x0000000000001b14 : out dx, al ; enter 0x59e7, 0x5b ; ret 0x2a63
0x00000000001848f7 : out dx, al ; fcmovb st(0), st(3) ; ret
0x0000000000003aa1 : out dx, al ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x00000000001a4e41 : out dx, al ; in eax, dx ; call rsi
0x0000000000197392 : out dx, al ; inc dword ptr [rsp + rbx*8 + 0x50340000] ; out dx, al ; call rsp
0x00000000001975ba : out dx, al ; inc esp ; out 0, eax ; add ah, ah ; jns 0x1975ba ; jmp rsp
0x00000000001972d2 : out dx, al ; inc esp ; salc ; add byte ptr [rax], al ; test byte ptr [rdx], ch ; out dx, al ; jmp rsp
0x0000000000187122 : out dx, al ; jmp qword ptr [rbp + rbx*2 - 0x12]
0x00000000001a5a12 : out dx, al ; jmp qword ptr [rcx]
0x00000000001a56f2 : out dx, al ; jmp qword ptr [rdi]
0x00000000001a5b6a : out dx, al ; jmp qword ptr [rdx]
0x00000000001a6352 : out dx, al ; jmp qword ptr [rsi]
0x00000000001a6192 : out dx, al ; jmp rbx
0x00000000001a5e42 : out dx, al ; jmp rdx
0x00000000001a6bb2 : out dx, al ; jmp rsi
0x000000000018709a : out dx, al ; jmp rsp
0x0000000000003795 : out dx, al ; jne 0x3775 ; ret 0x975
0x0000000000186fd6 : out dx, al ; lcall ptr [rax + 0x5a] ; out dx, al ; call rax
0x0000000000186fd2 : out dx, al ; lcall ptr [rax + 0x5a] ; out dx, al ; lcall ptr [rax + 0x5a] ; out dx, al ; call rax
0x000000000018689a : out dx, al ; lcall ptr [rax] ; push rbp ; out dx, al ; call rax
0x0000000000197642 : out dx, al ; lcall ptr [rbp + rbp*8 - 0x358c0000] ; out dx, al ; jmp rsp
0x0000000000197342 : out dx, al ; lcall ptr [rcx + rbx*8 + 0x3ad40000] ; out dx, al ; call rsp
0x00000000001870a6 : out dx, al ; lcall ptr [rsi + rbx*2] ; out dx, al ; jmp rsp
0x0000000000187112 : out dx, al ; lcall ptr [rsi + rbx*2] ; out dx, al ; lcall ptr [rsi + rbx*2] ; out dx, al ; jmp rsp
0x0000000000003183 : out dx, al ; mov eax, 0xa1a3e95a ; ret 0xba88
0x000000000015246a : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000bcff9 : out dx, al ; mov rdi, rbx ; call 0x892e6
0x000000000008524f : out dx, al ; mov rdi, rbx ; call rax
0x000000000015aa2a : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000ab679 : out dx, al ; nop word ptr [rax + rax] ; ret
0x000000000014acae : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000d9c65 : out dx, al ; or byte ptr [rcx - 0x77], al ; ret 0xff25
0x0000000000186882 : out dx, al ; push qword ptr [rax + 0x55] ; out dx, al ; call rax
0x00000000001868b2 : out dx, al ; push qword ptr [rax - 0x2f0011ab] ; push rbp ; out dx, al ; call rax
0x00000000000b0181 : out dx, al ; ret
0x00000000000025b2 : out dx, al ; ret 0x88ad
0x00000000000c881a : out dx, al ; shr dword ptr [rdi], cl ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000194d01 : out dx, al ; sti ; call rax
0x00000000000c7a8d : out dx, al ; xor edx, edx ; jmp 0xc7a59
0x00000000000aa55d : out dx, eax ; adc byte ptr [rax + 1], cl ; clc ; ret
0x000000000010126d : out dx, eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000bf80f : out dx, eax ; add cl, byte ptr [rax - 0x46] ; ret
0x00000000001ba21d : out dx, eax ; add dword ptr [rax], eax ; loopne 0x1ba23b ; clc ; jmp qword ptr [rbx]
0x00000000001ba21c : out dx, eax ; add dword ptr [rax], eax ; loopne 0x1ba23c ; clc ; jmp qword ptr [rbx]
0x000000000007ee17 : out dx, eax ; add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x0000000000139fbc : out dx, eax ; add rbx, r12 ; call r14
0x000000000017239d : out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x0000000000150ce4 : out dx, eax ; and byte ptr [rbp + rcx*4 + 0x1d], cl ; ret
0x00000000000adec6 : out dx, eax ; call 0x4a163
0x00000000000f3786 : out dx, eax ; call 0xefa83
0x00000000000fae22 : out dx, eax ; call 0xf7033
0x000000000012db5f : out dx, eax ; call qword ptr [rbx]
0x00000000001a7132 : out dx, eax ; call qword ptr [rdi]
0x000000000011f69f : out dx, eax ; call r12
0x000000000003919d : out dx, eax ; call r14
0x0000000000037338 : out dx, eax ; call r15
0x00000000000208f5 : out dx, eax ; call rax
0x00000000000ac867 : out dx, eax ; call rbx
0x000000000013b7c2 : out dx, eax ; call rcx
0x000000000012d656 : out dx, eax ; call rdx
0x0000000000197832 : out dx, eax ; call rsp
0x000000000012a8a6 : out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0x0000000000134595 : out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x00000000001345d4 : out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0xbfeb
0x0000000000197782 : out dx, eax ; dec dword ptr [rcx + rdi*8 + 0x25640000] ; out dx, eax ; jmp rsp
0x00000000001977aa : out dx, eax ; dec esp ; cli ; add byte ptr [rax], al ; xor al, 0x29 ; out dx, eax ; jmp rsp
0x0000000000196b19 : out dx, eax ; jmp 0x196b1d
0x0000000000196b18 : out dx, eax ; jmp 0x196b1e
0x000000000009cf91 : out dx, eax ; jmp 0x9c93b
0x000000000009d9cb : out dx, eax ; jmp 0x9c9c3
0x00000000001a6e02 : out dx, eax ; jmp qword ptr [rax]
0x00000000001a744a : out dx, eax ; jmp qword ptr [rbx]
0x000000000012bd98 : out dx, eax ; jmp qword ptr [rsi + 0xf]
0x0000000000197732 : out dx, eax ; jmp rsp
0x000000000012c2d6 : out dx, eax ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00000000001978d2 : out dx, eax ; ljmp ptr [rax + rax + 0x72340001] ; out dx, eax ; jmp rsp
0x000000000013acbb : out dx, eax ; mov edx, 0xffffffff ; xor eax, eax ; call r8
0x000000000013ad05 : out dx, eax ; mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x000000000015229a : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152396 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000001522e2 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000048b40 : out dx, eax ; mov rax, rdx ; ret
0x0000000000114b20 : out dx, eax ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x0000000000131f93 : out dx, eax ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x0000000000131d9b : out dx, eax ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000012a22f : out dx, eax ; mov rcx, r13 ; call rbx
0x00000000000378a5 : out dx, eax ; mov rdx, rbp ; call r15
0x000000000015aaaa : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014adad : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000173bdc : out dx, eax ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000084f94 : out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x0000000000072c01 : out dx, eax ; pop rbx ; ret
0x00000000001862bc : out dx, eax ; push 0x75e4ffed ; in eax, dx ; jmp rsp
0x000000000016dd03 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016dd18 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016dd2d : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000aa3e8 : out dx, eax ; ret
0x00000000000a9873 : out dx, eax ; ret 0xf66
0x000000000016f21c : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000016f205 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000016f1ee : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000016dcaa : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000194d05 : out dx, eax ; sti ; jmp qword ptr [rax]
0x000000000012cf5e : out dx, eax ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x0000000000048048 : out dx, eax ; xor eax, eax ; ret
0x000000000014695e : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000047024 : outsb dx, byte ptr [rsi] ; adc al, 0 ; mov rax, rbx ; pop rbx ; ret
0x00000000000becc1 : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x000000000010be3e : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001701be : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x00000000001b2105 : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; and rsi, rsi ; jmp qword ptr [rsi]
0x00000000001b214d : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; nop ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001b217d : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; shl byte ptr [rcx], 0xf6 ; jmp qword ptr [rsi]
0x00000000000ab26e : outsb dx, byte ptr [rsi] ; and ecx, dword ptr [rax + rax] ; ret
0x00000000001b00c9 : outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x0000000000034cab : outsb dx, byte ptr [rsi] ; enter 0x280f, -0x3f ; ret
0x00000000001850a3 : outsb dx, byte ptr [rsi] ; ja 0x18502c ; ret 0x48f
0x00000000001a5e59 : outsb dx, byte ptr [rsi] ; out dx, al ; jmp qword ptr [rdx]
0x00000000000bea7e : outsb dx, byte ptr [rsi] ; ret 0xfffc
0x0000000000182de4 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x000000000000366d : outsb dx, byte ptr [rsi] ; stosb byte ptr [rdi], al ; stc ; insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x000000000008ed2a : outsb dx, byte ptr [rsi] ; xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x00000000001096dd : outsd dx, dword ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000009667d : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000001b220d : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; push rax ; and dh, dh ; jmp qword ptr [rsi]
0x00000000000d59ec : outsd dx, dword ptr [rsi] ; call 0xffffffffc2e1695d
0x00000000001b0219 : outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x0000000000114dcd : outsd dx, dword ptr [rsi] ; fisub dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret 0x144
0x00000000000894b8 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008f3fe : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000000d59e8 : outsd dx, dword ptr [rsi] ; fsub dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; call 0xffffffffc2e16961
0x000000000016f01d : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000016f0bd : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000008cafa : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000003d2ec : outsd dx, dword ptr [rsi] ; ret
0x0000000000114dd1 : outsd dx, dword ptr [rsi] ; ret 0x144
0x00000000001837a6 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x0000000000152bd7 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x000000000016f0c2 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x00000000000e0252 : outsd dx, dword ptr [rsi] ; ret 0xddeb
0x000000000008cb4a : outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000000e0235 : outsd dx, dword ptr [rsi] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4101
0x000000000019c761 : outsd dx, dword ptr [rsi] ; std ; call qword ptr [rcx]
0x00000000000ff1a0 : outsd dx, dword ptr [rsi] ; sub al, 0 ; add rsp, 8 ; ret
0x00000000001837a5 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000001445a2 : pcmpeqb mm0, mm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000000ab504 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x00000000000ab4ef : pcmpeqb mm3, qword ptr [rsi] ; ret
0x00000000001445a1 : pcmpeqb xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000184ba5 : pcmpeqw mm5, qword ptr [rbp + r12*2 - 0x5f] ; mov cs, edi ; ret 0x8b36
0x0000000000184ba6 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x000000000009df71 : pcmpgtd mm1, qword ptr [rcx - 0x76b7fba9] ; clc ; ret
0x000000000009e5e5 : pcmpgtd mm1, qword ptr [rdi] ; xlatb ; ret 0xc085
0x0000000000034b31 : pmovmskb eax, mm0 ; and eax, 0x80 ; ret
0x0000000000034e61 : pmovmskb eax, mm0 ; and eax, 8 ; ret
0x000000000009e5f3 : pmovmskb eax, mm1 ; bsr eax, eax ; add rax, rdi ; ret
0x000000000009e695 : pmovmskb eax, mm1 ; test eax, eax ; jne 0x9e719 ; xor eax, eax ; ret
0x0000000000034b30 : pmovmskb eax, xmm0 ; and eax, 0x80 ; ret
0x0000000000034e60 : pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x000000000008ad1f : pmovmskb edx, mm4 ; test edx, edx ; je 0x8ad33 ; bsf eax, edx ; ret
0x00000000000db425 : pop qword ptr [rsi - 0x77000000] ; ret 0xd139
0x00000000001147e5 : pop r10 ; ret
0x000000000018502f : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000008422a : pop r12 ; jmp rax
0x000000000008610c : pop r12 ; jmp rcx
0x0000000000101fbf : pop r12 ; mov esi, 2 ; jmp rax
0x0000000000101fd9 : pop r12 ; mov esi, 3 ; jmp rax
0x000000000006faae : pop r12 ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00000000000423bc : pop r12 ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000004233a : pop r12 ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x000000000010378b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000002024f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000210fb : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cbb33 : pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000202e3 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006d0d5 : pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000206c2 : pop r12 ; pop r13 ; ret
0x00000000000b5ba4 : pop r12 ; pop r14 ; ret
0x00000000000398b6 : pop r12 ; pop rbp ; ret
0x000000000001fb12 : pop r12 ; ret
0x00000000000423be : pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000004233c : pop r13 ; pop r14 ; fmulp st(1) ; ret
0x000000000010378d : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000020251 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000210fd : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cbb35 : pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000202e5 : pop r13 ; pop r14 ; ret
0x0000000000073572 : pop r13 ; pop r14 ; sar rax, 2 ; ret
0x000000000006d0d7 : pop r13 ; pop rbp ; ret
0x00000000000206c4 : pop r13 ; ret
0x00000000000423c0 : pop r14 ; fmul st(0) ; ret
0x000000000004233e : pop r14 ; fmulp st(1) ; ret
0x000000000010378f : pop r14 ; pop r15 ; jmp rax
0x0000000000020253 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000210ff : pop r14 ; pop r15 ; ret
0x00000000000cbb37 : pop r14 ; pop rbp ; ret
0x00000000000202e7 : pop r14 ; ret
0x0000000000073574 : pop r14 ; sar rax, 2 ; ret
0x0000000000103791 : pop r15 ; jmp rax
0x0000000000020255 : pop r15 ; pop rbp ; ret
0x0000000000021101 : pop r15 ; ret
0x000000000007e94c : pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000134946 : pop r8 ; mov eax, 1 ; ret
0x0000000000193e57 : pop r9 ; clc ; ret 0x6e1f
0x00000000000ed3df : pop rax ; adc byte ptr [rcx + rcx*4 + 0x78], al ; or byte ptr [rax - 0x77], cl ; ret
0x000000000013507e : pop rax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x000000000019ae55 : pop rax ; add al, byte ptr [rax] ; xchg eax, esp ; leave ; cli ; jmp rsp
0x00000000001b0bbd : pop rax ; add dword ptr [rax], eax ; loopne 0x1b0b4e ; cmc ; jmp rax
0x00000000001b2438 : pop rax ; and esi, esi ; jmp qword ptr [rsi]
0x0000000000135244 : pop rax ; call rax
0x000000000019533d : pop rax ; cld ; call qword ptr [rax + 0x10fffc57]
0x0000000000195339 : pop rax ; cld ; call qword ptr [rax]
0x00000000001951bd : pop rax ; cld ; call rdx
0x00000000001952fd : pop rax ; cld ; jmp qword ptr [rax + 0x20fffc57]
0x00000000001952f9 : pop rax ; cld ; jmp qword ptr [rax]
0x00000000001b8c98 : pop rax ; fcompi st(7) ; jmp rdi
0x00000000001a7448 : pop rax ; fucomi st(7) ; jmp qword ptr [rbx]
0x00000000001ab7b8 : pop rax ; in eax, dx ; call rcx
0x00000000001a01e1 : pop rax ; jmp 0x1a01e5
0x0000000000135086 : pop rax ; jmp rcx
0x00000000001b0308 : pop rax ; jo 0x1b0303 ; jmp qword ptr [rcx]
0x000000000019d7a8 : pop rax ; jp 0x19d797 ; jmp qword ptr [rsi]
0x00000000001b08c8 : pop rax ; jp 0x1b08c3 ; jmp qword ptr [rcx]
0x000000000007e94d : pop rax ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000134947 : pop rax ; mov eax, 1 ; ret
0x000000000002def4 : pop rax ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002de82 : pop rax ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x000000000012dfde : pop rax ; mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000101738 : pop rax ; mov rax, rbx ; pop rdx ; pop rbx ; ret
0x00000000000e467e : pop rax ; or bh, dh ; ret
0x00000000000a4294 : pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000013a011 : pop rax ; out dx, al ; dec dword ptr [rax - 0x77] ; ret
0x000000000001f92e : pop rax ; pop rbx ; pop rbp ; ret
0x0000000000106b59 : pop rax ; pop rdi ; call rax
0x0000000000186fd8 : pop rax ; pop rdx ; out dx, al ; call rax
0x0000000000186fd4 : pop rax ; pop rdx ; out dx, al ; lcall ptr [rax + 0x5a] ; out dx, al ; call rax
0x0000000000142de1 : pop rax ; pop rdx ; pop rbx ; ret
0x00000000001a63c8 : pop rax ; push rsp ; cli ; call qword ptr [rax]
0x000000000003a718 : pop rax ; ret
0x0000000000018ec8 : pop rax ; ret 0x18
0x0000000000186238 : pop rax ; scasd eax, dword ptr [rdi] ; in eax, dx ; call rax
0x0000000000186234 : pop rax ; scasd eax, dword ptr [rdi] ; in eax, dx ; lcall ptr [rax - 0x51] ; in eax, dx ; call rax
0x000000000018620c : pop rax ; scasd eax, dword ptr [rdi] ; in eax, dx ; push rsi ; jbe 0x186207 ; jmp rdi
0x00000000001acfc8 : pop rax ; stc ; call qword ptr [rax]
0x00000000001a07b8 : pop rax ; stosd dword ptr [rdi], eax ; in al, dx ; jmp qword ptr [rcx]
0x00000000001ad6b8 : pop rax ; wait ; hlt ; jmp qword ptr [rcx]
0x00000000001a92a8 : pop rax ; xchg eax, ebx ; int1 ; call qword ptr [rax]
0x00000000001a8a08 : pop rax ; xchg eax, ecx ; cld ; jmp qword ptr [rbx]
0x00000000000ddff7 : pop rbp ; add al, 0x85 ; fisttp dword ptr [rcx + 0x7e10245c] ; ret 0x8b48
0x00000000000dde2d : pop rbp ; add byte ptr [rcx], al ; ret 0xda39
0x00000000001189f6 : pop rbp ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000009d9d9 : pop rbp ; add dword ptr [rax], eax ; add bh, dh ; ret 0
0x000000000010f90f : pop rbp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000012e08d : pop rbp ; add eax, edx ; ret
0x0000000000114b23 : pop rbp ; clc ; leave ; ret
0x0000000000194f29 : pop rbp ; cld ; call qword ptr [rax + 0x26fffc5c]
0x0000000000195121 : pop rbp ; cld ; call qword ptr [rax]
0x0000000000194fe5 : pop rbp ; cld ; call rdx
0x0000000000194fe1 : pop rbp ; cld ; inc dword ptr [rdx + 0x5d] ; cld ; call rdx
0x0000000000194f65 : pop rbp ; cld ; jmp rsi
0x0000000000048d6a : pop rbp ; enter -0x74b8, 0x14 ; ret
0x0000000000071f04 : pop rbp ; jmp rax
0x000000000012b775 : pop rbp ; jmp rcx
0x000000000012cf62 : pop rbp ; jmp rdx
0x000000000013cf2b : pop rbp ; mov byte ptr [rax + 1], cl ; ret 0x8948
0x000000000007ed85 : pop rbp ; mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x0000000000104047 : pop rbp ; mov eax, 0x8b49fff1 ; cmp al, 0x24 ; call rbx
0x00000000000abe53 : pop rbp ; or al, 0 ; ret
0x0000000000187129 : pop rbp ; out dx, al ; jmp rsp
0x00000000001870a5 : pop rbp ; out dx, al ; lcall ptr [rsi + rbx*2] ; out dx, al ; jmp rsp
0x0000000000084229 : pop rbp ; pop r12 ; jmp rax
0x000000000008610b : pop rbp ; pop r12 ; jmp rcx
0x0000000000101fbe : pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x0000000000101fd8 : pop rbp ; pop r12 ; mov esi, 3 ; jmp rax
0x000000000006faad : pop rbp ; pop r12 ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00000000000423bb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x0000000000042339 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x000000000010378a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000000210fa : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000202e2 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000206c1 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b5ba3 : pop rbp ; pop r12 ; pop r14 ; ret
0x000000000001fb11 : pop rbp ; pop r12 ; ret
0x000000000012c316 : pop rbp ; pop r13 ; pop r14 ; ret
0x00000000000423bf : pop rbp ; pop r14 ; fmul st(0) ; ret
0x000000000004233d : pop rbp ; pop r14 ; fmulp st(1) ; ret
0x000000000010378e : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x0000000000020252 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000210fe : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000cbb36 : pop rbp ; pop r14 ; pop rbp ; ret
0x00000000000202e6 : pop rbp ; pop r14 ; ret
0x0000000000073573 : pop rbp ; pop r14 ; sar rax, 2 ; ret
0x000000000006d0d8 : pop rbp ; pop rbp ; ret
0x00000000000483f8 : pop rbp ; pop rbx ; ret
0x000000000001f930 : pop rbp ; ret
0x0000000000048d72 : pop rbp ; ror byte ptr [rax - 0x77], 0x14 ; ret
0x000000000007908c : pop rbp ; sub rax, rdx ; ret
0x0000000000112a71 : pop rbp ; xor eax, eax ; pop rbx ; ret
0x00000000001a0dfd : pop rbx ; add byte ptr [rax], al ; nop ; shr ah, 1 ; call rsp
0x0000000000182378 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000000aa20c : pop rbx ; and eax, 0x3fc00 ; ret
0x00000000000aa23f : pop rbx ; and eax, 0x7ff80000 ; ret
0x0000000000114a67 : pop rbx ; and eax, 0xc ; pop rbp ; pop r12 ; ret
0x000000000019ab41 : pop rbx ; cli ; jmp rsp
0x00000000001afd69 : pop rbx ; cmc ; jmp qword ptr [rcx]
0x0000000000182376 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000006e1ce : pop rbx ; div rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001a0299 : pop rbx ; jmp 0x1a029d
0x00000000001735f5 : pop rbx ; jmp 0x1f8ab
0x000000000006f80a : pop rbx ; jmp rax
0x0000000000118a28 : pop rbx ; mov eax, 0xca ; pop rbp ; pop r12 ; ret
0x0000000000070ac0 : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000070aac : pop rbx ; mov eax, 1 ; pop rbp ; pop r12 ; ret
0x00000000000d4ea2 : pop rbx ; mov eax, 1 ; ret
0x00000000000ef40b : pop rbx ; mov eax, 5 ; pop rbp ; pop r12 ; ret
0x000000000003a715 : pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000000aa2ac : pop rbx ; mov eax, eax ; ret
0x00000000000479d1 : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000011648e : pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x000000000007170a : pop rbx ; mov eax, r13d ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fbc1b : pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000052c3e : pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x000000000009e43d : pop rbx ; mov qword ptr [rdi], rdx ; ret
0x0000000000072160 : pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000071fa8 : pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000006ef37 : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006fbc2 : pop rbx ; mov rax, rsi ; pop rbp ; pop r12 ; ret
0x0000000000085e08 : pop rbx ; mov rsi, r12 ; pop rbp ; pop r12 ; jmp rax
0x00000000001331d4 : pop rbx ; movzx eax, al ; pop rbp ; pop r12 ; ret
0x00000000000bd634 : pop rbx ; or eax, 0x440f4800 ; ret 0x8d48
0x0000000000187099 : pop rbx ; out dx, al ; jmp rsp
0x00000000000cbb32 : pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000006d0d4 : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000398b5 : pop rbx ; pop r12 ; pop rbp ; ret
0x000000000012e08c : pop rbx ; pop rbp ; add eax, edx ; ret
0x0000000000071f03 : pop rbx ; pop rbp ; jmp rax
0x000000000012b774 : pop rbx ; pop rbp ; jmp rcx
0x000000000012cf61 : pop rbx ; pop rbp ; jmp rdx
0x0000000000084228 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000008610a : pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x0000000000101fbd : pop rbx ; pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x0000000000101fd7 : pop rbx ; pop rbp ; pop r12 ; mov esi, 3 ; jmp rax
0x000000000006faac : pop rbx ; pop rbp ; pop r12 ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00000000000202e1 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000206c0 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b5ba2 : pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000001fb10 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012c315 : pop rbx ; pop rbp ; pop r13 ; pop r14 ; ret
0x000000000001f92f : pop rbx ; pop rbp ; ret
0x000000000007908b : pop rbx ; pop rbp ; sub rax, rdx ; ret
0x000000000002a69a : pop rbx ; ret
0x0000000000001b18 : pop rbx ; ret 0x2a63
0x000000000007c540 : pop rbx ; ret 0x34
0x0000000000185660 : pop rbx ; ret 0x6f9
0x00000000000ac729 : pop rbx ; sub rax, rbp ; pop rbp ; pop r12 ; ret
0x000000000001fb74 : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000009e42b : pop rbx ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x0000000000193ad0 : pop rcx ; clc ; ret 0x6e1f
0x0000000000195135 : pop rcx ; cld ; call qword ptr [rax]
0x0000000000195335 : pop rcx ; cld ; jmp qword ptr [rax + 0x10fffc58]
0x00000000001951b5 : pop rcx ; cld ; jmp rdx
0x000000000019ab09 : pop rcx ; cli ; call rsp
0x0000000000034cd0 : pop rcx ; enter 0x280f, -0x3f ; ret
0x0000000000029c93 : pop rcx ; lodsb al, byte ptr [rsi] ; cmp dword ptr [rax], eax ; ret
0x00000000000bcca3 : pop rcx ; mov dr0, word ptr [rax] ; add byte ptr [rcx], ch ; ret 0x428d
0x0000000000066292 : pop rcx ; or al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x348
0x000000000013c43f : pop rcx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010167b : pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e9bda : pop rcx ; pop rbx ; ret
0x0000000000001b17 : pop rcx ; pop rbx ; ret 0x2a63
0x000000000003c19f : pop rcx ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x0000000000050233 : pop rcx ; ret
0x000000000007d82e : pop rcx ; sbb byte ptr [rax - 9], cl ; fisttp dword ptr [rax + 0x21] ; ret
0x000000000019a2f1 : pop rcx ; stc ; jmp rsp
0x00000000000abfb3 : pop rcx ; sub dh, bh ; dec dword ptr [rax - 0x73] ; cld ; pop rbx ; ret
0x0000000000150e18 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000000f6712 : pop rdi ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000014b43d : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018173c : pop rdi ; and ch, bl ; call qword ptr [rbx]
0x0000000000106b5a : pop rdi ; call rax
0x0000000000198349 : pop rdi ; call rsp
0x0000000000194fd5 : pop rdi ; cld ; call qword ptr [rdx + 0x22fffc5e]
0x0000000000194f51 : pop rdi ; cld ; call qword ptr [rsi]
0x0000000000195111 : pop rdi ; cld ; call rax
0x000000000019510d : pop rdi ; cld ; inc dword ptr [rax + 0x5f] ; cld ; call rax
0x0000000000195091 : pop rdi ; cld ; jmp rsp
0x0000000000152839 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152649 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000018491e : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000103792 : pop rdi ; jmp rax
0x00000000001838e1 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x0000000000152469 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152299 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152395 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000001522e1 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000020256 : pop rdi ; pop rbp ; ret
0x0000000000021102 : pop rdi ; ret
0x0000000000067449 : pop rdi ; ret 0xffff
0x00000000000f1c2b : pop rdi ; ret 9
0x00000000000c6e55 : pop rdx ; adc byte ptr [rdi - 0x36], bh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001a0d35 : pop rdx ; add byte ptr [rax], al ; clc ; iretd ; in al, dx ; jmp qword ptr [rax]
0x00000000001a0db5 : pop rdx ; add byte ptr [rax], al ; shr spl, 1 ; call qword ptr [rax]
0x000000000011042e : pop rdx ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret
0x0000000000145d26 : pop rdx ; add eax, 0x83480000 ; ret 0x4910
0x00000000001afcd9 : pop rdx ; cmc ; jmp qword ptr [rcx]
0x00000000001860ac : pop rdx ; in eax, dx ; call rsp
0x00000000001860a8 : pop rdx ; in eax, dx ; lcall ptr [rdx + 0x64] ; in eax, dx ; call rsp
0x0000000000003a9e : pop rdx ; int1 ; imul esi ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x00000000001a9131 : pop rdx ; int1 ; jmp qword ptr [rcx]
0x0000000000197cf1 : pop rdx ; int1 ; jmp rsp
0x0000000000184501 : pop rdx ; je 0x1844cb ; ret 0xacfc
0x0000000000003185 : pop rdx ; jmp 0xffffffff88c2d332
0x0000000000115fd2 : pop rdx ; jno 0x115fce ; dec dword ptr [rax - 0x7f] ; ret
0x00000000001854c7 : pop rdx ; out -0xb, eax ; mov ch, 0xab ; ret
0x0000000000186fd9 : pop rdx ; out dx, al ; call rax
0x0000000000186fd5 : pop rdx ; out dx, al ; lcall ptr [rax + 0x5a] ; out dx, al ; call rax
0x00000000001147e4 : pop rdx ; pop r10 ; ret
0x000000000010173c : pop rdx ; pop rbx ; ret
0x00000000000e9bd9 : pop rdx ; pop rcx ; pop rbx ; ret
0x0000000000114809 : pop rdx ; pop rsi ; ret
0x0000000000001b92 : pop rdx ; ret
0x0000000000185030 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000000abb45 : pop rdx ; test al, 0xf0 ; jne 0xabb79 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000014b33e : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001b1155 : pop rsi ; add dword ptr [rax], eax ; call 0xffffffffd81b0702
0x000000000012394c : pop rsi ; add ebx, dword ptr [rbx - 0x3d] ; mov eax, 0xffffffff ; ret
0x0000000000108a9c : pop rsi ; add ecx, dword ptr [rax - 0x42] ; ret
0x0000000000194fd9 : pop rsi ; cld ; jmp qword ptr [rdx]
0x0000000000194f1d : pop rsi ; cld ; jmp rax
0x0000000000189451 : pop rsi ; cmc ; call rsp
0x00000000000423c1 : pop rsi ; fmul st(0) ; ret
0x000000000004233f : pop rsi ; fmulp st(1) ; ret
0x00000000000fed2e : pop rsi ; jae 0xfed66 ; add byte ptr [rax - 0x76b7ffc8], al ; ret
0x0000000000084de2 : pop rsi ; jrcxz 0x84e21 ; add byte ptr [rbp - 0xcf98740], al ; ret
0x0000000000094075 : pop rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000001870a9 : pop rsi ; out dx, al ; jmp rsp
0x0000000000187115 : pop rsi ; out dx, al ; lcall ptr [rsi + rbx*2] ; out dx, al ; jmp rsp
0x0000000000103790 : pop rsi ; pop r15 ; jmp rax
0x0000000000020254 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000021100 : pop rsi ; pop r15 ; ret
0x00000000000cbb38 : pop rsi ; pop rbp ; ret
0x00000000000202e8 : pop rsi ; ret
0x00000000001014fb : pop rsi ; ret 0xcdbb
0x0000000000073575 : pop rsi ; sar rax, 2 ; ret
0x00000000000f8815 : pop rsi ; sbb byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000004c62e : pop rsi ; sub byte ptr [rdx], al ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000146b70 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001ac62c : pop rsp ; adc eax, dword ptr [rcx] ; add al, al ; xlatb ; jmp qword ptr [rcx]
0x0000000000146024 : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000d8ad2 : pop rsp ; add eax, 0x83077500 ; rol byte ptr [rcx], 0x39 ; ret 0xe875
0x0000000000147870 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x00000000001979dc : pop rsp ; add eax, 0xb5040001 ; out dx, eax ; call rsp
0x000000000019afb4 : pop rsp ; add eax, 0xe3b40002 ; cli ; jmp rsp
0x00000000000baec5 : pop rsp ; and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x00000000001ad32c : pop rsp ; and byte ptr [rcx], al ; add byte ptr [rax], dh ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x0000000000198001 : pop rsp ; call rsp
0x0000000000194fad : pop rsp ; cld ; call qword ptr [rdx]
0x0000000000194f31 : pop rsp ; cld ; call qword ptr [rsi + 0x26fffc62]
0x000000000019512d : pop rsp ; cld ; call rax
0x0000000000194f2d : pop rsp ; cld ; jmp qword ptr [rsi]
0x00000000001950ed : pop rsp ; cld ; jmp rax
0x0000000000194fa9 : pop rsp ; cld ; ljmp ptr [rsp + rbx*2 - 4] ; call qword ptr [rdx]
0x0000000000195129 : pop rsp ; cld ; push qword ptr [rax] ; pop rsp ; cld ; call rax
0x00000000001a8e2c : pop rsp ; fild dword ptr [rax] ; add byte ptr [rax], dh ; xor esi, ecx ; jmp rdi
0x00000000001a982c : pop rsp ; in eax, 0 ; add byte ptr [rax - 0x1a], dl ; int1 ; call qword ptr [rbx]
0x000000000008422b : pop rsp ; jmp rax
0x000000000008610d : pop rsp ; jmp rcx
0x0000000000127b63 : pop rsp ; ljmp ptr [rcx] ; add byte ptr [rdx], al ; add rsp, 8 ; ret
0x00000000001a3d2c : pop rsp ; mov al, byte ptr [rax] ; add byte ptr [rax], dl ; jns 0x1a3d27 ; call qword ptr [rsi]
0x00000000001a712c : pop rsp ; mov esi, 0x7cc00000 ; out dx, eax ; call qword ptr [rdi]
0x0000000000101fc0 : pop rsp ; mov esi, 2 ; jmp rax
0x0000000000101fda : pop rsp ; mov esi, 3 ; jmp rax
0x000000000006faaf : pop rsp ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000144a00 : pop rsp ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001870ad : pop rsp ; out dx, al ; jmp rsp
0x00000000000423bd : pop rsp ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000004233b : pop rsp ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x000000000010378c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000020250 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000210fc : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cbb34 : pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000202e4 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000073571 : pop rsp ; pop r13 ; pop r14 ; sar rax, 2 ; ret
0x000000000006d0d6 : pop rsp ; pop r13 ; pop rbp ; ret
0x00000000000206c3 : pop rsp ; pop r13 ; ret
0x00000000000b5ba5 : pop rsp ; pop r14 ; ret
0x000000000013a010 : pop rsp ; pop rax ; out dx, al ; dec dword ptr [rax - 0x77] ; ret
0x00000000000398b7 : pop rsp ; pop rbp ; ret
0x00000000001b052c : pop rsp ; push rdx ; add dword ptr [rax], eax ; nop ; jae 0x1b052f ; jmp qword ptr [rcx]
0x0000000000003838 : pop rsp ; ret
0x0000000000018ee0 : pop rsp ; ret 0x18
0x000000000000318d : pop rsp ; ret 0x52c0
0x000000000019cd2c : pop rsp ; sbb al, byte ptr [rax] ; add byte ptr [rax], al ; adc al, 0xe9 ; call qword ptr [rcx]
0x00000000001946ed : pop rsp ; sti ; jmp qword ptr [rax + 0x20fffb73]
0x00000000001a509d : popfq ; add byte ptr [rax], al ; xor bh, bh ; in eax, dx ; call qword ptr [rsi]
0x00000000001b50c5 : popfq ; add dword ptr [rax], eax ; fdivr st(6), st(0) ; jmp rsi
0x00000000001b4fed : popfq ; add dword ptr [rax], eax ; push rax ; fdiv st(6) ; jmp qword ptr [rdi]
0x00000000001adaf6 : popfq ; add ecx, dword ptr [rdx] ; ret
0x0000000000195d31 : popfq ; cld ; call qword ptr [rax]
0x0000000000195cf1 : popfq ; cld ; jmp qword ptr [rax]
0x0000000000195d2d : popfq ; cld ; push qword ptr [rax - 0x63] ; cld ; call qword ptr [rax]
0x00000000000e85f5 : popfq ; ret
0x0000000000148250 : popfq ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000005a763 : popfq ; sub bh, 0xff ; dec dword ptr [rcx + 0x39] ; ret
0x000000000015ab72 : psllq mm1, qword ptr [r15] ; jg 0x15ab8d ; ret
0x000000000015d642 : psllq mm1, qword ptr [r15] ; jg 0x15d65d ; ret
0x0000000000160162 : psllq mm1, qword ptr [r15] ; jg 0x16017d ; ret
0x000000000015ab73 : psllq mm1, qword ptr [rdi] ; jg 0x15ab8c ; ret
0x000000000015d643 : psllq mm1, qword ptr [rdi] ; jg 0x15d65c ; ret
0x0000000000160163 : psllq mm1, qword ptr [rdi] ; jg 0x16017c ; ret
0x00000000000a5436 : psllq mm1, qword ptr [rdi] ; jg 0xa544a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a5435 : psllq mm1, qword ptr [rdi] ; jg 0xa544b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a5497 : psllq mm1, qword ptr [rdi] ; jg 0xa54ac ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a6106 : psllq mm1, qword ptr [rdi] ; jg 0xa611a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a6105 : psllq mm1, qword ptr [rdi] ; jg 0xa611b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a6167 : psllq mm1, qword ptr [rdi] ; jg 0xa617c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a8516 : psllq mm1, qword ptr [rdi] ; jg 0xa852a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a8515 : psllq mm1, qword ptr [rdi] ; jg 0xa852b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a8577 : psllq mm1, qword ptr [rdi] ; jg 0xa858c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a8fe6 : psllq mm1, qword ptr [rdi] ; jg 0xa8ffa ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a8fe5 : psllq mm1, qword ptr [rdi] ; jg 0xa8ffb ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a9047 : psllq mm1, qword ptr [rdi] ; jg 0xa905c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000be7ec : psubb mm1, qword ptr [rax - 0x77] ; ret
0x00000000001945f5 : psubq mm7, mm7 ; and byte ptr [rax], dl ; sti ; call qword ptr [rax]
0x0000000000002c01 : push -0x7329150 ; ret
0x0000000000111064 : push -0x74fff86b ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000000f5504 : push -0x76000003 ; ret 0xcb8
0x000000000004b11c : push -0x76000005 ; ret 0x8941
0x000000000005c846 : push -0x7c000006 ; ret 0x8908
0x00000000001701a4 : push -0x9ffffff ; ret 0x7501
0x000000000002057f : push -0xcfffff7 ; ret
0x00000000000abb37 : push -0xfb872b8 ; ret
0x000000000012bcba : push 0 ; push 0x19 ; call qword ptr [rax]
0x000000000012bcbc : push 0x19 ; call qword ptr [rax]
0x00000000000f9b18 : push 0x244c8903 ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8445
0x00000000000e05fc : push 0x2494b60f ; ret
0x00000000000562ec : push 0x39fffffb ; fmul dword ptr [rdi] ; ret
0x000000000019879d : push 0x41140001 ; cmc ; call rsp
0x00000000001b9a3a : push 0x41380e0a ; ret
0x000000000008524c : push 0x48ee894c ; mov edi, ebx ; call rax
0x00000000000e7fb3 : push 0x5c415d5b ; pop r13 ; ret
0x00000000001850a2 : push 0x6e ; ja 0x18502d ; ret 0x48f
0x00000000001862bd : push 0x75e4ffed ; in eax, dx ; jmp rsp
0x0000000000103c3a : push 0xbc ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000186269 : push 0xed ; jmp rsp
0x00000000001983b1 : push 0xf3 ; jmp rsp
0x0000000000198d01 : push 0xf6 ; jmp rsp
0x00000000001b71b9 : push 0xf7 ; jmp rsi
0x000000000009640b : push 0xff ; ja 0x963f1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001347de : push 2 ; add rdi, 0x68 ; jmp rcx
0x00000000000a5e92 : push 5 ; add byte ptr [rax], al ; ret
0x0000000000050481 : push qword ptr [r9] ; sal bh, cl ; int1 ; add eax, r8d ; ret
0x0000000000194e83 : push qword ptr [rax + 0x17] ; cld ; inc eax ; sbb ah, bh ; call qword ptr [rax]
0x00000000001816b7 : push qword ptr [rax + 0x1c] ; jmp 0x1816bf
0x00000000001816df : push qword ptr [rax + 0x1c] ; jmp 0x1816e7
0x00000000001816ab : push qword ptr [rax + 0x2088ffeb] ; jmp 0x1816bb
0x0000000000188dbf : push qword ptr [rax + 0x26fff44f] ; xchg ah, dh ; jmp rdx
0x000000000019510b : push qword ptr [rax + 0x40fffc5f] ; pop rdi ; cld ; call rax
0x00000000001955f7 : push qword ptr [rax + 0x40fffc87] ; xchg esp, edi ; call rax
0x0000000000195917 : push qword ptr [rax + 0x40fffcaa] ; stosb byte ptr [rdi], al ; cld ; call rax
0x000000000019485b : push qword ptr [rax + 0x40fffda7] ; test al, 0xfd ; call rax
0x000000000018666f : push qword ptr [rax + 0x4dffedeb] ; loope 0x18666c ; jmp qword ptr [rbx]
0x0000000000195367 : push qword ptr [rax + 0x52] ; cld ; jmp rax
0x0000000000195163 : push qword ptr [rax + 0x53] ; cld ; jmp rax
0x0000000000186883 : push qword ptr [rax + 0x55] ; out dx, al ; call rax
0x000000000019581f : push qword ptr [rax + 0x79] ; cld ; jmp rax
0x0000000000195837 : push qword ptr [rax + 0x7e] ; cld ; jmp rax
0x00000000001945db : push qword ptr [rax + 9] ; sti ; inc dword ptr [rax + 0xa] ; sti ; call qword ptr [rax]
0x0000000000196f6b : push qword ptr [rax + rax*8 - 0x333c0000] ; in eax, dx ; jmp rsp
0x000000000013364c : push qword ptr [rax + rcx + 0x4c] ; mov edi, edi ; call 0x1f8b0
0x00000000000fee09 : push qword ptr [rax + rdx - 0x18] ; jmp rbx
0x0000000000188107 : push qword ptr [rax + rdx*4 - 0xd] ; push qword ptr [rcx + rdx*4 - 0xd] ; jmp qword ptr [rdx]
0x0000000000194cb7 : push qword ptr [rax - 0x15] ; sti ; inc eax ; in al, dx ; sti ; call qword ptr [rax]
0x000000000018762f : push qword ptr [rax - 0x18] ; int1 ; jmp qword ptr [rax - 0x2f000e18]
0x000000000018780b : push qword ptr [rax - 0x1f000e03] ; std ; int1 ; call qword ptr [rax]
0x00000000001868b3 : push qword ptr [rax - 0x2f0011ab] ; push rbp ; out dx, al ; call rax
0x00000000001878e7 : push qword ptr [rax - 0x3f000dfe] ; add dh, dl ; call rax
0x0000000000187713 : push qword ptr [rax - 0x3f000e14] ; in al, dx ; int1 ; call rax
0x0000000000194867 : push qword ptr [rax - 0x57] ; std ; call qword ptr [rax]
0x0000000000195d27 : push qword ptr [rax - 0x62] ; cld ; jmp rax
0x0000000000195d2f : push qword ptr [rax - 0x63] ; cld ; call qword ptr [rax]
0x0000000000060d6b : push qword ptr [rax - 0x77] ; ret
0x0000000000194b2f : push qword ptr [rax - 0x7f000441] ; ret 0xfffb
0x0000000000194d0b : push qword ptr [rax - 0xe] ; sti ; inc eax ; sti ; call qword ptr [rax]
0x000000000018781b : push qword ptr [rax - 2] ; int1 ; jmp qword ptr [rax - 0x2f000e02]
0x0000000000194bb7 : push qword ptr [rax] ; add al, 0xfc ; call qword ptr [rax]
0x000000000019a5b3 : push qword ptr [rax] ; add al, byte ptr [rax] ; xchg eax, esp ; ret 0xfff9
0x0000000000194bd3 : push qword ptr [rax] ; add bh, ah ; call qword ptr [rax]
0x0000000000194c57 : push qword ptr [rax] ; add edi, esp ; call qword ptr [rax]
0x0000000000194bcf : push qword ptr [rax] ; cld ; push qword ptr [rax] ; add bh, ah ; call qword ptr [rax]
0x00000000001949bb : push qword ptr [rax] ; fdivp st(3) ; call qword ptr [rax]
0x0000000000194a2f : push qword ptr [rax] ; fdivr st(3) ; push rax ; fsincos ; call rax
0x00000000000a4c9f : push qword ptr [rax] ; leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x000000000018b9cf : push qword ptr [rax] ; mov bh, dl ; call qword ptr [rax]
0x000000000018b9cb : push qword ptr [rax] ; mov bh, dl ; push qword ptr [rax] ; mov bh, dl ; call qword ptr [rax]
0x0000000000194cab : push qword ptr [rax] ; or al, 0xfc ; jmp rax
0x0000000000194ca7 : push qword ptr [rax] ; or bh, ah ; push qword ptr [rax] ; or al, 0xfc ; jmp rax
0x000000000019512b : push qword ptr [rax] ; pop rsp ; cld ; call rax
0x00000000001945f3 : push qword ptr [rax] ; psubq mm7, mm7 ; and byte ptr [rax], dl ; sti ; call qword ptr [rax]
0x000000000018782b : push qword ptr [rax] ; push rcx ; jmp rax
0x000000000019469f : push qword ptr [rax] ; push rcx ; sti ; call qword ptr [rax]
0x000000000019467f : push qword ptr [rax] ; sti ; call qword ptr [rax]
0x0000000000171b28 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x00000000001866c7 : push qword ptr [rbp + 0x23ffedde] ; out 0xed, al ; jmp qword ptr [rbx]
0x00000000000745db : push qword ptr [rbp + 2] ; pop rbx ; ret
0x000000000007b97d : push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x0000000000072aa5 : push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x00000000001421d0 : push qword ptr [rbp + rcx + 0x48] ; add esp, 8 ; ret
0x0000000000072a4d : push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x00000000000c7f7e : push qword ptr [rbp + rsi - 0x77] ; ret 0xe283
0x0000000000048b3e : push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x000000000011f4c2 : push qword ptr [rbp - 0x15] ; pop rbx ; ret
0x0000000000127fcb : push qword ptr [rbp - 0x16] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000173aac : push qword ptr [rbp - 0x16] ; pop rbx ; ret
0x0000000000048486 : push qword ptr [rbp - 0x19] ; mov rax, rdx ; ret
0x000000000007bf01 : push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x00000000001152b2 : push qword ptr [rbp - 0xe] ; xor eax, eax ; leave ; ret
0x00000000000cb865 : push qword ptr [rbx + 0x31] ; ret
0x00000000000f51c8 : push qword ptr [rbx + 0x34] ; ret
0x000000000003575c : push qword ptr [rbx + 1] ; ret
0x0000000000047ae6 : push qword ptr [rbx + 3] ; xor eax, eax ; ret
0x0000000000072bfc : push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x0000000000187407 : push qword ptr [rbx + rbp*2 + 0x6bc4fff1] ; int1 ; call rsp
0x0000000000187413 : push qword ptr [rbx + rbp*2 - 0xf] ; jmp rsp
0x0000000000195a8b : push qword ptr [rbx + rbp*4 - 0x54bb0004] ; cld ; call rsp
0x0000000000199f0b : push qword ptr [rbx + rbp*8 - 0x69abffff] ; clc ; jmp rsp
0x000000000018810b : push qword ptr [rcx + rdx*4 - 0xd] ; jmp qword ptr [rdx]
0x00000000001886bf : push qword ptr [rcx - 0x31] ; jmp rdi
0x000000000018890b : push qword ptr [rcx] ; enter -0xd, -0x79 ; fdiv st(3) ; jmp rdx
0x00000000000ebd48 : push qword ptr [rcx] ; fild dword ptr [rbx - 0x6af0fd08] ; ret
0x0000000000074ac1 : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000075eb8 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000050482 : push qword ptr [rcx] ; sal bh, cl ; int1 ; add eax, r8d ; ret
0x00000000000b71e5 : push qword ptr [rcx] ; test byte ptr [rbp - 0x73], 0x2c ; mov ah, 0xe9 ; ret
0x000000000011501c : push qword ptr [rdi + 0x1b] ; ret
0x000000000003541d : push qword ptr [rdi + 0x20] ; ret
0x00000000000f6d98 : push qword ptr [rdi + 0x35] ; ret
0x00000000000f6e3c : push qword ptr [rdi + 0x41] ; add rsp, 0x60 ; pop rbx ; ret
0x00000000000fbee3 : push qword ptr [rdi + 0xa] ; ret
0x00000000000f6432 : push qword ptr [rdi + 0xb] ; ret
0x0000000000035791 : push qword ptr [rdi + 0xc] ; ret
0x00000000000ccb0c : push qword ptr [rdi + 1] ; ret
0x00000000000357db : push qword ptr [rdi + 2] ; ret
0x00000000000f633a : push qword ptr [rdi + 3] ; ret
0x00000000000f6389 : push qword ptr [rdi + 4] ; ret
0x00000000000cb740 : push qword ptr [rdi + 5] ; ret
0x00000000000cb64f : push qword ptr [rdi + 6] ; ret
0x00000000000c8c26 : push qword ptr [rdi + 7] ; ret
0x0000000000035725 : push qword ptr [rdi + 8] ; ret
0x00000000000c79ac : push qword ptr [rdi + 9] ; pop rbx ; ret
0x00000000000bba0c : push qword ptr [rdi + 9] ; ret
0x000000000007b4c6 : push qword ptr [rdi + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x00000000000e7a36 : push qword ptr [rdi + rax - 0x48] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000195fc3 : push qword ptr [rdi + rbx*2] ; add byte ptr [rsp + rsi*8 - 0x18], dl ; jmp rsp
0x0000000000196f4b : push qword ptr [rdi + rdi*4 - 0x3b2c0000] ; in eax, dx ; jmp rsp
0x000000000009640c : push qword ptr [rdi - 0x27] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000114ff4 : push qword ptr [rdi - 0x33] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000194fdf : push qword ptr [rdx + 0x42fffc5d] ; pop rbp ; cld ; call rdx
0x00000000001954cb : push qword ptr [rdx + 0x42fffc85] ; test edi, esp ; call rdx
0x00000000001959c3 : push qword ptr [rdx + 0x42fffcac] ; lodsb al, byte ptr [rsi] ; cld ; call rdx
0x00000000000ac87b : push qword ptr [rdx + rdx*2 - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret 0xe883
0x0000000000189f7f : push qword ptr [rdx - 0x4d000984] ; jl 0x189f85 ; call qword ptr [rdx]
0x000000000018a27f : push qword ptr [rdx - 0x4d000987] ; jns 0x18a285 ; call rsp
0x000000000019475b : push qword ptr [rdx - 0x5d] ; std ; call qword ptr [rax]
0x0000000000194757 : push qword ptr [rdx - 0x5e] ; std ; push qword ptr [rdx - 0x5d] ; std ; call qword ptr [rax]
0x0000000000188b67 : push qword ptr [rdx] ; hlt ; lcall ptr [rcx] ; push rdx ; hlt ; jmp qword ptr [rbx]
0x0000000000195be3 : push qword ptr [rdx] ; lahf ; cld ; jmp qword ptr [rdx + 0x12fffc9e]
0x000000000018174b : push qword ptr [rip + 0x8ffeb22] ; and ebx, ebp ; call qword ptr [rbx]
0x00000000001090f9 : push qword ptr [rsi + rax - 0x7d] ; rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x0000000000195593 : push qword ptr [rsp + rax*4 - 0x7bbb0004] ; cld ; call rsp
0x0000000000196ec3 : push qword ptr [rsp + rdi*4 - 0x481c0000] ; in eax, dx ; call rsp
0x0000000000134876 : push r12 ; mov eax, 1 ; ret
0x000000000007b13c : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000194603 : push rax ; adc bh, bl ; jmp rax
0x0000000000071b7a : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000007c7c1 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000012bf4d : push rax ; adc dh, dh ; ret 0x7401
0x0000000000080ded : push rax ; adc dh, dh ; ret 0xf0f
0x0000000000194bb4 : push rax ; add bh, ah ; push qword ptr [rax] ; add al, 0xfc ; call qword ptr [rax]
0x000000000007b13d : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000001878f7 : push rax ; add dh, dl ; inc dword ptr [rax] ; add esi, edx ; call qword ptr [rax]
0x0000000000077e8c : push rax ; add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000001b037d : push rax ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001b02ed : push rax ; add dword ptr [rax], eax ; jo 0x1b02ee ; jmp qword ptr [rcx]
0x00000000001b03c5 : push rax ; add dword ptr [rax], eax ; js 0x1b0441 ; cmc ; jmp qword ptr [rcx]
0x00000000001b0305 : push rax ; add dword ptr [rax], eax ; pop rax ; jo 0x1b0306 ; jmp qword ptr [rcx]
0x000000000002d711 : push rax ; add dword ptr [rcx + rdi - 0x7d], esi ; ret
0x0000000000094d1f : push rax ; add eax, ebp ; or dl, byte ptr [rcx - 0x76b70001] ; ret 0xc031
0x000000000019ed30 : push rax ; add ebp, edx ; call rax
0x0000000000194c54 : push rax ; add esp, edi ; push qword ptr [rax] ; add edi, esp ; call qword ptr [rax]
0x000000000013b439 : push rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013b097 : push rax ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000140891 : push rax ; and byte ptr [rax - 0x77], cl ; ret 0x3d83
0x00000000001b2210 : push rax ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001aa880 : push rax ; and edx, esi ; jmp qword ptr [rcx]
0x00000000000e9bab : push rax ; call 0xe8819
0x00000000000218e8 : push rax ; call rbx
0x00000000001877fb : push rax ; cld ; int1 ; jmp qword ptr [rax]
0x00000000001877c7 : push rax ; cli ; int1 ; call qword ptr [rax]
0x000000000004b7e9 : push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000001949b8 : push rax ; fdiv st(3), st(0) ; push qword ptr [rax] ; fdivp st(3) ; call qword ptr [rax]
0x00000000001b4ff0 : push rax ; fdiv st(6) ; jmp qword ptr [rdi]
0x0000000000194ae0 : push rax ; fdivp st(3) ; jmp qword ptr [rax]
0x0000000000194a33 : push rax ; fsincos ; call rax
0x0000000000188db1 : push rax ; hlt ; call rax
0x0000000000188ae9 : push rax ; hlt ; call rcx
0x000000000018897b : push rax ; hlt ; dec dword ptr [rax + 0x4a] ; hlt ; call rax
0x0000000000188dab : push rax ; hlt ; dec dword ptr [rax + 0x50] ; hlt ; call rax
0x0000000000188ae5 : push rax ; hlt ; inc edi ; push rax ; hlt ; call rcx
0x0000000000188aa5 : push rax ; hlt ; jmp qword ptr [rbx]
0x00000000001985d1 : push rax ; hlt ; jmp rsp
0x0000000000188aa1 : push rax ; hlt ; lcall ptr [rcx] ; push rax ; hlt ; jmp qword ptr [rbx]
0x00000000001875df : push rax ; in eax, -0xf ; call qword ptr [rax]
0x00000000001a2fe0 : push rax ; in eax, dx ; jmp qword ptr [rax]
0x00000000001a3420 : push rax ; in eax, dx ; jmp qword ptr [rsi]
0x0000000000195644 : push rax ; jge 0x195646 ; call rax
0x000000000019564c : push rax ; jl 0x19564e ; call rax
0x000000000019563c : push rax ; jle 0x19563e ; call rax
0x0000000000195833 : push rax ; jle 0x19583b ; push qword ptr [rax + 0x7e] ; cld ; jmp rax
0x0000000000195654 : push rax ; jnp 0x195656 ; call rax
0x000000000019581b : push rax ; jns 0x195823 ; push qword ptr [rax + 0x79] ; cld ; jmp rax
0x000000000019565c : push rax ; jp 0x19565e ; call rax
0x0000000000074f22 : push rax ; lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x0000000000195900 : push rax ; lodsd eax, dword ptr [rsi] ; cld ; jmp rax
0x000000000005f0ba : push rax ; loop 0x5f0c5 ; dec dword ptr [rcx + rcx*4 - 1] ; call 0x7b2d9
0x0000000000195d8c : push rax ; mov bh, ah ; call rax
0x0000000000023ace : push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000195dd0 : push rax ; mov esp, dr1 ; call rax
0x0000000000195dc8 : push rax ; mov esp, edi ; call rax
0x0000000000135066 : push rax ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000112a66 : push rax ; mov rsi, rdx ; call rax
0x0000000000195d9c : push rax ; nop ; cld ; call rax
0x000000000007ecc2 : push rax ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x0000000000081772 : push rax ; or dh, dh ; ret 0x7404
0x00000000000816e5 : push rax ; or dh, dh ; ret 0xf04
0x000000000001fe57 : push rax ; or dh, dh ; ret 0xf08
0x000000000014490c : push rax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018761f : push rax ; out -0xf, eax ; call qword ptr [rax]
0x00000000001875ff : push rax ; out 0xf1, al ; call qword ptr [rax]
0x00000000001a9830 : push rax ; out 0xf1, al ; call qword ptr [rbx]
0x0000000000197399 : push rax ; out dx, al ; call rsp
0x0000000000193e56 : push rax ; pop r9 ; clc ; ret 0x6e1f
0x00000000001afdb0 : push rax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00000000000ac0de : push rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000194f1c : push rax ; pop rsi ; cld ; jmp rax
0x0000000000186880 : push rax ; push rbp ; out dx, al ; push qword ptr [rax + 0x55] ; out dx, al ; call rax
0x000000000018785f : push rax ; push rcx ; call qword ptr [rax]
0x0000000000023ad0 : push rax ; push rsp ; ret
0x00000000001946a7 : push rax ; push rsp ; sti ; jmp qword ptr [rax]
0x00000000000087f8 : push rax ; ret
0x0000000000005240 : push rax ; ret 0x11
0x000000000000b180 : push rax ; ret 0x12
0x0000000000018e98 : push rax ; ret 0x18
0x0000000000007568 : push rax ; ret 0xf
0x000000000019e600 : push rax ; ret 0xffe9
0x0000000000032c0c : push rax ; ret 5
0x00000000000bf7d1 : push rax ; ror byte ptr [rax - 0x46], 1 ; ret
0x00000000000c2764 : push rax ; ror byte ptr [rax - 0x7d], 1 ; ret
0x000000000007c7b6 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000072b1a : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x000000000010f822 : push rax ; sbb dh, dh ; ret 0x7508
0x0000000000114165 : push rax ; shr ax, 0xe ; and eax, 1 ; ret
0x00000000000f52d1 : push rax ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x0000000000194687 : push rax ; sti ; call rax
0x00000000001877e3 : push rax ; sti ; int1 ; jmp qword ptr [rax]
0x000000000019469c : push rax ; sti ; push qword ptr [rax] ; push rcx ; sti ; call qword ptr [rax]
0x000000000019467c : push rax ; sti ; push qword ptr [rax] ; sti ; call qword ptr [rax]
0x0000000000195b18 : push rax ; stosb byte ptr [rdi], al ; cld ; jmp rax
0x0000000000194db0 : push rax ; sub ah, bh ; call qword ptr [rax]
0x000000000010116a : push rax ; sub al, 0 ; add rsp, 8 ; ret
0x0000000000194e37 : push rax ; sub bh, ah ; call rax
0x0000000000194db7 : push rax ; sub edi, esp ; call rax
0x0000000000195d7c : push rax ; test bh, ah ; call rax
0x000000000019dd30 : push rax ; test ebp, ecx ; jmp rsp
0x0000000000195dc0 : push rax ; xchg ah, bh ; call rax
0x0000000000195408 : push rax ; xchg ah, bh ; jmp rax
0x0000000000195de8 : push rax ; xchg eax, ebp ; cld ; call rax
0x0000000000195da4 : push rax ; xchg eax, ebx ; cld ; call rax
0x00000000001a92c0 : push rax ; xchg eax, ebx ; int1 ; call qword ptr [rax]
0x0000000000195de0 : push rax ; xchg eax, edx ; cld ; call rax
0x0000000000195dac : push rax ; xchg eax, esi ; cld ; call qword ptr [rax - 0x2f000380]
0x0000000000195d84 : push rax ; xchg esp, edi ; call rax
0x000000000007befd : push rax ; xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x00000000000e1980 : push rbp ; adc byte ptr [rax + 0x39], cl ; ret 0x2575
0x00000000000e19a5 : push rbp ; adc byte ptr [rax + 0x39], cl ; ret 0xe474
0x00000000001723a7 : push rbp ; adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000012e58c : push rbp ; adc byte ptr [rcx], bh ; ret
0x00000000000f53a2 : push rbp ; add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f5324 : push rbp ; add al, 0x8d ; add dword ptr [r8 - 0x7d], ecx ; ret
0x00000000000494cf : push rbp ; add byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x00000000000f1bcd : push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001026d1 : push rbp ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x00000000000d3b3c : push rbp ; add byte ptr [rcx], bh ; ret 0x840f
0x00000000001b08c5 : push rbp ; add dword ptr [rax], eax ; pop rax ; jp 0x1b08c6 ; jmp qword ptr [rcx]
0x00000000001baff1 : push rbp ; clc ; call qword ptr [rax]
0x00000000001bb029 : push rbp ; clc ; jmp qword ptr [rcx]
0x0000000000195355 : push rbp ; cld ; call qword ptr [rax + 0x10fffc54]
0x0000000000195351 : push rbp ; cld ; call qword ptr [rax]
0x00000000001951d5 : push rbp ; cld ; call rdx
0x0000000000195315 : push rbp ; cld ; jmp qword ptr [rax + 0x20fffc54]
0x0000000000195311 : push rbp ; cld ; jmp qword ptr [rax]
0x000000000019aa99 : push rbp ; cli ; call rsp
0x00000000000ed428 : push rbp ; dec dword ptr [rax + 0x63] ; ret 0x8d48
0x00000000001a3581 : push rbp ; in eax, dx ; call qword ptr [rax]
0x0000000000196c59 : push rbp ; in eax, dx ; jmp rsp
0x0000000000001cb9 : push rbp ; je 0x1ce7 ; ret
0x00000000000e2547 : push rbp ; jno 0xe254f ; dec dword ptr [rax - 0x77] ; ret
0x0000000000113e44 : push rbp ; nop ; mov rdx, r13 ; call rax
0x0000000000149398 : push rbp ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001135e4 : push rbp ; or byte ptr [rax - 0x77], 0xda ; call rax
0x00000000000d642b : push rbp ; or byte ptr [rcx - 0x75], cl ; je 0xd645d ; or byte ptr [rcx], ch ; ret
0x0000000000186885 : push rbp ; out dx, al ; call rax
0x0000000000186899 : push rbp ; out dx, al ; lcall ptr [rax] ; push rbp ; out dx, al ; call rax
0x0000000000186881 : push rbp ; out dx, al ; push qword ptr [rax + 0x55] ; out dx, al ; call rax
0x0000000000098b38 : push rbp ; ret
0x000000000009b146 : push rbp ; ret 0x8348
0x0000000000098b2a : push rbp ; ret 0x8349
0x000000000010515a : push rbp ; rol byte ptr [rbx - 0x34d6fe3d], 1 ; ret
0x0000000000113a52 : push rbp ; sbb byte ptr [rcx - 0x76b37fab], cl ; call rax
0x00000000000025de : push rbp ; sbb esi, dword ptr [rdx] ; sahf ; jl 0x257b ; loop 0x25c6 ; ret 0x23cb
0x0000000000110de8 : push rbp ; sub byte ptr [rax - 0x77], cl ; ret
0x000000000004bc8f : push rbp ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000012d5c4 : push rbp ; sub dword ptr [rax], eax ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x00000000000d4d5b : push rbp ; test al, 0x89 ; ret
0x0000000000023657 : push rbp ; test al, 0xe8 ; ret 0xffff
0x0000000000113471 : push rbp ; test byte ptr [rbp + 0x390b74d2], al ; ret 0xf7e
0x0000000000115110 : push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x000000000008e0ea : push rbp ; xor rax, rax ; ret
0x00000000000887a1 : push rbx ; adc byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x00000000000004b5 : push rbx ; add al, 4 ; ret 0x6080
0x00000000000b5e19 : push rbx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000105561 : push rbx ; add dword ptr [rax - 0x73], ecx ; add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x00000000000da777 : push rbx ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000008554f : push rbx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000001b0695 : push rbx ; add dword ptr [rax], eax ; sbb byte ptr [rsi - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001b06ad : push rbx ; add dword ptr [rax], eax ; xor byte ptr [rsi - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001101bc : push rbx ; and byte ptr [rax + 0x2b], cl ; xor r9b, bpl ; ret
0x0000000000195321 : push rbx ; cld ; call qword ptr [rax]
0x0000000000195165 : push rbx ; cld ; jmp rax
0x000000000019b0e1 : push rbx ; cld ; jmp rsp
0x0000000000195365 : push rbx ; cld ; push qword ptr [rax + 0x52] ; cld ; jmp rax
0x00000000001afaa9 : push rbx ; cmc ; call qword ptr [rdx]
0x0000000000002053 : push rbx ; cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x00000000000df926 : push rbx ; cmp cl, ch ; ret
0x00000000000df427 : push rbx ; cmp cl, ch ; ret 0xfffe
0x000000000002a692 : push rbx ; je 0x2a6a9 ; cmp esi, 3 ; je 0x2a6a9 ; pop rbx ; ret
0x0000000000072a19 : push rbx ; je 0x72a7d ; pop rbp ; pop r12 ; ret
0x0000000000072abe : push rbx ; je 0x72b22 ; pop rbp ; pop r12 ; ret
0x00000000000cd14d : push rbx ; je 0xcd12a ; mov eax, 1 ; ret
0x00000000000cd14c : push rbx ; je 0xcd12b ; mov eax, 1 ; ret
0x00000000000abb1c : push rbx ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000a64f2 : push rbx ; movq qword ptr [rdi + 0x30], mm7 ; ret
0x000000000018970b : push rbx ; movsxd rsi, ebp ; call qword ptr [rbx]
0x000000000006cdda : push rbx ; or al, 0xf6 ; ret 0xf04
0x000000000007b35b : push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000003cdc : push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x000000000002d8a8 : push rbx ; ret
0x000000000011b1f0 : push rbx ; ret 0x2a
0x00000000000887a5 : push rbx ; sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x0000000000076ae6 : push rbx ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001946a5 : push rbx ; sti ; push rax ; push rsp ; sti ; jmp qword ptr [rax]
0x000000000007a7d4 : push rbx ; sub cl, ch ; ret 0xfffe
0x00000000000786a1 : push rbx ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x00000000001844fc : push rbx ; xchg eax, edx ; jae 0x1844db ; push rsi ; pop rdx ; je 0x1844d0 ; ret 0xacfc
0x0000000000131b25 : push rcx ; adc byte ptr [rax + 1], bh ; ret
0x000000000019ad15 : push rcx ; add al, byte ptr [rax] ; adc al, 0xa7 ; cli ; jmp rsp
0x00000000000b6f26 : push rcx ; add dword ptr [rax + 0x39], ecx ; ret 0x2973
0x00000000001b043d : push rcx ; add dword ptr [rax], eax ; and byte ptr [rdx - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001b0485 : push rcx ; add dword ptr [rax], eax ; cwde ; jb 0x1b0486 ; jmp qword ptr [rcx]
0x00000000001b03f5 : push rcx ; add dword ptr [rax], eax ; fdiv dword ptr [rcx - 0xb] ; jmp qword ptr [rcx]
0x00000000001b04cd : push rcx ; add dword ptr [rax], eax ; loopne 0x1b054a ; cmc ; call qword ptr [rsi]
0x00000000001b0425 : push rcx ; add dword ptr [rax], eax ; or byte ptr [rdx - 0xb], dh ; jmp qword ptr [rcx]
0x00000000000d62de : push rcx ; add dword ptr [rbx - 0x7cb7fe3b], eax ; ret
0x000000000009e3b9 : push rcx ; add esi, eax ; add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x000000000009e438 : push rcx ; add esi, eax ; add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x000000000013a36e : push rcx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000187839 : push rcx ; call qword ptr [rax]
0x0000000000183785 : push rcx ; call qword ptr [rsi]
0x0000000000187859 : push rcx ; call rax
0x0000000000195131 : push rcx ; cld ; call qword ptr [rax + 0x10fffc59]
0x0000000000195331 : push rcx ; cld ; jmp qword ptr [rax]
0x0000000000188b05 : push rcx ; hlt ; call qword ptr [rdi]
0x0000000000188b09 : push rcx ; hlt ; jmp qword ptr [rcx]
0x000000000009f2ed : push rcx ; jl 0x9f33e ; adc dword ptr [rcx - 1], edi ; ret
0x000000000009f454 : push rcx ; jl 0x9f4a5 ; adc dword ptr [rcx + 7], edi ; ret
0x000000000009fa40 : push rcx ; jl 0x9fa91 ; adc dword ptr [rcx - 1], edi ; ret
0x000000000009fba7 : push rcx ; jl 0x9fbf8 ; adc dword ptr [rcx + 7], edi ; ret
0x00000000000a018d : push rcx ; jl 0xa01de ; adc dword ptr [rcx - 1], edi ; ret
0x00000000000a02f4 : push rcx ; jl 0xa0345 ; adc dword ptr [rcx + 7], edi ; ret
0x000000000018782d : push rcx ; jmp rax
0x000000000012785c : push rcx ; jns 0x12786b ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x0000000000001b2c : push rcx ; jns 0x1b39 ; ret
0x0000000000194878 : push rcx ; mov eax, 0xb851fffd ; std ; call qword ptr [rcx]
0x0000000000194908 : push rcx ; mov eax, 0xb851fffd ; std ; call rsi
0x0000000000194978 : push rcx ; mov eax, 0xb851fffd ; std ; jmp qword ptr [rax]
0x0000000000194888 : push rcx ; mov eax, 0xb851fffd ; std ; jmp rsi
0x0000000000187829 : push rcx ; push qword ptr [rax] ; push rcx ; jmp rax
0x000000000018785d : push rcx ; push rax ; push rcx ; call qword ptr [rax]
0x00000000001ba42e : push rcx ; ret
0x0000000000133653 : push rcx ; ret 0xffee
0x000000000003d30f : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000019a281 : push rcx ; stc ; call rsp
0x00000000001946a1 : push rcx ; sti ; call qword ptr [rax]
0x000000000010110b : push rcx ; sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a93b2 : push rdi ; adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a7942 : push rdi ; adc al, 0x48 ; lea eax, dword ptr [rdi + 0x15] ; ret
0x00000000000a9510 : push rdi ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a91e8 : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a91fa : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x000000000009e074 : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x00000000000a778a : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; ret
0x000000000015acd9 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x000000000009dfe4 : push rdi ; add al, 0x48 ; mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000009df74 : push rdi ; add al, 0x48 ; mov eax, edi ; ret
0x000000000002da7c : push rdi ; add al, 0x72 ; or bl, dh ; ret
0x000000000019adf5 : push rdi ; add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000a91ba : push rdi ; add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a6a0c : push rdi ; add eax, 0xc478d48 ; ret
0x00000000000a784c : push rdi ; add eax, 0xd478d48 ; ret
0x00000000000fe18a : push rdi ; add ebx, ebp ; and eax, 0x83489066 ; ret 0x3c01
0x00000000000a9218 : push rdi ; add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x00000000001081da : push rdi ; and byte ptr [rax - 0x73], cl ; adc byte ptr [rax + 0x39], r9b ; ret 0x1b72
0x0000000000199de9 : push rdi ; clc ; jmp rsp
0x0000000000152128 : push rdi ; clc ; ret
0x00000000000038eb : push rdi ; clc ; salc ; jb 0x3971 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x0000000000195345 : push rdi ; cld ; call qword ptr [rax + 0x10fffc56]
0x0000000000195341 : push rdi ; cld ; call qword ptr [rax]
0x00000000001951c5 : push rdi ; cld ; call rdx
0x0000000000195305 : push rdi ; cld ; jmp qword ptr [rax + 0x20fffc56]
0x0000000000195301 : push rdi ; cld ; jmp qword ptr [rax]
0x00000000001522a0 : push rdi ; cld ; ret
0x000000000019aac9 : push rdi ; cli ; jmp rsp
0x0000000000152dc7 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015a5b9 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001350e5 : push rdi ; cmp byte ptr [rax + 1], bh ; ret
0x0000000000087caa : push rdi ; fmul dword ptr [rax + 0x39] ; ret 0x2f74
0x000000000015a539 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000186278 : push rdi ; insd dword ptr [rdi], dx ; in eax, dx ; jmp rsp
0x000000000015a38a : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000007b094 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x000000000015a41a : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000122860 : push rdi ; or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x00000000000a925c : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a929a : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a923a : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000ba7f1 : push rdi ; or byte ptr [rbp - 0x28], dh ; ret
0x0000000000049fca : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x00000000000483ea : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x000000000013e312 : push rdi ; or byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8b41
0x00000000000483f1 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x0000000000077e90 : push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000000a6bf0 : push rdi ; or eax, 0x1c478d48 ; ret
0x00000000000a7a40 : push rdi ; or eax, 0x1d478d48 ; ret
0x0000000000130645 : push rdi ; out dx, al ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000016f01e : push rdi ; ret
0x000000000009cab5 : push rdi ; ret 0xf800
0x000000000016f0be : push rdi ; ret 0xff3
0x000000000013b6e3 : push rdi ; sbb byte ptr [rax + 1], bh ; ret
0x000000000010ecb6 : push rdi ; sbb byte ptr [rax - 0x77], cl ; ret
0x000000000013c7fb : push rdi ; sbb byte ptr [rcx + 0x63], cl ; ret
0x0000000000152fc7 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001527ea : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x0000000000152bc7 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000013512d : push rdi ; sub byte ptr [rax + 1], bh ; ret
0x000000000010436c : push rdi ; sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000073f4f : push rdi ; sub rdx, rsi ; mov rdi, r15 ; call rax
0x00000000000a94f0 : push rdi ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x000000000008cafb : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000019ad45 : push rdx ; add al, byte ptr [rax] ; in al, -0x58 ; cli ; jmp rsp
0x00000000001b0575 : push rdx ; add dword ptr [rax], eax ; fdiv dword ptr [rbx - 0xb] ; jmp qword ptr [rcx]
0x00000000001b052d : push rdx ; add dword ptr [rax], eax ; nop ; jae 0x1b052e ; jmp qword ptr [rcx]
0x00000000001b0545 : push rdx ; add dword ptr [rax], eax ; test al, 0x73 ; cmc ; jmp qword ptr [rcx]
0x00000000001b04fd : push rdx ; add dword ptr [rax], eax ; xor byte ptr [rbx - 0xb], dh ; jmp qword ptr [rcx]
0x000000000012370e : push rdx ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x00000000001951e9 : push rdx ; cld ; jmp qword ptr [rdx]
0x0000000000195369 : push rdx ; cld ; jmp rax
0x0000000000188b6d : push rdx ; hlt ; jmp qword ptr [rbx]
0x00000000000eee52 : push rdx ; idiv edi ; dec dword ptr [rbp + rcx*4 + 0x25] ; ret
0x000000000019d171 : push rdx ; jmp 0x1b9479
0x000000000018a043 : push rdx ; jnp 0x18a041 ; call qword ptr [rsi]
0x000000000018a03f : push rdx ; jnp 0x18a041 ; push rdx ; jnp 0x18a045 ; call qword ptr [rsi]
0x00000000001954b4 : push rdx ; mov ah, bh ; jmp rdx
0x0000000000195bb4 : push rdx ; movsd dword ptr [rdi], dword ptr [rsi] ; cld ; call rdx
0x0000000000088c46 : push rdx ; or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x000000000013ec42 : push rdx ; or byte ptr [rcx], bh ; ret 0x3875
0x00000000001951bc : push rdx ; pop rax ; cld ; call rdx
0x00000000000fa62a : push rdx ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000001951d4 : push rdx ; push rbp ; cld ; call rdx
0x00000000001951c4 : push rdx ; push rdi ; cld ; call rdx
0x00000000001951cc : push rdx ; push rsi ; cld ; call rdx
0x00000000001951dc : push rdx ; push rsp ; cld ; call rdx
0x00000000000e9bba : push rdx ; ret
0x000000000011b1ea : push rdx ; ret 0x2a
0x0000000000023aca : push rdx ; sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x0000000000111b64 : push rdx ; sub byte ptr [rax - 0x77], cl ; ret
0x0000000000001b11 : push rdx ; test dword ptr [rbx + 0x59e7c8ee], esi ; pop rbx ; ret 0x2a63
0x000000000016dd04 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000a9cb9 : push rsi ; add ah, byte ptr [rdx - 0xf] ; jl 0xa9d10 ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000071fe2 : push rsi ; add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00000000000814b4 : push rsi ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret 0x854d
0x0000000000075b20 : push rsi ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x75ac3
0x000000000015af71 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000000f8d46 : push rsi ; add dword ptr [rax + 0x39], ecx ; ret 0xc72
0x00000000001b096d : push rsi ; add dword ptr [rax], eax ; add byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x00000000001b0955 : push rsi ; add dword ptr [rax], eax ; call 0x221afedd
0x00000000001b08dd : push rsi ; add dword ptr [rax], eax ; jo 0x1b0962 ; cmc ; jmp qword ptr [rcx]
0x00000000001b08f5 : push rsi ; add dword ptr [rax], eax ; mov byte ptr [rdx - 0xb], bh ; jmp qword ptr [rcx]
0x00000000001b0985 : push rsi ; add dword ptr [rax], eax ; sbb byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x00000000001b099d : push rsi ; add dword ptr [rax], eax ; xor byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x000000000015afe1 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000000a53c5 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000020c29 : push rsi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000015af01 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000000a5363 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000016dd19 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000152252 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000019534d : push rsi ; cld ; call qword ptr [rax + 0x10fffc55]
0x0000000000195349 : push rsi ; cld ; call qword ptr [rax]
0x00000000001951cd : push rsi ; cld ; call rdx
0x000000000019530d : push rsi ; cld ; jmp qword ptr [rax + 0x20fffc55]
0x0000000000195309 : push rsi ; cld ; jmp qword ptr [rax]
0x00000000001529c1 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001525f5 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001527d5 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001529b5 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152415 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001850a0 : push rsi ; cli ; push 0x6e ; ja 0x18502f ; ret 0x48f
0x0000000000171666 : push rsi ; cmc ; sub eax, edx ; ret
0x00000000001947d8 : push rsi ; cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; jmp rsi
0x0000000000171656 : push rsi ; hlt ; sub eax, edx ; ret
0x0000000000171626 : push rsi ; int1 ; sub eax, edx ; ret
0x000000000018620f : push rsi ; jbe 0x186204 ; jmp rdi
0x0000000000112a42 : push rsi ; je 0x112a58 ; mov eax, 7 ; ret
0x00000000000f566b : push rsi ; js 0xf56bf ; mov dword ptr [rdi + 0x80], edx ; ret
0x00000000000f6008 : push rsi ; js 0xf605c ; mov dword ptr [rdi + 0x100], edx ; ret
0x0000000000195948 : push rsi ; lodsb al, byte ptr [rsi] ; cld ; jmp rsi
0x00000000000567b8 : push rsi ; or al, 0x83 ; ret
0x000000000005673b : push rsi ; or al, 0xf6 ; ret 0xf08
0x00000000000940fd : push rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000000000ba7ee : push rsi ; or byte ptr [rcx], bh ; push rdi ; or byte ptr [rbp - 0x28], dh ; ret
0x0000000000194f64 : push rsi ; pop rbp ; cld ; jmp rsi
0x0000000000184500 : push rsi ; pop rdx ; je 0x1844cc ; ret 0xacfc
0x0000000000034bbf : push rsi ; ret
0x00000000000e46b7 : push rsi ; ret 0x7420
0x000000000009ef9a : push rsi ; ret 0x7518
0x0000000000061b6f : push rsi ; ret 0xf02
0x00000000000e4091 : push rsi ; ret 0xf08
0x0000000000058298 : push rsi ; ret 0xf10
0x00000000000ee6df : push rsi ; sub byte ptr [rax - 0x7d], cl ; ret
0x0000000000171636 : push rsi ; sub eax, edx ; ret
0x0000000000195450 : push rsi ; test edi, esp ; jmp rsi
0x00000000000face7 : push rsi ; xor ax, ax ; ret
0x000000000016dd2e : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001a07b5 : push rsp ; add byte ptr [rax], al ; pop rax ; stosd dword ptr [rdi], eax ; in al, dx ; jmp qword ptr [rcx]
0x00000000001b075d : push rsp ; add dword ptr [rax], eax ; adc byte ptr [rax - 0xb], bh ; jmp qword ptr [rbx]
0x0000000000198920 : push rsp ; add esi, esi ; jmp rsp
0x00000000001b0124 : push rsp ; add qword ptr [rax], r8 ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x000000000010e621 : push rsp ; and al, 0x10 ; mov edi, 0x2000004 ; call rax
0x000000000010e51d : push rsp ; and al, 0x10 ; mov rsi, qword ptr [rsp + 8] ; call rax
0x000000000003dfd3 : push rsp ; and al, 0x18 ; call 0x3c099
0x000000000012c008 : push rsp ; and al, 0x18 ; lea r9, qword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x0000000000080eb0 : push rsp ; and al, 0x20 ; call qword ptr [rax]
0x000000000008122c : push rsp ; and al, 0x20 ; call rax
0x00000000000b9cbe : push rsp ; and al, 0x20 ; mov rsi, r14 ; mov rdi, r12 ; call rbx
0x00000000000fd494 : push rsp ; and al, 0x38 ; mov eax, edx ; add rsp, 0x48 ; ret
0x0000000000083e6a : push rsp ; and al, 0x68 ; call rax
0x000000000008524a : push rsp ; and al, 0x68 ; mov rsi, r13 ; mov rdi, rbx ; call rax
0x0000000000133623 : push rsp ; and al, 0xc ; call 0x1f8a5
0x000000000004a190 : push rsp ; and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000004a14a : push rsp ; and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x0000000000080b42 : push rsp ; and eax, 0x950f4100 ; ret
0x00000000001bab24 : push rsp ; clc ; add dword ptr [rax], eax ; call 0x231ba6c9
0x0000000000195359 : push rsp ; cld ; call qword ptr [rax]
0x00000000001951dd : push rsp ; cld ; call rdx
0x000000000019531d : push rsp ; cld ; jmp qword ptr [rax + 0x10fffc53]
0x0000000000195319 : push rsp ; cld ; jmp qword ptr [rax]
0x0000000000195161 : push rsp ; cld ; push qword ptr [rax + 0x53] ; cld ; jmp rax
0x00000000001a63c9 : push rsp ; cli ; call qword ptr [rax]
0x000000000002d9cf : push rsp ; cmp dword ptr [rax], eax ; mov qword ptr [rax], rdx ; ret
0x00000000000ccf56 : push rsp ; jne 0xccee3 ; mov eax, 0x7d00 ; ret
0x000000000009e6fb : push rsp ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000196e48 : push rsp ; lodsb al, byte ptr [rsi] ; in eax, dx ; jmp rsp
0x0000000000198ea8 : push rsp ; mov dh, dh ; jmp rsp
0x00000000001a7a24 : push rsp ; mov dword ptr [rax], 0xf044d800 ; jmp qword ptr [rdi]
0x0000000000134877 : push rsp ; mov eax, 1 ; ret
0x000000000018847b : push rsp ; movsd dword ptr [rdi], dword ptr [rsi] ; jmp rsp
0x0000000000188477 : push rsp ; movsd dword ptr [rdi], dword ptr [rsi] ; push rsp ; movsd dword ptr [rdi], dword ptr [rsi] ; jmp rsp
0x0000000000186891 : push rsp ; out dx, al ; call rax
0x0000000000195090 : push rsp ; pop rdi ; cld ; jmp rsp
0x00000000001b0424 : push rsp ; push rcx ; add dword ptr [rax], eax ; or byte ptr [rdx - 0xb], dh ; jmp qword ptr [rcx]
0x000000000019a2c0 : push rsp ; push rsp ; stc ; call rsp
0x00000000000192a0 : push rsp ; ret
0x0000000000018eb0 : push rsp ; ret 0x18
0x0000000000034de8 : push rsp ; ret 0x2e0f
0x0000000000109b74 : push rsp ; ret 0x8940
0x0000000000034aaa : push rsp ; ret 0xf66
0x0000000000199884 : push rsp ; ret 1
0x000000000004b4d8 : push rsp ; ret 2
0x00000000000e6b53 : push rsp ; ror dword ptr [rcx + rcx*4], cl ; push rsp ; ret
0x000000000019cc24 : push rsp ; sbb dword ptr [rax], eax ; add al, cl ; adc ebp, ecx ; call qword ptr [rbx]
0x0000000000195a74 : push rsp ; scasb al, byte ptr [rdi] ; cld ; jmp rsp
0x000000000019a2c1 : push rsp ; stc ; call rsp
0x00000000001946a9 : push rsp ; sti ; jmp qword ptr [rax]
0x0000000000196e28 : push rsp ; test al, 0xed ; jmp rsp
0x00000000001aa924 : push rsp ; test byte ptr [rax], 0 ; cwde ; and edx, esi ; jmp qword ptr [rcx]
0x00000000001a5c24 : push rsp ; test eax, 0x4c280000 ; out dx, al ; jmp qword ptr [rdx]
0x0000000000199f10 : push rsp ; xchg eax, esi ; clc ; jmp rsp
0x000000000019557c : push rsp ; xchg esp, edi ; jmp rsp
0x00000000001ae724 : push rsp ; xor al, 1 ; add byte ptr [rax], cl ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x0000000000146830 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x000000000019abfc : pushfq ; add al, byte ptr [r8] ; insd dword ptr [rdi], dx ; cli ; jmp rsp
0x000000000008595d : pushfq ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x00000000001ba56c : pushfq ; add dword ptr [rax], eax ; and byte ptr [rdi], dl ; clc ; call qword ptr [rdx]
0x00000000000310d6 : pushfq ; add eax, 0xc7834900 ; or byte ptr [rax + 1], cl ; ret
0x00000000001bbba4 : pushfq ; add ebp, esi ; add al, byte ptr [rax] ; ret 0x503
0x00000000001b016c : pushfq ; add qword ptr [rax], r8 ; nop ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x0000000000023ff1 : pushfq ; and al, 0x90 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000000da77f : pushfq ; and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8d0f
0x0000000000197344 : pushfq ; fld dword ptr [rax] ; add ah, dl ; cmp ch, dh ; call rsp
0x0000000000199f2c : pushfq ; in al, dx ; add dword ptr [rax], eax ; in al, -0x66 ; clc ; call rsp
0x0000000000197644 : pushfq ; in eax, dx ; add byte ptr [rax], al ; je 0x19761b ; out dx, al ; jmp rsp
0x000000000001fb06 : pushfq ; jmp 0x1face
0x000000000007834c : pushfq ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000001a6d6c : pushfq ; mov edx, 0x71100000 ; out dx, eax ; call rax
0x0000000000147530 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001454e4 : pushfq ; or eax, 0x83480000 ; ret 0xeb10
0x000000000019879c : pushfq ; push 0x41140001 ; cmc ; call rsp
0x00000000001b096c : pushfq ; push rsi ; add dword ptr [rax], eax ; add byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x0000000000018fd0 : pushfq ; ret 0x18
0x00000000000bcd5f : pushfq ; ret 0xb60f
0x000000000019989c : pushfq ; ret 1
0x00000000000ab74b : pushfq ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x000000000019cc6c : pushfq ; sbb dword ptr [rax], eax ; add al, ah ; adc ebp, ecx ; call qword ptr [rbx]
0x000000000019a7ac : pushfq ; sub eax, 0xbc40002 ; cli ; jmp rsp
0x00000000001ae56c : pushfq ; xor al, byte ptr [rcx] ; add byte ptr [rax - 0x19], al ; hlt ; jmp qword ptr [rcx]
0x0000000000173dd4 : pushfq ; xor esp, dword ptr [rip] ; add bl, dh ; ret
0x00000000001ac630 : rcl bh, 0xf3 ; jmp qword ptr [rcx]
0x00000000000884f3 : rcl bl, 0x33 ; add byte ptr [rax], al ; je 0x88507 ; ret
0x0000000000195ddc : rcl byte ptr [rax - 0x6daf0004], 1 ; cld ; call rax
0x0000000000186894 : rcl byte ptr [rbp - 0x12], 1 ; call rax
0x0000000000186898 : rcl byte ptr [rbp - 0x12], 1 ; lcall ptr [rax] ; push rbp ; out dx, al ; call rax
0x0000000000195de4 : rcl byte ptr [rbx - 0x6aaf0004], 1 ; cld ; call rax
0x000000000019cc10 : rcl byte ptr [rbx], 0xe9 ; call qword ptr [rbx]
0x0000000000195da0 : rcl byte ptr [rcx - 0x6caf0004], 1 ; cld ; call rax
0x0000000000195130 : rcl byte ptr [rcx - 4], 1 ; call qword ptr [rax + 0x10fffc59]
0x00000000001b2500 : rcl byte ptr [rdi], 0xfc ; jmp qword ptr [rsi]
0x00000000001951d8 : rcl byte ptr [rsp + rdi*8 - 1], cl ; push rdx ; push rsp ; cld ; call rdx
0x0000000000194e7c : rcl byte ptr [rsp + rdi*8], 1 ; jmp qword ptr [rax]
0x0000000000194b24 : rcl cl, 1 ; sti ; jmp qword ptr [rax]
0x00000000000f52d0 : rcl dword ptr [rax - 0x3f], -0x17 ; add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x00000000001844ff : rcl dword ptr [rsi + 0x5a], cl ; je 0x1844cd ; ret 0xacfc
0x00000000001023d3 : rcl esp, 1 ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000001844fb : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x1844d1 ; ret 0xacfc
0x000000000010402c : rcr bh, 0xff ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000034f8f : rcr bl, 0x3f ; fsubp st(1) ; ret
0x0000000000194e88 : rcr byte ptr [rax], 0xfc ; call qword ptr [rax]
0x000000000003c1a0 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00000000000fbc1e : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; ret
0x000000000001fb76 : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000c91b0 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000479d3 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000000483f7 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x00000000000cc988 : rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x0000000000074f91 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000022b50 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000bab39 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x000000000003a25e : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000c91fc : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000054b3b : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x0000000000084128 : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x0000000000045c38 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000006faab : rcr byte ptr [rbx + 0x5d], cl ; pop r12 ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000010c118 : rcr byte ptr [rbx - 0x77], cl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000194ed0 : rcr byte ptr [rbx], 1 ; cld ; jmp qword ptr [rax]
0x000000000018491d : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000194edc : rcr byte ptr [rdi], 0xfc ; call qword ptr [rax]
0x0000000000194f18 : rcr byte ptr [rsi - 4], 0xff ; push rax ; pop rsi ; cld ; jmp rax
0x000000000018871c : rcr cl, 0xf3 ; jmp qword ptr [rax]
0x0000000000048429 : rcr dword ptr [rcx], -0x40 ; and eax, 2 ; sub eax, 1 ; ret
0x000000000014d4a6 : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000142814 : rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000123638 : rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x0000000000035f8a : rep stosq qword ptr [rdi], rax ; ret
0x0000000000000937 : ret
0x0000000000196fdd : ret 0
0x00000000000a6c9a : ret 0x10
0x00000000000007bf : ret 0x102
0x000000000006cd8f : ret 0x107
0x00000000000833dd : ret 0x10a1
0x0000000000005241 : ret 0x11
0x0000000000081a22 : ret 0x110
0x00000000000e64b7 : ret 0x110f
0x00000000000483cc : ret 0x114d
0x00000000000e033c : ret 0x1175
0x00000000000d8526 : ret 0x1176
0x00000000000242a8 : ret 0x1189
0x0000000000107159 : ret 0x11e8
0x00000000000b3284 : ret 0x11eb
0x000000000000b181 : ret 0x12
0x00000000000ff10c : ret 0x1274
0x00000000000a0bda : ret 0x13
0x000000000005317a : ret 0x1325
0x000000000009879a : ret 0x1374
0x000000000011700a : ret 0x1376
0x000000000005a68c : ret 0x144
0x0000000000122cd9 : ret 0x1472
0x000000000009e739 : ret 0x147c
0x00000000000493b2 : ret 0x148
0x00000000000d649b : ret 0x148b
0x000000000007bf12 : ret 0x149
0x000000000002aaca : ret 0x14a4
0x0000000000041bb7 : ret 0x14a9
0x000000000003762d : ret 0x14c
0x000000000009f6ac : ret 0x14d
0x0000000000044a0a : ret 0x14e5
0x00000000000d265c : ret 0x14eb
0x0000000000034bf0 : ret 0x1575
0x00000000000eccf1 : ret 0x1589
0x0000000000031c30 : ret 0x15b9
0x000000000000e460 : ret 0x16
0x0000000000107dc7 : ret 0x1674
0x0000000000116e57 : ret 0x1676
0x000000000002674a : ret 0x16c6
0x000000000008b19a : ret 0x17
0x00000000000fc466 : ret 0x1777
0x0000000000018581 : ret 0x18
0x000000000009f5e9 : ret 0x180f
0x000000000002c4a6 : ret 0x1874
0x000000000008e155 : ret 0x1876
0x000000000007db95 : ret 0x18eb
0x00000000000bc8e4 : ret 0x190
0x000000000008ddf5 : ret 0x1974
0x000000000005ec0e : ret 0x1a
0x000000000009e39a : ret 0x1a74
0x000000000003bf02 : ret 0x1a75
0x0000000000184e7a : ret 0x1ad4
0x00000000000d46da : ret 0x1aeb
0x000000000018360d : ret 0x1b49
0x00000000001081e2 : ret 0x1b72
0x00000000000946fa : ret 0x1b8
0x0000000000001bf5 : ret 0x1bb7
0x00000000000bdaab : ret 0x1be
0x000000000007d367 : ret 0x1bf
0x000000000000349f : ret 0x1bf9
0x00000000000fc561 : ret 0x1c77
0x000000000017ea70 : ret 0x1d4
0x000000000017f208 : ret 0x1d5
0x000000000008dcf6 : ret 0x1d74
0x00000000000021d9 : ret 0x1dd4
0x00000000000bfbd4 : ret 0x1e74
0x0000000000024c2b : ret 0x1e76
0x00000000000268e2 : ret 0x1f0f
0x00000000000abd43 : ret 0x1f74
0x00000000000842ae : ret 0x1f76
0x00000000000c1984 : ret 0x1fbd
0x000000000002d952 : ret 0x200
0x00000000000b0c85 : ret 0x2041
0x0000000000088f7d : ret 0x2074
0x00000000000d52c9 : ret 0x20be
0x000000000005caeb : ret 0x21
0x0000000000034768 : ret 0x2148
0x00000000000f5249 : ret 0x21e8
0x000000000007dd0c : ret 0x21e9
0x0000000000088f0b : ret 0x2275
0x00000000000a9e17 : ret 0x2276
0x0000000000089038 : ret 0x2288
0x0000000000003ff0 : ret 0x23
0x000000000016f222 : ret 0x2373
0x0000000000036892 : ret 0x237f
0x000000000006521a : ret 0x23a
0x00000000000025e7 : ret 0x23cb
0x000000000017da78 : ret 0x24
0x00000000000027d8 : ret 0x244f
0x00000000000cf21c : ret 0x2476
0x000000000007a99e : ret 0x2501
0x000000000009e218 : ret 0x2574
0x000000000008367d : ret 0x2575
0x0000000000023dc8 : ret 0x2576
0x0000000000005ec8 : ret 0x26
0x000000000015f712 : ret 0x263a
0x000000000015cc12 : ret 0x2665
0x000000000008afd6 : ret 0x2774
0x00000000000fc743 : ret 0x27e8
0x0000000000143ab2 : ret 0x27f3
0x000000000000054f : ret 0x2800
0x00000000000a0d75 : ret 0x280f
0x0000000000127060 : ret 0x2875
0x0000000000024273 : ret 0x2876
0x00000000000bf7da : ret 0x28f5
0x0000000000136aea : ret 0x2914
0x00000000000b2581 : ret 0x2941
0x0000000000055653 : ret 0x2944
0x0000000000047428 : ret 0x2948
0x00000000000afd8a : ret 0x2949
0x000000000009a89f : ret 0x294c
0x0000000000078c0f : ret 0x294d
0x0000000000048b24 : ret 0x2973
0x00000000000aa514 : ret 0x2975
0x00000000000e9ea4 : ret 0x2977
0x000000000012b102 : ret 0x29cc
0x0000000000060541 : ret 0x29e9
0x000000000011b1d2 : ret 0x2a
0x0000000000001b19 : ret 0x2a63
0x00000000000841bb : ret 0x2a75
0x000000000011a4b2 : ret 0x2a89
0x0000000000106b94 : ret 0x2b
0x0000000000046188 : ret 0x2b48
0x000000000002322e : ret 0x2b49
0x0000000000134502 : ret 0x2b74
0x000000000006ad47 : ret 0x2b76
0x00000000000aa172 : ret 0x2b77
0x000000000012f09b : ret 0x2b8
0x00000000001082b2 : ret 0x2bab
0x00000000000f6c0c : ret 0x2c
0x0000000000127059 : ret 0x2c3c
0x00000000000ff552 : ret 0x2c6c
0x000000000008148c : ret 0x2c75
0x00000000000fd602 : ret 0x2c89
0x0000000000034de9 : ret 0x2e0f
0x000000000012f1d5 : ret 0x2e66
0x00000000000c8464 : ret 0x2f
0x00000000000ff0ac : ret 0x2f3c
0x0000000000087cae : ret 0x2f74
0x00000000000c8dda : ret 0x2fce
0x00000000000e230a : ret 0x2fe9
0x0000000000010e90 : ret 0x30
0x000000000003ac98 : ret 0x3039
0x00000000000be092 : ret 0x304d
0x0000000000001b88 : ret 0x306a
0x00000000000bda5e : ret 0x3080
0x00000000000820bc : ret 0x30be
0x00000000000e154b : ret 0x30f
0x000000000000d7b8 : ret 0x31
0x000000000002310d : ret 0x3101
0x00000000001263e2 : ret 0x3108
0x0000000000047f99 : ret 0x3145
0x00000000000ac53a : ret 0x314c
0x0000000000086c14 : ret 0x33
0x00000000000f6482 : ret 0x3375
0x00000000000881ea : ret 0x33d6
0x00000000000ef78d : ret 0x33eb
0x000000000007c4d7 : ret 0x34
0x000000000007d8ca : ret 0x3454
0x000000000009e719 : ret 0x347c
0x00000000000310a5 : ret 0x348
0x000000000002944d : ret 0x349
0x000000000006626a : ret 0x34c
0x000000000006c264 : ret 0x35
0x00000000000eedaa : ret 0x353
0x0000000000087cb8 : ret 0x3574
0x00000000000f6420 : ret 0x3575
0x000000000003bf58 : ret 0x357e
0x00000000000d8dc5 : ret 0x35e8
0x0000000000056bf2 : ret 0x36
0x00000000000e73c1 : ret 0x3673
0x0000000000055d12 : ret 0x36d0
0x0000000000052c1e : ret 0x372a
0x0000000000115a0a : ret 0x377
0x00000000000f6a33 : ret 0x37e8
0x0000000000036bf4 : ret 0x38
0x000000000018475a : ret 0x3827
0x00000000000bb2ce : ret 0x3840
0x000000000007365f : ret 0x3841
0x00000000001025ef : ret 0x3845
0x000000000013ec45 : ret 0x3875
0x000000000008e135 : ret 0x3876
0x000000000007b45b : ret 0x389
0x0000000000182de6 : ret 0x38ae
0x000000000006e456 : ret 0x38b
0x000000000005eccd : ret 0x38e9
0x000000000006636e : ret 0x3901
0x00000000000d90d8 : ret 0x3902
0x0000000000121e5b : ret 0x3904
0x000000000009e136 : ret 0x3941
0x00000000000e3cc7 : ret 0x3944
0x00000000000dd337 : ret 0x3945
0x0000000000037371 : ret 0x3948
0x000000000002772a : ret 0x3949
0x000000000002a296 : ret 0x394c
0x000000000003412d : ret 0x394d
0x0000000000053772 : ret 0x39e9
0x00000000000a9722 : ret 0x3a01
0x0000000000023016 : ret 0x3a18
0x000000000016f20b : ret 0x3a73
0x00000000000e3500 : ret 0x3ae9
0x00000000000d2751 : ret 0x3b01
0x00000000000db2a7 : ret 0x3b42
0x00000000000db2f7 : ret 0x3b43
0x000000000013cf63 : ret 0x3b48
0x0000000000134572 : ret 0x3b74
0x00000000000bede5 : ret 0x3b8
0x00000000000bbc7a : ret 0x3bba
0x000000000010fd44 : ret 0x3bf
0x00000000000cf7fe : ret 0x3c01
0x0000000000088ef1 : ret 0x3c75
0x00000000000f0bef : ret 0x3c76
0x000000000003952e : ret 0x3ce8
0x00000000000d7786 : ret 0x3d01
0x0000000000034830 : ret 0x3d75
0x0000000000042170 : ret 0x3d7e
0x000000000002293e : ret 0x3d83
0x0000000000046eb7 : ret 0x3dbe
0x0000000000156a6a : ret 0x3e2
0x0000000000051ee7 : ret 0x3e8
0x00000000000be892 : ret 0x3e9
0x0000000000070e3b : ret 0x3f7
0x00000000000f4aa9 : ret 0x3f76
0x00000000000d87ba : ret 0x4001
0x00000000000eb45f : ret 0x4002
0x000000000007f282 : ret 0x4007
0x00000000000009f5 : ret 0x4021
0x000000000005394b : ret 0x4050
0x00000000000ac189 : ret 0x408d
0x0000000000022d30 : ret 0x4101
0x00000000000b7b65 : ret 0x4102
0x00000000000dd872 : ret 0x4104
0x000000000004d669 : ret 0x4108
0x000000000004f1cc : ret 0x4110
0x000000000008247c : ret 0x4117
0x00000000000ed928 : ret 0x4118
0x000000000009e3e3 : ret 0x4153
0x000000000012bfc3 : ret 0x415f
0x00000000000f74f5 : ret 0x4164
0x0000000000023b8e : ret 0x41c3
0x000000000009a8e7 : ret 0x4201
0x000000000012d6a5 : ret 0x4203
0x00000000000bbbc4 : ret 0x4240
0x000000000009ed2a : ret 0x4266
0x00000000000da0d6 : ret 0x428b
0x00000000000bc9ec : ret 0x428d
0x00000000000d14ea : ret 0x42c
0x0000000000099f4a : ret 0x4301
0x000000000002a853 : ret 0x4389
0x0000000000074cc3 : ret 0x4401
0x00000000000e0d35 : ret 0x4404
0x00000000000c1e24 : ret 0x4407
0x00000000000cc375 : ret 0x4408
0x0000000000000888 : ret 0x440c
0x000000000004dc31 : ret 0x440f
0x0000000000072797 : ret 0x4410
0x0000000000000456 : ret 0x4412
0x00000000000d8314 : ret 0x4422
0x000000000010ecd6 : ret 0x4428
0x0000000000112b08 : ret 0x4430
0x00000000000e0d66 : ret 0x4489
0x0000000000034e90 : ret 0x448b
0x000000000003ce62 : ret 0x44c6
0x00000000000e52e2 : ret 0x44c7
0x000000000005d38a : ret 0x45
0x00000000000e321b : ret 0x4501
0x000000000006c6c2 : ret 0x4502
0x000000000006628b : ret 0x4504
0x00000000001172d7 : ret 0x4510
0x00000000000b7b3e : ret 0x4574
0x0000000000036b1e : ret 0x4577
0x00000000000df86f : ret 0x45c6
0x000000000011f45b : ret 0x45e9
0x000000000006e5b8 : ret 0x45f6
0x00000000000aa4f7 : ret 0x4675
0x0000000000029d97 : ret 0x4676
0x0000000000112946 : ret 0x46e9
0x00000000000b7ad7 : ret 0x4703
0x000000000009a12f : ret 0x470e
0x000000000009e194 : ret 0x474
0x00000000001838e4 : ret 0x474c
0x00000000000256f6 : ret 0x4801
0x0000000000093ee1 : ret 0x4802
0x000000000006e5c1 : ret 0x4803
0x000000000002656d : ret 0x4804
0x0000000000093f8d : ret 0x4805
0x0000000000093f75 : ret 0x4806
0x00000000001081cb : ret 0x4807
0x00000000001267bf : ret 0x4808
0x000000000002c4b4 : ret 0x4809
0x000000000010a912 : ret 0x480a
0x000000000010a512 : ret 0x480b
0x00000000000bac72 : ret 0x480e
0x0000000000051154 : ret 0x480f
0x0000000000048d54 : ret 0x4810
0x00000000000c99fc : ret 0x4811
0x0000000000136e91 : ret 0x4812
0x00000000001086bd : ret 0x4814
0x000000000004b5f2 : ret 0x481e
0x000000000004b612 : ret 0x4820
0x00000000000542dc : ret 0x482d
0x000000000012544e : ret 0x482e
0x000000000002146f : ret 0x4830
0x0000000000066115 : ret 0x4840
0x00000000000cba28 : ret 0x4864
0x0000000000114e0d : ret 0x4874
0x0000000000116f05 : ret 0x4875
0x0000000000110638 : ret 0x48b
0x00000000001333e4 : ret 0x48bf
0x000000000008ad28 : ret 0x48c3
0x000000000003ab90 : ret 0x48d
0x00000000001850a6 : ret 0x48f
0x0000000000022cfa : ret 0x4901
0x000000000003436c : ret 0x4903
0x0000000000029019 : ret 0x4904
0x000000000002648c : ret 0x4906
0x000000000004f869 : ret 0x4908
0x00000000000be929 : ret 0x4909
0x000000000012f2f0 : ret 0x4910
0x000000000008696e : ret 0x4920
0x00000000000858b8 : ret 0x4930
0x00000000000c6e29 : ret 0x4948
0x00000000000038f3 : ret 0x49ec
0x0000000000120f2e : ret 0x4a01
0x0000000000082245 : ret 0x4a74
0x00000000000b8000 : ret 0x4ae9
0x0000000000032d45 : ret 0x4c01
0x0000000000094151 : ret 0x4c02
0x00000000000d7182 : ret 0x4c04
0x0000000000053956 : ret 0x4c05
0x0000000000061c34 : ret 0x4c08
0x00000000000d7dcb : ret 0x4c20
0x000000000004acb6 : ret 0x4c40
0x00000000000d8e78 : ret 0x4c6
0x00000000000bfd95 : ret 0x4c80
0x00000000000533b0 : ret 0x4c8b
0x00000000000415a5 : ret 0x4d01
0x0000000000023ca1 : ret 0x4d02
0x00000000000a5632 : ret 0x4d10
0x000000000010f872 : ret 0x4d30
0x0000000000022800 : ret 0x4d74
0x0000000000184b07 : ret 0x4e27
0x0000000000075510 : ret 0x4e8b
0x00000000000be139 : ret 0x4eb
0x0000000000021938 : ret 0x4ee9
0x000000000000b328 : ret 0x4f
0x0000000000029d8e : ret 0x4f72
0x00000000000369c4 : ret 0x4f77
0x00000000001bbba9 : ret 0x503
0x00000000000d6fb5 : ret 0x5089
0x000000000016f1f4 : ret 0x5173
0x00000000000fcd19 : ret 0x51e8
0x000000000002c2b3 : ret 0x527e
0x000000000000318e : ret 0x52c0
0x0000000000008658 : ret 0x53
0x0000000000138e3a : ret 0x535
0x000000000006cfb8 : ret 0x5389
0x000000000013ac43 : ret 0x53e
0x000000000012e0fb : ret 0x53ff
0x00000000000ed3ec : ret 0x5408
0x00000000000bb39b : ret 0x5438
0x000000000009e6f9 : ret 0x547c
0x000000000004a1b6 : ret 0x5488
0x000000000002a11a : ret 0x5489
0x0000000000182d6c : ret 0x5508
0x000000000003295f : ret 0x5525
0x000000000000245e : ret 0x5576
0x00000000000d646a : ret 0x5589
0x000000000000b538 : ret 0x56
0x0000000000088ed7 : ret 0x5675
0x000000000011cf42 : ret 0x56e9
0x0000000000086dd2 : ret 0x575
0x0000000000116d12 : ret 0x577
0x000000000013453a : ret 0x57e
0x0000000000100f13 : ret 0x57e8
0x00000000000cee03 : ret 0x57e9
0x000000000013443a : ret 0x57f
0x0000000000185038 : ret 0x5803
0x000000000013735a : ret 0x581
0x00000000000396eb : ret 0x589
0x0000000000182a40 : ret 0x591c
0x00000000000d85b1 : ret 0x5974
0x000000000011f3a3 : ret 0x5978
0x0000000000003269 : ret 0x5a51
0x0000000000123743 : ret 0x5a74
0x00000000001837a7 : ret 0x5ae4
0x000000000002e21a : ret 0x5b0
0x00000000000e7009 : ret 0x5ba
0x0000000000002f9f : ret 0x5bdb
0x0000000000110de0 : ret 0x5bf
0x0000000000026d01 : ret 0x5c77
0x0000000000003055 : ret 0x5cbe
0x00000000000e922d : ret 0x5ee9
0x000000000002b72a : ret 0x5f5
0x00000000000004b9 : ret 0x6080
0x0000000000002725 : ret 0x617e
0x00000000001854d2 : ret 0x62c1
0x0000000000054d03 : ret 0x6348
0x00000000000775a2 : ret 0x6349
0x00000000000d84e0 : ret 0x634d
0x00000000000aa4da : ret 0x6375
0x000000000008ceaf : ret 0x63be
0x000000000009e6e9 : ret 0x647c
0x00000000001306c9 : ret 0x6600
0x00000000000e876a : ret 0x6601
0x000000000003d241 : ret 0x6610
0x000000000008e0c2 : ret 0x6620
0x0000000000002827 : ret 0x6642
0x000000000008ad75 : ret 0x66c3
0x00000000000f8d56 : ret 0x674
0x0000000000182a5f : ret 0x67b2
0x0000000000107803 : ret 0x67e8
0x00000000000bbbc1 : ret 0x6948
0x00000000000f3969 : ret 0x69e9
0x000000000011842d : ret 0x6ae9
0x00000000000c1e7f : ret 0x6b45
0x00000000000cd70f : ret 0x6b8
0x0000000000003ce2 : ret 0x6bba
0x000000000010f4d2 : ret 0x6bf
0x00000000000abca1 : ret 0x6c74
0x0000000000193ad3 : ret 0x6e1f
0x000000000012d4cc : ret 0x6ee8
0x0000000000185661 : ret 0x6f9
0x000000000002face : ret 0x6fe9
0x0000000000118d0e : ret 0x708d
0x00000000001082f9 : ret 0x71e8
0x0000000000114008 : ret 0x71e9
0x000000000014d53e : ret 0x7280
0x000000000007b981 : ret 0x7401
0x00000000000843b3 : ret 0x7402
0x0000000000081775 : ret 0x7404
0x0000000000072aa9 : ret 0x7408
0x000000000006db51 : ret 0x7420
0x0000000000051532 : ret 0x7450
0x00000000000c55b5 : ret 0x748d
0x00000000000a9fcf : ret 0x74e9
0x00000000000a0867 : ret 0x7501
0x00000000000a086c : ret 0x7502
0x0000000000061b56 : ret 0x7504
0x0000000000072a51 : ret 0x7508
0x000000000017017b : ret 0x7510
0x000000000008e8c4 : ret 0x7518
0x0000000000170188 : ret 0x7520
0x00000000000d83a8 : ret 0x7540
0x00000000000d5b87 : ret 0x7580
0x00000000000e1225 : ret 0x75e8
0x000000000016e0e2 : ret 0x7677
0x0000000000023222 : ret 0x774
0x000000000004874a : ret 0x777
0x00000000001076f3 : ret 0x77e8
0x000000000011cf21 : ret 0x77e9
0x0000000000002eec : ret 0x793b
0x00000000000cd009 : ret 0x7974
0x000000000011ee4c : ret 0x7a8d
0x0000000000023dfa : ret 0x7b8
0x0000000000034d75 : ret 0x7c7
0x000000000008e052 : ret 0x7e20
0x00000000000f7063 : ret 0x7e8
0x000000000012d4bc : ret 0x7ee8
0x00000000000894bc : ret 0x7f10
0x00000000000598b4 : ret 0x7f3c
0x000000000015886e : ret 0x80
0x000000000008a699 : ret 0x8000
0x00000000000343ac : ret 0x8001
0x00000000000beb22 : ret 0x8010
0x00000000000cf1c9 : ret 0x8040
0x00000000000e04ef : ret 0x8041
0x00000000000a5a6d : ret 0x8072
0x000000000011d8f6 : ret 0x8080
0x00000000000038b0 : ret 0x80fc
0x00000000000d741d : ret 0x8141
0x0000000000045d06 : ret 0x8148
0x000000000003507f : ret 0x8166
0x00000000000f51e9 : ret 0x81e8
0x00000000000e0bf9 : ret 0x820f
0x000000000012b416 : ret 0x828d
0x0000000000051fd8 : ret 0x82e8
0x000000000008105f : ret 0x82e9
0x0000000000076c11 : ret 0x82eb
0x0000000000031275 : ret 0x8301
0x00000000001307fe : ret 0x8302
0x0000000000121419 : ret 0x8303
0x00000000000d828a : ret 0x8304
0x0000000000099085 : ret 0x8305
0x000000000009907d : ret 0x8306
0x000000000005e07b : ret 0x8308
0x0000000000055be4 : ret 0x830f
0x000000000012f522 : ret 0x8320
0x00000000000de69f : ret 0x833b
0x0000000000046d72 : ret 0x8341
0x000000000003a60d : ret 0x8348
0x000000000003d6d4 : ret 0x8349
0x000000000006f293 : ret 0x8389
0x0000000000074c30 : ret 0x840
0x00000000000ce10c : ret 0x8401
0x000000000010d5a8 : ret 0x8408
0x000000000002006c : ret 0x840f
0x00000000000e86fd : ret 0x844
0x0000000000096d78 : ret 0x8440
0x00000000000a9f36 : ret 0x8444
0x00000000000969a7 : ret 0x8445
0x00000000000dfc60 : ret 0x8488
0x0000000000054cf5 : ret 0x8504
0x000000000006ce46 : ret 0x8508
0x000000000002191c : ret 0x850f
0x00000000000456a1 : ret 0x8539
0x00000000000f12ed : ret 0x8545
0x0000000000020130 : ret 0x8548
0x000000000002c2c5 : ret 0x854d
0x00000000000ea5c8 : ret 0x8589
0x000000000005228c : ret 0x858b
0x000000000004e9e4 : ret 0x85c7
0x00000000000699f5 : ret 0x85e8
0x00000000000240f0 : ret 0x860f
0x00000000000355a6 : ret 0x870f
0x000000000018237e : ret 0x871e
0x000000000003d6c7 : ret 0x875
0x000000000008e165 : ret 0x876
0x000000000003ce5d : ret 0x87e
0x00000000000cb8e3 : ret 0x87e8
0x000000000002bc4a : ret 0x87e9
0x000000000008895a : ret 0x8801
0x000000000009efb2 : ret 0x8802
0x0000000000024e31 : ret 0x8804
0x00000000000575d1 : ret 0x880f
0x0000000000025949 : ret 0x8840
0x00000000000025b4 : ret 0x88ad
0x0000000000024202 : ret 0x8901
0x000000000005c84b : ret 0x8908
0x0000000000109b75 : ret 0x8940
0x000000000004b121 : ret 0x8941
0x00000000000b8d55 : ret 0x8942
0x0000000000076adc : ret 0x8944
0x0000000000050e9e : ret 0x8945
0x00000000000b9176 : ret 0x8946
0x0000000000026dc1 : ret 0x8948
0x0000000000024ffe : ret 0x8949
0x0000000000030cca : ret 0x894c
0x0000000000022d0f : ret 0x894d
0x000000000004906b : ret 0x894e
0x000000000003b350 : ret 0x8966
0x000000000008dcca : ret 0x8a04
0x0000000000002553 : ret 0x8a4c
0x00000000000732f0 : ret 0x8ae8
0x00000000000655df : ret 0x8ae9
0x000000000006c912 : ret 0x8b04
0x000000000002da3e : ret 0x8b05
0x00000000000d7de0 : ret 0x8b10
0x0000000000184bae : ret 0x8b36
0x000000000002c53a : ret 0x8b41
0x00000000000eff73 : ret 0x8b44
0x00000000000d65e0 : ret 0x8b47
0x0000000000035d65 : ret 0x8b48
0x0000000000074416 : ret 0x8b49
0x0000000000048fee : ret 0x8b4a
0x000000000002a27d : ret 0x8b4c
0x000000000006e358 : ret 0x8b64
0x00000000000ad2ac : ret 0x8b8
0x00000000000c1018 : ret 0x8c0f
0x00000000000037b6 : ret 0x8cba
0x000000000005bd45 : ret 0x8d01
0x000000000004abdd : ret 0x8d04
0x00000000000ebdac : ret 0x8d08
0x0000000000051fbf : ret 0x8d0f
0x00000000000c37d1 : ret 0x8d41
0x0000000000118c2f : ret 0x8d44
0x0000000000118c80 : ret 0x8d45
0x0000000000020778 : ret 0x8d48
0x0000000000030319 : ret 0x8d49
0x00000000000484e9 : ret 0x8d4a
0x0000000000048385 : ret 0x8d4c
0x00000000000a28c2 : ret 0x8d4d
0x00000000000824dc : ret 0x8d4e
0x000000000013e6cb : ret 0x8d8b
0x000000000002854c : ret 0x8e0f
0x00000000000fbd41 : ret 0x8e75
0x00000000000b0acd : ret 0x8eb
0x00000000000dfd09 : ret 0x8f0f
0x0000000000071138 : ret 0x8feb
0x000000000019f0e0 : ret 0x900e
0x00000000000d724d : ret 0x9066
0x000000000002d90d : ret 0x90c3
0x000000000013fb25 : ret 0x90f3
0x000000000007801c : ret 0x91eb
0x00000000000fb7dc : ret 0x927
0x0000000000118d35 : ret 0x930f
0x000000000008700e : ret 0x93be
0x0000000000126553 : ret 0x93c
0x0000000000061b42 : ret 0x940f
0x000000000003dac7 : ret 0x941
0x00000000000da61f : ret 0x947c
0x000000000012f337 : ret 0x948
0x000000000008cb98 : ret 0x94c
0x00000000000dc13a : ret 0x94d
0x000000000004c351 : ret 0x9522
0x0000000000113d99 : ret 0x952b
0x0000000000030b18 : ret 0x953d
0x00000000001839d3 : ret 0x9576
0x00000000000712c9 : ret 0x95eb
0x00000000000f826f : ret 0x970f
0x0000000000003798 : ret 0x975
0x0000000000081079 : ret 0x976
0x00000000000f69d3 : ret 0x97e8
0x00000000000e349c : ret 0x9848
0x0000000000088f25 : ret 0x9874
0x0000000000075b24 : ret 0x98eb
0x00000000000421f8 : ret 0x9a74
0x000000000013d897 : ret 0x9ae9
0x00000000000cf9b3 : ret 0x9aeb
0x00000000000b8147 : ret 0x9be9
0x00000000000b574e : ret 0x9ce8
0x000000000006aed3 : ret 0x9ce9
0x00000000000a5a50 : ret 0x9d72
0x000000000002c79d : ret 0x9de8
0x00000000000adb98 : ret 0x9e74
0x0000000000022f83 : ret 0x9e9
0x00000000000ae1ac : ret 0x9eb
0x0000000000044e01 : ret 0x9f74
0x00000000000ee491 : ret 0xa
0x00000000001aadcc : ret 0xa02
0x00000000000e7989 : ret 0xa1e8
0x000000000003bfd8 : ret 0xa274
0x00000000001836c3 : ret 0xa514
0x000000000012a41f : ret 0xa74
0x00000000000b9d02 : ret 0xa8e9
0x0000000000183b47 : ret 0xac65
0x0000000000184504 : ret 0xacfc
0x00000000000f5b1d : ret 0xade9
0x00000000000d8d4d : ret 0xaeb
0x00000000000a9fba : ret 0xaf0f
0x0000000000020cce : ret 0xaf72
0x0000000000086331 : ret 0xafe9
0x0000000000057f7b : ret 0xb
0x000000000012fbaa : ret 0xb1
0x0000000000030389 : ret 0xb1e8
0x0000000000080aa8 : ret 0xb2e9
0x0000000000081a5f : ret 0xb48b
0x000000000004b16d : ret 0xb589
0x000000000002f459 : ret 0xb60f
0x00000000000fd798 : ret 0xb6e9
0x00000000000bca05 : ret 0xb70f
0x0000000000127088 : ret 0xb74
0x0000000000077c3c : ret 0xb76
0x00000000000bfcbe : ret 0xb77d
0x00000000000f67b3 : ret 0xb7e8
0x0000000000034b73 : ret 0xb8
0x00000000000347a1 : ret 0xb848
0x000000000002c305 : ret 0xb87f
0x0000000000060778 : ret 0xb908
0x0000000000183a0e : ret 0xb9b9
0x00000000000ea202 : ret 0xb9e9
0x0000000000003189 : ret 0xba88
0x00000000000b2730 : ret 0xbae8
0x00000000000c8ea3 : ret 0xbb
0x000000000006c7cd : ret 0xbb41
0x000000000005dfaf : ret 0xbbe9
0x0000000000048872 : ret 0xbc41
0x0000000000002480 : ret 0xbd07
0x0000000000128daf : ret 0xbd74
0x000000000004b15a : ret 0xbd89
0x00000000000617b8 : ret 0xbe08
0x00000000000c1e06 : ret 0xbe0f
0x0000000000183764 : ret 0xbe57
0x0000000000053448 : ret 0xbf07
0x0000000000060001 : ret 0xbf08
0x00000000001345d8 : ret 0xbfeb
0x0000000000004cd1 : ret 0xc
0x000000000008a559 : ret 0xc000
0x000000000004241e : ret 0xc001
0x00000000000423d2 : ret 0xc002
0x0000000000122ce7 : ret 0xc019
0x000000000006c022 : ret 0xc031
0x00000000000dd0aa : ret 0xc041
0x000000000012b3fa : ret 0xc069
0x0000000000047d2c : ret 0xc083
0x00000000000ff105 : ret 0xc084
0x000000000008cb65 : ret 0xc085
0x00000000000dd2ec : ret 0xc141
0x0000000000034a07 : ret 0xc148
0x000000000004a4f8 : ret 0xc149
0x00000000000358ad : ret 0xc189
0x00000000001075a9 : ret 0xc1e8
0x0000000000047502 : ret 0xc221
0x000000000003ab96 : ret 0xc229
0x000000000003ad30 : ret 0xc269
0x00000000000c35b1 : ret 0xc26b
0x000000000007d273 : ret 0xc275
0x00000000000f538a : ret 0xc283
0x0000000000035d57 : ret 0xc289
0x000000000016f0c4 : ret 0xc2b2
0x000000000002c1b8 : ret 0xc2e8
0x000000000011cef0 : ret 0xc2e9
0x000000000003a6e8 : ret 0xc35b
0x00000000000b0127 : ret 0xc3e8
0x000000000008e76f : ret 0xc3f3
0x00000000000f8dc0 : ret 0xc3f6
0x0000000000181582 : ret 0xc4c3
0x0000000000183318 : ret 0xc4ff
0x000000000014d5d8 : ret 0xc580
0x00000000000e4ed5 : ret 0xc5e8
0x000000000010dd9a : ret 0xc601
0x00000000001221a4 : ret 0xc602
0x00000000000e443e : ret 0xc683
0x0000000000056213 : ret 0xc689
0x000000000009ea74 : ret 0xc6e8
0x0000000000086e11 : ret 0xc6eb
0x000000000012f016 : ret 0xc707
0x00000000000f8d4a : ret 0xc72
0x0000000000037281 : ret 0xc748
0x00000000000442a6 : ret 0xc749
0x00000000000aa531 : ret 0xc75
0x00000000000778bc : ret 0xc76
0x0000000000081d4e : ret 0xc789
0x00000000000f2bed : ret 0xc7e9
0x0000000000033498 : ret 0xc801
0x0000000000097d61 : ret 0xc829
0x0000000000071bf4 : ret 0xc883
0x0000000000025b9c : ret 0xc985
0x0000000000088f96 : ret 0xc9ff
0x00000000000de102 : ret 0xca39
0x00000000000ea1cc : ret 0xca83
0x000000000005cb3d : ret 0xcb73
0x00000000000d275d : ret 0xcb75
0x00000000000f53b9 : ret 0xcb8
0x0000000000182daa : ret 0xcca7
0x0000000000184e8d : ret 0xcd11
0x00000000000a5a20 : ret 0xcd72
0x00000000001014fc : ret 0xcdbb
0x0000000000082f21 : ret 0xce31
0x0000000000031ff8 : ret 0xce80
0x000000000005c41d : ret 0xce83
0x000000000007ee1b : ret 0xcf31
0x00000000000b022b : ret 0xd
0x00000000000d204e : ret 0xd008
0x00000000000d91a0 : ret 0xd009
0x00000000000bb533 : ret 0xd021
0x00000000000cce22 : ret 0xd029
0x000000000014d44c : ret 0xd073
0x0000000000046d87 : ret 0xd084
0x000000000003296e : ret 0xd089
0x00000000000b4ebd : ret 0xd0f7
0x00000000000edf21 : ret 0xd101
0x00000000000fe174 : ret 0xd108
0x00000000000bc681 : ret 0xd12
0x000000000005fc0d : ret 0xd129
0x00000000000d7b3a : ret 0xd138
0x00000000000db3a2 : ret 0xd139
0x00000000000dd2f3 : ret 0xd141
0x000000000012f139 : ret 0xd148
0x0000000000108299 : ret 0xd1e8
0x0000000000033e45 : ret 0xd231
0x000000000002086d : ret 0xd284
0x000000000009e3f0 : ret 0xd308
0x0000000000061a47 : ret 0xd309
0x0000000000061f23 : ret 0xd329
0x00000000000857e6 : ret 0xd341
0x000000000003c3cb : ret 0xd348
0x00000000000b9d23 : ret 0xd3b
0x0000000000036932 : ret 0xd521
0x000000000000089a : ret 0xd5a4
0x00000000000528b2 : ret 0xd5e9
0x00000000000e00f3 : ret 0xd609
0x000000000005fe6d : ret 0xd629
0x00000000000daffa : ret 0xd639
0x0000000000107eee : ret 0xd6e9
0x00000000000b9bad : ret 0xd721
0x00000000000dd4a1 : ret 0xd739
0x0000000000105546 : ret 0xd74
0x00000000000b8af9 : ret 0xd76
0x00000000000fae93 : ret 0xd7e8
0x00000000000c2b24 : ret 0xd801
0x00000000000a9fbf : ret 0xd889
0x000000000006af92 : ret 0xd8e8
0x0000000000184925 : ret 0xd8f
0x00000000000204df : ret 0xd975
0x000000000003a8fa : ret 0xd9e
0x00000000000d6bbd : ret 0xd9eb
0x00000000001228d0 : ret 0xda21
0x00000000000dde30 : ret 0xda39
0x0000000000114ae3 : ret 0xda75
0x0000000000034ea1 : ret 0xdaf7
0x00000000000f0402 : ret 0xdb31
0x000000000002539b : ret 0xdb85
0x00000000000ba6c1 : ret 0xdc00
0x00000000000e1bf1 : ret 0xdc74
0x0000000000184a06 : ret 0xdcd9
0x0000000000087d9e : ret 0xdce8
0x00000000000c7a70 : ret 0xdd72
0x00000000000e0253 : ret 0xddeb
0x0000000000183982 : ret 0xde5d
0x0000000000074555 : ret 0xde74
0x0000000000139fc7 : ret 0xde77
0x0000000000045cdd : ret 0xde8
0x0000000000182711 : ret 0xde9e
0x000000000010ebb5 : ret 0xdeb
0x000000000010dfdc : ret 0xdee8
0x000000000008a419 : ret 0xe000
0x000000000019c0ad : ret 0xe01
0x0000000000170139 : ret 0xe074
0x0000000000023ded : ret 0xe077
0x00000000000acfc0 : ret 0xe08
0x0000000000123ff6 : ret 0xe083
0x00000000001a94d9 : ret 0xe0a
0x000000000012d5ca : ret 0xe0ff
0x00000000000e1dbc : ret 0xe174
0x0000000000028555 : ret 0xe183
0x000000000002429b : ret 0xe277
0x0000000000020628 : ret 0xe281
0x0000000000027352 : ret 0xe283
0x00000000000210b9 : ret 0xe2ff
0x000000000004b133 : ret 0xe383
0x00000000000952f6 : ret 0xe3e9
0x00000000000e19a9 : ret 0xe474
0x000000000011e216 : ret 0xe4e8
0x0000000000096140 : ret 0xe575
0x000000000007db87 : ret 0xe675
0x000000000005054f : ret 0xe680
0x0000000000184b26 : ret 0xe71f
0x00000000000d85f6 : ret 0xe775
0x00000000000d2bb8 : ret 0xe777
0x00000000000cb883 : ret 0xe7e8
0x0000000000061c8a : ret 0xe8
0x00000000000fa8b4 : ret 0xe801
0x00000000000d8adb : ret 0xe875
0x0000000000051e55 : ret 0xe87f
0x000000000006c1bb : ret 0xe883
0x00000000000ccd0f : ret 0xe8b8
0x0000000000020497 : ret 0xe8c1
0x000000000002ba92 : ret 0xe901
0x000000000002fb2e : ret 0xe902
0x0000000000026ec9 : ret 0xe904
0x00000000000bac21 : ret 0xe907
0x0000000000089026 : ret 0xe908
0x0000000000146696 : ret 0xe910
0x000000000004b6cd : ret 0xe920
0x0000000000085963 : ret 0xe96e
0x0000000000182e87 : ret 0xe970
0x000000000003bf1c : ret 0xe974
0x00000000001103c4 : ret 0xe975
0x0000000000085b0c : ret 0xe977
0x0000000000046063 : ret 0xea75
0x00000000000aa16a : ret 0xea81
0x0000000000174ae2 : ret 0xeaad
0x000000000004b14a : ret 0xeac0
0x00000000000d63d2 : ret 0xeac1
0x000000000018162c : ret 0xead6
0x000000000009caa4 : ret 0xeb01
0x00000000000d6cca : ret 0xeb04
0x00000000001446d6 : ret 0xeb10
0x00000000000c97c2 : ret 0xeb11
0x000000000008592f : ret 0xeb5b
0x00000000000394ea : ret 0xeb72
0x0000000000185638 : ret 0xec2
0x00000000000b83a5 : ret 0xec77
0x00000000000d6f11 : ret 0xec7f
0x0000000000118d88 : ret 0xed75
0x0000000000028098 : ret 0xed85
0x00000000000e0337 : ret 0xee72
0x0000000000022c8f : ret 0xee75
0x000000000013b85a : ret 0xef2d
0x00000000001852da : ret 0xef32
0x000000000007296e : ret 0xef75
0x00000000000d2759 : ret 0xef7c
0x0000000000007569 : ret 0xf
0x000000000008a2d9 : ret 0xf000
0x0000000000025941 : ret 0xf01
0x0000000000061b71 : ret 0xf02
0x00000000000db642 : ret 0xf039
0x000000000006cddd : ret 0xf04
0x000000000009ef93 : ret 0xf077
0x000000000001fe5a : ret 0xf08
0x0000000000118caf : ret 0xf089
0x00000000000995fb : ret 0xf0e
0x000000000002fb37 : ret 0xf0e9
0x0000000000080df0 : ret 0xf0f
0x000000000005829a : ret 0xf10
0x000000000009e7fc : ret 0xf188
0x0000000000020341 : ret 0xf189
0x0000000000101caa : ret 0xf1db
0x00000000000f4c49 : ret 0xf1e8
0x000000000006ed9c : ret 0xf20
0x000000000008a9c9 : ret 0xf201
0x000000000006c325 : ret 0xf229
0x0000000000037604 : ret 0xf301
0x000000000012311e : ret 0xf3c3
0x000000000005677a : ret 0xf40
0x0000000000099cce : ret 0xf41
0x00000000000777e7 : ret 0xf44
0x00000000000e975a : ret 0xf44e
0x00000000000dbac5 : ret 0xf45
0x000000000003cbb6 : ret 0xf48
0x0000000000052ea7 : ret 0xf4c
0x00000000000d6796 : ret 0xf53
0x0000000000096845 : ret 0xf5e8
0x00000000000c0b98 : ret 0xf601
0x0000000000049a62 : ret 0xf631
0x0000000000118d6b : ret 0xf641
0x0000000000118cdb : ret 0xf643
0x0000000000034aab : ret 0xf66
0x000000000012879a : ret 0xf666
0x00000000000b9f6a : ret 0xf66b
0x00000000000fe9f4 : ret 0xf683
0x00000000000a9d8c : ret 0xf685
0x0000000000104aaa : ret 0xf6bf
0x0000000000035d4d : ret 0xf701
0x0000000000081a43 : ret 0xf710
0x0000000000049ad5 : ret 0xf74
0x0000000000047605 : ret 0xf741
0x00000000000ab2da : ret 0xf745
0x000000000008ecbc : ret 0xf748
0x0000000000048734 : ret 0xf749
0x000000000010438a : ret 0xf76d
0x0000000000113478 : ret 0xf7e
0x00000000000df49c : ret 0xf80
0x000000000008a199 : ret 0xf800
0x00000000001825f0 : ret 0xf869
0x00000000000ae355 : ret 0xf883
0x00000000000c5525 : ret 0xf889
0x00000000001159ea : ret 0xf8a4
0x000000000010a45a : ret 0xf8b6
0x00000000000c17f9 : ret 0xf8c1
0x000000000002100d : ret 0xf8e9
0x0000000000127080 : ret 0xf980
0x00000000000637c4 : ret 0xf983
0x00000000000c373f : ret 0xfa29
0x0000000000052390 : ret 0xfa80
0x000000000003ded2 : ret 0xfa81
0x0000000000029a79 : ret 0xfa83
0x0000000000032982 : ret 0xfac1
0x00000000000dafbd : ret 0xfad1
0x0000000000141c9a : ret 0xfb4d
0x00000000000dd07a : ret 0xfb69
0x0000000000127431 : ret 0xfb80
0x00000000000d912e : ret 0xfb83
0x000000000008a059 : ret 0xfc00
0x000000000003f4c6 : ret 0xfc01
0x000000000003f47a : ret 0xfc02
0x00000000000ff561 : ret 0xfc07
0x000000000008a9e9 : ret 0xfc3
0x0000000000194fc4 : ret 0xfc60
0x0000000000195be0 : ret 0xfc9f
0x0000000000195bd8 : ret 0xfca0
0x0000000000195bd0 : ret 0xfca1
0x0000000000195bc8 : ret 0xfca2
0x0000000000195bc0 : ret 0xfca3
0x00000000001959e8 : ret 0xfca8
0x00000000000d4aba : ret 0xfd7c
0x00000000000a9e98 : ret 0xfd83
0x000000000002f3e0 : ret 0xfdf
0x0000000000089f19 : ret 0xfe00
0x000000000004d97a : ret 0xfe02
0x00000000000a9eb9 : ret 0xfe83
0x000000000014d41e : ret 0xfec5
0x0000000000089dd9 : ret 0xff00
0x0000000000044d3f : ret 0xff2
0x00000000000b6a20 : ret 0xff25
0x000000000009ec5a : ret 0xff3
0x0000000000088735 : ret 0xff31
0x000000000009de9d : ret 0xff41
0x000000000002b3e2 : ret 0xff44
0x0000000000088ed4 : ret 0xff48
0x0000000000100cfa : ret 0xff63
0x0000000000089c99 : ret 0xff80
0x000000000003c206 : ret 0xff81
0x000000000003c1ba : ret 0xff82
0x00000000000637e2 : ret 0xff83
0x00000000000836ea : ret 0xff9c
0x0000000000069d99 : ret 0xffaf
0x000000000001f96b : ret 0xffb8
0x0000000000042307 : ret 0xffbf
0x0000000000089b59 : ret 0xffc0
0x000000000009b5dc : ret 0xffd0
0x000000000009ddb9 : ret 0xffd3
0x000000000009b8cc : ret 0xffd7
0x0000000000086c51 : ret 0xffdf
0x0000000000089a19 : ret 0xffe0
0x0000000000057aaa : ret 0xffe1
0x0000000000066add : ret 0xffe5
0x0000000000020fda : ret 0xffe8
0x0000000000021005 : ret 0xffe9
0x00000000001735ca : ret 0xffea
0x0000000000040f77 : ret 0xffec
0x0000000000196f49 : ret 0xffed
0x0000000000133628 : ret 0xffee
0x000000000003b57c : ret 0xffef
0x00000000000898d9 : ret 0xfff0
0x0000000000031d08 : ret 0xfff1
0x00000000000f365b : ret 0xfff2
0x00000000000c3da7 : ret 0xfff3
0x00000000000afcee : ret 0xfff4
0x000000000009dc85 : ret 0xfff5
0x00000000000e9770 : ret 0xfff6
0x00000000001b8749 : ret 0xfff7
0x000000000004ec36 : ret 0xfff8
0x00000000000346b6 : ret 0xfff9
0x00000000000befb9 : ret 0xfffa
0x0000000000194af5 : ret 0xfffb
0x00000000000343b6 : ret 0xfffc
0x0000000000051cb1 : ret 0xfffd
0x00000000000325e8 : ret 0xfffe
0x000000000002d905 : ret 0xffff
0x000000000001f6bc : ret 1
0x000000000004b4d9 : ret 2
0x00000000000011c8 : ret 3
0x0000000000007608 : ret 4
0x0000000000001570 : ret 5
0x000000000000dda0 : ret 6
0x0000000000018251 : ret 7
0x0000000000001a8c : ret 8
0x00000000000f1c25 : ret 9
0x00000000000921ff : retf -0x7af1 ; call qword ptr [rsi]
0x00000000001970dd : retf ; add byte ptr [rax], al ; test byte ptr [rdx], al ; out dx, al ; call rsp
0x00000000001866b4 : retf ; fsubp st(5) ; jmp qword ptr [rbx]
0x00000000001888b5 : retf ; jmp qword ptr [rcx]
0x0000000000142ed3 : retf ; nop dword ptr [rax] ; call qword ptr [rax]
0x00000000000efa04 : retf ; or dword ptr [rax], eax ; mov rdx, qword ptr [rax] ; call 0xcbcf8
0x0000000000194b11 : retf ; sti ; call qword ptr [rax - 0x1f000434]
0x0000000000194b44 : rol bh, 0xfb ; call qword ptr [rax]
0x00000000000a97e5 : rol bl, 0x48 ; mov eax, edi ; ret
0x00000000000aa2ae : rol bl, 0x48 ; mov eax, edx ; pop rbx ; ret
0x00000000000fef4c : rol bl, 0x66 ; nop ; mov eax, 1 ; ret
0x000000000009e23c : rol bl, 0x66 ; nop ; mov rax, rdi ; ret
0x000000000009e69d : rol bl, 0x90 ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000ac33d : rol bl, 0x90 ; mov eax, 1 ; ret
0x00000000000ad06b : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000072dcc : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000008e2bd : rol bl, 1 ; nop ; xor eax, eax ; ret
0x0000000000194b38 : rol bl, 1 ; sti ; jmp qword ptr [rax]
0x000000000003a6b7 : rol byte ptr [rax + 0x375003f], 0x5b ; ret
0x000000000011033d : rol byte ptr [rax + 0x38], 0xd6 ; cmovne eax, ecx ; ret
0x000000000009ec32 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x00000000000bce02 : rol byte ptr [rax + 0x49000151], 1 ; ret
0x000000000008afd2 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x0000000000001390 : rol byte ptr [rax + rax], 0 ; ret
0x0000000000180440 : rol byte ptr [rax + rax], 0 ; ret 4
0x00000000000817d6 : rol byte ptr [rax + rax], cl ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x0000000000024bc0 : rol byte ptr [rax + rcx*2], 0x83 ; ret
0x00000000000662dc : rol byte ptr [rax + rcx*2], 1 ; ret
0x0000000000123949 : rol byte ptr [rax + rcx*4 + 0x5e], 3 ; pop rbx ; ret
0x000000000003d310 : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000000abf1d : rol byte ptr [rax*4 + 0x751089d2], 0xf3 ; ret
0x000000000016dfed : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001a7355 : rol byte ptr [rax], 0 ; xchg rax, rsp ; sti ; call qword ptr [rax]
0x000000000018787c : rol byte ptr [rax], 0xf2 ; jmp rax
0x00000000000bbbd8 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x000000000006b5df : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov eax, esi ; pop rbx ; ret
0x0000000000104bc7 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c7510 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000003568c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x00000000001971b5 : rol byte ptr [rax], 1 ; add byte ptr [rbp + rdx - 0x12], dl ; jmp rsp
0x000000000008cddb : rol byte ptr [rbp + 0x48be75c0], 1 ; add esp, 8 ; ret
0x0000000000095ca2 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x000000000005d991 : rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x0000000000036259 : rol byte ptr [rbp - 0x3f6bf02e], 0xc3 ; xor eax, eax ; ret
0x000000000011ce97 : rol byte ptr [rbp - 0x6bf0be40], cl ; ret 0x8545
0x000000000011d07d : rol byte ptr [rbp - 0x6bf0be40], cl ; ret 0xf741
0x0000000000195d80 : rol byte ptr [rbp - 0x78af0004], 1 ; cld ; call rax
0x00000000000eba56 : rol byte ptr [rbx + 0xf4104f8], cl ; xchg eax, esp ; ret 0x8341
0x00000000000ebc10 : rol byte ptr [rbx + 0xf4104f8], cl ; xchg eax, esp ; ret 0x8b48
0x000000000004842b : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x0000000000118869 : rol byte ptr [rbx - 0x24e6fe08], 0x83 ; ret
0x000000000010515b : rol byte ptr [rbx - 0x34d6fe3d], 1 ; ret
0x00000000000d6727 : rol byte ptr [rbx - 0x3f7cfd20], 8 ; ret
0x0000000000109e1c : rol byte ptr [rbx - 0x69f0f601], 0xc0 ; ret
0x0000000000072f98 : rol byte ptr [rbx - 0x6af00002], 0xc0 ; neg eax ; ret
0x000000000002df31 : rol byte ptr [rbx - 0x6bf07f19], 0xc0 ; ret
0x00000000000d0c15 : rol byte ptr [rbx - 0x6bf0fe06], 0xc0 ; ret
0x000000000005debf : rol byte ptr [rbx - 0x7af00008], cl ; ret
0x000000000019561c : rol byte ptr [rbx - 0x7caf0004], 0xfc ; jmp rax
0x00000000000ab562 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x0000000000122316 : rol byte ptr [rbx], 0x25 ; cld ; inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x000000000012d411 : rol byte ptr [rbx], 0x83 ; ret 0x8303
0x00000000000aa161 : rol byte ptr [rcx + 0xbeff], cl ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x00000000000ec09c : rol byte ptr [rcx + 0xf], 0x94 ; ret
0x000000000011ce99 : rol byte ptr [rcx + 0xf], 0x94 ; ret 0x8545
0x000000000011d07f : rol byte ptr [rcx + 0xf], 0x94 ; ret 0xf741
0x00000000000968f3 : rol byte ptr [rcx + 0xf], 0x95 ; ret
0x000000000009e132 : rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebp ; ret 0x3941
0x00000000000b7bfb : rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebx ; ret 0x14c
0x000000000009e1eb : rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0x3941
0x00000000000d5aa5 : rol byte ptr [rcx + rbp - 0x20], 1 ; ret
0x000000000002975b : rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x00000000000ab61e : rol byte ptr [rcx + rcx*4 + 0x41], 4 ; jne 0xab5f0 ; ret
0x0000000000123602 : rol byte ptr [rcx + rcx*4 - 0x40], cl ; mov byte ptr [rdi + rdx], 0 ; ret
0x0000000000102917 : rol byte ptr [rcx - 0x77], 0xdd ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000000c1e1e : rol byte ptr [rcx - 0x77], 1 ; ret 0x8341
0x00000000000daf5e : rol byte ptr [rcx - 0x77], 1 ; ret 0x8d48
0x0000000000195db4 : rol byte ptr [rcx - 0x7caf0004], 1 ; cld ; call rax
0x00000000000eb227 : rol byte ptr [rcx - 0x7d], 0xf8 ; add dword ptr [rcx + 0xf], eax ; xchg eax, esp ; ret
0x00000000000c197d : rol byte ptr [rcx - 0x7d], cl ; clc ; add dword ptr [rdi], ecx ; sahf ; ret 0x1fbd
0x000000000008a9c2 : rol byte ptr [rcx - 0x80], cl ; stc ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf201
0x00000000000ab542 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000000e766a : rol byte ptr [rcx], 0x39 ; ret
0x00000000000d8ad8 : rol byte ptr [rcx], 0x39 ; ret 0xe875
0x00000000000e5362 : rol byte ptr [rcx], 0x39 ; ror byte ptr [rdi], 1 ; ret 0x3941
0x0000000000048042 : rol byte ptr [rcx], 0x48 ; cmp eax, edx ; jne 0x48041 ; xor eax, eax ; ret
0x00000000000a9f6b : rol byte ptr [rcx], 0x5d ; pop r12 ; pop r13 ; ret
0x00000000001090fd : rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x00000000000d87b7 : rol byte ptr [rcx], 0x83 ; ret 0x4001
0x000000000002b152 : rol byte ptr [rcx], 0x83 ; ret 0x4801
0x000000000006ed97 : rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0xf20
0x0000000000046052 : rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x00000000001018a7 : rol byte ptr [rcx], 0xd9 ; ret 0x3944
0x00000000000a9fcb : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0x74e9
0x00000000000a9fb6 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x000000000018789c : rol byte ptr [rcx], 0xf2 ; jmp rax
0x000000000014d44e : rol byte ptr [rcx], 1 ; ret 0x148
0x000000000018be34 : rol byte ptr [rcx], 1 ; sti ; jmp rax
0x000000000019c0aa : rol byte ptr [rcx], 3 ; ret 0xe01
0x00000000001bbe18 : rol byte ptr [rcx], cl ; ret 0xa
0x00000000001bbdc0 : rol byte ptr [rcx], cl ; ret 0xb
0x00000000000f618c : rol byte ptr [rcx], cl ; ror byte ptr [rax + 0x39], 1 ; div dword ptr [rdi - 0x14] ; ret
0x000000000010a1ed : rol byte ptr [rdi + rcx], 0xb7 ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x0000000000195dc4 : rol byte ptr [rdi - 0x76af0004], 1 ; cld ; call rax
0x00000000000ab5a2 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000001aa1c0 : rol byte ptr [rdi], 1 ; call rsi
0x0000000000195d78 : rol byte ptr [rdx - 0x7baf0004], 1 ; cld ; call rax
0x00000000000ab552 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000000218e6 : rol byte ptr [rdx], 0x50 ; call rbx
0x00000000001878ec : rol byte ptr [rdx], 0xf2 ; call rax
0x0000000000106b55 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x00000000000cc7a7 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x00000000001aec90 : rol byte ptr [rdx], 1 ; cmc ; call qword ptr [rdi]
0x00000000001878f0 : rol byte ptr [rdx], 1 ; jmp rax
0x00000000000becbf : rol byte ptr [rip + 0x16e], 1 ; ret
0x000000000010a0bd : rol byte ptr [rip + 0x48c0b70f], 0x8b ; push rsp ; ret 0x8940
0x0000000000195404 : rol byte ptr [rsi - 0x79af0004], 0xfc ; jmp rax
0x00000000000ab592 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x00000000000d6fb1 : rol byte ptr [rsp + rax*2], 0x29 ; ret 0x5089
0x0000000000195dbc : rol byte ptr [rsp + rdi*8 - 0x379af01], 1 ; call rax
0x0000000000181580 : rol cl, 0xc2 ; ret
0x000000000011c817 : rol dh, 2 ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x00000000000ab4ec : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x0000000000110311 : rol dword ptr [rax + 0x38], -0x3a ; mov eax, edx ; cmove eax, ecx ; ret
0x00000000000009ef : rol dword ptr [rax + 0x4260a120], cl ; ret 0x4021
0x00000000001a745d : rol dword ptr [rax], 0 ; jo 0x1a7449 ; out dx, eax ; call rsp
0x00000000001a7445 : rol dword ptr [rax], 0 ; pop rax ; fucomi st(7) ; jmp qword ptr [rbx]
0x00000000001971e5 : rol dword ptr [rax], 1 ; add byte ptr [rcx + rbx], dh ; out dx, al ; call rsp
0x000000000006bca8 : rol dword ptr [rax], 1 ; ret
0x000000000009e697 : rol dword ptr [rbp + 0x317475c0], -0x40 ; ret
0x000000000001f9be : rol dword ptr [rbx + rbp*8], -0x34 ; mov qword ptr [rdi], rcx ; ret
0x00000000000c56fb : rol dword ptr [rcx + 0xf], 0x49 ; fadd qword ptr [rcx] ; ret
0x00000000000662d8 : rol dword ptr [rcx + rcx*2], -0x7d ; rol byte ptr [rax + rcx*2], 1 ; ret
0x0000000000022d7b : rol dword ptr [rcx], 0 ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000199bed : rol dword ptr [rcx], cl ; add byte ptr [rsp + rbx], ah ; clc ; jmp rsp
0x00000000000a7439 : rol dword ptr [rdi], cl ; add byte ptr [rax], al ; ret
0x00000000001237ae : rol dword ptr [rdx], 0x41 ; mov dword ptr [rax], edi ; mov qword ptr [r9], rcx ; ret
0x00000000000360b5 : rol eax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000008aa29 : rol ebx, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000136fa8 : rol ecx, 1 ; jmp 0xffffffff80d666c4
0x000000000013722f : rol ecx, 1 ; jmp 0xffffffff80d6694b
0x00000000000009ee : rol qword ptr [rax + 0x4260a120], cl ; ret 0x4021
0x000000000008aa28 : rol r11d, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000360b4 : rol rax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000118ae2 : ror ax, 8 ; ret
0x0000000000035f54 : ror byte ptr [rax + 0x21], 1 ; add al, 0xd7 ; xor eax, eax ; ret
0x00000000000360b6 : ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x000000000008e132 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x8e179 ; add rax, rdi ; ret
0x000000000008ae87 : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000000a085e : ror byte ptr [rax + 0x29], 1 ; enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x000000000007436a : ror byte ptr [rax + 0x29], 1 ; ret
0x0000000000023db6 : ror byte ptr [rax + 0x29], cl ; ret 0x8348
0x000000000013b5dd : ror byte ptr [rax + 0x39], 0xca ; je 0x13b5f7 ; ret
0x00000000000fc56f : ror byte ptr [rax + 0x39], 0xd7 ; ja 0xfc5a7 ; ret
0x00000000001141e8 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x00000000000f618e : ror byte ptr [rax + 0x39], 1 ; div dword ptr [rdi - 0x14] ; ret
0x00000000000f641d : ror byte ptr [rax + 0x39], 1 ; ret 0x3575
0x0000000000048ed6 : ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x0000000000114108 : ror byte ptr [rax + 0x48], 0x39 ; sal byte ptr [rdx - 0xf], 1 ; xor eax, eax ; ret
0x00000000000d3520 : ror byte ptr [rax + 0x63], 4 ; xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x0000000000046ed5 : ror byte ptr [rax + 0xf], 0x44 ; ret
0x00000000000bb9d0 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x0000000000115222 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8948
0x000000000012871c : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x0000000000096f37 : ror byte ptr [rax + 0xf], 1 ; ret
0x0000000000047f95 : ror byte ptr [rax + 0xf], 1 ; ret 0x3145
0x000000000002c864 : ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x000000000002c855 : ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x0000000000049a5e : ror byte ptr [rax + 0xf], 1 ; ret 0xf631
0x000000000009e7e3 : ror byte ptr [rax + 1], 0xf8 ; add rax, r8 ; ret
0x0000000000095b7c : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x000000000008ca29 : ror byte ptr [rax + 1], 0xf8 ; ret
0x0000000000123783 : ror byte ptr [rax + 1], 1 ; xlatb ; mov qword ptr [r9], rdi ; ret
0x0000000000076ad9 : ror byte ptr [rax + 1], cl ; ret 0x8944
0x00000000000ae6f1 : ror byte ptr [rax + 1], cl ; ret 0x894c
0x00000000000b77a6 : ror byte ptr [rax + 1], cl ; ret 0x8b48
0x00000000000421f5 : ror byte ptr [rax + 1], cl ; ret 0x9a74
0x00000000000adb95 : ror byte ptr [rax + 1], cl ; ret 0x9e74
0x000000000003bfd5 : ror byte ptr [rax + 1], cl ; ret 0xa274
0x000000000003bf19 : ror byte ptr [rax + 1], cl ; ret 0xe974
0x000000000008ae84 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000000ded90 : ror byte ptr [rax + 9], 0x14 ; ret
0x000000000017c848 : ror byte ptr [rax + rax], 0 ; ret
0x000000000008e2b5 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x00000000000a9e1c : ror byte ptr [rax - 0x2f], 1 ; call 0xffffffffc30f2b78
0x000000000002d902 : ror byte ptr [rax - 0x39], 1 ; ret 0xffff
0x0000000000108e36 : ror byte ptr [rax - 0x3f], 0xe9 ; adc byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xf48
0x000000000005710a : ror byte ptr [rax - 0x3f], 1 ; clc ; add cl, byte ptr [rax + 0x29] ; ret
0x00000000000bf7d2 : ror byte ptr [rax - 0x46], 1 ; ret
0x00000000000babc8 : ror byte ptr [rax - 0x73], 0x14 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000cd138 : ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x000000000008e0f2 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x000000000008e122 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x000000000009e6d2 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dh ; ret
0x000000000008e112 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x00000000000ce8c1 : ror byte ptr [rax - 0x75], 0x54 ; ret
0x0000000000109b71 : ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00000000000c56d8 : ror byte ptr [rax - 0x75], 0x7c ; ret
0x000000000007b93a : ror byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000195d88 : ror byte ptr [rax - 0x75af0004], 1 ; cld ; call rax
0x0000000000048d73 : ror byte ptr [rax - 0x77], 0x14 ; ret
0x000000000009e319 : ror byte ptr [rax - 0x77], 0xa ; ret
0x000000000012dab9 : ror byte ptr [rax - 0x77], 0xc3 ; jne 0x12da5b ; xor eax, eax ; pop rbx ; ret
0x0000000000096f34 : ror byte ptr [rax - 0x77], 0xd0 ; cmove rax, rbx ; pop rbx ; ret
0x00000000001325d8 : ror byte ptr [rax - 0x77], 0xd6 ; add rdi, 0x10 ; jmp rcx
0x0000000000115112 : ror byte ptr [rax - 0x77], 0xe5 ; pop rbp ; ret
0x0000000000139fb9 : ror byte ptr [rax - 0x77], 0xef ; add rbx, r12 ; call r14
0x00000000000876dc : ror byte ptr [rax - 0x77], 1 ; ret
0x000000000013f86a : ror byte ptr [rax - 0x77], 1 ; ret 0x1be
0x0000000000051fd5 : ror byte ptr [rax - 0x77], 1 ; ret 0x82e8
0x000000000003b34d : ror byte ptr [rax - 0x77], 1 ; ret 0x8966
0x0000000000078e95 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x00000000000be7c5 : ror byte ptr [rax - 0x77], 1 ; ret 0x8d48
0x000000000012f136 : ror byte ptr [rax - 0x77], 1 ; ret 0xd148
0x0000000000020625 : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x0000000000086872 : ror byte ptr [rax - 0x77], 1 ; xor dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x0000000000131c09 : ror byte ptr [rax - 0x77], 2 ; mov eax, 1 ; ret
0x000000000007dcf5 : ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000007a2c1 : ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x7a2d6 ; ret
0x0000000000101c2b : ror byte ptr [rax - 0x7d], 0x3e ; add byte ptr [rsi + rax + 0x5b], dh ; ret
0x0000000000077322 : ror byte ptr [rax - 0x7d], 0x7f ; sbb byte ptr [rax], al ; setne al ; ret
0x0000000000094aa1 : ror byte ptr [rax - 0x7d], 0xc1 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000003ad9c : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000013ab51 : ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000136906 : ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rbx + 0x5d], bl ; ret
0x000000000013668e : ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x1366f5 ; ret
0x00000000000f80a0 : ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x000000000003a07d : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000453a4 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000142ea0 : ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x000000000013301d : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000013bb8a : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000121a26 : ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000009e732 : ror byte ptr [rax - 0x7d], 0xea ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x000000000009e712 : ror byte ptr [rax - 0x7d], 0xea ; and byte ptr [rax + 1], cl ; ret 0x347c
0x000000000009e6f2 : ror byte ptr [rax - 0x7d], 0xea ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x00000000000f65be : ror byte ptr [rax - 0x7d], 0xec ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000824d5 : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2916cf4
0x00000000000c2765 : ror byte ptr [rax - 0x7d], 1 ; ret
0x00000000000e0236 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4101
0x000000000004f543 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4820
0x00000000000fd255 : ror byte ptr [rax - 0x7d], cl ; clc ; add al, 0xf ; xchg eax, ebp ; ret 0xdaf7
0x0000000000075eba : ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000046170 : ror byte ptr [rax - 0x7d], cl ; ret
0x00000000000d47e3 : ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000a5a46 : ror byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000026489 : ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x00000000000be41e : ror byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000077bff : ror byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000002593e : ror byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000000780ba : ror byte ptr [rax - 9], cl ; cmc ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000780fd : ror byte ptr [rax - 9], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011705a : ror byte ptr [rax - 9], cl ; pop rbx ; pop rbp ; ret
0x00000000000af4ea : ror byte ptr [rax], 0x83 ; ret 0x4801
0x000000000008cd84 : ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x00000000000b7b3b : ror byte ptr [rbp + 0x39], cl ; ret 0x4574
0x00000000000ac647 : ror byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x20 ; call rbx
0x0000000000195dd4 : ror byte ptr [rbp - 0x70af0004], 1 ; cld ; call rax
0x00000000000f0406 : ror byte ptr [rbx + 0xf48246c], cl ; xchg eax, ebp ; ret
0x0000000000195d90 : ror byte ptr [rbx - 0x72af0004], 1 ; cld ; call rax
0x00000000000f647f : ror byte ptr [rcx + 0x39], 1 ; ret 0x3375
0x0000000000024c28 : ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x0000000000023dc5 : ror byte ptr [rcx + 0x39], cl ; ret 0x2576
0x0000000000024270 : ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x00000000000abf87 : ror byte ptr [rcx + 0x48c47503], 0x83 ; ret
0x00000000000ae133 : ror byte ptr [rcx + 0xf082444], 0x84 ; ret
0x0000000000129b2b : ror byte ptr [rcx + rcx*4 - 0xf], 0x4c ; mov edi, ebp ; call r12
0x0000000000034f24 : ror byte ptr [rcx - 0x24efdbbc], 1 ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x0000000000094506 : ror byte ptr [rcx - 0x39], cl ; ret
0x000000000003521e : ror byte ptr [rcx - 0x3fcebfbd], 0x5b ; ret
0x000000000012285e : ror byte ptr [rcx - 0x76b7f3a9], 0x3e ; ret
0x00000000000d640e : ror byte ptr [rcx - 0x76bb79ec], 1 ; ret 0xeac1
0x00000000000a9e14 : ror byte ptr [rcx - 0x77], 1 ; ret 0x2276
0x0000000000094548 : ror byte ptr [rcx - 0x7d], 1 ; ret
0x00000000000a562f : ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x000000000009907a : ror byte ptr [rcx - 0x7d], cl ; ret 0x8306
0x00000000000abf20 : ror byte ptr [rcx - 0xc0c8af0], cl ; ret
0x0000000000188984 : ror byte ptr [rcx - 0xc], 1 ; call rax
0x00000000000ba820 : ror byte ptr [rcx - 0xd8af1ec], cl ; ret
0x0000000000106cac : ror byte ptr [rcx], 0xf8 ; ret
0x000000000008eaf9 : ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x0000000000188db4 : ror byte ptr [rdi - 0xc], 1 ; call rax
0x0000000000105710 : ror byte ptr [rdi], 0x44 ; ret 0x66c3
0x00000000001013e5 : ror byte ptr [rdi], 0x45 ; ret 0xc084
0x00000000000e9f20 : ror byte ptr [rdi], 0x47 ; ret 0x90c3
0x00000000000bca02 : ror byte ptr [rdi], 0x48 ; ret 0xb70f
0x000000000003a6e5 : ror byte ptr [rdi], 0x48 ; ret 0xc35b
0x000000000004741f : ror byte ptr [rdi], 0x84 ; add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000000bcfbd : ror byte ptr [rdi], 0x84 ; in al, dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007567c : ror byte ptr [rdi], 0x84 ; movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000009667a : ror byte ptr [rdi], 0x84 ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000087bb6 : ror byte ptr [rdi], 0x84 ; ret
0x00000000000f42b7 : ror byte ptr [rdi], 0x84 ; ret 0xa
0x00000000000e2eaf : ror byte ptr [rdi], 0x84 ; ret 0xfffd
0x00000000000c3fc6 : ror byte ptr [rdi], 0x84 ; ret 1
0x00000000000965aa : ror byte ptr [rdi], 0x84 ; ret 2
0x0000000000063643 : ror byte ptr [rdi], 0x84 ; ret 3
0x000000000002aecd : ror byte ptr [rdi], 0x84 ; ret 5
0x0000000000110322 : ror byte ptr [rdi], 0x84 ; sbb eax, 0x89000001 ; ret 0x8944
0x00000000000762cc : ror byte ptr [rdi], 0x84 ; xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000016502a : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x0000000000084035 : ror byte ptr [rdi], 0x85 ; in al, dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000009e65c : ror byte ptr [rdi], 0x85 ; jge 0x9e66a ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000085c11 : ror byte ptr [rdi], 0x85 ; lock add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000000a4291 : ror byte ptr [rdi], 0x85 ; pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000005cd49 : ror byte ptr [rdi], 0x85 ; ret
0x00000000000a0bd7 : ror byte ptr [rdi], 0x85 ; ret 0x13
0x000000000006006b : ror byte ptr [rdi], 0x85 ; ret 0x31
0x00000000000dadff : ror byte ptr [rdi], 0x85 ; ret 0xfff8
0x0000000000113055 : ror byte ptr [rdi], 0x85 ; ret 0xfffa
0x0000000000118fde : ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x0000000000121aa8 : ror byte ptr [rdi], 0x88 ; ret
0x00000000000f7e47 : ror byte ptr [rdi], 0x88 ; ret 1
0x00000000000ffb24 : ror byte ptr [rdi], 0x89 ; ret 0xfffe
0x00000000000bb3a3 : ror byte ptr [rdi], 0x89 ; ret 3
0x00000000000cce1f : ror byte ptr [rdi], 0x92 ; ret 0xd029
0x0000000000087acd : ror byte ptr [rdi], 0x94 ; ret
0x00000000000eccee : ror byte ptr [rdi], 0x94 ; ret 0x1589
0x00000000000e2307 : ror byte ptr [rdi], 0x94 ; ret 0x2fe9
0x00000000000bb2cb : ror byte ptr [rdi], 0x94 ; ret 0x3840
0x0000000000136546 : ror byte ptr [rdi], 0x94 ; ret 0x3d83
0x00000000000bb398 : ror byte ptr [rdi], 0x94 ; ret 0x5438
0x00000000000598b1 : ror byte ptr [rdi], 0x94 ; ret 0x7f3c
0x000000000008105c : ror byte ptr [rdi], 0x94 ; ret 0x82e9
0x00000000000e0068 : ror byte ptr [rdi], 0x94 ; ret 0x8445
0x0000000000020775 : ror byte ptr [rdi], 0x94 ; ret 0x8d48
0x0000000000061a44 : ror byte ptr [rdi], 0x94 ; ret 0xd309
0x000000000006fefa : ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x000000000010f313 : ror byte ptr [rdi], 0x95 ; ret
0x00000000000d9055 : ror byte ptr [rdi], 0x95 ; ret 0x8341
0x00000000000b9cff : ror byte ptr [rdi], 0x95 ; ret 0xa8e9
0x00000000000b9baa : ror byte ptr [rdi], 0x95 ; ret 0xd721
0x0000000000045c2d : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x00000000000ac87f : ror byte ptr [rdi], 0x95 ; ret 0xe883
0x00000000000acb6c : ror byte ptr [rdi], 0x95 ; ret 0xf983
0x00000000000d912b : ror byte ptr [rdi], 0x95 ; ret 0xfb83
0x000000000007365c : ror byte ptr [rdi], 0x9f ; ret 0x3841
0x00000000000cd135 : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x00000000000e9f1d : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rdi], 0x47 ; ret 0x90c3
0x000000000006b2fb : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; ret
0x00000000000ab74c : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00000000000f828a : ror byte ptr [rdi], 0xb6 ; shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x0000000000033bbe : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x33ba8 ; ret
0x00000000000e5365 : ror byte ptr [rdi], 1 ; ret 0x3941
0x00000000000db63f : ror byte ptr [rdi], 1 ; ret 0xf039
0x000000000007f379 : ror byte ptr [rdi], 1 ; test byte ptr [rax], bh ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000c0ecb : ror byte ptr [rdi], 1 ; test dh, ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000968ed : ror byte ptr [rdi], 1 ; xchg eax, esp ; ret
0x000000000009e77d : ror byte ptr [rdi], cl ; mov ebp, 0xf80148c0 ; ret
0x000000000007544c : ror byte ptr [rdi], cl ; test byte ptr [rbp - 0x77000000], dh ; ret 0xd089
0x00000000000bb61a : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3840
0x0000000000097f37 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x00000000000b6e50 : ror byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd108
0x0000000000195dcc : ror byte ptr [rdx - 0x73af0004], 1 ; cld ; call rax
0x0000000000195d98 : ror byte ptr [rsi - 0x6faf0004], 1 ; cld ; call rax
0x00000000000990ff : ror dword ptr [r9 + 0x1ef8c1f8], -0x77 ; ret 0x8b48
0x0000000000074083 : ror dword ptr [rax + 0x29], cl ; ret
0x00000000000c27ac : ror dword ptr [rax + 0x63], 1 ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x00000000000cc931 : ror dword ptr [rax + 0x63], cl ; ret
0x0000000000149fb5 : ror dword ptr [rax + 1], -8 ; ret
0x0000000000149e79 : ror dword ptr [rax + 1], -8 ; sub rax, r8 ; ret
0x000000000014a0ce : ror dword ptr [rax + 1], -8 ; sub rax, rdx ; ret
0x000000000013eb37 : ror dword ptr [rax + 1], cl ; ret
0x0000000000109964 : ror dword ptr [rax - 0x3f], -0x16 ; adc byte ptr [rax + 1], cl ; ret 0x3948
0x00000000000ddd9e : ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x00000000000da0ec : ror dword ptr [rax - 0x75], cl ; cmp cl, byte ptr [rax - 0x7d] ; ret
0x0000000000049d63 : ror dword ptr [rax - 0x77], 0x34 ; ret 0x8348
0x000000000009e305 : ror dword ptr [rax - 0x77], 0xa ; ret
0x000000000010556d : ror dword ptr [rax - 0x77], 1 ; fadd st(6) ; add al, byte ptr [rax] ; pop rbx ; ret
0x00000000000dc137 : ror dword ptr [rax - 0x77], 1 ; ret 0x94d
0x00000000001425b1 : ror dword ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000014d4a2 : ror dword ptr [rax - 0x77], 1 ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000071b3d : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x71b37 ; ret
0x000000000007ae6d : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x7ae67 ; ret
0x000000000003a168 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000032752 : ror dword ptr [rax - 0x7d], cl ; ret
0x000000000004b60f : ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x00000000000c0b95 : ror dword ptr [rax - 0x7d], cl ; ret 0xf601
0x00000000000e4c5f : ror dword ptr [rax], -0x17 ; ret 0xfffe
0x000000000012f590 : ror dword ptr [rbp + 0x39], 1 ; ret 0x850f
0x000000000009a650 : ror dword ptr [rbx - 0x73], 0x14 ; cmovs ebp, dword ptr [rcx] ; ret
0x0000000000099100 : ror dword ptr [rcx + 0x1ef8c1f8], -0x77 ; ret 0x8b48
0x00000000000dc134 : ror dword ptr [rcx + 0x21], 1 ; ror dword ptr [rax - 0x77], 1 ; ret 0x94d
0x000000000002c2c2 : ror dword ptr [rcx + 1], 1 ; ret 0x854d
0x0000000000094065 : ror dword ptr [rcx + rcx*4 + 0xf], 1 ; pop rbx ; ret
0x00000000000e6b54 : ror dword ptr [rcx + rcx*4], cl ; push rsp ; ret
0x00000000000e87cb : ror dword ptr [rcx - 0x75], 0x2c ; ret 0x8948
0x00000000000e87d3 : ror dword ptr [rcx - 0x77], 0x1c ; ret 0x8348
0x0000000000170137 : ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000099cc3 : ror dword ptr [rdi - 0x73], 0x44 ; movups xmm1, xmmword ptr [rdi] ; xchg eax, ebx ; ret
0x000000000009e5f5 : ror dword ptr [rdi], -0x43 ; ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000003c3c8 : ror dword ptr [rdi], -0x6b ; ret 0xd348
0x00000000000e34fd : ror dword ptr [rdi], -0x6c ; ret 0x3ae9
0x00000000000d7b37 : ror dword ptr [rdi], -0x6e ; ret 0xd138
0x000000000016e858 : ror dword ptr [rdi], -0x7b ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016ef64 : ror dword ptr [rdi], -0x7b ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016ed36 : ror dword ptr [rdi], -0x7b ; add eax, 0xc0310000 ; ret
0x000000000016fe60 : ror dword ptr [rdi], -0x7b ; cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016ecb6 : ror dword ptr [rdi], -0x7b ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x000000000016eff4 : ror dword ptr [rdi], -0x7b ; je 0x16f004 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016eaeb : ror dword ptr [rdi], -0x7b ; jno 0x16eb00 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016ebb3 : ror dword ptr [rdi], -0x7b ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000011a417 : ror dword ptr [rdi], -0x7b ; ret 0xfffe
0x000000000016e830 : ror dword ptr [rdi], -0x7b ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000007eeff : ror dword ptr [rdi], 1 ; xchg dword ptr [rdx], edx ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x00000000000f826c : ror dword ptr [rdi], 1 ; xchg eax, edx ; ret 0x970f
0x000000000009e3e7 : ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x0000000000123445 : ror dword ptr [rdi], cl ; xchg eax, esi ; ret 0xfb83
0x0000000000118ae3 : ror eax, 8 ; ret
0x0000000000188748 : ror ebp, cl ; call qword ptr [rsi]
0x000000000012b1cb : ror ebx, 1 ; sub dword ptr [rax], eax ; pop rbx ; ret
0x0000000000071b3c : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x71b38 ; ret
0x000000000007ae6c : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x7ae68 ; ret
0x00000000000712c5 : sahf ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x71265
0x00000000000ff4d8 : sahf ; clc ; inc dword ptr [rbp - 0x7cee8b40] ; ret
0x0000000000195be9 : sahf ; cld ; call qword ptr [rdx]
0x0000000000195d69 : sahf ; cld ; call rax
0x0000000000195d29 : sahf ; cld ; jmp rax
0x00000000000025e2 : sahf ; jl 0x2577 ; loop 0x25c2 ; ret 0x23cb
0x00000000000025e1 : sahf ; jl 0x2578 ; loop 0x25c3 ; ret 0x23cb
0x000000000014adfe : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000e86f3 : sahf ; ret
0x00000000000493b1 : sahf ; ret 0x148
0x00000000000c1983 : sahf ; ret 0x1fbd
0x0000000000182de5 : sahf ; ret 0x38ae
0x000000000003886c : sahf ; ret 0x8348
0x00000000000e86fc : sahf ; ret 0x844
0x00000000000bb55f : sahf ; ret 0xe8c1
0x000000000000245b : sahf ; sbb byte ptr [rax], cl ; ret 0x5576
0x00000000000becbd : sal bh, 0xd0 ; add eax, 0x16e ; ret
0x00000000000d6771 : sal bh, 0xd0 ; and eax, 2 ; ret
0x000000000013658e : sal bh, 0xd8 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000136bd9 : sal bh, 0xd8 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000010e342 : sal bh, 0xd8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006b2fe : sal bh, 0xd8 ; pop rbx ; ret
0x000000000006b2cb : sal bh, 0xd8 ; ret
0x00000000000aa2c2 : sal bh, 0xf1 ; pop rbx ; mov eax, eax ; ret
0x00000000001b96d0 : sal bh, 0xf7 ; call qword ptr [rdx]
0x000000000008a697 : sal bh, 1 ; ret 0x8000
0x000000000008a557 : sal bh, 1 ; ret 0xc000
0x000000000008a417 : sal bh, 1 ; ret 0xe000
0x000000000008a2d7 : sal bh, 1 ; ret 0xf000
0x000000000008a197 : sal bh, 1 ; ret 0xf800
0x000000000008a057 : sal bh, 1 ; ret 0xfc00
0x0000000000089f17 : sal bh, 1 ; ret 0xfe00
0x0000000000089dd7 : sal bh, 1 ; ret 0xff00
0x0000000000089c97 : sal bh, 1 ; ret 0xff80
0x0000000000089b57 : sal bh, 1 ; ret 0xffc0
0x0000000000089a17 : sal bh, 1 ; ret 0xffe0
0x00000000000898d7 : sal bh, 1 ; ret 0xfff0
0x0000000000089797 : sal bh, 1 ; ret 0xfff8
0x0000000000089657 : sal bh, 1 ; ret 0xfffc
0x0000000000089517 : sal bh, 1 ; ret 0xfffe
0x0000000000050484 : sal bh, cl ; int1 ; add eax, r8d ; ret
0x0000000000123637 : sal bl, 0x48 ; stosd dword ptr [rdi], eax ; mov eax, r8d ; ret
0x0000000000194d10 : sal bl, 0xfb ; call qword ptr [rax]
0x0000000000045a18 : sal bl, 1 ; ret
0x0000000000088c93 : sal byte ptr [rax + rbp + 0x48], 0x89 ; ret 0x8948
0x00000000000abcef : sal byte ptr [rax + rbx + 0x49], 0x83 ; ret 0x4908
0x00000000000ce7b1 : sal byte ptr [rax + rcx + 0xf], 0xb6 ; add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x0000000000136215 : sal byte ptr [rax + rcx*2 - 0x75], 0x50 ; adc dh, dh ; ret 0x7401
0x0000000000194e24 : sal byte ptr [rax], 1 ; cld ; call rax
0x000000000008e0e8 : sal byte ptr [rbp + 0x55], 0x48 ; xor eax, eax ; ret
0x0000000000053945 : sal byte ptr [rbp + 0xc], 0x31 ; div dh ; ret 0x4050
0x000000000013bcb1 : sal byte ptr [rbp + 0xc], cl ; mov eax, 1 ; ret
0x000000000008ce00 : sal byte ptr [rbp + 0xd], 0x48 ; add esp, 8 ; ret
0x000000000006ac70 : sal byte ptr [rbp + 0xd], 0x48 ; mov eax, ebx ; pop rbx ; ret
0x000000000005152e : sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x00000000001141f7 : sal byte ptr [rbp + 6], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000352f7 : sal byte ptr [rbp + 6], 0xf3 ; ret
0x000000000012d9b4 : sal byte ptr [rbp + 9], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000001148d4 : sal byte ptr [rbp + 9], 0xf3 ; ret
0x000000000007a2c4 : sal byte ptr [rbp + 9], cl ; ret
0x000000000012ba33 : sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x000000000012d651 : sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x0000000000133914 : sal byte ptr [rbp + rax + 0x4c], 0x89 ; out dx, eax ; call rax
0x0000000000137ae9 : sal byte ptr [rbp + rax*4 + 0x64], 0x48 ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x0000000000149fb0 : sal byte ptr [rbp + rbx*8 + 0x48], cl ; movsxd rax, ecx ; add rax, rdi ; ret
0x0000000000137f20 : sal byte ptr [rbp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x00000000001147e1 : sal byte ptr [rbp - 0x10], 0x5a ; pop r10 ; ret
0x000000000007c775 : sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x000000000009e0b5 : sal byte ptr [rbp - 0x10], cl ; ret
0x0000000000048046 : sal byte ptr [rbp - 0x11], 1 ; xor eax, eax ; ret
0x0000000000114b1e : sal byte ptr [rbp - 0x11], cl ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x0000000000088ba0 : sal byte ptr [rbp - 0x13], 0xf3 ; ret
0x00000000000a9950 : sal byte ptr [rbp - 0x13], cl ; lea rax, qword ptr [rcx - 1] ; ret
0x0000000000071b40 : sal byte ptr [rbp - 0x13], cl ; ret
0x000000000009e3aa : sal byte ptr [rbp - 0x15], cl ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x0000000000138756 : sal byte ptr [rbp - 0x19], 0x5b ; ret
0x000000000009eddb : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x00000000000d0b3f : sal byte ptr [rbp - 0x21], cl ; ret
0x000000000009e153 : sal byte ptr [rbp - 0x26], 0xf3 ; ret
0x0000000000033bc3 : sal byte ptr [rbp - 0x27], cl ; ret
0x0000000000122dcb : sal byte ptr [rbp - 0x2e], 1 ; mov qword ptr [rsi], rcx ; xor eax, eax ; ret
0x00000000000abbf2 : sal byte ptr [rbp - 0x35], 0xf3 ; ret
0x000000000008cddd : sal byte ptr [rbp - 0x42], 0x48 ; add esp, 8 ; ret
0x0000000000087d0e : sal byte ptr [rbp - 0x51], 1 ; xor eax, eax ; pop rbx ; ret
0x00000000000fae1e : sal byte ptr [rbp - 0x61], 0x89 ; out dx, eax ; call 0xf7037
0x0000000000114c76 : sal byte ptr [rbp - 0x69], 0x48 ; mov ebx, dword ptr [rbp - 8] ; leave ; ret
0x0000000000088c4a : sal byte ptr [rbp - 0xd], cl ; ret
0x00000000000ad09b : sal byte ptr [rbp - 0xe], cl ; ret
0x000000000012a852 : sal byte ptr [rbx + 0x31], 0xc0 ; pop rbx ; ret
0x000000000012c49c : sal byte ptr [rbx + 0x48], 0x8b ; sbb ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000fe992 : sal byte ptr [rbx + rax + 0x48], 0x89 ; adc bl, dh ; ret
0x00000000000fe6b3 : sal byte ptr [rbx + rbx + 0x48], 0x39 ; ret
0x000000000012d042 : sal byte ptr [rbx + rcx + 0x31], 0xc0 ; ret
0x0000000000113474 : sal byte ptr [rbx + rcx + 0x39], cl ; ret 0xf7e
0x00000000000ff195 : sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret 0x4808
0x0000000000137b12 : sal byte ptr [rbx + rcx + 0x48], 1 ; add esp, 8 ; ret
0x000000000006dc8f : sal byte ptr [rbx + rdi*2 + 0x48], 0x89 ; ret
0x000000000012d68e : sal byte ptr [rbx + rdx + 0xf], cl ; mov dh, 0x40 ; or dh, dh ; ret 0x8802
0x000000000006f55a : sal byte ptr [rbx + rdx*2 + 0x48], 0x89 ; ret
0x000000000009e3de : sal byte ptr [rcx + 0x44], 0x38 ; ret 0x4153
0x0000000000105519 : sal byte ptr [rcx + rdi*2 + 0x48], 0x39 ; ret
0x000000000008adcc : sal byte ptr [rcx + rdx + 0x48], cl ; bsf eax, edx ; ret
0x00000000001141e6 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x00000000000fa405 : sal byte ptr [rcx], cl ; div byte ptr [rcx] ; shr al, 0x71 ; ret
0x00000000000f6221 : sal byte ptr [rcx], cl ; test byte ptr [rax - 0x73], 0x7c ; and al, 0xc ; call rax
0x0000000000102d22 : sal byte ptr [rcx], cl ; test byte ptr [rax - 0x77], 0xc3 ; call rax
0x000000000012373e : sal byte ptr [rdi + rcx*2 + 0x41], 0x38 ; ret 0x5a74
0x000000000008af9b : sal byte ptr [rdx + 0x48], cl ; bsf eax, edx ; ret
0x0000000000122c93 : sal byte ptr [rdx + rbp*2 + 0x48], 0x39 ; ret 0x5576
0x00000000000a0863 : sal byte ptr [rdx + rdi - 0xa], cl ; ret 0x7501
0x0000000000089033 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x000000000009e77b : sal byte ptr [rdx + rdx*8 + 0xf], 0xbd ; ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000011410c : sal byte ptr [rdx - 0xf], 1 ; xor eax, eax ; ret
0x0000000000194e28 : sal byte ptr [rdx], 1 ; cld ; call rax
0x0000000000194dac : sal byte ptr [rip + 0x2850fffc], 0xfc ; call qword ptr [rax]
0x000000000013d5a7 : sal byte ptr [rsi + rax + 0x31], 0xc0 ; ret
0x000000000013263a : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x132658 ; call rax
0x00000000001387da : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x1387f8 ; call rax
0x0000000000138ef3 : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x138f11 ; call rax
0x000000000013481e : sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x134894 ; call rax
0x000000000013523e : sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x1352a4 ; call rax
0x00000000000f0496 : sal byte ptr [rsi + rbp + 0x48], 0x83 ; call 0xffffffffc2984caa
0x00000000001122d1 : sal byte ptr [rsi + rdx*8 + 0x49], 0x8b ; and al, 0x38 ; jmp 0x1122a7
0x000000000008aaf1 : sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x00000000001221a0 : sal byte ptr [rsp + rcx - 0xa], cl ; ret 0xc602
0x0000000000108522 : sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret
0x0000000000034dfa : sal dword ptr [rbp + 0xb], 0x48 ; add esp, 0x28 ; ret
0x0000000000034abf : sal dword ptr [rbp + 0xe], 0x48 ; add esp, 0x28 ; ret
0x000000000004872f : sal dword ptr [rbp + rsi*2 + 0x4c], -0x77 ; ret 0xf749
0x000000000013b6f4 : sal dword ptr [rbx + 9], 1 ; xor eax, eax ; ret
0x00000000000abbd2 : sal dword ptr [rbx + rdx + 0x48], -0x7d ; ret 0x8b04
0x00000000000884f4 : sal dword ptr [rbx], cl ; add byte ptr [rax], al ; je 0x88506 ; ret
0x000000000013b5db : sal dword ptr [rcx], -0x40 ; cmp rdx, rcx ; je 0x13b5f9 ; ret
0x000000000009e317 : sal dword ptr [rcx], -0x40 ; mov qword ptr [rdx], rcx ; ret
0x0000000000123635 : sal dword ptr [rcx], -0x40 ; rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x000000000007b938 : sal dword ptr [rcx], 1 ; ror byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000045cd4 : sal dword ptr [rdi], 1 ; add byte ptr [rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x77], cl ; ret 0xde8
0x000000000009e1a9 : sal dword ptr [rsp + rsi*8 + 0x39], 1 ; int1 ; je 0x9e1a8 ; ret
0x0000000000188859 : sal ebx, -1 ; test al, cl ; jmp rsp
0x000000000014d4a5 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000001024be : sal ecx, cl ; dec dword ptr [rax - 0x75] ; jge 0x1024cc ; call rbx
0x00000000001024cc : sal ecx, cl ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x00000000001024b0 : sal ecx, cl ; dec dword ptr [rcx - 0x75] ; jge 0x1024be ; call rbx
0x00000000001add89 : sal esp, 1 ; jmp rcx
0x00000000001972d5 : salc ; add byte ptr [rax], al ; test byte ptr [rdx], ch ; out dx, al ; jmp rsp
0x0000000000170176 : salc ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x00000000001325db : salc ; add rdi, 0x10 ; jmp rcx
0x00000000001507e6 : salc ; add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000173971 : salc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000080856 : salc ; call qword ptr [rax]
0x0000000000112a69 : salc ; call rax
0x00000000000a9bba : salc ; clc ; ret
0x0000000000110340 : salc ; cmovne eax, ecx ; ret
0x000000000010220b : salc ; int1 ; dec dword ptr [rax - 0x75] ; jge 0x102219 ; call rbx
0x00000000001021f0 : salc ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000001021fd : salc ; int1 ; dec dword ptr [rcx - 0x75] ; jge 0x10220b ; call rbx
0x000000000012374f : salc ; ja 0x12373c ; mov eax, 0xffffffff ; ret
0x00000000000038ed : salc ; jb 0x396f ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x00000000000481de : salc ; jne 0x481d5 ; xor eax, eax ; ret
0x0000000000072f60 : salc ; mov eax, 0xffffffff ; ja 0x72f79 ; ret
0x0000000000001bf0 : salc ; mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x00000000001122d3 : salc ; mov rax, qword ptr [r12 + 0x38] ; jmp 0x1122a5
0x00000000000abd09 : salc ; mov rax, rdi ; ret
0x00000000000e07d1 : salc ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rdx, rcx ; jmp rdx
0x00000000000c48a1 : salc ; movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x00000000000022e4 : salc ; ret
0x00000000000025e6 : salc ; ret 0x23cb
0x00000000001877f8 : sar ah, 0xf1 ; push rax ; cld ; int1 ; jmp qword ptr [rax]
0x000000000018785c : sar bh, 1 ; int1 ; push rax ; push rcx ; call qword ptr [rax]
0x00000000001877e0 : sar bl, 0xf1 ; push rax ; sti ; int1 ; jmp qword ptr [rax]
0x0000000000061b3c : sar bl, 0xff ; dec dword ptr [rax + 0x39] ; ret 0x940f
0x000000000005eb98 : sar bl, 0xff ; dec dword ptr [rax - 0x77] ; ret 0x348
0x00000000001206b0 : sar bl, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000194b21 : sar bl, 1 ; call rax
0x0000000000194b65 : sar bl, cl ; call qword ptr [rax - 0x1f00042d]
0x00000000001215e3 : sar byte ptr [rax + 0x5e], 0x89 ; ret
0x0000000000121211 : sar byte ptr [rax + 0x64], 0x89 ; ret
0x00000000001404d2 : sar byte ptr [rax + 0xb], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000002a84b : sar byte ptr [rax + 1], 0xf ; ret 0x4389
0x00000000000cd14f : sar byte ptr [rax + 1], cl ; ret
0x0000000000084de7 : sar byte ptr [rax + 6], 0xf3 ; ret
0x0000000000075a1c : sar byte ptr [rax + 9], 0xf3 ; ret
0x0000000000026ec1 : sar byte ptr [rax + rax*4], 0xf ; xchg eax, esp ; ret 0x8348
0x0000000000194af0 : sar byte ptr [rbp - 0x3def0005], 1 ; sti ; jmp qword ptr [rax - 0x3d]
0x0000000000033ed2 : sar byte ptr [rcx - 0x3fce0002], cl ; pop rbx ; ret
0x0000000000106b23 : sar byte ptr [rdi + rdi + 0x74], 1 ; ret
0x00000000000d683d : sar byte ptr [rdx], 0xe ; je 0xd67dc ; pop rbx ; ret
0x0000000000002b85 : sar byte ptr [rdx], cl ; adc al, 0xe7 ; ret
0x000000000010324c : sar byte ptr [rsi + 1], cl ; mov rdi, rbp ; call rbx
0x00000000000cc77c : sar byte ptr [rsi + 9], 1 ; ret
0x000000000018377f : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000195648 : sar byte ptr [rsp + rdi*8 - 1], 1 ; push rax ; jl 0x195652 ; call rax
0x00000000001877c4 : sar dl, 1 ; int1 ; push rax ; cli ; int1 ; call qword ptr [rax]
0x00000000000d8d45 : sar dword ptr [rax + 1], 0x4c ; mov edx, eax ; jmp 0xd8d62
0x000000000009f0b3 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x9f0be ; ret
0x000000000009f806 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x9f811 ; ret
0x000000000009ff53 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x9ff5e ; ret
0x00000000000fe1cb : sar dword ptr [rax], 0xf ; xchg eax, esp ; ret 0xd108
0x00000000001ac8d8 : sar dword ptr [rcx], -0x19 ; jmp qword ptr [rax]
0x00000000000e7366 : sar dword ptr [rcx], 1 ; ret
0x000000000001f969 : sar dword ptr [rcx], 1 ; ret 0xffb8
0x00000000000d2757 : sar dword ptr [rcx], cl ; ret 0xef7c
0x0000000000041915 : sar dword ptr [rdx + 1], -0x77 ; ret
0x00000000000fe16f : sar dword ptr [rsp + rbx*2], 0xf ; xchg eax, esp ; ret 0xd108
0x0000000000034ef3 : sar eax, 0x10 ; ret
0x0000000000034b59 : sar eax, 0x1f ; not eax ; and eax, edx ; ret
0x000000000013fe94 : sar eax, 0x1f ; ret
0x0000000000034eab : sar eax, 0x1f ; sub edx, ecx ; not eax ; and eax, edx ; ret
0x000000000003477d : sar eax, 0x3f ; not eax ; and eax, edx ; ret
0x0000000000003af5 : sar eax, 1 ; cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x0000000000072cac : sar eax, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x00000000000755a0 : sar eax, 2 ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000073439 : sar eax, 2 ; ret
0x00000000001187dd : sar eax, 6 ; ret
0x0000000000194b25 : sar ebx, 1 ; jmp qword ptr [rax]
0x0000000000194b69 : sar ebx, cl ; jmp rax
0x000000000019a5b1 : sar ecx, -1 ; xor al, 0x20 ; add al, byte ptr [rax] ; xchg eax, esp ; ret 0xfff9
0x00000000001834e3 : sar ecx, 1 ; jnp 0x1834a4 ; ret
0x00000000000f87fb : sar ecx, cl ; dec dword ptr [rax + 0x39] ; ret
0x000000000003a624 : sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x000000000003a637 : sar edx, 0x3f ; xor rax, rdx ; sub rax, rdx ; ret
0x000000000008e2b7 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000072cab : sar r8, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000003477c : sar rax, 0x3f ; not eax ; and eax, edx ; ret
0x0000000000073438 : sar rax, 2 ; ret
0x00000000001187dc : sar rax, 6 ; ret
0x000000000008e2b6 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000194e89 : sbb ah, bh ; call qword ptr [rax]
0x00000000000f6059 : sbb al, 0 ; add byte ptr [rax], al ; syscall ; neg eax ; ret
0x0000000000112a6e : sbb al, 0x20 ; je 0x112ad6 ; xor eax, eax ; pop rbx ; ret
0x0000000000112a6d : sbb al, 0x20 ; je 0x112ad7 ; xor eax, eax ; pop rbx ; ret
0x00000000001ae1ec : sbb al, 0x2f ; add dword ptr [rax], eax ; fcompi st(4) ; call qword ptr [rbx]
0x00000000000810e3 : sbb al, 0x34 ; add byte ptr [rcx + rcx*4 - 9], cl ; call qword ptr [rax]
0x00000000001af0ec : sbb al, 0x3e ; add dword ptr [rax], eax ; sbb byte ptr [rsi], 0xf5 ; jmp qword ptr [rcx]
0x000000000013653d : sbb al, 0x41 ; call qword ptr [rdx]
0x0000000000002f9c : sbb al, 0x44 ; nop ; ret 0x5bdb
0x000000000010eeb8 : sbb al, 0x45 ; cmp byte ptr [rax], cl ; je 0x10eee4 ; mov rdx, r8 ; jmp 0x10eed4
0x00000000001afcec : sbb al, 0x4a ; add dword ptr [rax], eax ; nop ; pop rdx ; cmc ; jmp qword ptr [rcx]
0x00000000001afeec : sbb al, 0x4c ; add dword ptr [rax], eax ; jne 0x1aff65 ; cmc ; call qword ptr [rcx]
0x00000000001b02ec : sbb al, 0x50 ; add dword ptr [rax], eax ; jo 0x1b02ef ; jmp qword ptr [rcx]
0x00000000001870a8 : sbb al, 0x5e ; out dx, al ; jmp rsp
0x0000000000187114 : sbb al, 0x5e ; out dx, al ; lcall ptr [rsi + rbx*2] ; out dx, al ; jmp rsp
0x00000000000ff493 : sbb al, 0x83 ; ret
0x000000000006994b : sbb al, 0x83 ; ret 0x8308
0x0000000000068a78 : sbb al, 0x89 ; ret
0x00000000001b4fec : sbb al, 0x9d ; add dword ptr [rax], eax ; push rax ; fdiv st(6) ; jmp qword ptr [rdi]
0x00000000000d4f23 : sbb al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000000454 : sbb al, 0xc ; ret 0x4412
0x00000000000de1b5 : sbb al, 0xe9 ; adc eax, 0x1fffffe ; ret 0x8b49
0x00000000001816b9 : sbb al, 0xeb ; call qword ptr [rbx]
0x0000000000196959 : sbb al, 0xeb ; jmp rsp
0x00000000001aa7ec : sbb al, 0xf5 ; add byte ptr [rax], al ; adc byte ptr [rax], ah ; jmp qword ptr [rcx]
0x00000000001aefe1 : sbb al, 0xf5 ; call qword ptr [rdx]
0x0000000000199441 : sbb al, 0xf7 ; jmp rsp
0x0000000000199bf1 : sbb al, 0xf8 ; jmp rsp
0x00000000001949f0 : sbb al, 0xfb ; inc dword ptr [rax - 0x26] ; sti ; jmp qword ptr [rax]
0x00000000001bafec : sbb al, 0xfd ; add dword ptr [rax], eax ; xor byte ptr [rbp - 8], dl ; call qword ptr [rax]
0x00000000001acfc5 : sbb al, 1 ; add byte ptr [rax + 0x67], bl ; stc ; call qword ptr [rax]
0x00000000001acf65 : sbb al, 1 ; add byte ptr [rax - 0x79], ch ; hlt ; call qword ptr [rax]
0x00000000001acf1d : sbb al, 1 ; add byte ptr [rax - 0x79], dh ; hlt ; call qword ptr [rsi]
0x00000000001acfa5 : sbb al, 1 ; add byte ptr [rax], bh ; xchg esp, esi ; call qword ptr [rax]
0x000000000019cd15 : sbb al, byte ptr [rax] ; add al, bh ; adc ebp, ecx ; call qword ptr [rcx]
0x000000000019cce5 : sbb al, byte ptr [rax] ; add al, ch ; adc ebp, ecx ; jmp qword ptr [rax]
0x00000000001a2245 : sbb al, byte ptr [rax] ; add al, cl ; adc al, 0xed ; jmp qword ptr [rax]
0x000000000019ccfd : sbb al, byte ptr [rax] ; add al, dh ; adc ebp, ecx ; call qword ptr [rcx]
0x000000000019cd2d : sbb al, byte ptr [rax] ; add byte ptr [rax], al ; adc al, 0xe9 ; call qword ptr [rcx]
0x0000000000123510 : sbb al, byte ptr [rbp - 0x78] ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4c02
0x000000000004b962 : sbb al, byte ptr [rbx - 0x4a743] ; call qword ptr [rax]
0x00000000001342e2 : sbb al, byte ptr [rcx + 0x748b0005] ; ret 0x4804
0x00000000000abcfc : sbb al, byte ptr [rcx - 0x75] ; add dword ptr [rcx + 0x39], eax ; ret
0x000000000005aa4a : sbb al, byte ptr [rcx - 0x7d] ; ret
0x0000000000197ced : sbb al, byte ptr [rcx] ; add byte ptr [rdx + rbx*2 - 0xf], al ; jmp rsp
0x00000000000e2adf : sbb al, ch ; ret
0x00000000000e9758 : sbb al, ch ; ret 0xf44e
0x0000000000194ecd : sbb bh, ah ; call rax
0x00000000000d4eda : sbb bh, byte ptr [rax + 2] ; ret
0x00000000001a9d68 : sbb bh, dh ; int1 ; call rsi
0x00000000001a6399 : sbb bh, dl ; call qword ptr [rax]
0x00000000001ac508 : sbb bh, dl ; call qword ptr [rbx]
0x00000000001ac548 : sbb bh, dl ; call qword ptr [rsi]
0x00000000001ac588 : sbb bh, dl ; jmp qword ptr [rcx]
0x0000000000182265 : sbb bl, byte ptr [rsi] ; ret
0x0000000000033e41 : sbb byte ptr [r15], r9b ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x0000000000076ace : sbb byte ptr [r8 + 0x29], cl ; ret 0x8948
0x0000000000142ddf : sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000013b651 : sbb byte ptr [r8 + 1], r15b ; ret
0x00000000001129d7 : sbb byte ptr [r8 + 1], r9b ; ret 0x8948
0x00000000000c9162 : sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000013b9f6 : sbb byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x00000000000640e3 : sbb byte ptr [r8], al ; add dh, dh ; ret
0x00000000000a9434 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a9456 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a9494 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x0000000000081df0 : sbb byte ptr [r9 + 0x39], r9b ; ret 0x850f
0x000000000007411a : sbb byte ptr [r9 - 0x77], r9b ; sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x0000000000076acf : sbb byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000007ed53 : sbb byte ptr [rax + 0x39], cl ; ret
0x00000000000d58d6 : sbb byte ptr [rax + 0x39], cl ; ret 0x870f
0x0000000000142de0 : sbb byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x000000000007d4c7 : sbb byte ptr [rax + 0x5bd88948], dl ; pop rbp ; pop r12 ; ret
0x0000000000117003 : sbb byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; jmp 0x76d3a95b
0x000000000013b652 : sbb byte ptr [rax + 1], bh ; ret
0x000000000013d05d : sbb byte ptr [rax + 1], cl ; ret
0x00000000001129d8 : sbb byte ptr [rax + 1], cl ; ret 0x8948
0x00000000000c8882 : sbb byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x0000000000024368 : sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x0000000000024d03 : sbb byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x00000000000dcb3a : sbb byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000024894 : sbb byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x000000000007b091 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000f3ae7 : sbb byte ptr [rax - 0x77], cl ; ret
0x00000000000ef78a : sbb byte ptr [rax - 0x77], cl ; ret 0x33eb
0x00000000000887a6 : sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x0000000000073e71 : sbb byte ptr [rax - 0x77], cl ; sub byte ptr [rax - 0x77], cl ; ret 0x9e9
0x00000000000b188a : sbb byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000078a39 : sbb byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8d48
0x00000000000c9163 : sbb byte ptr [rax - 0x7d], cl ; ret
0x00000000000f8816 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000093ede : sbb byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000000000083907 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000093edd : sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x00000000000ca439 : sbb byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x000000000007d82f : sbb byte ptr [rax - 9], cl ; fisttp dword ptr [rax + 0x21] ; ret
0x00000000001bbdc7 : sbb byte ptr [rax], al ; add al, ah ; or ch, byte ptr [rsi] ; ret 0xb
0x00000000001bbe1f : sbb byte ptr [rax], al ; add al, ah ; or dword ptr [rsi], ebp ; ret 0xa
0x000000000007b8df : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000013b9f7 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x00000000000640e4 : sbb byte ptr [rax], al ; add dh, dh ; ret
0x0000000000077326 : sbb byte ptr [rax], al ; setne al ; ret
0x000000000000245c : sbb byte ptr [rax], cl ; ret 0x5576
0x00000000000a9435 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a9457 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a9495 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000013e188 : sbb byte ptr [rbp + 0x39], cl ; ret
0x000000000007895c : sbb byte ptr [rbp + 0xf480034], 0x4f ; ret 0x8948
0x000000000012c00a : sbb byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x2c ; call qword ptr [rax]
0x0000000000137691 : sbb byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x3a ; call qword ptr [rax]
0x00000000000b58c0 : sbb byte ptr [rbp + rcx*4 + 5], cl ; cwde ; ret 0x30
0x000000000018689c : sbb byte ptr [rbp - 0x12], dl ; call rax
0x0000000000021859 : sbb byte ptr [rbp - 0x77], cl ; int1 ; call rbx
0x00000000000f65c2 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000076a44 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000009ea1d : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000076ae7 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000012c314 : sbb byte ptr [rbx + 0x5d], bl ; pop r13 ; pop r14 ; ret
0x000000000003b167 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000007c7b7 : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000083842 : sbb byte ptr [rbx - 0x3d], bl ; nop dword ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x00000000001b0988 : sbb byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x00000000001a8be8 : sbb byte ptr [rbx], ah ; int1 ; call qword ptr [rcx]
0x00000000001a8b68 : sbb byte ptr [rbx], ah ; int1 ; jmp qword ptr [rcx]
0x000000000009e12f : sbb byte ptr [rcx + 0x39], al ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebp ; ret 0x3941
0x0000000000081df1 : sbb byte ptr [rcx + 0x39], cl ; ret 0x850f
0x0000000000072b1b : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x000000000013c7fc : sbb byte ptr [rcx + 0x63], cl ; ret
0x00000000000812e6 : sbb byte ptr [rcx + rcx*4 + 0x44], cl ; and al, 0x10 ; call rdi
0x00000000000ce446 : sbb byte ptr [rcx + rcx*4 + 0x78], cl ; or byte ptr [rax - 0x77], cl ; ret
0x00000000000ac980 : sbb byte ptr [rcx + rcx*4 - 0x16], cl ; mov rdi, rbp ; call rbx
0x00000000000acc38 : sbb byte ptr [rcx + rcx*4 - 0x17], cl ; mov rdi, rbp ; call rbx
0x0000000000038372 : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call r15
0x0000000000075003 : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00000000000acee8 : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; mov r9, r15 ; call rbx
0x0000000000082443 : sbb byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; ret
0x0000000000113a53 : sbb byte ptr [rcx - 0x76b37fab], cl ; call rax
0x000000000009dece : sbb byte ptr [rcx - 0x76b703b9], cl ; clc ; ret
0x0000000000074413 : sbb byte ptr [rcx - 0x77], cl ; ret 0x8b49
0x000000000007411b : sbb byte ptr [rcx - 0x77], cl ; sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x00000000000b912c : sbb byte ptr [rcx - 0x7d], cl ; ret
0x00000000000abcf1 : sbb byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x00000000001b98a8 : sbb byte ptr [rcx], al ; clc ; call qword ptr [rdx]
0x00000000000ef784 : sbb byte ptr [rcx], al ; mov rax, qword ptr [rsp + 0x18] ; mov rdx, rax ; jmp 0xef7cc
0x00000000000fc311 : sbb byte ptr [rcx], al ; ret 0x8d48
0x00000000000d44a2 : sbb byte ptr [rcx], bh ; ret 0x850f
0x0000000000075057 : sbb byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000117058 : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 9], cl ; pop rbx ; pop rbp ; ret
0x000000000006b2c8 : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000013a3b8 : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x000000000013bb8e : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000033e42 : sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x000000000012db68 : sbb byte ptr [rdi], cl ; test bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000002057 : sbb byte ptr [rdx - 0x1a], dl ; ret
0x0000000000194ecc : sbb byte ptr [rdx], 0xfc ; call rax
0x0000000000189200 : sbb byte ptr [rdx], al ; cmc ; call rax
0x000000000018920c : sbb byte ptr [rdx], al ; cmc ; jmp rax
0x00000000001891fc : sbb byte ptr [rdx], al ; cmc ; lcall ptr [rax] ; add dh, ch ; call rax
0x0000000000189208 : sbb byte ptr [rdx], al ; cmc ; lcall ptr [rax] ; add dh, ch ; jmp rax
0x0000000000109112 : sbb byte ptr [rsi - 0x7d], ah ; add byte ptr [rcx], al ; ret
0x0000000000109111 : sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x00000000001b0698 : sbb byte ptr [rsi - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001af0f0 : sbb byte ptr [rsi], 0xf5 ; jmp qword ptr [rcx]
0x00000000000d449f : sbb cl, al ; clc ; sbb byte ptr [rcx], bh ; ret 0x850f
0x00000000001a4b58 : sbb cl, bl ; in eax, dx ; call qword ptr [rsi]
0x00000000000f5d0e : sbb cl, byte ptr [rax - 0x77] ; ret 0x8948
0x0000000000128c33 : sbb cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x000000000011003d : sbb cl, byte ptr [rcx - 0x75] ; and byte ptr [r8 + 0x39], r9b ; ret
0x00000000000a5e8f : sbb cl, byte ptr [rdi] ; test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x000000000014507d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001471ed : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144c6d : sbb cl, byte ptr [rdi] ; xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x0000000000144779 : sbb cl, byte ptr [rdi] ; xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000144f89 : sbb cl, byte ptr [rdi] ; xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b19a : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000014a9ba : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000014adaa : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a5ca : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147d4d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014752d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x00000000001449fd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000146d0d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x0000000000144d3d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x0000000000145059 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a769 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000145129 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014786d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014704d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014682d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x0000000000147a0d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x0000000000144edd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001446cd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x0000000000144acd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x000000000014ac5a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a47a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b58a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000144fad : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000014479d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x0000000000146b6d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014483f : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000144b9d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x0000000000146ca3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001479a3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001474c3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014ab5b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014b48b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144e0d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000147ce3 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146fe3 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000146b03 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147803 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000014acab : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014a4cb : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144863 : sbb cl, byte ptr [rdi] ; xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001ae678 : sbb cl, ch ; hlt ; jmp qword ptr [rcx]
0x0000000000081308 : sbb dh, byte ptr [rax + rax] ; xor edi, edi ; call qword ptr [rax]
0x000000000010f823 : sbb dh, dh ; ret 0x7508
0x00000000001484a8 : sbb dword ptr [r8], r8d ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000d4eb3 : sbb dword ptr [rax + 1], edi ; ret
0x000000000002e514 : sbb dword ptr [rax - 0x77], ecx ; ret
0x0000000000105526 : sbb dword ptr [rax - 0x77], ecx ; ret 0xf66
0x000000000013fbe4 : sbb dword ptr [rax - 0x7d], ecx ; ret
0x0000000000188aa4 : sbb dword ptr [rax - 0xc], edx ; jmp qword ptr [rbx]
0x000000000019cc6d : sbb dword ptr [rax], eax ; add al, ah ; adc ebp, ecx ; call qword ptr [rbx]
0x000000000019cc0d : sbb dword ptr [rax], eax ; add al, al ; adc ebp, ecx ; call qword ptr [rbx]
0x000000000019cc55 : sbb dword ptr [rax], eax ; add al, bl ; adc ebp, ecx ; call qword ptr [rdx]
0x000000000019cc85 : sbb dword ptr [rax], eax ; add al, ch ; adc ebp, ecx ; call qword ptr [rbx]
0x000000000019cc25 : sbb dword ptr [rax], eax ; add al, cl ; adc ebp, ecx ; call qword ptr [rbx]
0x000000000019cc9d : sbb dword ptr [rax], eax ; add al, dh ; adc ebp, ecx ; call qword ptr [rbx]
0x000000000019cc3d : sbb dword ptr [rax], eax ; add al, dl ; adc ebp, ecx ; call qword ptr [rbx]
0x0000000000148431 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001484a9 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000ccf55 : sbb dword ptr [rbp + rsi*2 - 0x7e], edx ; mov eax, 0x7d00 ; ret
0x00000000000aa2fe : sbb dword ptr [rbx + 0xc7402f8], eax ; xor eax, eax ; ret
0x0000000000184b1d : sbb dword ptr [rbx], edx ; mov ch, 0x99 ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000012370a : sbb dword ptr [rcx + 0xf], eax ; mov dh, 0x52 ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x00000000000a75ae : sbb dword ptr [rdi], ecx ; test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x0000000000001cb7 : sbb dword ptr [rdx + 0x55], esp ; je 0x1ce9 ; ret
0x0000000000188b6c : sbb dword ptr [rdx - 0xc], edx ; jmp qword ptr [rbx]
0x0000000000125eda : sbb dword ptr [rdx], ebp ; add byte ptr [rax + 0xf], cl ; ret 0xff81
0x000000000010b013 : sbb dword ptr [rsi - 0x76b7ffd5], esi ; ret 0x8d48
0x000000000016c43c : sbb eax, -1 ; ret
0x00000000001152a4 : sbb eax, 0 ; leave ; ret
0x0000000000047022 : sbb eax, 0x146ef4 ; mov rax, rbx ; pop rbx ; ret
0x0000000000173b8d : sbb eax, 0x1740025 ; ret
0x0000000000173b50 : sbb eax, 0x251beb ; jne 0x173b40 ; pop rbx ; ret
0x0000000000108ca1 : sbb eax, 0x2ba59a ; pop rbx ; ret
0x00000000000a5f19 : sbb eax, 0x4e0850f ; add byte ptr [rax], al ; ret
0x0000000000112a62 : sbb eax, 0x507a8b48 ; mov rsi, rdx ; call rax
0x00000000000a766d : sbb eax, 0x59c850f ; add byte ptr [rax], al ; ret
0x000000000013d3fb : sbb eax, 0x5de80005 ; ret
0x00000000001055aa : sbb eax, 0x8896c ; mov rax, rbx ; pop rbx ; ret
0x0000000000110325 : sbb eax, 0x89000001 ; ret 0x8944
0x000000000012742b : sbb eax, 0xf2cfb80 ; xchg eax, ebp ; ret 0xfb80
0x000000000012707a : sbb eax, dword ptr [rax - 0x6af0dc07] ; ret 0xf980
0x0000000000148251 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001482c9 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000197d2d : sbb eax, dword ptr [rcx] ; add byte ptr [rax - 0xf], dl ; call rsp
0x0000000000132870 : sbb eax, eax ; add rsp, 8 ; add eax, 2 ; ret
0x00000000000d6726 : sbb eax, eax ; and eax, 2 ; add eax, 8 ; ret
0x000000000004842a : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x00000000000d6770 : sbb eax, eax ; not eax ; and eax, 2 ; ret
0x0000000000122ce8 : sbb eax, eax ; ret
0x0000000000171b45 : sbb eax, eax ; sbb eax, -1 ; ret
0x00000000000d5263 : sbb ebp, ecx ; ret
0x00000000000bb077 : sbb ebx, 0x89000001 ; ret
0x00000000000fe6b5 : sbb ecx, dword ptr [rax + 0x39] ; ret
0x0000000000054d00 : sbb ecx, dword ptr [rax - 0x77] ; ret 0x6348
0x000000000012c4a1 : sbb ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000023acb : sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x00000000001b2241 : sbb ecx, edi ; jmp qword ptr [rsi]
0x00000000001a88c9 : sbb ecx, esi ; jmp qword ptr [rcx]
0x0000000000125164 : sbb edi, dword ptr [rcx] ; ret
0x0000000000194ed1 : sbb edi, esp ; jmp qword ptr [rax]
0x00000000000025df : sbb esi, dword ptr [rdx] ; sahf ; jl 0x257a ; loop 0x25c5 ; ret 0x23cb
0x00000000001971e9 : sbb esi, ebp ; call rsp
0x000000000011501e : sbb esi, ebx ; ret
0x00000000000dbb24 : sbb esi, esi ; ret
0x0000000000173b52 : sbb esp, dword ptr [rip + 0x5be17500] ; ret
0x000000000019cd14 : sbb r8b, byte ptr [rax] ; add al, bh ; adc ebp, ecx ; call qword ptr [rcx]
0x000000000016c43b : sbb rax, -1 ; ret
0x00000000001461d2 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000d4297 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000008d9ad : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000001995d5 : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; test byte ptr [rdx - 9], al ; jmp rsp
0x000000000014b1ee : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x00000000001959b9 : scasb al, byte ptr [rdi] ; cld ; call qword ptr [rdx + 0x22fffcad]
0x0000000000195935 : scasb al, byte ptr [rdi] ; cld ; call qword ptr [rsi]
0x0000000000195af5 : scasb al, byte ptr [rdi] ; cld ; call rax
0x0000000000195a75 : scasb al, byte ptr [rdi] ; cld ; jmp rsp
0x00000000000cd43e : scasb al, byte ptr [rdi] ; fdivr st(3) ; dec dword ptr [rax - 0x77] ; ret
0x000000000007dd06 : scasb al, byte ptr [rdi] ; jp 0x7dd43 ; add byte ptr [rax - 0x77], cl ; ret 0x21e9
0x000000000005f01e : scasb al, byte ptr [rdi] ; ret 1
0x0000000000002f9a : scasb al, byte ptr [rdi] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000014b2ed : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000008d44d : scasd eax, dword ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000008a86d : scasd eax, dword ptr [rdi] ; cmc ; or eax, dword ptr [rax] ; ret
0x0000000000186239 : scasd eax, dword ptr [rdi] ; in eax, dx ; call rax
0x0000000000186235 : scasd eax, dword ptr [rdi] ; in eax, dx ; lcall ptr [rax - 0x51] ; in eax, dx ; call rax
0x000000000018620d : scasd eax, dword ptr [rdi] ; in eax, dx ; push rsi ; jbe 0x186206 ; jmp rdi
0x0000000000116e53 : scasd eax, dword ptr [rdi] ; jmp 0x76d3a7a5
0x0000000000117006 : scasd eax, dword ptr [rdi] ; jmp 0x76d3a958
0x0000000000118acf : scasd eax, dword ptr [rdi] ; mov eax, edi ; bswap eax ; ret
0x0000000000103df5 : scasd eax, dword ptr [rdi] ; mov edx, 0x8b49fff1 ; jge 0x103e05 ; call rbx
0x000000000009cabe : scasd eax, dword ptr [rdi] ; or al, byte ptr [rax] ; add bh, dh ; ret 0
0x00000000001a63f9 : scasd eax, dword ptr [rdi] ; out dx, al ; call qword ptr [rax]
0x00000000000372f0 : scasd eax, dword ptr [rdi] ; ret
0x0000000000073fbc : scasd eax, dword ptr [rdi] ; ret 0x2948
0x00000000000a9fce : scasd eax, dword ptr [rdi] ; ret 0x74e9
0x0000000000086878 : scasd eax, dword ptr [rdi] ; ret 0x8948
0x00000000000a9fb9 : scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x0000000000037280 : scasd eax, dword ptr [rdi] ; ret 0xc748
0x0000000000033e44 : scasd eax, dword ptr [rdi] ; ret 0xd231
0x0000000000108e3d : scasd eax, dword ptr [rdi] ; ret 0xf48
0x0000000000109963 : scasd eax, dword ptr [rdi] ; ror dword ptr [rax - 0x3f], -0x16 ; adc byte ptr [rax + 1], cl ; ret 0x3948
0x0000000000002bcf : scasd eax, dword ptr [rdi] ; xbegin 0xfffffffff8c6efd1 ; ret
0x00000000000025ac : scasd eax, dword ptr [rdi] ; xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x0000000000087d10 : scasd eax, dword ptr [rdi] ; xor eax, eax ; pop rbx ; ret
0x0000000000109145 : seta al ; movzx eax, al ; neg eax ; ret
0x00000000000f8288 : seta al ; movzx edx, dl ; sub eax, edx ; ret
0x00000000001141ec : setae al ; ret
0x00000000000c6b88 : setbe al ; movzx eax, al ; pop rbx ; ret
0x0000000000109e20 : setbe al ; ret
0x000000000012a808 : sete al ; add rsp, 8 ; ret
0x000000000013a2c4 : sete al ; movzx eax, al ; ret
0x000000000002df35 : sete al ; ret
0x00000000000d50d9 : setg dl ; jmp 0xd5062
0x00000000000ab74a : setl al ; movzx eax, al ; neg eax ; ret
0x000000000013668c : setne al ; add rsp, 0x70 ; pop rbx ; ret
0x00000000000e9f1b : setne al ; movzx eax, al ; cmova eax, edx ; ret
0x000000000006b2f9 : setne al ; movzx eax, al ; neg eax ; pop rbx ; ret
0x00000000000e9efd : setne al ; movzx eax, al ; neg eax ; ret
0x0000000000101cb4 : setne al ; movzx eax, al ; pop rbx ; ret
0x0000000000035f16 : setne al ; movzx eax, al ; ret
0x0000000000072f9c : setne al ; neg eax ; ret
0x0000000000077328 : setne al ; ret
0x00000000000ae1aa : setne dl ; jmp 0xae1ba
0x00000000000b0acb : setne dl ; jmp 0xb0ada
0x00000000000b3282 : setne dl ; jmp 0xb329a
0x00000000000955d5 : sgdt ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000000ed922 : sgdt ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret 0x4118
0x0000000000026553 : sgdt ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x00000000001a5690 : shl ah, 1 ; cld ; call qword ptr [rdx]
0x0000000000194cf0 : shl bh, 0xfb ; call qword ptr [rax - 0x1f000416]
0x000000000018761c : shl bh, 1 ; int1 ; push rax ; out -0xf, eax ; call qword ptr [rax]
0x0000000000194a08 : shl bl, 1 ; sti ; call rax
0x00000000001b2180 : shl byte ptr [rcx], 0xf6 ; jmp qword ptr [rsi]
0x0000000000195af0 : shl byte ptr [rdi - 0x51bf0004], 1 ; cld ; call rax
0x00000000000a986f : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x0000000000034843 : shl byte ptr [rsi + 0x48], 1 ; movd mm0, eax ; ret
0x0000000000170133 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000089275 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x000000000016f1eb : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000016f202 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000008cb36 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000008cb47 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000009e5b8 : shl byte ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x000000000016f0e1 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001875dc : shl ch, 1 ; int1 ; push rax ; in eax, -0xf ; call qword ptr [rax]
0x0000000000194a04 : shl cl, 1 ; sti ; call rax
0x00000000001875fc : shl dh, 1 ; int1 ; push rax ; out 0xf1, al ; call qword ptr [rax]
0x000000000017da70 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000183668 : shl dword ptr [rdi - 5], 1 ; ret
0x000000000016f166 : shl dword ptr [rsi + 0xf], -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000a96cb : shl dword ptr [rsi + 0xf], -0x26 ; ret
0x000000000008cb32 : shl dword ptr [rsi + 0xf], -0x29 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000016f21d : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000016f206 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000016f1ef : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000016dcab : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f181 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008df0c : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x000000000009e7f8 : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xf188
0x000000000016f041 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000045a14 : shl eax, 0x1e ; or eax, edx ; ret
0x000000000012396a : shl eax, 3 ; cdqe ; shr rax, 4 ; ret
0x0000000000036073 : shl eax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000489ec : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000048977 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000048946 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000094061 : shl ecx, cl ; or r9, r10 ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x00000000000208f0 : shl edi, 4 ; add rdi, rbp ; call rax
0x000000000003a678 : shl edx, 0x20 ; mov rax, rcx ; or rax, rdx ; ret
0x00000000000e454b : shl edx, 2 ; xor esi, esi ; call 0x8e819
0x00000000000e351a : shl esi, 2 ; call 0x1f7f5
0x00000000001237fb : shl esi, 4 ; lea eax, dword ptr [rsi + 8] ; ret
0x000000000012399c : shl esi, 4 ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x00000000000489eb : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000048976 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000048945 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000036072 : shl rax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000208ef : shl rdi, 4 ; add rdi, rbp ; call rax
0x00000000000e3519 : shl rsi, 2 ; call 0x1f7f6
0x000000000012399b : shl rsi, 4 ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x0000000000187718 : shr ah, 0xf1 ; call rax
0x0000000000194cbc : shr ah, 0xfb ; call qword ptr [rax]
0x00000000001a0db9 : shr ah, 1 ; call qword ptr [rax]
0x00000000001a0e01 : shr ah, 1 ; call rsp
0x000000000018771c : shr ah, 1 ; int1 ; jmp rax
0x0000000000111e45 : shr al, 0x65 ; ret
0x00000000000fa409 : shr al, 0x71 ; ret
0x0000000000111df3 : shr al, 0xb7 ; ret
0x00000000000e976d : shr al, 0xd ; ret 0xfff6
0x0000000000114166 : shr ax, 0xe ; and eax, 1 ; ret
0x0000000000194d04 : shr bh, 1 ; sti ; jmp qword ptr [rax]
0x0000000000143641 : shr bl, 0xe5 ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000000c7a8f : shr bl, cl ; ret
0x00000000000479ee : shr bl, cl ; stosb byte ptr [rdi], al ; mov eax, 0xffffffff ; ret
0x000000000012bdcb : shr byte ptr [r9], 0 ; add rsp, 8 ; ret
0x0000000000194864 : shr byte ptr [rax - 0x568f0003], 1 ; std ; call qword ptr [rax]
0x00000000001958fc : shr byte ptr [rbp - 0x52af0004], 0xfc ; jmp rax
0x00000000000bcbbe : shr byte ptr [rbx + 7], 0 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000c17ff : shr byte ptr [rcx - 0x40], 1 ; nop ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x000000000012bdcc : shr byte ptr [rcx], 0 ; add rsp, 8 ; ret
0x000000000012bdb3 : shr byte ptr [rcx], 0 ; test eax, eax ; je 0x12bdc7 ; ret
0x000000000012bdb2 : shr byte ptr [rcx], 0 ; test eax, eax ; je 0x12bdc8 ; ret
0x000000000009eddf : shr byte ptr [rcx], 0xc8 ; ret
0x00000000000b951f : shr byte ptr [rcx], 1 ; ret
0x0000000000029ae8 : shr byte ptr [rcx], cl ; ret
0x000000000008e2bb : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000000f828d : shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x0000000000195b14 : shr byte ptr [rdx - 0x55af0004], 0xfc ; jmp rax
0x0000000000114efc : shr ch, 7 ; add cl, ch ; ret 0xfffe
0x0000000000187664 : shr cl, 0xf1 ; call rax
0x0000000000187668 : shr cl, 1 ; int1 ; jmp rax
0x0000000000044ab0 : shr cl, cl ; ret
0x00000000001876a0 : shr dl, 0xf1 ; call rax
0x00000000000c6650 : shr dword ptr [rcx], 1 ; ret
0x00000000000c881b : shr dword ptr [rdi], cl ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000118b78 : shr eax, 0x18 ; ret
0x0000000000034b81 : shr eax, 0x1f ; ret
0x00000000001700ac : shr eax, 0x20 ; cmp ecx, eax ; jne 0x1700bf ; xor eax, eax ; ret
0x00000000000347b0 : shr eax, 0x3f ; ret
0x0000000000106ca8 : shr eax, 0xc ; xor al, al ; or eax, edi ; ret
0x00000000000aa1ea : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x0000000000114167 : shr eax, 0xe ; and eax, 1 ; ret
0x00000000000d6825 : shr eax, 3 ; and eax, 1 ; pop rbx ; ret
0x0000000000077e32 : shr eax, 4 ; and eax, 1 ; ret
0x0000000000123970 : shr eax, 4 ; ret
0x0000000000077e42 : shr eax, 5 ; and eax, 1 ; ret
0x00000000000aa1c9 : shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x0000000000035f2f : shr eax, 6 ; or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x0000000000109bbb : shr eax, cl ; and eax, 1 ; ret
0x0000000000186728 : shr eax, cl ; in eax, dx ; call rbx
0x0000000000186798 : shr eax, cl ; in eax, dx ; jmp qword ptr [rax - 0x2c001220]
0x00000000001867d8 : shr eax, cl ; in eax, dx ; lcall ptr [rsi] ; fsubp st(5) ; call rbx
0x0000000000186830 : shr eax, cl ; in eax, dx ; ljmp ptr [rbx] ; xlatb ; in eax, dx ; call rbx
0x0000000000196fd9 : shr ebp, cl ; inc esp ; ret 0
0x000000000019eb39 : shr ecx, 1 ; call qword ptr [rax]
0x000000000019eb51 : shr ecx, 1 ; call qword ptr [rdx]
0x000000000019ebc9 : shr ecx, 1 ; call rax
0x0000000000142811 : shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000035f87 : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x0000000000048afc : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000048a81 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000048a50 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000000c9d86 : shr ecx, cl ; ret
0x0000000000072db3 : shr edx, 2 ; sub eax, edx ; ret
0x000000000013bf2a : shr edx, 3 ; add rax, rcx ; jmp rax
0x00000000000758f0 : shr edx, 4 ; and edx, 1 ; mov eax, edx ; ret
0x00000000000759e0 : shr edx, 5 ; and edx, 1 ; mov eax, edx ; ret
0x000000000002da79 : shr edx, cl ; cmp edx, dword ptr [rdi + 4] ; jb 0x2da90 ; ret
0x0000000000048afb : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000048a80 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000048a4f : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000000347af : shr rax, 0x3f ; ret
0x0000000000106ca7 : shr rax, 0xc ; xor al, al ; or eax, edi ; ret
0x000000000012396f : shr rax, 4 ; ret
0x0000000000072db2 : shr rdx, 2 ; sub eax, edx ; ret
0x000000000013bf29 : shr rdx, 3 ; add rax, rcx ; jmp rax
0x00000000001a0db8 : shr spl, 1 ; call qword ptr [rax]
0x000000000009e061 : shufps xmm0, xmmword ptr [rdi + 4], 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000009dfd1 : shufps xmm0, xmmword ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x0000000000098cde : sldt word ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000009b2fc : sldt word ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000106c93 : sldt word ptr [rax] ; or eax, edi ; ret
0x000000000017cc49 : sldt word ptr [rax] ; ret
0x00000000000e0531 : stc ; adc dword ptr [rsi + rsi + 0x48], esi ; mov edx, eax ; jmp 0xe04d5
0x000000000012db6b : stc ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000001aac4d : stc ; add byte ptr [rax], al ; loopne 0x1aac95 ; call rbx
0x0000000000123441 : stc ; add dword ptr [rbx - 0x77], edx ; ror dword ptr [rdi], cl ; xchg eax, esi ; ret 0xfb83
0x000000000012707c : stc ; and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xf980
0x00000000001a62da : stc ; call qword ptr [rax]
0x00000000000aceee : stc ; call rbx
0x000000000019a282 : stc ; call rsp
0x00000000001735ef : stc ; cld ; dec dword ptr [rax - 0x77] ; fistp word ptr [rbx - 0x17] ; lodsd eax, dword ptr [rsi] ; ret 0xffea
0x000000000010d591 : stc ; cmp cl, byte ptr [rdi] ; ret 0xc084
0x000000000012a412 : stc ; cmp cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8041
0x00000000000f87fc : stc ; dec dword ptr [rax + 0x39] ; ret
0x0000000000087946 : stc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000f2c72 : stc ; dec dword ptr [rax - 0x77] ; ret 0x3145
0x00000000000f42b3 : stc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xa
0x0000000000088c8f : stc ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rax + rbp + 0x48], 0x89 ; ret 0x8948
0x00000000000f8662 : stc ; dec dword ptr [rbp + rcx*4 + 0x24] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x000000000019a27a : stc ; dec dword ptr [rcx + rcx + 2] ; add byte ptr [rcx + rdx*2 - 7], dh ; call rsp
0x00000000000f8d42 : stc ; dec dword ptr [rcx - 0x73] ; push rsi ; add dword ptr [rax + 0x39], ecx ; ret 0xc72
0x000000000019a74a : stc ; dec esp ; sub al, byte ptr [rdx] ; add byte ptr [rsp + rsi*8], al ; stc ; jmp rsp
0x000000000019a522 : stc ; inc dword ptr [rbx + rbx - 0x5e1bfffe] ; stc ; call rsp
0x000000000000366f : stc ; insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x000000000014a2a2 : stc ; je 0x14a26e ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000014b932 : stc ; je 0x14b8fe ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000196b31 : stc ; jmp 0x196b35
0x00000000001b2242 : stc ; jmp qword ptr [rsi]
0x000000000003328d : stc ; jmp rcx
0x000000000019a1ca : stc ; jmp rsp
0x00000000001834e4 : stc ; jnp 0x1834a3 ; ret
0x000000000019a2ea : stc ; ljmp ptr [rbx + rcx + 0x59740002] ; stc ; jmp rsp
0x0000000000152fc8 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000127302 : stc ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009df4b : stc ; mov rax, rdi ; ret
0x000000000019a5b2 : stc ; push qword ptr [rax] ; add al, byte ptr [rax] ; xchg eax, esp ; ret 0xfff9
0x0000000000048b3d : stc ; push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x00000000000a9bb9 : stc ; salc ; clc ; ret
0x0000000000109bba : stc ; shr eax, cl ; and eax, 1 ; ret
0x000000000009f5b4 : stc ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000008a9c5 : stc ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf201
0x0000000000083532 : stc ; xor eax, dword ptr [rax] ; mov qword ptr [rax], rdi ; ret
0x000000000019782d : std ; add byte ptr [rax], al ; adc al, 0x49 ; out dx, eax ; call rsp
0x00000000000ccf0e : std ; add byte ptr [rax], al ; jne 0xccee1 ; ret
0x000000000019affd : std ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; hlt ; cli ; call rsp
0x00000000000e7392 : std ; add byte ptr [rcx], bh ; ret
0x00000000001bafed : std ; add dword ptr [rax], eax ; xor byte ptr [rbp - 8], dl ; call qword ptr [rax]
0x0000000000194842 : std ; call qword ptr [rax + 0x10fffda4]
0x000000000019484a : std ; call qword ptr [rax + 0x10fffda5]
0x0000000000194852 : std ; call qword ptr [rax + 0x20fffda6]
0x000000000019475e : std ; call qword ptr [rax]
0x000000000019479e : std ; call qword ptr [rcx + 0x21fffda8]
0x000000000019487e : std ; call qword ptr [rcx]
0x000000000019474a : std ; call rax
0x000000000019490e : std ; call rsi
0x000000000019b2c2 : std ; call rsp
0x00000000000f5b81 : std ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000012e049 : std ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x0000000000076987 : std ; dec dword ptr [rax - 0x7f] ; ret
0x000000000018751a : std ; dec dword ptr [rax] ; ret 0xfffd
0x000000000003504d : std ; fstp st(1) ; ret
0x00000000001aeb21 : std ; hlt ; jmp qword ptr [rcx]
0x00000000001aebb1 : std ; hlt ; jmp rdi
0x000000000019485e : std ; inc dword ptr [rax - 0x58] ; std ; call rax
0x0000000000194832 : std ; inc dword ptr [rax - 0x5f] ; std ; call qword ptr [rax]
0x000000000019479a : std ; inc dword ptr [rcx] ; test al, 0xfd ; call qword ptr [rcx + 0x21fffda8]
0x0000000000187811 : std ; int1 ; call qword ptr [rax]
0x000000000018780d : std ; int1 ; jmp rax
0x0000000000194856 : std ; jmp qword ptr [rax]
0x000000000019473e : std ; jmp qword ptr [rcx]
0x000000000019c46a : std ; jmp qword ptr [rdi]
0x000000000019b99a : std ; jmp qword ptr [rdx]
0x0000000000194746 : std ; jmp rax
0x0000000000194782 : std ; jmp rcx
0x00000000001947da : std ; jmp rsi
0x000000000019b16a : std ; jmp rsp
0x00000000001527eb : std ; mov word ptr [rdi - 2], cx ; ret
0x0000000000197a79 : std ; out dx, eax ; call rsp
0x000000000019485a : std ; push qword ptr [rax + 0x40fffda7] ; test al, 0xfd ; call rax
0x0000000000194866 : std ; push qword ptr [rax - 0x57] ; std ; call qword ptr [rax]
0x000000000019475a : std ; push qword ptr [rdx - 0x5d] ; std ; call qword ptr [rax]
0x0000000000194756 : std ; push qword ptr [rdx - 0x5e] ; std ; push qword ptr [rdx - 0x5d] ; std ; call qword ptr [rax]
0x00000000000ae1a9 : std ; setne dl ; jmp 0xae1bb
0x00000000000b0aca : std ; setne dl ; jmp 0xb0adb
0x00000000000b3281 : std ; setne dl ; jmp 0xb329b
0x0000000000051311 : std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000102d20 : std ; xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x000000000005a688 : sti ; add al, byte ptr [rcx - 0x77] ; ret 0x144
0x0000000000194cde : sti ; call qword ptr [rax - 0x1f000408]
0x0000000000194cf2 : sti ; call qword ptr [rax - 0x1f000416]
0x0000000000194b66 : sti ; call qword ptr [rax - 0x1f00042d]
0x0000000000194b12 : sti ; call qword ptr [rax - 0x1f000434]
0x00000000001946ce : sti ; call qword ptr [rax - 0x1f000499]
0x00000000001945e2 : sti ; call qword ptr [rax]
0x0000000000194aee : sti ; call rax
0x00000000001b56fa : sti ; call rcx
0x00000000001b5bca : sti ; call rsi
0x00000000000be03e : sti ; dec dword ptr [rax + 0x39] ; ret
0x00000000000cd440 : sti ; dec dword ptr [rax - 0x77] ; ret
0x000000000006dc8b : sti ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdi*2 + 0x48], 0x89 ; ret
0x000000000006f556 : sti ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdx*2 + 0x48], 0x89 ; ret
0x000000000007f27e : sti ; dec dword ptr [rax - 0x7d] ; ret 0x4007
0x000000000006d311 : sti ; dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x000000000018be2e : sti ; dec eax ; add ebx, edi ; call rax
0x00000000000fdba1 : sti ; imul ebp, dword ptr [rax + rax], 0x48 ; add esp, 8 ; ret
0x0000000000194636 : sti ; inc dword ptr [rax + 0x22] ; sti ; jmp rax
0x0000000000194656 : sti ; inc dword ptr [rax + 0x2f] ; sti ; jmp rax
0x0000000000194a8e : sti ; inc dword ptr [rax + 0x40fffbd7] ; fsincos ; jmp qword ptr [rax]
0x00000000001946ca : sti ; inc dword ptr [rax + 0x66] ; sti ; call qword ptr [rax - 0x1f000499]
0x00000000001945de : sti ; inc dword ptr [rax + 0xa] ; sti ; call qword ptr [rax]
0x0000000000194a7a : sti ; inc dword ptr [rax - 0x23] ; sti ; jmp qword ptr [rax]
0x00000000001949d6 : sti ; inc dword ptr [rax - 0x24] ; sti ; jmp qword ptr [rax]
0x00000000001949f2 : sti ; inc dword ptr [rax - 0x26] ; sti ; jmp qword ptr [rax]
0x0000000000194a92 : sti ; inc dword ptr [rax - 0x27] ; sti ; jmp qword ptr [rax]
0x0000000000194aae : sti ; inc dword ptr [rax - 0x29] ; sti ; inc dword ptr [rax] ; fsincos ; call rax
0x0000000000194b62 : sti ; inc dword ptr [rax - 0x2e] ; sti ; call qword ptr [rax - 0x1f00042d]
0x0000000000194cfe : sti ; inc dword ptr [rax - 0x2f000412] ; out dx, eax ; sti ; jmp qword ptr [rax]
0x0000000000194b1e : sti ; inc dword ptr [rax - 0x2f000430] ; sar ebx, 1 ; jmp qword ptr [rax]
0x0000000000194b32 : sti ; inc dword ptr [rax - 0x2f00043e] ; ret
0x00000000001946da : sti ; inc dword ptr [rax - 0x2f000495] ; insb byte ptr [rdi], dx ; sti ; jmp qword ptr [rax]
0x0000000000194b0e : sti ; inc dword ptr [rax - 0x35] ; sti ; call qword ptr [rax - 0x1f000434]
0x0000000000194cda : sti ; inc dword ptr [rax - 9] ; sti ; call qword ptr [rax - 0x1f000408]
0x00000000001945fe : sti ; inc dword ptr [rax] ; adc bh, bl ; push rax ; adc bh, bl ; jmp rax
0x0000000000194a16 : sti ; inc dword ptr [rax] ; fdiv st(3), st(0) ; jmp rax
0x00000000001949fa : sti ; inc dword ptr [rax] ; fdivp st(3) ; jmp rax
0x0000000000194ab2 : sti ; inc dword ptr [rax] ; fsincos ; call rax
0x00000000001946ea : sti ; inc dword ptr [rax] ; pop rsp ; sti ; jmp qword ptr [rax + 0x20fffb73]
0x0000000000194cba : sti ; inc eax ; in al, dx ; sti ; call qword ptr [rax]
0x0000000000194cee : sti ; inc eax ; out -5, eax ; call qword ptr [rax - 0x1f000416]
0x0000000000194d0e : sti ; inc eax ; sti ; call qword ptr [rax]
0x0000000000189d38 : sti ; inc ebx ; add dh, bh ; jmp rdi
0x0000000000197e91 : sti ; int1 ; call rsp
0x00000000001877e5 : sti ; int1 ; jmp qword ptr [rax]
0x00000000001877e1 : sti ; int1 ; push rax ; sti ; int1 ; jmp qword ptr [rax]
0x00000000001946ee : sti ; jmp qword ptr [rax + 0x20fffb73]
0x00000000001946f6 : sti ; jmp qword ptr [rax + 0x20fffb76]
0x00000000001946fe : sti ; jmp qword ptr [rax + 0x20fffb79]
0x0000000000194706 : sti ; jmp qword ptr [rax + 0x20fffb7c]
0x000000000019470e : sti ; jmp qword ptr [rax + 0x20fffb7f]
0x0000000000194716 : sti ; jmp qword ptr [rax + 0x20fffb82]
0x000000000019471e : sti ; jmp qword ptr [rax + 0x20fffb85]
0x0000000000194652 : sti ; jmp qword ptr [rax + 0x40fffb2d]
0x0000000000194af6 : sti ; jmp qword ptr [rax - 0x3d]
0x00000000001945f6 : sti ; jmp qword ptr [rax]
0x00000000001ba6aa : sti ; jmp qword ptr [rdx]
0x000000000018be36 : sti ; jmp rax
0x000000000019b042 : sti ; jmp rsp
0x00000000000d64cb : sti ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000019b03a : sti ; ljmp ptr [rdi + rdx] ; add dword ptr [rax], eax ; xchg eax, esp ; sti ; jmp rsp
0x0000000000152bc8 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000009df2d : sti ; mov rax, rdi ; ret
0x00000000000e8149 : sti ; or byte ptr [rcx - 0x9ce8c28], cl ; ret
0x000000000011c72a : sti ; or dword ptr [rdi], ecx ; ret
0x00000000001945da : sti ; push qword ptr [rax + 9] ; sti ; inc dword ptr [rax + 0xa] ; sti ; call qword ptr [rax]
0x0000000000194cb6 : sti ; push qword ptr [rax - 0x15] ; sti ; inc eax ; in al, dx ; sti ; call qword ptr [rax]
0x0000000000194b2e : sti ; push qword ptr [rax - 0x7f000441] ; ret 0xfffb
0x0000000000194d0a : sti ; push qword ptr [rax - 0xe] ; sti ; inc eax ; sti ; call qword ptr [rax]
0x00000000001949ba : sti ; push qword ptr [rax] ; fdivp st(3) ; call qword ptr [rax]
0x0000000000194a2e : sti ; push qword ptr [rax] ; fdivr st(3) ; push rax ; fsincos ; call rax
0x00000000001945f2 : sti ; push qword ptr [rax] ; psubq mm7, mm7 ; and byte ptr [rax], dl ; sti ; call qword ptr [rax]
0x000000000019469e : sti ; push qword ptr [rax] ; push rcx ; sti ; call qword ptr [rax]
0x000000000019467e : sti ; push qword ptr [rax] ; sti ; call qword ptr [rax]
0x0000000000194602 : sti ; push rax ; adc bh, bl ; jmp rax
0x0000000000194a32 : sti ; push rax ; fsincos ; call rax
0x00000000001946a6 : sti ; push rax ; push rsp ; sti ; jmp qword ptr [rax]
0x0000000000194686 : sti ; push rax ; sti ; call rax
0x000000000018366a : sti ; ret
0x0000000000059d01 : sti ; ret 0x12
0x0000000000042306 : sti ; ret 0xffbf
0x000000000012742d : sti ; sub al, 0xf ; xchg eax, ebp ; ret 0xfb80
0x000000000002c377 : sti ; test rax, rax ; je 0x2c385 ; call rax
0x0000000000174b01 : sti ; xor al, 0x25 ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000afb8f : sti ; xor byte ptr [rax - 0x77], cl ; call 0x4ccd90ae
0x00000000000b5037 : sti ; xor byte ptr [rax - 0x77], cl ; call 0x4ccde556
0x0000000000101f70 : sti ; xor esi, esi ; mov r12d, edx ; mov rbp, rax ; call rax
0x000000000006c3a7 : stosb byte ptr [rdi], al ; adc dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x0000000000002314 : stosb byte ptr [rdi], al ; add al, 0xaa ; ret
0x00000000000ef7bc : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000122e32 : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001959d9 : stosb byte ptr [rdi], al ; cld ; call qword ptr [rdx]
0x000000000019591d : stosb byte ptr [rdi], al ; cld ; call rax
0x0000000000195919 : stosb byte ptr [rdi], al ; cld ; inc dword ptr [rax - 0x56] ; cld ; call rax
0x0000000000195959 : stosb byte ptr [rdi], al ; cld ; jmp qword ptr [rsi]
0x0000000000195b19 : stosb byte ptr [rdi], al ; cld ; jmp rax
0x0000000000183b44 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x00000000000479f0 : stosb byte ptr [rdi], al ; mov eax, 0xffffffff ; ret
0x0000000000002317 : stosb byte ptr [rdi], al ; ret
0x000000000000366e : stosb byte ptr [rdi], al ; stc ; insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x0000000000194831 : stosb byte ptr [rdi], al ; std ; inc dword ptr [rax - 0x5f] ; std ; call qword ptr [rax]
0x000000000008489a : stosb byte ptr [rdi], al ; sysenter
0x0000000000195955 : stosd dword ptr [rdi], eax ; cld ; call qword ptr [rsi + 0x26fffcaa]
0x0000000000195a91 : stosd dword ptr [rdi], eax ; cld ; call rsp
0x0000000000195a8d : stosd dword ptr [rdi], eax ; cld ; inc dword ptr [rbx + rbp*4 - 4] ; call rsp
0x0000000000195911 : stosd dword ptr [rdi], eax ; cld ; jmp qword ptr [rax]
0x00000000001a07b9 : stosd dword ptr [rdi], eax ; in al, dx ; jmp qword ptr [rcx]
0x000000000012363a : stosd dword ptr [rdi], eax ; mov eax, r8d ; ret
0x0000000000035f8c : stosd dword ptr [rdi], eax ; ret
0x0000000000083531 : stosd dword ptr [rdi], eax ; stc ; xor eax, dword ptr [rax] ; mov qword ptr [rax], rdi ; ret
0x0000000000123639 : stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x0000000000035f8b : stosq qword ptr [rdi], rax ; ret
0x0000000000135715 : str word ptr [rax - 0x77] ; ret 0x8348
0x00000000001b9150 : sub ah, 0xf7 ; call rax
0x0000000000185031 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000194db1 : sub ah, bh ; call qword ptr [rax]
0x0000000000194d91 : sub ah, bh ; inc dword ptr [rax + 0x2a] ; cld ; jmp qword ptr [rax]
0x0000000000194dd1 : sub ah, bh ; jmp rax
0x0000000000021973 : sub al, 0 ; add byte ptr [rax], al ; call 0x2dc46
0x0000000000101703 : sub al, 0 ; add rsp, 0x18 ; ret
0x00000000000fd6df : sub al, 0 ; add rsp, 8 ; ret
0x00000000000fda6b : sub al, 0 ; lea rax, qword ptr [rip + 0x2c8584] ; ret
0x00000000000fd8ab : sub al, 0 ; lea rax, qword ptr [rip + 0x2c8744] ; ret
0x00000000000fea77 : sub al, 0 ; mov byte ptr [r8 - 1], 0 ; ret
0x0000000000101d25 : sub al, 0 ; mov dword ptr fs:[rax], 0x16 ; ret
0x00000000000fdc39 : sub al, 0 ; mov rdx, rax ; jmp 0xfdbd3
0x00000000001016af : sub al, 0 ; pop rbp ; pop r12 ; ret
0x00000000000ff016 : sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fecfc : sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000101679 : sub al, 0 ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fd8b2 : sub al, 0 ; ret
0x00000000001ac5fc : sub al, 0x13 ; add dword ptr [rax], eax ; nop ; xlatb ; jmp qword ptr [rcx]
0x000000000019b03c : sub al, 0x17 ; add dword ptr [rax], eax ; xchg eax, esp ; sti ; jmp rsp
0x000000000019e5fc : sub al, 0x33 ; add byte ptr [rax], al ; push rax ; ret 0xffe9
0x00000000000ab1d2 : sub al, 0x3b ; sub al, 0x75 ; pop rax ; ret
0x00000000000d610c : sub al, 0x44 ; mov dword ptr [rdi + 0x30], eax ; ret
0x00000000001b04fc : sub al, 0x52 ; add dword ptr [rax], eax ; xor byte ptr [rbx - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001a0dfc : sub al, 0x5b ; add byte ptr [rax], al ; nop ; shr ah, 1 ; call rsp
0x00000000000b9578 : sub al, 0x63 ; idiv bh ; nop dword ptr [rax] ; pop rbx ; ret
0x00000000001b24fc : sub al, 0x72 ; add dword ptr [rax], eax ; rcl byte ptr [rdi], 0xfc ; jmp qword ptr [rsi]
0x00000000000ab1d5 : sub al, 0x75 ; pop rax ; ret
0x0000000000137353 : sub al, 0x81 ; add eax, 0x358d4800 ; ret 0x581
0x00000000000d7009 : sub al, 0x83 ; ret 0x4801
0x00000000000bb2c9 : sub al, 0x85 ; ror byte ptr [rdi], 0x94 ; ret 0x3840
0x000000000016e833 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001a6dfc : sub al, 0xbb ; add byte ptr [rax], al ; jo 0x1a6e7c ; out dx, eax ; jmp qword ptr [rax]
0x0000000000188744 : sub al, 0xd7 ; call rbx
0x00000000001a8afc : sub al, 0xd8 ; add byte ptr [rax], al ; and byte ptr [rdx], ah ; int1 ; jmp rcx
0x000000000009d096 : sub al, 0xf ; mov dh, 0x45 ; ret
0x000000000009b152 : sub al, 0xf ; mov dh, 0x55 ; ret
0x000000000012742e : sub al, 0xf ; xchg eax, ebp ; ret 0xfb80
0x00000000001a8c51 : sub al, 0xf1 ; jmp qword ptr [rax]
0x0000000000199531 : sub al, 0xf7 ; jmp rsp
0x0000000000194d59 : sub al, 0xfc ; inc dword ptr [rax + 0x2e] ; cld ; jmp qword ptr [rax]
0x0000000000194d99 : sub al, 0xfc ; inc dword ptr [rax] ; cld ; jmp rax
0x0000000000194d79 : sub al, 0xfc ; jmp qword ptr [rax]
0x00000000001012af : sub al, 0xff ; xor byte ptr [rdi], cl ; lahf ; ret 0xe883
0x00000000000ad55e : sub al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000120714 : sub al, byte ptr [r8] ; ret
0x0000000000033e92 : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000019dd55 : sub al, byte ptr [rax] ; add byte ptr [rax], bl ; mov cl, ch ; jmp rsp
0x000000000011fdd3 : sub al, byte ptr [rax] ; add rsp, 8 ; ret
0x000000000011f5f6 : sub al, byte ptr [rax] ; call rax
0x0000000000120715 : sub al, byte ptr [rax] ; ret
0x000000000005c669 : sub al, byte ptr [rbx - 0x5f743] ; call qword ptr [rax]
0x00000000001add85 : sub al, byte ptr [rcx] ; add byte ptr [rax], bh ; sal esp, 1 ; jmp rcx
0x000000000019a74d : sub al, byte ptr [rdx] ; add byte ptr [rsp + rsi*8], al ; stc ; jmp rsp
0x000000000005a764 : sub bh, 0xff ; dec dword ptr [rcx + 0x39] ; ret
0x0000000000194e39 : sub bh, ah ; call rax
0x0000000000194d75 : sub bh, ah ; inc dword ptr [rax + 0x2c] ; cld ; jmp qword ptr [rax]
0x0000000000194d95 : sub bh, ah ; jmp qword ptr [rax]
0x0000000000194db5 : sub bh, ah ; push rax ; sub edi, esp ; call rax
0x0000000000071fac : sub bh, bh ; loopne 0x71f49 ; mov eax, 0xffffffff ; ret
0x00000000001ae1d8 : sub bh, bl ; hlt ; jmp qword ptr [rcx]
0x00000000001a7539 : sub bh, dl ; jmp qword ptr [rdi]
0x00000000000ab1c6 : sub byte ptr [r11], r15b ; sub byte ptr [rbp + 0x63], r14b ; ret
0x0000000000076ad5 : sub byte ptr [r8 + 0x63], r9b ; ror byte ptr [rax + 1], cl ; ret 0x8944
0x000000000007411e : sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x000000000013b9c1 : sub byte ptr [r8 + r15*4], r8b ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001425a7 : sub byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x0000000000143be3 : sub byte ptr [r8], al ; test eax, eax ; jne 0x143bf9 ; xor eax, eax ; ret
0x0000000000143c13 : sub byte ptr [r8], al ; test eax, eax ; jne 0x143c29 ; xor eax, eax ; ret
0x0000000000143c43 : sub byte ptr [r8], al ; test eax, eax ; jne 0x143c59 ; xor eax, eax ; ret
0x0000000000143c73 : sub byte ptr [r8], al ; test eax, eax ; jne 0x143c89 ; xor eax, eax ; ret
0x000000000013b6f1 : sub byte ptr [r9], r15b ; sal dword ptr [rbx + 9], 1 ; xor eax, eax ; ret
0x00000000000f5387 : sub byte ptr [rax + 0x63], cl ; ret 0xc283
0x0000000000076ad6 : sub byte ptr [rax + 0x63], cl ; ror byte ptr [rax + 1], cl ; ret 0x8944
0x000000000013512e : sub byte ptr [rax + 1], bh ; ret
0x000000000007411f : sub byte ptr [rax + 1], cl ; ret 0x8949
0x000000000013b9c2 : sub byte ptr [rax + rdi*4], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000084534 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x0000000000131d98 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x0000000000032a2f : sub byte ptr [rax - 0x77], cl ; ret
0x00000000000f95a1 : sub byte ptr [rax - 0x77], cl ; ret 0x830f
0x0000000000088c95 : sub byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000f8667 : sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x0000000000073e75 : sub byte ptr [rax - 0x77], cl ; ret 0x9e9
0x000000000006d1bc : sub byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000071338 : sub byte ptr [rax - 0x78], al ; cmp al, byte ptr [rax + 0xf] ; mov dh, 0xc7 ; ret
0x00000000000e2304 : sub byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x2fe9
0x00000000000ee6e0 : sub byte ptr [rax - 0x7d], cl ; ret
0x00000000000022e1 : sub byte ptr [rax], 0x10 ; salc ; ret
0x0000000000194d90 : sub byte ptr [rax], 0xfc ; inc dword ptr [rax + 0x2a] ; cld ; jmp qword ptr [rax]
0x0000000000142d50 : sub byte ptr [rax], 1 ; add byte ptr [rax], al ; jmp rax
0x0000000000137b25 : sub byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000140145 : sub byte ptr [rax], al ; call qword ptr [rax]
0x00000000001386f5 : sub byte ptr [rax], al ; cmp dword ptr fs:[rax], 0x18 ; je 0x138708 ; ret
0x00000000001406fe : sub byte ptr [rax], al ; ret
0x000000000013d5a4 : sub byte ptr [rax], al ; test eax, eax ; je 0x13d5b8 ; xor eax, eax ; ret
0x00000000001406d8 : sub byte ptr [rax], al ; test eax, eax ; jne 0x1406f1 ; xor eax, eax ; pop rbx ; ret
0x0000000000143be4 : sub byte ptr [rax], al ; test eax, eax ; jne 0x143bf8 ; xor eax, eax ; ret
0x0000000000143c14 : sub byte ptr [rax], al ; test eax, eax ; jne 0x143c28 ; xor eax, eax ; ret
0x0000000000143c44 : sub byte ptr [rax], al ; test eax, eax ; jne 0x143c58 ; xor eax, eax ; ret
0x0000000000143c74 : sub byte ptr [rax], al ; test eax, eax ; jne 0x143c88 ; xor eax, eax ; ret
0x0000000000143ca4 : sub byte ptr [rax], al ; test eax, eax ; jne 0x143cb8 ; xor eax, eax ; ret
0x0000000000143ca3 : sub byte ptr [rax], al ; test eax, eax ; jne 0x143cb9 ; xor eax, eax ; ret
0x0000000000143cd4 : sub byte ptr [rax], al ; test eax, eax ; jne 0x143ce8 ; xor eax, eax ; ret
0x0000000000143cd3 : sub byte ptr [rax], al ; test eax, eax ; jne 0x143ce9 ; xor eax, eax ; ret
0x000000000014377b : sub byte ptr [rax], ch ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000022e2 : sub byte ptr [rax], dl ; salc ; ret
0x00000000000ab1ca : sub byte ptr [rbp + 0x63], dh ; ret
0x00000000000ab1c9 : sub byte ptr [rbp + 0x63], r14b ; ret
0x00000000000206bf : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000044c87 : sub byte ptr [rbx + 0x5d], bl ; ret
0x0000000000142d23 : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x0000000000142d22 : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x0000000000189290 : sub byte ptr [rbx], al ; cmc ; call qword ptr [rcx]
0x00000000000ab1c7 : sub byte ptr [rbx], bh ; sub byte ptr [rbp + 0x63], r14b ; ret
0x0000000000081229 : sub byte ptr [rcx + rcx*4 + 0x54], cl ; and al, 0x20 ; call rax
0x000000000013ba47 : sub byte ptr [rcx + rcx*4 + 0x63], cl ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000080eaa : sub byte ptr [rcx + rcx*4 - 1], cl ; mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x00000000000334f0 : sub byte ptr [rcx - 0x17c7dbbc], cl ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x000000000002a27a : sub byte ptr [rcx - 0x77], al ; ret 0x8b4c
0x00000000000e3409 : sub byte ptr [rcx - 0x7d], al ; cld ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xf44
0x0000000000142d51 : sub byte ptr [rcx], al ; add byte ptr [rax], al ; jmp rax
0x000000000013b6f2 : sub byte ptr [rcx], bh ; sal dword ptr [rbx + 9], 1 ; xor eax, eax ; ret
0x0000000000084660 : sub byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000012dffc : sub byte ptr [rdi - 0x17], dh ; mov qword ptr [rdx + 0x20], rsi ; ret
0x00000000000ae352 : sub byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf883
0x000000000004c62f : sub byte ptr [rdx], al ; add byte ptr [rax + 0x39], cl ; ret
0x00000000001a7538 : sub byte ptr [rdx], ch ; cli ; jmp qword ptr [rdi]
0x00000000001abada : sub byte ptr [rsi + 0x300e4105], al ; add dword ptr [rsi], 2 ; ret
0x00000000001a863a : sub byte ptr [rsi + 0x300e4405], al ; add dword ptr [rsi], 0x77 ; ret
0x0000000000002c0c : sub byte ptr [rsi], cl ; and byte ptr [rsi - 0x32], dh ; clc ; ret
0x00000000001405a9 : sub byte ptr ds:[rax], al ; add rsp, 8 ; ret
0x00000000001af491 : sub ch, dh ; jmp qword ptr [rbx]
0x00000000001972d9 : sub ch, dh ; jmp rsp
0x0000000000034b22 : sub cl, al ; add rsp, 0x28 ; ret
0x0000000000034abe : sub cl, al ; jne 0x34ad8 ; add rsp, 0x28 ; ret
0x0000000000034df9 : sub cl, al ; jne 0x34e10 ; add rsp, 0x28 ; ret
0x0000000000034921 : sub cl, al ; ret
0x00000000000d0d2d : sub cl, byte ptr [rax - 0x7d] ; ret
0x0000000000098b35 : sub cl, byte ptr [rdi] ; mov dh, 0x55 ; ret
0x0000000000066278 : sub cl, byte ptr [rdi] ; test byte ptr [rdx], cl ; or al, 0 ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000007a7d5 : sub cl, ch ; ret 0xfffe
0x0000000000194d00 : sub dh, 0xfb ; call rax
0x000000000010de8c : sub dh, al ; add byte ptr [rax], ah ; jmp 0x10de5a
0x000000000004bc90 : sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000010436d : sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000abfb4 : sub dh, bh ; dec dword ptr [rax - 0x73] ; cld ; pop rbx ; ret
0x0000000000052c15 : sub dh, byte ptr [rdi] ; add byte ptr [rbp + 0xa], dh ; jmp 0x52c47
0x0000000000194d94 : sub dil, spl ; jmp qword ptr [rax]
0x000000000018a8d1 : sub dl, bh ; call rax
0x000000000018a8e1 : sub dl, bh ; jmp rax
0x00000000001a6f68 : sub dl, bl ; cld ; call qword ptr [rax]
0x00000000000642d4 : sub dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; in al, dx ; add dword ptr [rax + 1], ecx ; ret
0x000000000012bdcd : sub dword ptr [rax], eax ; add rsp, 8 ; ret
0x00000000000f5d03 : sub dword ptr [rax], eax ; cli ; dec dword ptr [rax + 0x39] ; ret
0x0000000000136ae2 : sub dword ptr [rax], eax ; jne 0x136af8 ; jmp 0x136b12
0x0000000000127f85 : sub dword ptr [rax], eax ; mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x127f99 ; ret
0x0000000000137a4c : sub dword ptr [rax], eax ; mov qword ptr fs:[rax], rdx ; ret
0x000000000012d5c5 : sub dword ptr [rax], eax ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x0000000000128205 : sub dword ptr [rax], eax ; mov rax, qword ptr fs:[rax] ; ret
0x000000000012b0d6 : sub dword ptr [rax], eax ; pop rbx ; ret
0x0000000000127b4e : sub dword ptr [rax], eax ; test eax, eax ; je 0x127b5e ; ret
0x000000000012bdb4 : sub dword ptr [rax], eax ; test eax, eax ; je 0x12bdc6 ; ret
0x0000000000168323 : sub dword ptr [rbx], eax ; add byte ptr [rax], al ; ret
0x000000000010ae93 : sub dword ptr [rcx - 0x76b7ffd5], ebx ; ret 0x8d48
0x00000000001adc15 : sub dword ptr [rcx], eax ; add byte ptr [rax], bh ; ret
0x0000000000142e9e : sub dword ptr [rcx], esi ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x00000000001adc14 : sub dword ptr [rcx], r8d ; add byte ptr [rax], bh ; ret
0x0000000000150e17 : sub dword ptr [rdi + 0x10], ebx ; jb 0x150e2d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000150f67 : sub dword ptr [rdi + 0x10], ebx ; jb 0x150f7d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001510b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1510cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151207 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15121d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151357 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15136d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001514a7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1514bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001515f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15160d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151747 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15175d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151897 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1518ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001519e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1519fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151b37 : sub dword ptr [rdi + 0x10], ebx ; jb 0x151b4d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151c87 : sub dword ptr [rdi + 0x10], ebx ; jb 0x151c9d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151dd7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x151ded ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151f27 : sub dword ptr [rdi + 0x10], ebx ; jb 0x151f3d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000152077 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15208d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001537e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1537fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153937 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15394d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153a87 : sub dword ptr [rdi + 0x10], ebx ; jb 0x153a9d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153bd7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x153bed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153d27 : sub dword ptr [rdi + 0x10], ebx ; jb 0x153d3d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153e77 : sub dword ptr [rdi + 0x10], ebx ; jb 0x153e8d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153fc7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x153fdd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154117 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15412d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154267 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15427d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001543b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1543cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154507 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15451d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154657 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15466d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001547a7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1547bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001548f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15490d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154a47 : sub dword ptr [rdi + 0x10], ebx ; jb 0x154a5d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001561b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1561cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156307 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15631d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156457 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15646d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001565a7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1565bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001566f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15670d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156847 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15685d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156997 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1569ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156ae7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x156afd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156c37 : sub dword ptr [rdi + 0x10], ebx ; jb 0x156c4d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156d87 : sub dword ptr [rdi + 0x10], ebx ; jb 0x156d9d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156ed7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x156eed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157027 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15703d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157177 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15718d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001572c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1572dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157417 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15742d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000000ef9b5 : sub dword ptr [rdi + 0x5a], edi ; call 0xcbc98
0x0000000000150d73 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000150d6f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000000664b0 : sub dword ptr [rdi], ecx ; test ah, al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000f1534 : sub dword ptr [rdi], ecx ; test ah, dh ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x3101
0x0000000000150e1d : sub dword ptr [rdi], esp ; jmp r9
0x000000000011b603 : sub dword ptr [rdx - 0x76b7ffd6], edx ; ret 0x8d48
0x000000000004c4a5 : sub dword ptr [rdx], eax ; add byte ptr [rax + 0x39], cl ; ret
0x000000000016fe89 : sub dword ptr [rdx], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f016 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x00000000000cd04b : sub dword ptr [rsi + 0x2f], ebx ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000137b46 : sub eax, -0x80 ; add rsp, 8 ; ret
0x0000000000084639 : sub eax, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013b7ca : sub eax, 0x10c48348 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e7035 : sub eax, 0x28b4800 ; mov qword ptr [rdx], rdi ; ret
0x0000000000194e1d : sub eax, 0x2f00fffc ; cld ; call rax
0x0000000000194655 : sub eax, 0x2f40fffb ; sti ; jmp rax
0x0000000000194dfd : sub eax, 0x2f40fffc ; cld ; call qword ptr [rax]
0x00000000000e79d5 : sub eax, 0x36740000 ; xor eax, eax ; ret
0x000000000012a832 : sub eax, 0x441f0f ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000133677 : sub eax, 0x48ffeec2 ; mov edi, ebx ; call 0x1f8b1
0x000000000012c38f : sub eax, 0x4c0000de ; lea ecx, dword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00000000000e9bd5 : sub eax, 0x5a0a8900 ; pop rcx ; pop rbx ; ret
0x0000000000034b99 : sub eax, 0x7f800000 ; shr eax, 0x1f ; ret
0x00000000000567f1 : sub eax, 0x83000000 ; ret
0x00000000000581af : sub eax, 0x830012d6 ; ret
0x0000000000097f8d : sub eax, 0x854dffff ; dec dword ptr [rax - 0x77] ; ret
0x00000000001bbdbb : sub eax, 0x88d0000 ; rol byte ptr [rcx], cl ; ret 0xb
0x0000000000075b1f : sub eax, 0x89000056 ; ret 0x98eb
0x0000000000132ef4 : sub eax, 0x8948f631 ; out -0x77, eax ; ret
0x000000000019a7ad : sub eax, 0xbc40002 ; cli ; jmp rsp
0x00000000000e9bb5 : sub eax, 0xd8b4800 ; push rdx ; ret
0x0000000000136cbe : sub eax, 1 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000cd614 : sub eax, 1 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000096aea : sub eax, 1 ; jne 0x96ae7 ; pop rbx ; pop rbp ; ret
0x000000000002a6e4 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000004842f : sub eax, 1 ; ret
0x00000000001143a3 : sub eax, dword ptr [r8] ; test eax, eax ; jne 0x1143b9 ; xor eax, eax ; ret
0x00000000001143d3 : sub eax, dword ptr [r8] ; test eax, eax ; jne 0x1143e9 ; xor eax, eax ; ret
0x0000000000114403 : sub eax, dword ptr [r8] ; test eax, eax ; jne 0x114419 ; xor eax, eax ; ret
0x0000000000114433 : sub eax, dword ptr [r8] ; test eax, eax ; jne 0x114449 ; xor eax, eax ; ret
0x0000000000114463 : sub eax, dword ptr [r8] ; test eax, eax ; jne 0x114479 ; xor eax, eax ; ret
0x00000000001145b3 : sub eax, dword ptr [r8] ; test eax, eax ; jne 0x1145c9 ; xor eax, eax ; ret
0x0000000000114613 : sub eax, dword ptr [r8] ; test eax, eax ; jne 0x114629 ; xor eax, eax ; ret
0x0000000000114643 : sub eax, dword ptr [r8] ; test eax, eax ; jne 0x114659 ; xor eax, eax ; ret
0x0000000000114673 : sub eax, dword ptr [r8] ; test eax, eax ; jne 0x114689 ; xor eax, eax ; ret
0x0000000000108d73 : sub eax, dword ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000108d66 : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000114942 : sub eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000108e58 : sub eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x0000000000114adf : sub eax, dword ptr [rax] ; cmp rdx, rax ; jne 0x114ac8 ; ret
0x0000000000108cf2 : sub eax, dword ptr [rax] ; je 0x108cfd ; pop rbp ; ret
0x0000000000109a85 : sub eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0x38] ; ret
0x000000000010935d : sub eax, dword ptr [rax] ; mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x000000000011522c : sub eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000108ca4 : sub eax, dword ptr [rax] ; pop rbx ; ret
0x0000000000114224 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114238 ; xor eax, eax ; ret
0x0000000000114254 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114268 ; xor eax, eax ; ret
0x0000000000114284 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114298 ; xor eax, eax ; ret
0x00000000001142b4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1142c8 ; xor eax, eax ; ret
0x00000000001142e4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1142f8 ; xor eax, eax ; ret
0x0000000000114314 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114328 ; xor eax, eax ; ret
0x0000000000114344 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114358 ; xor eax, eax ; ret
0x0000000000114374 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114388 ; xor eax, eax ; ret
0x00000000001143a4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1143b8 ; xor eax, eax ; ret
0x00000000001143d4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1143e8 ; xor eax, eax ; ret
0x0000000000114404 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114418 ; xor eax, eax ; ret
0x0000000000114434 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114448 ; xor eax, eax ; ret
0x0000000000114464 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114478 ; xor eax, eax ; ret
0x0000000000114494 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1144a8 ; xor eax, eax ; ret
0x0000000000114493 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1144a9 ; xor eax, eax ; ret
0x00000000001144c4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1144d8 ; xor eax, eax ; ret
0x00000000001144c3 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1144d9 ; xor eax, eax ; ret
0x00000000001144f4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114508 ; xor eax, eax ; ret
0x00000000001144f3 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114509 ; xor eax, eax ; ret
0x0000000000114524 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114538 ; xor eax, eax ; ret
0x0000000000114523 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114539 ; xor eax, eax ; ret
0x0000000000114554 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114568 ; xor eax, eax ; ret
0x0000000000114553 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114569 ; xor eax, eax ; ret
0x0000000000114584 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114598 ; xor eax, eax ; ret
0x0000000000114583 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114599 ; xor eax, eax ; ret
0x00000000001145b4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1145c8 ; xor eax, eax ; ret
0x0000000000114614 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114628 ; xor eax, eax ; ret
0x0000000000114644 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114658 ; xor eax, eax ; ret
0x0000000000114674 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114688 ; xor eax, eax ; ret
0x00000000001146a4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1146b8 ; xor eax, eax ; ret
0x00000000001146a3 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1146b9 ; xor eax, eax ; ret
0x00000000001146d4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1146e8 ; xor eax, eax ; ret
0x00000000001146d3 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1146e9 ; xor eax, eax ; ret
0x0000000000114704 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114718 ; xor eax, eax ; ret
0x0000000000114703 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114719 ; xor eax, eax ; ret
0x0000000000114734 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114748 ; xor eax, eax ; ret
0x0000000000114733 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114749 ; xor eax, eax ; ret
0x0000000000114764 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114778 ; xor eax, eax ; ret
0x0000000000114763 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114779 ; xor eax, eax ; ret
0x0000000000114794 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1147a8 ; xor eax, eax ; ret
0x0000000000114cb5 : sub eax, dword ptr [rax] ; test rax, rax ; je 0x114cc7 ; ret
0x000000000002e69f : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000004bc40 : sub eax, dword ptr [rcx + 0xf] ; mov dh, 0x46 ; or al, 0x83 ; ret
0x00000000000aa391 : sub eax, dword ptr [rcx + r8*4] ; je 0xaa377 ; ret
0x00000000000aa392 : sub eax, dword ptr [rcx + rax*4] ; je 0xaa376 ; ret
0x000000000007cfee : sub eax, dword ptr [rdi + 0x18] ; ret
0x0000000000077415 : sub eax, dword ptr [rdi + 0x20] ; ret
0x0000000000077305 : sub eax, dword ptr [rdi + 0x38] ; ret
0x0000000000118c7c : sub eax, dword ptr [rdi + rcx - 0x42] ; ret 0x8d45
0x0000000000073435 : sub eax, dword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x0000000000077406 : sub eax, dword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x00000000000772f6 : sub eax, dword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x00000000000aa34a : sub eax, dword ptr [rdx + rcx*4] ; je 0xaa336 ; ret
0x000000000019a76d : sub eax, dword ptr [rdx] ; add byte ptr [rcx + rax - 6], al ; jmp rsp
0x000000000007c793 : sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000114941 : sub eax, dword ptr ds:[rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000011033c : sub eax, eax ; cmp sil, dl ; cmovne eax, ecx ; ret
0x0000000000149e7e : sub eax, eax ; ret
0x000000000007b60d : sub eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ac72b : sub eax, ebp ; pop rbp ; pop r12 ; ret
0x000000000007bf49 : sub eax, ecx ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000004a0fd : sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000008a6fc : sub eax, ecx ; ret
0x000000000008ae89 : sub eax, edi ; ret
0x00000000001102cf : sub eax, edx ; cmp dil, cl ; cmovne eax, esi ; ret
0x000000000003a629 : sub eax, edx ; ret
0x0000000000034b7f : sub eax, edx ; shr eax, 0x1f ; ret
0x00000000000347ad : sub eax, edx ; shr rax, 0x3f ; ret
0x0000000000172317 : sub eax, edx ; vzeroupper ; ret
0x000000000007b72a : sub eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000078ee8 : sub eax, esp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000011033b : sub eax, r8d ; cmp sil, dl ; cmovne eax, ecx ; ret
0x00000000001838de : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x00000000001866d4 : sub ebp, ebx ; in eax, dx ; jmp qword ptr [rbx]
0x0000000000188740 : sub ebp, ebx ; ljmp ptr [rdi + rdx*8] ; call rbx
0x000000000006de87 : sub ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000182375 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000002f9b : sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000000b93ec : sub ebx, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000035f84 : sub ecx, -0x80 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000000490e5 : sub ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000a5bd1 : sub ecx, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000f9fc1 : sub ecx, dword ptr [rip + 0x3948fff9] ; ret
0x00000000000aa55c : sub edi, 0x10 ; add rax, rdi ; ret
0x000000000009e0d6 : sub edi, dword ptr [rcx] ; ret 0x2774
0x00000000001977b1 : sub edi, ebp ; jmp rsp
0x00000000001a7551 : sub edi, edx ; call qword ptr [rdi]
0x000000000019a909 : sub edi, edx ; call rsp
0x0000000000194db9 : sub edi, esp ; call rax
0x0000000000194e19 : sub edi, esp ; jmp qword ptr [rax]
0x000000000007c7c0 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000007c7b5 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000008e134 : sub edx, eax ; jbe 0x8e177 ; add rax, rdi ; ret
0x000000000008e144 : sub edx, eax ; jbe 0x8e179 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000008e154 : sub edx, eax ; jbe 0x8e179 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000008e164 : sub edx, eax ; jbe 0x8e179 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000d265b : sub edx, eax ; jmp 0xd2674
0x0000000000034eef : sub edx, eax ; mov eax, edx ; sar eax, 0x10 ; ret
0x0000000000034eae : sub edx, ecx ; not eax ; and eax, edx ; ret
0x0000000000186834 : sub edx, edi ; in eax, dx ; call rbx
0x00000000001aaa69 : sub edx, esi ; jmp rcx
0x0000000000073f52 : sub edx, esi ; mov rdi, r15 ; call rax
0x00000000000786a4 : sub edx, esi ; mov rdi, rbx ; call rax
0x0000000000096952 : sub esi, 1 ; jne 0x96950 ; xor eax, eax ; pop rbx ; ret
0x00000000000969fa : sub esi, 1 ; jne 0x969f7 ; xor eax, eax ; ret
0x000000000012341e : sub esi, 1 ; mov byte ptr [rdi + 1], sil ; ret
0x000000000014246a : sub esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000fc574 : sub esi, ebx ; ret
0x00000000000f65c0 : sub esp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013bb3e : sub esp, -0x80 ; pop rbx ; ret
0x000000000013eada : sub esp, 0x38 ; call 0x8acf5
0x000000000009ea50 : sub esp, 8 ; call 0x8acf5
0x0000000000194e15 : sub esp, edi ; inc dword ptr [rax + 0x2b] ; cld ; jmp qword ptr [rax]
0x0000000000194e35 : sub esp, edi ; push rax ; sub bh, ah ; call rax
0x00000000000d265a : sub r10, rax ; jmp 0xd2675
0x000000000010de8b : sub r14b, r8b ; add byte ptr [rax], ah ; jmp 0x10de5b
0x000000000007bf48 : sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000114223 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x114239 ; xor eax, eax ; ret
0x0000000000114253 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x114269 ; xor eax, eax ; ret
0x0000000000114283 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x114299 ; xor eax, eax ; ret
0x00000000001142b3 : sub r8d, dword ptr [rax] ; test eax, eax ; jne 0x1142c9 ; xor eax, eax ; ret
0x00000000001142e3 : sub r8d, dword ptr [rax] ; test eax, eax ; jne 0x1142f9 ; xor eax, eax ; ret
0x0000000000114313 : sub r8d, dword ptr [rax] ; test eax, eax ; jne 0x114329 ; xor eax, eax ; ret
0x0000000000114343 : sub r8d, dword ptr [rax] ; test eax, eax ; jne 0x114359 ; xor eax, eax ; ret
0x0000000000114373 : sub r8d, dword ptr [rax] ; test eax, eax ; jne 0x114389 ; xor eax, eax ; ret
0x0000000000137b45 : sub rax, -0x80 ; add rsp, 8 ; ret
0x0000000000096ae9 : sub rax, 1 ; jne 0x96ae8 ; pop rbx ; pop rbp ; ret
0x00000000000a9aa3 : sub rax, 1 ; ret
0x000000000007cfed : sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000077414 : sub rax, qword ptr [rdi + 0x20] ; ret
0x0000000000077304 : sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000073434 : sub rax, qword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x0000000000077405 : sub rax, qword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x00000000000772f5 : sub rax, qword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x0000000000149e7d : sub rax, r8 ; ret
0x00000000000ac72a : sub rax, rbp ; pop rbp ; pop r12 ; ret
0x000000000008ae88 : sub rax, rdi ; ret
0x000000000003a63d : sub rax, rdx ; ret
0x00000000000347ac : sub rax, rdx ; shr rax, 0x3f ; ret
0x0000000000172316 : sub rax, rdx ; vzeroupper ; ret
0x00000000000aa55b : sub rdi, 0x10 ; add rax, rdi ; ret
0x000000000008e133 : sub rdx, rax ; jbe 0x8e178 ; add rax, rdi ; ret
0x0000000000073f51 : sub rdx, rsi ; mov rdi, r15 ; call rax
0x00000000000786a3 : sub rdx, rsi ; mov rdi, rbx ; call rax
0x0000000000096951 : sub rsi, 1 ; jne 0x96951 ; xor eax, eax ; pop rbx ; ret
0x00000000000969f9 : sub rsi, 1 ; jne 0x969f8 ; xor eax, eax ; ret
0x00000000000f65bf : sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013bb3d : sub rsp, -0x80 ; pop rbx ; ret
0x000000000013ead9 : sub rsp, 0x38 ; call 0x8acf6
0x000000000009ea4f : sub rsp, 8 ; call 0x8acf6
0x0000000000034880 : subps xmm0, xmm1 ; ret
0x000000000003487f : subsd xmm0, xmm1 ; ret
0x0000000000034c14 : subss xmm0, xmm1 ; ret
0x0000000000124981 : syscall ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000fd267 : syscall ; mov eax, edx ; ret
0x00000000000f605d : syscall ; neg eax ; ret
0x0000000000114807 : syscall ; pop rdx ; pop rsi ; ret
0x00000000000bb945 : syscall ; ret
0x0000000000106b1f : syscall ; test rax, rax ; jl 0x106b6e ; je 0x106b32 ; ret
0x000000000008215c : sysenter
0x0000000000074093 : test ah, al ; add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x00000000000d71bb : test ah, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x00000000000664b2 : test ah, al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000f1536 : test ah, dh ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x3101
0x00000000001a5b65 : test al, 0 ; add al, ch ; xor al, 0xee ; jmp qword ptr [rdx]
0x0000000000137ba7 : test al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000131c22 : test al, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000136396 : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000002cb70 : test al, 0 ; add byte ptr [rax], al ; ret
0x00000000001a9f98 : test al, 0 ; call rdi
0x00000000001a88c8 : test al, 0x19 ; int1 ; jmp qword ptr [rcx]
0x0000000000003cda : test al, 0x35 ; push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x00000000001a6308 : test al, 0x3e ; cli ; call qword ptr [rax]
0x00000000000d9088 : test al, 0x48 ; add eax, edx ; jmp rax
0x000000000005decc : test al, 0x4f ; add byte ptr ss:[rax - 0x39], cl ; ret 0xfffe
0x00000000001b0188 : test al, 0x6e ; cmc ; jmp qword ptr [rcx]
0x00000000001b0548 : test al, 0x73 ; cmc ; jmp qword ptr [rcx]
0x00000000000b9d1c : test al, 0x79 ; or eax, 0x358d4800 ; ret 0xd3b
0x0000000000087944 : test al, 0x7e ; stc ; dec dword ptr [rax - 0x77] ; ret
0x000000000009c968 : test al, 0x83 ; ret 0x4901
0x00000000000d4d5c : test al, 0x89 ; ret
0x00000000001a4438 : test al, 0x8b ; in eax, dx ; call qword ptr [rdx]
0x00000000001ad378 : test al, 0x93 ; hlt ; jmp qword ptr [rcx]
0x00000000001ad4b8 : test al, 0x95 ; hlt ; jmp qword ptr [rcx]
0x0000000000182c37 : test al, 0x97 ; xchg eax, esp ; ret
0x00000000001ba6a8 : test al, 0x99 ; sti ; jmp qword ptr [rdx]
0x00000000001021fc : test al, 0xd6 ; int1 ; dec dword ptr [rcx - 0x75] ; jge 0x10220c ; call rbx
0x00000000001ac618 : test al, 0xd7 ; jmp qword ptr [rcx]
0x0000000000023658 : test al, 0xe8 ; ret 0xffff
0x0000000000196e29 : test al, 0xed ; jmp rsp
0x000000000010525b : test al, 0xf ; xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00000000000abb19 : test al, 0xf0 ; jne 0xabb78 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000abb18 : test al, 0xf0 ; jne 0xabb79 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000001b56f8 : test al, 0xf2 ; sti ; call rcx
0x00000000001ad9b9 : test al, 0xf4 ; jmp qword ptr [rcx]
0x000000000009502f : test al, 0xf8 ; dec dword ptr [rax - 0x77] ; ret
0x000000000019ad49 : test al, 0xfa ; jmp rsp
0x000000000019592d : test al, 0xfc ; call qword ptr [rsi]
0x0000000000195aed : test al, 0xfc ; call rax
0x0000000000195b29 : test al, 0xfc ; jmp qword ptr [rax]
0x0000000000195a6d : test al, 0xfc ; jmp rsp
0x0000000000195ae9 : test al, 0xfc ; ljmp ptr [rdx] ; test al, 0xfc ; call rax
0x000000000019479d : test al, 0xfd ; call qword ptr [rcx + 0x21fffda8]
0x0000000000194861 : test al, 0xfd ; call rax
0x00000000001aeb38 : test al, 0xfd ; hlt ; jmp qword ptr [rcx]
0x00000000001947a1 : test al, 0xfd ; jmp qword ptr [rcx]
0x0000000000194865 : test al, 0xfd ; push qword ptr [rax - 0x57] ; std ; call qword ptr [rax]
0x00000000001b5bc5 : test al, 1 ; add byte ptr [rax], cl ; jrcxz 0x1b5bcc ; call rsi
0x000000000018928c : test al, 2 ; cmc ; ljmp ptr [rax] ; add esi, ebp ; call qword ptr [rcx]
0x00000000000f6dc6 : test al, 2 ; cmove eax, edx ; ret
0x00000000001a7354 : test al, al ; add byte ptr [rax], al ; xchg rax, rsp ; sti ; call qword ptr [rax]
0x000000000009e152 : test al, al ; jne 0x9e135 ; ret
0x000000000009e290 : test al, al ; jne 0x9e276 ; xor eax, eax ; ret
0x000000000009edda : test al, al ; jne 0x9edc8 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000018885c : test al, cl ; jmp rsp
0x000000000019545d : test bh, ah ; call qword ptr [rsi + 0x26fffc83]
0x0000000000195d7d : test bh, ah ; call rax
0x0000000000195599 : test bh, ah ; call rsp
0x0000000000195595 : test bh, ah ; inc dword ptr [rsp + rax*4 - 4] ; call rsp
0x0000000000195419 : test bh, ah ; jmp qword ptr [rax]
0x0000000000199ec9 : test bh, al ; jmp rsp
0x000000000019471d : test bh, bl ; jmp qword ptr [rax + 0x20fffb85]
0x000000000012db6a : test bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000001042aa : test bh, dl ; dec dword ptr [rax + 0x39] ; ret
0x0000000000197394 : test bl, ah ; add byte ptr [rax], al ; xor al, 0x50 ; out dx, al ; call rsp
0x000000000002def6 : test byte ptr [rax + 0x200], bh ; ret
0x0000000000124dd3 : test byte ptr [rax + 0x39000003], al ; ret
0x00000000000cd25a : test byte ptr [rax + 0x63], 0x14 ; mov al, 0x48 ; add eax, edx ; jmp rax
0x0000000000131af5 : test byte ptr [rax + 0x63], 0x34 ; mov al, 0x48 ; add eax, esi ; jmp rax
0x00000000000333fd : test byte ptr [rax + 0x63], 0x34 ; mov bh, 0x48 ; add esi, edi ; jmp rsi
0x00000000000c482f : test byte ptr [rax + 0x63], 0x34 ; mov dl, 0x48 ; add edx, esi ; jmp rdx
0x00000000001350b5 : test byte ptr [rax + 0x63], 0xc ; mov al, 0x48 ; add eax, ecx ; jmp rax
0x000000000007d38a : test byte ptr [rax + r8], r14b ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000068419 : test byte ptr [rax + rax - 0x7cb80000], ah ; ret
0x000000000007d38b : test byte ptr [rax + rax], dh ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000012f356 : test byte ptr [rax + rdi*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0x850f
0x00000000001a4b54 : test byte ptr [rax - 0x26e80000], bl ; in eax, dx ; call qword ptr [rsi]
0x00000000000f6223 : test byte ptr [rax - 0x73], 0x7c ; and al, 0xc ; call rax
0x00000000001025e1 : test byte ptr [rax - 0x75], 0x7d ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x0000000000102d24 : test byte ptr [rax - 0x77], 0xc3 ; call rax
0x0000000000047019 : test byte ptr [rax - 0x77], 0xd8 ; pop rbx ; ret
0x0000000000129d1e : test byte ptr [rax - 0x77], 0xdf ; mov qword ptr [rsp], rcx ; call r12
0x000000000013b8e9 : test byte ptr [rax - 0x77], 0xef ; call r12
0x000000000019772d : test byte ptr [rax], 0 ; adc r13d, edi ; jmp rsp
0x00000000001aa90d : test byte ptr [rax], 0 ; and byte ptr [rcx], 0xf2 ; jmp qword ptr [rcx]
0x00000000001aa925 : test byte ptr [rax], 0 ; cwde ; and edx, esi ; jmp qword ptr [rcx]
0x00000000001aa8dd : test byte ptr [rax], 0 ; push rax ; and edx, esi ; jmp qword ptr [rcx]
0x000000000013d83b : test byte ptr [rax], ah ; add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000e2b75 : test byte ptr [rax], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000010fa7f : test byte ptr [rax], ah ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf10
0x0000000000077e1a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; and dword ptr [rdi], 0xffffffcf ; ret
0x000000000014321a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rcx
0x000000000017030a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x00000000001684ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x00000000000a52fa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000000a62ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x00000000001684ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00000000000a62ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x00000000000a62fa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x00000000000d677a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x000000000016852a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x00000000000a633a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000007ca6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000001684ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x00000000000a62da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x000000000007a54a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x0000000000020589 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x000000000007580a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000006ac7a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00000000000781ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009e74a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000007f37b : test byte ptr [rax], bh ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000959ac : test byte ptr [rax], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000000970f9 : test byte ptr [rax], bl ; or al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000959c4 : test byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000113472 : test byte ptr [rbp + 0x390b74d2], al ; ret 0xf7e
0x000000000006e476 : test byte ptr [rbp + 0x48000000], dh ; mov eax, edx ; pop rbx ; ret
0x00000000000b71e7 : test byte ptr [rbp - 0x73], 0x2c ; mov ah, 0xe9 ; ret
0x000000000007544e : test byte ptr [rbp - 0x77000000], dh ; ret 0xd089
0x000000000013dd29 : test byte ptr [rbp - 0x7c000002], dh ; rol byte ptr [rcx], 0x39 ; ret
0x0000000000066368 : test byte ptr [rbp - 0x7cfffffe], ah ; ret 0x3901
0x000000000007da06 : test byte ptr [rbp - 0xa000000], ch ; ret
0x000000000007e37f : test byte ptr [rbp - 0xa000000], dl ; ret
0x0000000000112a6c : test byte ptr [rbx + 0x1c], 0x20 ; je 0x112ad8 ; xor eax, eax ; pop rbx ; ret
0x00000000001a5e54 : test byte ptr [rbx + 0x6e680000], ch ; out dx, al ; jmp qword ptr [rdx]
0x0000000000196d8c : test byte ptr [rbx - 0x6ecc0000], dh ; in eax, dx ; call rsp
0x00000000000f03fc : test byte ptr [rbx - 0x76000004], ah ; ret 0xdb31
0x0000000000058347 : test byte ptr [rbx - 0x7c00001b], bh ; ret
0x000000000008415e : test byte ptr [rbx], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000008385f : test byte ptr [rbx], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000085d3e : test byte ptr [rbx], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000019a524 : test byte ptr [rbx], bl ; add al, byte ptr [rax] ; in al, -0x5f ; stc ; call rsp
0x0000000000096b7b : test byte ptr [rcx + 0xf], 0x95 ; ret 0x8445
0x000000000019912c : test byte ptr [rcx + rax - 0x90dbc00], bl ; call rsp
0x00000000001168cf : test byte ptr [rcx + rax], bh ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000086f9f : test byte ptr [rcx + rax], bh ; add byte ptr [rcx + rcx*4 - 0xa], cl ; call rax
0x00000000000378a2 : test byte ptr [rcx + rcx*4 - 0x11], 0x48 ; mov edx, ebp ; call r15
0x000000000003dac1 : test byte ptr [rcx + rcx*4 - 0x11], 0xf ; xchg eax, ebp ; ret 0x941
0x00000000000b9b33 : test byte ptr [rcx + rcx*4 - 0x19], 0x4d ; mov ecx, edi ; call rbx
0x00000000000af583 : test byte ptr [rcx - 0x48], 0x40 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000000502c2 : test byte ptr [rcx - 0x77000000], dh ; ret 0xe283
0x0000000000101f72 : test byte ptr [rcx - 0x77], 0xd4 ; mov rbp, rax ; call rax
0x00000000000d90d2 : test byte ptr [rcx - 0x7cfffffb], bh ; ret 0x3902
0x00000000000c6cba : test byte ptr [rcx - 0x7d], 0xc6 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000083b87 : test byte ptr [rcx - 0xa000000], dl ; ret
0x00000000001996c0 : test byte ptr [rcx - 9], dl ; jmp rsp
0x0000000000144866 : test byte ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000019a870 : test byte ptr [rcx], ah ; cli ; call rsp
0x0000000000022c7b : test byte ptr [rcx], al ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000122650 : test byte ptr [rcx], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x00000000000d0d46 : test byte ptr [rdi + rdi*8 - 1], dh ; dec dword ptr [rax - 0x7d] ; ret
0x000000000005744b : test byte ptr [rdi - 0x7600000c], dh ; ret
0x0000000000195438 : test byte ptr [rdi - 0x78790004], 0xfc ; call qword ptr [rsi]
0x000000000004760e : test byte ptr [rdi - 0x7b000000], bh ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0x854d
0x0000000000137c3c : test byte ptr [rdi - 0x7d000000], al ; ret 0x3901
0x000000000009cfaa : test byte ptr [rdi - 0x8fffff5], bh ; ret 0
0x000000000009cabd : test byte ptr [rdi - 0x8fffff6], ch ; ret 0
0x000000000007f264 : test byte ptr [rdi - 0x9fffffc], al ; ret
0x00000000000b63cc : test byte ptr [rdi], 0x84 ; ret
0x00000000001023ea : test byte ptr [rdi], 0x84 ; ret 0
0x0000000000024ab3 : test byte ptr [rdi], 0x85 ; ret 3
0x000000000005fe6a : test byte ptr [rdi], 0x9f ; ret 0xd629
0x0000000000077352 : test byte ptr [rdi], 4 ; sete al ; ret
0x0000000000077362 : test byte ptr [rdi], 8 ; sete al ; ret
0x00000000000a5c78 : test byte ptr [rdi], al ; add byte ptr [rax], al ; ret
0x00000000000955ec : test byte ptr [rdi], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000000955d4 : test byte ptr [rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000000ed921 : test byte ptr [rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0x4118
0x0000000000026552 : test byte ptr [rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x000000000002de84 : test byte ptr [rdx + 0x200], al ; ret
0x000000000007db8e : test byte ptr [rdx + 0x48000001], dh ; mov edx, eax ; jmp 0x7dbb7
0x00000000000c3da1 : test byte ptr [rdx - 0x16000016], bh ; ret 0xfff3
0x0000000000198bf0 : test byte ptr [rdx - 0xa], bl ; call rsp
0x00000000001995d8 : test byte ptr [rdx - 9], al ; jmp rsp
0x00000000001970e0 : test byte ptr [rdx], al ; out dx, al ; call rsp
0x00000000001972d8 : test byte ptr [rdx], ch ; out dx, al ; jmp rsp
0x000000000006627a : test byte ptr [rdx], cl ; or al, 0 ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000001339dc : test byte ptr [rip + 0x48ffffff], dl ; mov edi, ebp ; call rax
0x00000000001980fc : test byte ptr [rip + 0xfb40001], dh ; call rsp
0x0000000000110324 : test byte ptr [rip - 0x76ffffff], bl ; ret 0x8944
0x00000000000f064e : test byte ptr [rip - 0x7a000001], ah ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x000000000008af2d : test byte ptr [rsi + 0x48000000], bl ; bsf eax, edx ; ret
0x00000000001b1154 : test byte ptr [rsi + 1], bl ; add al, ch ; lahf ; cmc ; call rdi
0x00000000001b0154 : test byte ptr [rsi + 1], cl ; add byte ptr [rax + 0x6e], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001b0954 : test byte ptr [rsi + 1], dl ; add al, ch ; jp 0x1b0957 ; jmp qword ptr [rcx]
0x000000000009cac9 : test byte ptr [rsi - 0x8fffff6], cl ; ret 0
0x0000000000032e65 : test byte ptr [rsi], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000008ad6d : test byte ptr [rsi], bh ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000000343a5 : test byte ptr [rsi], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000002b95d : test byte ptr [rsi], bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000019a904 : test byte ptr [rsi], dh ; add al, byte ptr [rax] ; je 0x19a93c ; cli ; call rsp
0x0000000000121d3e : test byte ptr [rsp + rax - 0x7cb80000], ch ; ret 0x4104
0x00000000000aa1b2 : test ch, 0xf0 ; je 0xaa1ab ; movzx eax, cl ; pop rbx ; ret
0x00000000000bcfbf : test ch, ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000019b2c0 : test ch, bl ; std ; call rsp
0x000000000019dd01 : test ch, cl ; jmp qword ptr [rsi]
0x000000000012db58 : test ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x0000000000110b87 : test cl, bh ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000efa03 : test cl, bl ; or dword ptr [rax], eax ; mov rdx, qword ptr [rax] ; call 0xcbcf9
0x00000000000dbb0a : test cl, cl ; add dword ptr [rax], eax ; add dh, dh ; ret
0x0000000000125e9b : test cl, cl ; jne 0x125dec ; ret
0x000000000009e0f8 : test cl, cl ; jne 0x9e0ed ; ret
0x000000000009e237 : test cl, cl ; jne 0x9e22e ; xor eax, eax ; ret
0x00000000000a972f : test cl, cl ; jne 0xa9724 ; ret
0x00000000000a97df : test cl, cl ; jne 0xa97d4 ; ret
0x00000000000a9a9f : test cl, cl ; jne 0xa9a98 ; sub rax, 1 ; ret
0x00000000000aa1da : test dh, 0xf0 ; je 0xaa1a9 ; movzx eax, dl ; pop rbx ; ret
0x00000000000aa1da : test dh, 0xf0 ; je 0xaa1ab ; movzx eax, dl ; pop rbx ; ret
0x0000000000188de9 : test dh, ah ; inc dword ptr [rax] ; test esi, esp ; jmp rdx
0x0000000000124edc : test dh, bh ; add al, byte ptr [rax] ; add byte ptr [rcx], bh ; ret
0x000000000006f004 : test dh, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000001abea9 : test dh, bl ; call qword ptr [rsi]
0x00000000000c0ecd : test dh, ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000009e2f0 : test dh, dh ; jne 0x9e2e7 ; mov qword ptr [rdx], rcx ; ret
0x0000000000023b85 : test dh, dh ; mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x00000000000f7300 : test dh, dl ; dec dword ptr [rax - 0x77] ; ret
0x0000000000170194 : test dl, 0x40 ; jne 0x170159 ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000001701c2 : test dl, 4 ; jne 0x170159 ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000bce3b : test dl, al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7f], cl ; ret
0x000000000019a048 : test dl, bh ; clc ; jmp rsp
0x00000000001a8454 : test dl, cl ; add byte ptr [rax], al ; call 0x111a7539
0x00000000000817d5 : test dl, dl ; add al, 0 ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x0000000000033bc2 : test dl, dl ; jne 0x33ba4 ; ret
0x000000000009e0b4 : test dl, dl ; jne 0x9e0ad ; ret
0x00000000000a994f : test dl, dl ; jne 0xa9948 ; lea rax, qword ptr [rcx - 1] ; ret
0x00000000000d0b3e : test dl, dl ; jne 0xd0b26 ; ret
0x000000000008edc9 : test dword ptr [rax + 0x48fffffb], edi ; mov eax, edi ; ret
0x00000000000a5fab : test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x00000000000a74bb : test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x00000000000a73bb : test dword ptr [rax + 8], edx ; add byte ptr [rax], al ; ret
0x00000000000fda71 : test dword ptr [rax + rax], ebp ; ret
0x000000000007d2c2 : test dword ptr [rax + rax], esi ; add dword ptr [rbx - 0xd], ebx ; ret
0x00000000000695be : test dword ptr [rax - 0x16000005], edi ; ret 0xffff
0x000000000005cd43 : test dword ptr [rax - 0x7a000007], edi ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000ce115 : test dword ptr [rax - 0x8ffffff], eax ; ret
0x000000000006f005 : test dword ptr [rax], 0x89480000 ; ret 0x8b48
0x00000000001aa9e5 : test dword ptr [rax], 0xf2278800 ; jmp qword ptr [rdi]
0x00000000001aaa65 : test dword ptr [rax], 0xf2299800 ; jmp rcx
0x00000000000d6cd9 : test dword ptr [rax], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8341
0x0000000000085423 : test dword ptr [rax], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000055b39 : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000084b17 : test dword ptr [rax], eax ; add rax, r13 ; jmp rax
0x000000000006584a : test dword ptr [rax], esi ; adc dword ptr [rax], eax ; add dh, dh ; ret
0x0000000000084b16 : test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x0000000000093d9f : test dword ptr [rbp - 0xc000004], esp ; ret
0x000000000009e65e : test dword ptr [rbp], edi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000001b12 : test dword ptr [rbx + 0x59e7c8ee], esi ; pop rbx ; ret 0x2a63
0x00000000000ab0e0 : test dword ptr [rbx + 1], ecx ; add byte ptr [rax], al ; ret
0x00000000000aba08 : test dword ptr [rbx + 1], esp ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x0000000000168408 : test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x00000000001683e8 : test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x0000000000168300 : test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x00000000000a75b0 : test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x000000000016eb17 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016ef66 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000002b83 : test dword ptr [rbx - 0x2e], ebp ; cmp dl, byte ptr [rdi] ; ret
0x00000000000e3b34 : test dword ptr [rbx - 0xa000000], esi ; ret 0x7420
0x000000000009e5c8 : test dword ptr [rbx], eax ; add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000053f18 : test dword ptr [rbx], edx ; add byte ptr [rdi + rcx + 0x44], cl ; ret 0xf4c
0x000000000003b4eb : test dword ptr [rbx], esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000008e0aa : test dword ptr [rcx + 0x48000000], esi ; xor eax, eax ; ret
0x000000000008eae0 : test dword ptr [rcx + 0x48fffffe], esp ; mov eax, edi ; ret
0x000000000016810a : test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x000000000016eaed : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000a5b92 : test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x000000000016e9fd : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016e90d : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000ab127 : test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x0000000000172047 : test dword ptr [rcx + rax], edx ; add byte ptr [rax], al ; ret
0x00000000000ab0f7 : test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x00000000001684aa : test dword ptr [rcx - 0x3cffffff], esp ; ret
0x0000000000037b6e : test dword ptr [rcx - 0x3f], 0x834904eb ; ret
0x000000000005d4e2 : test dword ptr [rcx - 0x7600000a], ecx ; ret
0x00000000001baa3d : test dword ptr [rcx], 0xfb96a000 ; jmp qword ptr [rdx]
0x0000000000081072 : test dword ptr [rcx], edi ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x000000000008ecca : test dword ptr [rdi + 0x48fffffc], esi ; mov eax, edi ; ret
0x00000000000a5cf7 : test dword ptr [rdi + rax], eax ; add byte ptr [rax], al ; ret
0x00000000000a5cd7 : test dword ptr [rdi + rax], esp ; add byte ptr [rax], al ; ret
0x0000000000035f13 : test dword ptr [rdi + rcx*8], eax ; setne al ; movzx eax, al ; ret
0x0000000000093bb5 : test dword ptr [rdi - 0xc000002], ecx ; ret
0x00000000000360f6 : test dword ptr [rdi], eax ; setne al ; movzx eax, al ; ret
0x00000000000a5e91 : test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x00000000000a7299 : test dword ptr [rdx + 9], esi ; add byte ptr [rax], al ; ret
0x000000000016fe62 : test dword ptr [rdx + rax], edi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016e832 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000102d8d : test dword ptr [rdx], 0xf6310000 ; mov rdi, r14 ; call rbx
0x000000000003b9bb : test dword ptr [rdx], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000001683c7 : test dword ptr [rdx], eax ; add byte ptr [rax], al ; ret
0x00000000000abaad : test dword ptr [rsi + 0x48000000], edi ; lea eax, dword ptr [rdi - 0x10] ; ret
0x00000000001719d2 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000a5cb5 : test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x00000000000a5c95 : test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x00000000000a5bad : test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x0000000000093e9e : test dword ptr [rsi - 0xc000005], esp ; ret
0x00000000000d6cc3 : test dword ptr [rsi], edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb04
0x000000000016ed38 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x000000000000c429 : test eax, 0x13 ; add byte ptr [rax], al ; ret
0x00000000000cc953 : test eax, 0x39fffffe ; ret
0x00000000001172f7 : test eax, 0x48f88948 ; add esp, 8 ; ret
0x00000000001a5bdd : test eax, 0x4b400000 ; out dx, al ; call qword ptr [rax]
0x00000000001a5c25 : test eax, 0x4c280000 ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a5c5d : test eax, 0x4cc00000 ; out dx, al ; call qword ptr [rdx]
0x0000000000196c55 : test eax, 0x55b40000 ; in eax, dx ; jmp rsp
0x0000000000184920 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000158866 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000034c48 : test eax, 0x7fffff ; je 0x34c41 ; ret
0x000000000006597f : test eax, 0x83000000 ; ret 0x8308
0x00000000000608ac : test eax, 0x89000007 ; ret 0x348
0x0000000000073c56 : test eax, 0x8b480001 ; cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x0000000000195b25 : test eax, 0xa890fffc ; cld ; jmp qword ptr [rax]
0x0000000000195961 : test eax, 0xa946fffc ; cld ; call rsi
0x0000000000189d36 : test eax, 0xc3fffb00 ; add dh, bh ; jmp rdi
0x000000000010570f : test eax, eax ; cmove eax, edx ; ret
0x000000000003a6e4 : test eax, eax ; cmovs eax, edx ; pop rbx ; ret
0x0000000000104b5c : test eax, eax ; je 0x104c00 ; call rax
0x0000000000104cd3 : test eax, eax ; je 0x104dd8 ; call rax
0x0000000000114cb8 : test eax, eax ; je 0x114cc4 ; ret
0x0000000000114fb0 : test eax, eax ; je 0x114fe4 ; call rax
0x0000000000116dda : test eax, eax ; je 0x116df0 ; add rsp, 8 ; ret
0x000000000011f1e5 : test eax, eax ; je 0x11f1f5 ; mov rdi, rbx ; call rax
0x000000000011f4dd : test eax, eax ; je 0x11f4ed ; mov rdi, rbx ; call rax
0x0000000000127b50 : test eax, eax ; je 0x127b5c ; ret
0x000000000012a851 : test eax, eax ; je 0x12a83f ; xor eax, eax ; pop rbx ; ret
0x000000000012b091 : test eax, eax ; je 0x12b0a1 ; mov rdi, rsp ; call rax
0x000000000012b17c : test eax, eax ; je 0x12b18c ; mov rdi, rsp ; call rax
0x000000000012ba32 : test eax, eax ; je 0x12ba42 ; mov rdi, rbp ; call rax
0x000000000012bdb6 : test eax, eax ; je 0x12bdc4 ; ret
0x000000000012cac3 : test eax, eax ; je 0x12cad3 ; mov rdi, r14 ; call rax
0x000000000012d041 : test eax, eax ; je 0x12d056 ; xor eax, eax ; ret
0x0000000000132458 : test eax, eax ; je 0x132468 ; mov rdi, r12 ; call rax
0x0000000000132639 : test eax, eax ; je 0x13264b ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000133913 : test eax, eax ; je 0x133923 ; mov rdi, r13 ; call rax
0x0000000000133b06 : test eax, eax ; je 0x133b16 ; mov rdi, rbp ; call rax
0x0000000000133d26 : test eax, eax ; je 0x133d36 ; mov rdi, rbp ; call rax
0x000000000013481d : test eax, eax ; je 0x13482f ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000134ec9 : test eax, eax ; je 0x134ed9 ; mov rdi, r12 ; call rax
0x000000000013523d : test eax, eax ; je 0x13524f ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x0000000000137ae8 : test eax, eax ; je 0x137a7a ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x0000000000137a6d : test eax, eax ; je 0x137a7d ; pop rbx ; ret
0x0000000000137f1f : test eax, eax ; je 0x137f38 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001387d9 : test eax, eax ; je 0x1387eb ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000138ef2 : test eax, eax ; je 0x138f04 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000013d5a6 : test eax, eax ; je 0x13d5b6 ; xor eax, eax ; ret
0x0000000000145273 : test eax, eax ; je 0x14527f ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000146258 : test eax, eax ; je 0x146264 ; xchg eax, edx ; sub eax, edx ; ret
0x00000000001737ac : test eax, eax ; je 0x1737bb ; call rax
0x000000000002b023 : test eax, eax ; je 0x2b02d ; call rax
0x000000000002c379 : test eax, eax ; je 0x2c383 ; call rax
0x00000000000783bd : test eax, eax ; je 0x783cd ; pop rbx ; ret
0x000000000007e1b2 : test eax, eax ; je 0x7e1bc ; call rax
0x0000000000084b39 : test eax, eax ; je 0x84b43 ; call rax
0x000000000008aaf0 : test eax, eax ; je 0x8ab08 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c6b5e : test eax, eax ; je 0xc6b80 ; mov rsi, rdi ; xor edi, edi ; call rax
0x00000000000cb95f : test eax, eax ; je 0xcb969 ; call rax
0x00000000000cbb91 : test eax, eax ; je 0xcbb9e ; call rax
0x00000000000fcb1c : test eax, eax ; je 0xfcb27 ; ret
0x00000000000fe991 : test eax, eax ; je 0xfe9a0 ; mov qword ptr [rax], rdx ; ret
0x0000000000106b22 : test eax, eax ; jl 0x106b6b ; je 0x106b2f ; ret
0x00000000001141f6 : test eax, eax ; jne 0x114209 ; mov eax, 1 ; ret
0x0000000000114226 : test eax, eax ; jne 0x114236 ; xor eax, eax ; ret
0x0000000000114256 : test eax, eax ; jne 0x114266 ; xor eax, eax ; ret
0x0000000000114286 : test eax, eax ; jne 0x114296 ; xor eax, eax ; ret
0x00000000001142b6 : test eax, eax ; jne 0x1142c6 ; xor eax, eax ; ret
0x00000000001142e6 : test eax, eax ; jne 0x1142f6 ; xor eax, eax ; ret
0x0000000000114316 : test eax, eax ; jne 0x114326 ; xor eax, eax ; ret
0x0000000000114346 : test eax, eax ; jne 0x114356 ; xor eax, eax ; ret
0x0000000000114376 : test eax, eax ; jne 0x114386 ; xor eax, eax ; ret
0x00000000001143a6 : test eax, eax ; jne 0x1143b6 ; xor eax, eax ; ret
0x00000000001143d6 : test eax, eax ; jne 0x1143e6 ; xor eax, eax ; ret
0x0000000000114406 : test eax, eax ; jne 0x114416 ; xor eax, eax ; ret
0x0000000000114436 : test eax, eax ; jne 0x114446 ; xor eax, eax ; ret
0x0000000000114466 : test eax, eax ; jne 0x114476 ; xor eax, eax ; ret
0x0000000000114496 : test eax, eax ; jne 0x1144a6 ; xor eax, eax ; ret
0x00000000001144c6 : test eax, eax ; jne 0x1144d6 ; xor eax, eax ; ret
0x00000000001144f6 : test eax, eax ; jne 0x114506 ; xor eax, eax ; ret
0x0000000000114526 : test eax, eax ; jne 0x114536 ; xor eax, eax ; ret
0x0000000000114556 : test eax, eax ; jne 0x114566 ; xor eax, eax ; ret
0x0000000000114586 : test eax, eax ; jne 0x114596 ; xor eax, eax ; ret
0x00000000001145b6 : test eax, eax ; jne 0x1145c6 ; xor eax, eax ; ret
0x0000000000114616 : test eax, eax ; jne 0x114626 ; xor eax, eax ; ret
0x0000000000114646 : test eax, eax ; jne 0x114656 ; xor eax, eax ; ret
0x0000000000114676 : test eax, eax ; jne 0x114686 ; xor eax, eax ; ret
0x00000000001146a6 : test eax, eax ; jne 0x1146b6 ; xor eax, eax ; ret
0x00000000001146d6 : test eax, eax ; jne 0x1146e6 ; xor eax, eax ; ret
0x0000000000114706 : test eax, eax ; jne 0x114716 ; xor eax, eax ; ret
0x0000000000114736 : test eax, eax ; jne 0x114746 ; xor eax, eax ; ret
0x0000000000114766 : test eax, eax ; jne 0x114776 ; xor eax, eax ; ret
0x0000000000114796 : test eax, eax ; jne 0x1147a6 ; xor eax, eax ; ret
0x00000000001147e0 : test eax, eax ; jne 0x1147db ; pop rdx ; pop r10 ; ret
0x00000000001148d3 : test eax, eax ; jne 0x1148e5 ; ret
0x0000000000114c75 : test eax, eax ; jne 0x114c19 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x0000000000127f8a : test eax, eax ; jne 0x127f94 ; ret
0x0000000000132856 : test eax, eax ; jne 0x132864 ; ret
0x0000000000138755 : test eax, eax ; jne 0x138745 ; pop rbx ; ret
0x00000000001389d6 : test eax, eax ; jne 0x1389e4 ; ret
0x00000000001406da : test eax, eax ; jne 0x1406ef ; xor eax, eax ; pop rbx ; ret
0x0000000000143be6 : test eax, eax ; jne 0x143bf6 ; xor eax, eax ; ret
0x0000000000143c16 : test eax, eax ; jne 0x143c26 ; xor eax, eax ; ret
0x0000000000143c46 : test eax, eax ; jne 0x143c56 ; xor eax, eax ; ret
0x0000000000143c76 : test eax, eax ; jne 0x143c86 ; xor eax, eax ; ret
0x0000000000143ca6 : test eax, eax ; jne 0x143cb6 ; xor eax, eax ; ret
0x0000000000143cd6 : test eax, eax ; jne 0x143ce6 ; xor eax, eax ; ret
0x0000000000173cc6 : test eax, eax ; jne 0x173cd5 ; ret
0x00000000000352f6 : test eax, eax ; jne 0x35305 ; ret
0x000000000006ac6f : test eax, eax ; jne 0x6ac88 ; mov rax, rbx ; pop rbx ; ret
0x000000000007c774 : test eax, eax ; jne 0x7c76d ; ret
0x000000000007d885 : test eax, eax ; jne 0x7d8ba ; xor edi, edi ; call qword ptr [r15]
0x0000000000088b9f : test eax, eax ; jne 0x88b95 ; ret
0x000000000008cddc : test eax, eax ; jne 0x8cda6 ; add rsp, 8 ; ret
0x000000000008cdff : test eax, eax ; jne 0x8ce18 ; add rsp, 8 ; ret
0x000000000008e0e7 : test eax, eax ; jne 0x8e147 ; xor rax, rax ; ret
0x000000000009e698 : test eax, eax ; jne 0x9e716 ; xor eax, eax ; ret
0x00000000000abbf1 : test eax, eax ; jne 0xabbc5 ; ret
0x00000000000abcaa : test eax, eax ; jne 0xabca6 ; xor eax, eax ; ret
0x00000000000fae1d : test eax, eax ; jne 0xfadc8 ; mov edi, ebp ; call 0xf7038
0x00000000000fd83f : test eax, eax ; jne 0xfd817 ; xor eax, eax ; pop rbx ; ret
0x00000000000fda00 : test eax, eax ; jne 0xfd9d7 ; xor eax, eax ; pop rbx ; ret
0x0000000000075a1b : test eax, eax ; js 0x75a2d ; ret
0x0000000000084de6 : test eax, eax ; js 0x84df5 ; ret
0x00000000000ab61d : test eax, eax ; mov dword ptr [rcx + 4], r8d ; jne 0xab5f1 ; ret
0x000000000012a806 : test eax, eax ; sete al ; add rsp, 8 ; ret
0x0000000000022d7a : test eax, ecx ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000e3b25 : test eax, edx ; add byte ptr [rax], al ; add dh, dh ; ret 0x7408
0x00000000000ae1a5 : test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xae1bf
0x00000000000b0ac6 : test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xb0adf
0x00000000000b327d : test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xb329f
0x000000000008e010 : test ebp, ebx ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x000000000019dd31 : test ebp, ecx ; jmp rsp
0x0000000000084037 : test ebp, esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000007808e : test ebx, ebx ; jne 0x780a8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000abd06 : test ebx, ebx ; jne 0xabce8 ; mov rax, rdi ; ret
0x0000000000173da4 : test ebx, ebx ; mov rdx, rbx ; jne 0x173da1 ; pop rbx ; ret
0x0000000000170182 : test ebx, ecx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000017018f : test ebx, esp ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000002b394 : test ecx, ecx ; je 0x2b39e ; call rcx
0x000000000006b408 : test ecx, ecx ; je 0x6b415 ; ret
0x00000000000abbdb : test ecx, ecx ; jne 0xabbd5 ; ret
0x00000000000ad059 : test ecx, ecx ; jne 0xad018 ; mov rax, rdx ; ret
0x00000000000aa3e3 : test ecx, ecx ; mov dword ptr [rdx], ecx ; jne 0xaa3df ; ret
0x0000000000194721 : test edi, ebx ; jmp qword ptr [rax]
0x000000000013364b : test edi, edi ; je 0x133660 ; mov rdi, r15 ; call 0x1f8b1
0x0000000000133664 : test edi, edi ; je 0x133673 ; call 0x1f8ae
0x0000000000133672 : test edi, edi ; je 0x133681 ; call 0x1f8ae
0x0000000000086e70 : test edi, edi ; je 0x86e89 ; mov eax, 0x16 ; ret
0x000000000011f4c1 : test edi, edi ; jne 0x11f4b5 ; pop rbx ; ret
0x0000000000173aab : test edi, edi ; jne 0x173a9f ; pop rbx ; ret
0x0000000000118b72 : test edi, edi ; js 0x118b89 ; mov eax, edi ; shr eax, 0x18 ; ret
0x000000000010420b : test edi, edx ; dec dword ptr [rax + 0x39] ; ret
0x0000000000195415 : test edi, esp ; call qword ptr [rax + 0x20fffc84]
0x000000000019560d : test edi, esp ; call qword ptr [rax]
0x00000000001954d1 : test edi, esp ; call rdx
0x00000000001954cd : test edi, esp ; inc dword ptr [rdx - 0x7b] ; cld ; call rdx
0x0000000000195451 : test edi, esp ; jmp rsi
0x000000000012d650 : test edx, edx ; je 0x12d660 ; mov rdi, rbp ; call rdx
0x0000000000173694 : test edx, edx ; je 0x17369e ; call rdx
0x000000000007775a : test edx, edx ; je 0x77771 ; mov eax, 0xffffffff ; ret
0x0000000000077aca : test edx, edx ; je 0x77ae1 ; mov eax, 0xffffffff ; ret
0x000000000008ad22 : test edx, edx ; je 0x8ad30 ; bsf eax, edx ; ret
0x000000000008ad22 : test edx, edx ; je 0x8ad31 ; bsf eax, edx ; ret
0x000000000008adcb : test edx, edx ; je 0x8ade7 ; bsf rax, rdx ; ret
0x000000000008adcb : test edx, edx ; je 0x8ade8 ; bsf rax, rdx ; ret
0x000000000008af9a : test edx, edx ; je 0x8afc7 ; bsf rax, rdx ; ret
0x000000000008af9a : test edx, edx ; je 0x8afc8 ; bsf rax, rdx ; ret
0x00000000000cbb08 : test edx, edx ; je 0xcbb15 ; call rdx
0x0000000000114b1d : test edx, edx ; jne 0x114b19 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x000000000013bcb0 : test edx, edx ; jne 0x13bcc9 ; mov eax, 1 ; ret
0x000000000013bcf0 : test edx, edx ; jne 0x13bd09 ; mov eax, 1 ; ret
0x0000000000071b3f : test edx, edx ; jne 0x71b35 ; ret
0x000000000007a2c3 : test edx, edx ; jne 0x7a2d4 ; ret
0x000000000007ae6f : test edx, edx ; jne 0x7ae65 ; ret
0x0000000000088c49 : test edx, edx ; jne 0x88c45 ; ret
0x00000000000ad09a : test edx, edx ; jne 0xad095 ; ret
0x000000000002048e : test edx, edx ; jns 0x20382 ; jmp 0x20463
0x00000000000abf1f : test edx, edx ; mov dword ptr [rax], edx ; jne 0xabf1f ; ret
0x00000000000ba81f : test edx, edx ; mov dword ptr [rsi + rcx], edx ; jne 0xba820 ; ret
0x000000000003625a : test edx, edx ; sete al ; ret
0x0000000000170175 : test edx, esi ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000085c13 : test esi, eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000001b0b29 : test esi, ebp ; jmp rax
0x000000000008ae91 : test esi, esi ; jne 0x8aea0 ; xor rax, rax ; ret
0x00000000000960be : test esi, esi ; jne 0x960d1 ; jmp 0x9608b
0x0000000000188ded : test esi, esp ; jmp rdx
0x00000000000360f5 : test qword ptr [rdi], rax ; setne al ; movzx eax, al ; ret
0x00000000000abd05 : test r11d, r11d ; jne 0xabce9 ; mov rax, rdi ; ret
0x0000000000195598 : test r15b, spl ; call rsp
0x000000000009e151 : test r8b, r8b ; jne 0x9e136 ; ret
0x000000000009e28f : test r8b, r8b ; jne 0x9e277 ; xor eax, eax ; ret
0x0000000000145272 : test r8d, r8d ; je 0x145280 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000146257 : test r8d, r8d ; je 0x146265 ; xchg eax, edx ; sub eax, edx ; ret
0x00000000000abbf0 : test r8d, r8d ; jne 0xabbc6 ; ret
0x00000000000ad058 : test r9d, r9d ; jne 0xad019 ; mov rax, rdx ; ret
0x0000000000104b5b : test rax, rax ; je 0x104c01 ; call rax
0x0000000000104cd2 : test rax, rax ; je 0x104dd9 ; call rax
0x0000000000114cb7 : test rax, rax ; je 0x114cc5 ; ret
0x0000000000114faf : test rax, rax ; je 0x114fe5 ; call rax
0x0000000000116dd9 : test rax, rax ; je 0x116df1 ; add rsp, 8 ; ret
0x000000000011f1e4 : test rax, rax ; je 0x11f1f6 ; mov rdi, rbx ; call rax
0x000000000011f4dc : test rax, rax ; je 0x11f4ee ; mov rdi, rbx ; call rax
0x000000000012a850 : test rax, rax ; je 0x12a840 ; xor eax, eax ; pop rbx ; ret
0x000000000012b090 : test rax, rax ; je 0x12b0a2 ; mov rdi, rsp ; call rax
0x000000000012b17b : test rax, rax ; je 0x12b18d ; mov rdi, rsp ; call rax
0x000000000012ba31 : test rax, rax ; je 0x12ba43 ; mov rdi, rbp ; call rax
0x000000000012cac2 : test rax, rax ; je 0x12cad4 ; mov rdi, r14 ; call rax
0x0000000000132457 : test rax, rax ; je 0x132469 ; mov rdi, r12 ; call rax
0x0000000000132638 : test rax, rax ; je 0x13264c ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000133912 : test rax, rax ; je 0x133924 ; mov rdi, r13 ; call rax
0x0000000000133b05 : test rax, rax ; je 0x133b17 ; mov rdi, rbp ; call rax
0x0000000000133d25 : test rax, rax ; je 0x133d37 ; mov rdi, rbp ; call rax
0x000000000013481c : test rax, rax ; je 0x134830 ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000134ec8 : test rax, rax ; je 0x134eda ; mov rdi, r12 ; call rax
0x000000000013523c : test rax, rax ; je 0x135250 ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x0000000000137a6c : test rax, rax ; je 0x137a7e ; pop rbx ; ret
0x00000000001387d8 : test rax, rax ; je 0x1387ec ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000138ef1 : test rax, rax ; je 0x138f05 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00000000001737ab : test rax, rax ; je 0x1737bc ; call rax
0x000000000002b022 : test rax, rax ; je 0x2b02e ; call rax
0x000000000002c378 : test rax, rax ; je 0x2c384 ; call rax
0x00000000000783bc : test rax, rax ; je 0x783ce ; pop rbx ; ret
0x000000000007e1b1 : test rax, rax ; je 0x7e1bd ; call rax
0x0000000000084b38 : test rax, rax ; je 0x84b44 ; call rax
0x000000000008aaef : test rax, rax ; je 0x8ab09 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cb95e : test rax, rax ; je 0xcb96a ; call rax
0x00000000000cbb90 : test rax, rax ; je 0xcbb9f ; call rax
0x00000000000fcb1b : test rax, rax ; je 0xfcb28 ; ret
0x00000000000fe990 : test rax, rax ; je 0xfe9a1 ; mov qword ptr [rax], rdx ; ret
0x0000000000106b21 : test rax, rax ; jl 0x106b6c ; je 0x106b30 ; ret
0x0000000000138754 : test rax, rax ; jne 0x138746 ; pop rbx ; ret
0x000000000007c773 : test rax, rax ; jne 0x7c76e ; ret
0x000000000007d884 : test rax, rax ; jne 0x7d8bb ; xor edi, edi ; call qword ptr [r15]
0x0000000000088b9e : test rax, rax ; jne 0x88b96 ; ret
0x00000000000fd83e : test rax, rax ; jne 0xfd818 ; xor eax, eax ; pop rbx ; ret
0x00000000000fd9ff : test rax, rax ; jne 0xfd9d8 ; xor eax, eax ; pop rbx ; ret
0x000000000007808d : test rbx, rbx ; jne 0x780a9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002b393 : test rcx, rcx ; je 0x2b39f ; call rcx
0x0000000000133663 : test rdi, rdi ; je 0x133674 ; call 0x1f8af
0x0000000000133671 : test rdi, rdi ; je 0x133682 ; call 0x1f8af
0x000000000011f4c0 : test rdi, rdi ; jne 0x11f4b6 ; pop rbx ; ret
0x000000000011f4bf : test rdi, rdi ; jne 0x11f4b7 ; pop rbx ; ret
0x0000000000173aaa : test rdi, rdi ; jne 0x173aa0 ; pop rbx ; ret
0x000000000012d64f : test rdx, rdx ; je 0x12d661 ; mov rdi, rbp ; call rdx
0x0000000000173693 : test rdx, rdx ; je 0x17369f ; call rdx
0x000000000008adca : test rdx, rdx ; je 0x8ade8 ; bsf rax, rdx ; ret
0x000000000008adca : test rdx, rdx ; je 0x8ade9 ; bsf rax, rdx ; ret
0x000000000008af99 : test rdx, rdx ; je 0x8afc8 ; bsf rax, rdx ; ret
0x000000000008af99 : test rdx, rdx ; je 0x8afc9 ; bsf rax, rdx ; ret
0x00000000000cbb07 : test rdx, rdx ; je 0xcbb16 ; call rdx
0x0000000000071b3e : test rdx, rdx ; jne 0x71b36 ; ret
0x000000000007a2c2 : test rdx, rdx ; jne 0x7a2d5 ; ret
0x000000000007ae6e : test rdx, rdx ; jne 0x7ae66 ; ret
0x0000000000088c48 : test rdx, rdx ; jne 0x88c46 ; ret
0x000000000008ae90 : test rsi, rsi ; jne 0x8aea1 ; xor rax, rax ; ret
0x00000000000960bd : test rsi, rsi ; jne 0x960d2 ; jmp 0x9608c
0x000000000009e2ef : test sil, sil ; jne 0x9e2e8 ; mov qword ptr [rdx], rcx ; ret
0x0000000000002b82 : test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x0000000000079875 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x000000000009f14a : vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000014d63a : vmovdqu xmmword ptr [rax + 0x70], xmm12 ; ret
0x000000000014d570 : vmovdqu xmmword ptr [rcx - 0x10], xmm12 ; ret
0x000000000014d339 : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x00000000000a9ba5 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000014d47f : vmovdqu xmmword ptr [rdx - 0x10], xmm12 ; mov rax, r8 ; ret
0x000000000014d2a3 : vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x000000000014d306 : vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x00000000000a9ba9 : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000009f136 : vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x000000000009f11d : vmovdqu ymmword ptr [r9 - 0x20], ymm3 ; ret
0x00000000000a9b9b : vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x00000000000a9b9f : vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x00000000000a9bb4 : vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x00000000000a9bb8 : vmovq qword ptr [rsi - 8], xmm0 ; ret
0x000000000009f453 : vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x000000000009f2ec : vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x000000000009f0ee : vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x000000000009f0b2 : vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x000000000009f5b5 : vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x00000000000a9d58 : vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x00000000000a9cbb : vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x00000000000a9b5a : vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000014a2a1 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000032a3d : vpsubsb xmm13, xmm15, xmmword ptr [rdx + rax*4 + 0x29480005] ; ret
0x0000000000098794 : vpsubusw xmm8, xmm14, xmmword ptr [r13 - 0x77] ; ret 0x1374
0x0000000000172319 : vzeroupper ; ret
0x00000000001a4e3d : wait ; add byte ptr [rax], al ; add dh, ch ; in eax, dx ; call rsi
0x00000000001ad6a1 : wait ; hlt ; jmp qword ptr [rcx]
0x00000000000a936d : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a93ef : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000a94f1 : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x0000000000002bd4 : xabort -0xd ; ret
0x0000000000002bd0 : xbegin 0xfffffffff8c6efd0 ; ret
0x0000000000195dc1 : xchg ah, bh ; call rax
0x00000000001954c5 : xchg ah, bh ; jmp qword ptr [rdx]
0x0000000000195409 : xchg ah, bh ; jmp rax
0x000000000014507f : xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001458a3 : xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001471ef : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144c6f : xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x0000000000145993 : xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001457b3 : xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000188de5 : xchg ah, dh ; call rsp
0x0000000000188dc5 : xchg ah, dh ; jmp rdx
0x000000000014477b : xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000189840 : xchg al, al ; cmc ; call rdx
0x0000000000144f8b : xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b19c : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000014a9bc : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000014adac : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a5cc : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d0cd : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014bbd1 : xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x000000000014cdd1 : xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014c4d1 : xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014c7d1 : xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014bec9 : xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001461fb : xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x0000000000147d4f : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014752f : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x00000000001449ff : xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000146d0f : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x0000000000144d3f : xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x0000000000145d53 : xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x00000000000cf84c : xchg byte ptr [rax - 0x7d], cl ; ret 0xeb01
0x00000000000e7667 : xchg byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x39 ; ret
0x000000000014505b : xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a76b : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014512b : xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014786f : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001454e3 : xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x000000000014704f : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014682f : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x0000000000147a0f : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x0000000000144edf : xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000145f33 : xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001456c3 : xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x00000000001446cf : xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x00000000001a69d1 : xchg byte ptr [rbx], al ; mov word ptr [rdx], es ; push rdx ; ret
0x000000000002ebba : xchg byte ptr [rcx + rax - 0x10], cl ; jmp rax
0x0000000000146113 : xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000828e2 : xchg byte ptr [rcx], ah ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000000f1882 : xchg byte ptr [rcx], cl ; add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x0000000000144acf : xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x0000000000194f50 : xchg byte ptr [rdi - 4], bl ; call qword ptr [rsi]
0x000000000014ac5c : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a47c : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b58c : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000144faf : xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000146023 : xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014479f : xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x0000000000146b6f : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144841 : xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145965 : xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011ef5f : xchg byte ptr [rdx], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xe801
0x0000000000145a55 : xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145875 : xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000114a1e : xchg byte ptr [rip + 0x3948002b], bh ; ret 0xd975
0x0000000000144b9f : xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x000000000014c176 : xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146ca5 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001479a5 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d076 : xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c776 : xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c476 : xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x00000000001474c5 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014ab5d : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014be6e : xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b48d : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144e0f : xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001455d3 : xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x00000000001494ff : xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014931f : xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000149cf7 : xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001b0bc1 : xchg ch, dh ; jmp rax
0x0000000000148c17 : xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000149b17 : xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000019a459 : xchg cl, bh ; call rsp
0x0000000000147ce5 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146fe5 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000146b05 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147805 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x00000000001a6161 : xchg dh, ch ; call qword ptr [rsi]
0x00000000001a6191 : xchg dh, ch ; jmp rbx
0x000000000014acad : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000025b1 : xchg dh, ch ; ret 0x88ad
0x000000000014a4cd : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144865 : xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000145785 : xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001455a5 : xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145695 : xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001454b5 : xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x00000000000b9173 : xchg dword ptr [rax + 0x39], ecx ; ret 0x8946
0x00000000000d3524 : xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x000000000007f265 : xchg dword ptr [rax + rax], eax ; add dh, dh ; ret
0x00000000000fd8b1 : xchg dword ptr [rax + rax], ebp ; ret
0x00000000000fd8b0 : xchg dword ptr [rax + rax], r13d ; ret
0x000000000002f50f : xchg dword ptr [rax - 0x7d], ecx ; ret 0x4901
0x000000000002691b : xchg dword ptr [rax], eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x0000000000062499 : xchg dword ptr [rbp - 0x77000000], ecx ; ret 0x348
0x00000000000abbef : xchg dword ptr [rbp - 0x7b], eax ; sal byte ptr [rbp - 0x35], 0xf3 ; ret
0x000000000005eeeb : xchg dword ptr [rbp - 0x7cfffff0], ebp ; ret 0x8308
0x00000000000573fd : xchg dword ptr [rbx + rcx], esi ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000068155 : xchg dword ptr [rbx - 0x76fffff6], ebp ; ret 0x348
0x0000000000045ee8 : xchg dword ptr [rbx - 0x76fffff8], esp ; ret 0x348
0x00000000001825ec : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x000000000008595c : xchg dword ptr [rcx + rax - 0x7cb70000], ebx ; ret 0xe96e
0x00000000000f5f41 : xchg dword ptr [rcx + rax], ecx ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000608ab : xchg dword ptr [rcx - 0x76fffff9], ebp ; ret 0x348
0x000000000006597e : xchg dword ptr [rcx - 0x7d000000], ebp ; ret 0x8308
0x0000000000067847 : xchg dword ptr [rdi - 0x77000000], edi ; ret 0x348
0x000000000007ef44 : xchg dword ptr [rdi - 0x9fffffc], esi ; ret
0x00000000001147de : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x1147dd ; pop rdx ; pop r10 ; ret
0x00000000000f1d6b : xchg dword ptr [rdx - 0x76000002], ebp ; ret 0x8d48
0x000000000011ee73 : xchg dword ptr [rdx], ebp ; add byte ptr [rax - 0x7d], cl ; ret 0xe801
0x000000000007ef01 : xchg dword ptr [rdx], edx ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x0000000000060d1b : xchg dword ptr [rsi - 0x77000000], ebp ; ret 0x348
0x000000000006718b : xchg dword ptr [rsi - 0x7d000000], edx ; ret 0x8308
0x000000000018278b : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x0000000000148858 : xchg eax, ebp ; adc eax, 0x83480000 ; ret 0xe910
0x0000000000072966 : xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000000762cf : xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007e380 : xchg eax, ebp ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000074e52 : xchg eax, ebp ; add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x0000000000195de9 : xchg eax, ebp ; cld ; call rax
0x000000000002e197 : xchg eax, ebp ; cmp qword ptr [r8], r8 ; mov qword ptr fs:[rdx], rax ; ret
0x00000000001ad4b9 : xchg eax, ebp ; hlt ; jmp qword ptr [rcx]
0x00000000001980a1 : xchg eax, ebp ; jmp rsp
0x000000000007be6e : xchg eax, ebp ; nop ; mov rax, -1 ; ret
0x000000000011c5a2 : xchg eax, ebp ; nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x00000000000020d3 : xchg eax, ebp ; ret
0x00000000000b3283 : xchg eax, ebp ; ret 0x11eb
0x0000000000018fb8 : xchg eax, ebp ; ret 0x18
0x00000000000b1444 : xchg eax, ebp ; ret 0x2041
0x00000000000afb95 : xchg eax, ebp ; ret 0x294c
0x0000000000127058 : xchg eax, ebp ; ret 0x2c3c
0x00000000000ff0ab : xchg eax, ebp ; ret 0x2f3c
0x00000000000bb61c : xchg eax, ebp ; ret 0x3840
0x000000000009e135 : xchg eax, ebp ; ret 0x3941
0x000000000006cfb7 : xchg eax, ebp ; ret 0x5389
0x0000000000035dd5 : xchg eax, ebp ; ret 0x5489
0x000000000012a415 : xchg eax, ebp ; ret 0x8041
0x00000000000d9057 : xchg eax, ebp ; ret 0x8341
0x0000000000081c71 : xchg eax, ebp ; ret 0x8349
0x0000000000096b7e : xchg eax, ebp ; ret 0x8445
0x00000000000dfc5f : xchg eax, ebp ; ret 0x8488
0x0000000000047616 : xchg eax, ebp ; ret 0x854d
0x00000000000b9b4e : xchg eax, ebp ; ret 0x8b4c
0x00000000000b0acc : xchg eax, ebp ; ret 0x8eb
0x000000000003dac6 : xchg eax, ebp ; ret 0x941
0x0000000000030b17 : xchg eax, ebp ; ret 0x953d
0x00000000000ae1ab : xchg eax, ebp ; ret 0x9eb
0x00000000000b9d01 : xchg eax, ebp ; ret 0xa8e9
0x0000000000097f39 : xchg eax, ebp ; ret 0xb60f
0x00000000000ff104 : xchg eax, ebp ; ret 0xc084
0x0000000000047501 : xchg eax, ebp ; ret 0xc221
0x000000000003c3ca : xchg eax, ebp ; ret 0xd348
0x0000000000036931 : xchg eax, ebp ; ret 0xd521
0x00000000000b9bac : xchg eax, ebp ; ret 0xd721
0x0000000000045c2f : xchg eax, ebp ; ret 0xdaf7
0x0000000000123ff5 : xchg eax, ebp ; ret 0xe083
0x00000000000ac881 : xchg eax, ebp ; ret 0xe883
0x00000000000777e6 : xchg eax, ebp ; ret 0xf44
0x00000000000bc3df : xchg eax, ebp ; ret 0xf748
0x000000000012707f : xchg eax, ebp ; ret 0xf980
0x00000000000acb6e : xchg eax, ebp ; ret 0xf983
0x0000000000127430 : xchg eax, ebp ; ret 0xfb80
0x00000000000d912d : xchg eax, ebp ; ret 0xfb83
0x000000000013668d : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x1366f6 ; ret
0x00000000000fef44 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000e9f1c : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rdi], 0x47 ; ret 0x90c3
0x000000000006b2fa : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; ret
0x00000000000e9efe : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x000000000013658d : xchg eax, ebp ; sal bh, 0xd8 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000072f9d : xchg eax, ebp ; sal bh, 0xd8 ; ret
0x0000000000061b3b : xchg eax, ebp ; sar bl, 0xff ; dec dword ptr [rax + 0x39] ; ret 0x940f
0x00000000001bab29 : xchg eax, ebp ; sti ; jmp qword ptr [rdx]
0x0000000000002b81 : xchg eax, ebp ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x000000000007b632 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000080de7 : xchg eax, ebx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x000000000016dc80 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x0000000000003959 : xchg eax, ebx ; and cl, ah ; ret
0x00000000001888f8 : xchg eax, ebx ; call rdi
0x0000000000096454 : xchg eax, ebx ; clc ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000195da5 : xchg eax, ebx ; cld ; call rax
0x0000000000189831 : xchg eax, ebx ; cmc ; jmp qword ptr [rbx]
0x00000000001ad319 : xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000001a92a9 : xchg eax, ebx ; int1 ; call qword ptr [rax]
0x0000000000188910 : xchg eax, ebx ; jmp rdx
0x00000000000a51bc : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x0000000000150922 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000099cca : xchg eax, ebx ; ret
0x00000000000b7bfe : xchg eax, ebx ; ret 0x14c
0x0000000000037370 : xchg eax, ebx ; ret 0x3948
0x0000000000037ebd : xchg eax, ebx ; ret 0x3949
0x0000000000074c2f : xchg eax, ebx ; ret 0x840
0x0000000000038391 : xchg eax, ebx ; ret 0x8548
0x00000000000723d4 : xchg eax, ebx ; ret 0xd108
0x00000000000e9bd4 : xchg eax, ebx ; sub eax, 0x5a0a8900 ; pop rcx ; pop rbx ; ret
0x0000000000109a84 : xchg eax, ebx ; sub eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0x38] ; ret
0x000000000012dabe : xchg eax, ebx ; xor eax, eax ; pop rbx ; ret
0x0000000000029c43 : xchg eax, ecx ; adc dword ptr [rax], eax ; mov rdi, rbx ; call r12
0x0000000000083b88 : xchg eax, ecx ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000000001a4435 : xchg eax, ecx ; add byte ptr [rax], al ; test al, 0x8b ; in eax, dx ; call qword ptr [rdx]
0x0000000000063df8 : xchg eax, ecx ; add rcx, rdx ; jmp rcx
0x00000000000e07d5 : xchg eax, ecx ; add rdx, rcx ; jmp rdx
0x00000000001a8a09 : xchg eax, ecx ; cld ; jmp qword ptr [rbx]
0x00000000001ad189 : xchg eax, ecx ; hlt ; jmp qword ptr [rcx]
0x00000000001ad1a1 : xchg eax, ecx ; hlt ; jmp qword ptr [rsi]
0x0000000000196d91 : xchg eax, ecx ; in eax, dx ; call rsp
0x000000000010c843 : xchg eax, ecx ; jg 0x10c877 ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000018810d : xchg eax, ecx ; jmp qword ptr [rdx]
0x0000000000147df1 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000013350b : xchg eax, ecx ; ret
0x000000000014651f : xchg eax, ecx ; sub eax, edx ; ret
0x00000000001947a0 : xchg eax, ecx ; test al, 0xfd ; jmp qword ptr [rcx]
0x00000000000e9bd3 : xchg eax, ecx ; xchg eax, ebx ; sub eax, 0x5a0a8900 ; pop rcx ; pop rbx ; ret
0x0000000000024aad : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret 3
0x00000000001a4a5d : xchg eax, edi ; add byte ptr [rax], al ; jo 0x1a4a28 ; in eax, dx ; jmp qword ptr [rsi]
0x00000000000f600c : xchg eax, edi ; add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x0000000000114c78 : xchg eax, edi ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x0000000000045f08 : xchg eax, edi ; ret 0x870f
0x00000000000d204d : xchg eax, edi ; ret 0xd008
0x00000000000cce1e : xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x0000000000109146 : xchg eax, edi ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00000000000f8289 : xchg eax, edi ; ror byte ptr [rdi], 0xb6 ; shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x00000000000d7b36 : xchg eax, edi ; ror dword ptr [rdi], -0x6e ; ret 0xd138
0x0000000000182c38 : xchg eax, edi ; xchg eax, esp ; ret
0x0000000000094c0a : xchg eax, edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x00000000001a454d : xchg eax, edx ; add byte ptr [rax], al ; adc byte ptr [rbx], al ; std ; jmp rsp
0x0000000000061b51 : xchg eax, edx ; add byte ptr [rax], al ; add dh, dh ; ret 0x7504
0x000000000006d9be : xchg eax, edx ; add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x00000000000808ca : xchg eax, edx ; call qword ptr [rax]
0x0000000000195de1 : xchg eax, edx ; cld ; call rax
0x00000000001ad261 : xchg eax, edx ; hlt ; jmp qword ptr [rcx]
0x00000000001844fd : xchg eax, edx ; jae 0x1844da ; push rsi ; pop rdx ; je 0x1844cf ; ret 0xacfc
0x00000000001959bc : xchg eax, edx ; lodsd eax, dword ptr [rsi] ; cld ; jmp qword ptr [rdx]
0x000000000007801a : xchg eax, edx ; mov edx, eax ; jmp 0x77fb2
0x000000000006bc0d : xchg eax, edx ; or edx, dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000194fd8 : xchg eax, edx ; pop rsi ; cld ; jmp qword ptr [rdx]
0x000000000003cfb4 : xchg eax, edx ; ret 0x8348
0x00000000000f826e : xchg eax, edx ; ret 0x970f
0x000000000003d315 : xchg eax, edx ; ret 0xb60f
0x00000000000cce21 : xchg eax, edx ; ret 0xd029
0x00000000000d7b39 : xchg eax, edx ; ret 0xd138
0x0000000000149e6d : xchg eax, edx ; ret 0xf40
0x00000000001825ef : xchg eax, edx ; ret 0xf869
0x0000000000145277 : xchg eax, edx ; sub eax, edx ; ret
0x00000000001954c4 : xchg eax, edx ; xchg ah, bh ; jmp qword ptr [rdx]
0x000000000016df80 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000015a063 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000196955 : xchg eax, esi ; add byte ptr [rax], al ; sbb al, 0xeb ; jmp rsp
0x00000000000025ae : xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x0000000000199f11 : xchg eax, esi ; clc ; jmp rsp
0x0000000000195dad : xchg eax, esi ; cld ; call qword ptr [rax - 0x2f000380]
0x00000000000ab266 : xchg eax, esi ; cmc ; add byte ptr [rax], al ; ret
0x000000000002b766 : xchg eax, esi ; jbe 0x2b772 ; add byte ptr [rbx - 0x76be0008], al ; ret
0x000000000016e03d : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016df9b : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000d6873 : xchg eax, esi ; pop rbx ; ret
0x000000000011c524 : xchg eax, esi ; ret
0x00000000000362bc : xchg eax, esi ; ret 0x394c
0x000000000008a944 : xchg eax, esi ; ret 0xc031
0x0000000000184e8c : xchg eax, esi ; ret 0xcd11
0x0000000000123447 : xchg eax, esi ; ret 0xfb83
0x000000000016dfec : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001baa41 : xchg eax, esi ; sti ; jmp qword ptr [rdx]
0x0000000000195958 : xchg eax, esi ; stosb byte ptr [rdi], al ; cld ; jmp qword ptr [rsi]
0x00000000001a88c4 : xchg eax, esp ; add byte ptr [rax], 0 ; test al, 0x19 ; int1 ; jmp qword ptr [rcx]
0x00000000000dfd04 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x00000000001afd64 : xchg eax, esp ; add qword ptr [rax], rax ; or byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x00000000000e51f6 : xchg eax, esp ; and al, 0x20 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000b482c : xchg eax, esp ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000dfd02 : xchg eax, esp ; and al, 0x94 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x00000000000717a7 : xchg eax, esp ; and al, 0xe0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000001aa864 : xchg eax, esp ; cmc ; add byte ptr [rax], al ; cmp byte ptr [rcx], ah ; jmp qword ptr [rcx]
0x000000000019eb64 : xchg eax, esp ; cmp byte ptr [rax], al ; add al, bh ; shr ecx, 1 ; call qword ptr [rax]
0x00000000001a8b64 : xchg eax, esp ; fadd dword ptr [rax] ; add byte ptr [rax], bl ; and esi, ecx ; jmp qword ptr [rcx]
0x0000000000199dac : xchg eax, esp ; fild word ptr [rcx] ; add ah, ah ; clc ; call rsp
0x00000000001998c0 : xchg eax, esp ; in al, -9 ; call qword ptr [rbx + rax*8]
0x000000000019ae58 : xchg eax, esp ; leave ; cli ; jmp rsp
0x00000000001a6f64 : xchg eax, esp ; mov esp, 0xda280000 ; cld ; call qword ptr [rax]
0x0000000000196b9c : xchg eax, esp ; movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; in al, -0x2b ; in al, dx ; call rsp
0x00000000000d6841 : xchg eax, esp ; pop rbx ; ret
0x000000000019b0e0 : xchg eax, esp ; push rbx ; cld ; jmp rsp
0x000000000018509f : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x185030 ; ret 0x48f
0x000000000004723e : xchg eax, esp ; ret
0x00000000001a7564 : xchg eax, esp ; ret 0
0x00000000000eccf0 : xchg eax, esp ; ret 0x1589
0x00000000000b0c84 : xchg eax, esp ; ret 0x2041
0x00000000000b235d : xchg eax, esp ; ret 0x294c
0x00000000000e2309 : xchg eax, esp ; ret 0x2fe9
0x00000000000bb2cd : xchg eax, esp ; ret 0x3840
0x000000000009e1ee : xchg eax, esp ; ret 0x3941
0x0000000000124597 : xchg eax, esp ; ret 0x3945
0x00000000000e34ff : xchg eax, esp ; ret 0x3ae9
0x0000000000136548 : xchg eax, esp ; ret 0x3d83
0x00000000000d8313 : xchg eax, esp ; ret 0x4422
0x00000000000ed3eb : xchg eax, esp ; ret 0x5408
0x00000000000bb39a : xchg eax, esp ; ret 0x5438
0x00000000000598b3 : xchg eax, esp ; ret 0x7f3c
0x000000000008105e : xchg eax, esp ; ret 0x82e9
0x0000000000046d71 : xchg eax, esp ; ret 0x8341
0x0000000000026ec5 : xchg eax, esp ; ret 0x8348
0x0000000000110f8d : xchg eax, esp ; ret 0x840
0x0000000000096d77 : xchg eax, esp ; ret 0x8440
0x00000000000a9f35 : xchg eax, esp ; ret 0x8444
0x00000000000969a6 : xchg eax, esp ; ret 0x8445
0x000000000011ce9c : xchg eax, esp ; ret 0x8545
0x00000000000e15eb : xchg eax, esp ; ret 0x854d
0x00000000000e00fa : xchg eax, esp ; ret 0x8941
0x00000000000eb010 : xchg eax, esp ; ret 0x8944
0x00000000000e2035 : xchg eax, esp ; ret 0x8949
0x00000000000ebc16 : xchg eax, esp ; ret 0x8b48
0x0000000000020777 : xchg eax, esp ; ret 0x8d48
0x0000000000126552 : xchg eax, esp ; ret 0x93c
0x000000000004c350 : xchg eax, esp ; ret 0x9522
0x00000000000e349b : xchg eax, esp ; ret 0x9848
0x0000000000080aa7 : xchg eax, esp ; ret 0xb2e9
0x000000000002f458 : xchg eax, esp ; ret 0xb60f
0x00000000000db0b1 : xchg eax, esp ; ret 0xc031
0x00000000000ec099 : xchg eax, esp ; ret 0xc085
0x00000000000e443d : xchg eax, esp ; ret 0xc683
0x00000000000d919f : xchg eax, esp ; ret 0xd009
0x00000000000bb532 : xchg eax, esp ; ret 0xd021
0x0000000000046d86 : xchg eax, esp ; ret 0xd084
0x00000000000fe173 : xchg eax, esp ; ret 0xd108
0x000000000002086c : xchg eax, esp ; ret 0xd284
0x000000000009e3ef : xchg eax, esp ; ret 0xd308
0x0000000000061a46 : xchg eax, esp ; ret 0xd309
0x00000000000e00f2 : xchg eax, esp ; ret 0xd609
0x000000000006fefc : xchg eax, esp ; ret 0xdaf7
0x000000000008a9c8 : xchg eax, esp ; ret 0xf201
0x00000000000e340f : xchg eax, esp ; ret 0xf44
0x000000000011d082 : xchg eax, esp ; ret 0xf741
0x00000000000ae354 : xchg eax, esp ; ret 0xf883
0x00000000000d203c : xchg eax, esp ; ret 0xf983
0x000000000005238f : xchg eax, esp ; ret 0xfa80
0x00000000000a9e97 : xchg eax, esp ; ret 0xfd83
0x00000000000a9eb8 : xchg eax, esp ; ret 0xfe83
0x00000000000adec8 : xchg eax, esp ; ret 0xfff9
0x00000000001970dc : xchg eax, esp ; retf ; add byte ptr [rax], al ; test byte ptr [rdx], al ; out dx, al ; call rsp
0x00000000000ac33c : xchg eax, esp ; rol bl, 0x90 ; mov eax, 1 ; ret
0x00000000000eb226 : xchg eax, esp ; rol byte ptr [rcx - 0x7d], 0xf8 ; add dword ptr [rcx + 0xf], eax ; xchg eax, esp ; ret
0x0000000000094aa0 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc1 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000f809f : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x00000000000453a3 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000013bb89 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000fe1ca : xchg eax, esp ; sar dword ptr [rax], 0xf ; xchg eax, esp ; ret 0xd108
0x00000000000fe16e : xchg eax, esp ; sar dword ptr [rsp + rbx*2], 0xf ; xchg eax, esp ; ret 0xd108
0x00000000001acf64 : xchg eax, esp ; sbb al, 1 ; add byte ptr [rax - 0x79], ch ; hlt ; call qword ptr [rax]
0x00000000001a7359 : xchg eax, esp ; sti ; call qword ptr [rax]
0x000000000019b040 : xchg eax, esp ; sti ; jmp rsp
0x000000000019a76c : xchg eax, esp ; sub eax, dword ptr [rdx] ; add byte ptr [rcx + rax - 6], al ; jmp rsp
0x00000000001a5b64 : xchg eax, esp ; test al, 0 ; add al, ch ; xor al, 0xee ; jmp qword ptr [rdx]
0x0000000000199ec8 : xchg eax, esp ; test bh, al ; jmp rsp
0x000000000019772c : xchg eax, esp ; test byte ptr [rax], 0 ; adc r13d, edi ; jmp rsp
0x00000000001aaa64 : xchg eax, esp ; test dword ptr [rax], 0xf2299800 ; jmp rcx
0x00000000001ae364 : xchg eax, esp ; xor byte ptr [rcx], al ; add al, bh ; loop 0x1ae366 ; call qword ptr [rsi]
0x000000000011350e : xchg eax, r8d ; mov eax, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], eax ; call rcx
0x0000000000086c4a : xchg ebp, eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x00000000001a4139 : xchg ebp, ebp ; jmp qword ptr [rbx]
0x000000000010126c : xchg edi, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001017ec : xchg edi, esp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000105611 : xchg edx, ecx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xbc41
0x0000000000047d25 : xchg esi, ebp ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc083
0x00000000001954c1 : xchg esp, edi ; call qword ptr [rdx + 0x22fffc86]
0x000000000019543d : xchg esp, edi ; call qword ptr [rsi]
0x00000000001955fd : xchg esp, edi ; call rax
0x00000000001955f9 : xchg esp, edi ; inc dword ptr [rax - 0x79] ; cld ; call rax
0x000000000019557d : xchg esp, edi ; jmp rsp
0x00000000000cd56f : xchg esp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000001acf69 : xchg esp, esi ; call qword ptr [rax]
0x00000000001acf21 : xchg esp, esi ; call qword ptr [rsi]
0x0000000000074e51 : xchg rax, rbp ; add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x00000000001a7358 : xchg rax, rsp ; sti ; call qword ptr [rax]
0x00000000000be5b5 : xlatb ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001a8a05 : xlatb ; add byte ptr [rax], al ; pop rax ; xchg eax, ecx ; cld ; jmp qword ptr [rbx]
0x000000000017fa99 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000001507e9 : xlatb ; add r9, r11 ; jmp r9
0x00000000001ac509 : xlatb ; call qword ptr [rbx]
0x00000000001ac549 : xlatb ; call qword ptr [rsi]
0x0000000000188745 : xlatb ; call rbx
0x000000000019a049 : xlatb ; clc ; jmp rsp
0x00000000001886c5 : xlatb ; dec dword ptr [rbp - 0x33] ; jmp rax
0x0000000000186835 : xlatb ; in eax, dx ; call rbx
0x000000000018670d : xlatb ; in eax, dx ; jmp qword ptr [rbx]
0x00000000001020c9 : xlatb ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000001020d6 : xlatb ; int1 ; dec dword ptr [rcx - 0x75] ; jge 0x1020e4 ; call rbx
0x00000000000fc572 : xlatb ; ja 0xfc5a4 ; ret
0x00000000001ac589 : xlatb ; jmp qword ptr [rcx]
0x00000000001148e9 : xlatb ; jmp rax
0x0000000000183663 : xlatb ; jo 0x1836df ; mov ebp, 0xfb67d10d ; ret
0x000000000004a732 : xlatb ; mov byte ptr [rsi], al ; jne 0x4a718 ; mov rax, rsi ; ret
0x0000000000103fcd : xlatb ; mov eax, 0x8b49fff1 ; call rbx
0x0000000000103ccd : xlatb ; mov ebx, 0x8b49fff1 ; jge 0x103cdd ; call rbx
0x0000000000123786 : xlatb ; mov qword ptr [r9], rdi ; ret
0x00000000000891c9 : xlatb ; ret
0x0000000000184b06 : xlatb ; ret 0x4e27
0x0000000000003268 : xlatb ; ret 0x5a51
0x000000000008cb97 : xlatb ; ret 0x94c
0x000000000008df0f : xlatb ; ret 0xc085
0x00000000000891c0 : xlatb ; ret 0xc148
0x000000000009e7fb : xlatb ; ret 0xf188
0x000000000008ad44 : xlatb ; ret 0xf66
0x0000000000095ca1 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x000000000009e696 : xlatb ; rol dword ptr [rbp + 0x317475c0], -0x40 ; ret
0x00000000000a562e : xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x0000000000170136 : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x000000000009e5f4 : xlatb ; ror dword ptr [rdi], -0x43 ; ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000008a696 : xlatb ; sal bh, 1 ; ret 0x8000
0x000000000008a556 : xlatb ; sal bh, 1 ; ret 0xc000
0x000000000008a416 : xlatb ; sal bh, 1 ; ret 0xe000
0x000000000008a2d6 : xlatb ; sal bh, 1 ; ret 0xf000
0x000000000008a196 : xlatb ; sal bh, 1 ; ret 0xf800
0x000000000008a056 : xlatb ; sal bh, 1 ; ret 0xfc00
0x0000000000089f16 : xlatb ; sal bh, 1 ; ret 0xfe00
0x0000000000089dd6 : xlatb ; sal bh, 1 ; ret 0xff00
0x0000000000089c96 : xlatb ; sal bh, 1 ; ret 0xff80
0x0000000000089b56 : xlatb ; sal bh, 1 ; ret 0xffc0
0x0000000000089a16 : xlatb ; sal bh, 1 ; ret 0xffe0
0x00000000000898d6 : xlatb ; sal bh, 1 ; ret 0xfff0
0x0000000000089796 : xlatb ; sal bh, 1 ; ret 0xfff8
0x0000000000089656 : xlatb ; sal bh, 1 ; ret 0xfffc
0x0000000000089516 : xlatb ; sal bh, 1 ; ret 0xfffe
0x0000000000170132 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x000000000008cb35 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000008cb46 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000194a91 : xlatb ; sti ; inc dword ptr [rax - 0x27] ; sti ; jmp qword ptr [rax]
0x0000000000194ab1 : xlatb ; sti ; inc dword ptr [rax] ; fsincos ; call rax
0x0000000000035f58 : xlatb ; xor eax, eax ; ret
0x00000000000a4e28 : xor ah, ah ; mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x00000000000a4dbe : xor ah, ah ; mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x0000000000194d61 : xor ah, bh ; call qword ptr [rax]
0x0000000000194e25 : xor ah, bh ; call rax
0x00000000000025e0 : xor ah, byte ptr [rsi] ; sahf ; jl 0x2579 ; loop 0x25c4 ; ret 0x23cb
0x000000000013c541 : xor al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000000d7b0 : xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x000000000007cb49 : xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000007d2c3 : xor al, 0 ; add dword ptr [rbx - 0xd], ebx ; ret
0x000000000007cad6 : xor al, 0 ; add dword ptr [rip + 0x348c85], 1 ; ret
0x0000000000083051 : xor al, 0 ; jne 0x83067 ; jmp 0x83081
0x0000000000083151 : xor al, 0 ; jne 0x83167 ; jmp 0x83181
0x00000000000811ce : xor al, 0 ; mov qword ptr [rsp + 0x10], r8 ; xor edi, edi ; call qword ptr [rax]
0x00000000000810e4 : xor al, 0 ; mov rdi, r14 ; call qword ptr [rax]
0x000000000007ca45 : xor al, 0 ; ret
0x0000000000081309 : xor al, 0 ; xor edi, edi ; call qword ptr [rax]
0x00000000001ac504 : xor al, 0x12 ; add dword ptr [rax], eax ; sbb bh, dl ; call qword ptr [rbx]
0x00000000001971e8 : xor al, 0x19 ; out dx, al ; call rsp
0x00000000001825ea : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x000000000019a5b4 : xor al, 0x20 ; add al, byte ptr [rax] ; xchg eax, esp ; ret 0xfff9
0x000000000019d704 : xor al, 0x24 ; add byte ptr [rax], al ; cmp byte ptr [rcx - 0x17], bh ; call qword ptr [rcx]
0x00000000000960bb : xor al, 0x24 ; test rsi, rsi ; jne 0x960d4 ; jmp 0x9608e
0x0000000000174b02 : xor al, 0x25 ; add byte ptr [rax + 0x39], cl ; ret
0x00000000001977b0 : xor al, 0x29 ; out dx, eax ; jmp rsp
0x00000000000dd9e2 : xor al, 0x2b ; call 0x93a48
0x00000000000ac534 : xor al, 0x31 ; add byte ptr [rbp + rcx*4 + 0x35], cl ; ret 0x314c
0x0000000000080efc : xor al, 0x34 ; add byte ptr [rbp + 0x39], cl ; ret 0x8948
0x00000000000352f3 : xor al, 0x39 ; add byte ptr [rbp - 0xcf98a40], al ; ret
0x0000000000002051 : xor al, 0x39 ; push rbx ; cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x000000000009e71b : xor al, 0x48 ; lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x00000000001aff04 : xor al, 0x4c ; add dword ptr [rax], eax ; js 0x1aff7d ; cmc ; jmp qword ptr [rcx]
0x00000000001b0304 : xor al, 0x50 ; add dword ptr [rax], eax ; pop rax ; jo 0x1b0307 ; jmp qword ptr [rcx]
0x0000000000197398 : xor al, 0x50 ; out dx, al ; call rsp
0x00000000001b2104 : xor al, 0x6e ; add dword ptr [rax], eax ; and rsi, rsi ; jmp qword ptr [rsi]
0x00000000001978d8 : xor al, 0x72 ; out dx, eax ; jmp rsp
0x00000000000aa261 : xor al, 0x81 ; add rcx, rsi ; jmp rcx
0x00000000000e4ec2 : xor al, 0x83 ; ret 0x4401
0x00000000000e8563 : xor al, 0x89 ; ret 0x4489
0x000000000003295d : xor al, 0x89 ; ret 0x5525
0x00000000000aa229 : xor al, 0x90 ; add rax, rsi ; jmp rax
0x0000000000196d90 : xor al, 0x91 ; in eax, dx ; call rsp
0x00000000001b5204 : xor al, 0x9f ; add dword ptr [rax], eax ; cwde ; jrcxz 0x1b5208 ; call rcx
0x00000000001a5f04 : xor al, 0xac ; add byte ptr [rax], al ; jno 0x1a5f00 ; jmp qword ptr [rdx]
0x00000000001a6304 : xor al, 0xb0 ; add byte ptr [rax], al ; test al, 0x3e ; cli ; call qword ptr [rax]
0x00000000000c48a4 : xor al, 0xb0 ; add rax, rsi ; jmp rax
0x00000000000c4832 : xor al, 0xb2 ; add rdx, rsi ; jmp rdx
0x00000000001a6604 : xor al, 0xb3 ; add byte ptr [rax], al ; in al, -0x12 ; call qword ptr [rax]
0x00000000000d6bb5 : xor al, 0xb6 ; cmp r8d, esi ; jge 0xd6b98 ; mov edx, eax ; jmp 0xd6ba1
0x000000000006ca4f : xor al, 0xb7 ; add rdi, rsi ; jmp rdi
0x0000000000033400 : xor al, 0xb7 ; add rsi, rdi ; jmp rsi
0x00000000001a8a04 : xor al, 0xd7 ; add byte ptr [rax], al ; pop rax ; xchg eax, ecx ; cld ; jmp qword ptr [rbx]
0x00000000001837ca : xor al, 0xd8 ; ret
0x00000000000b9438 : xor al, 0xe ; add eax, 0x74db8500 ; or bh, byte ptr [rcx] ; ret
0x00000000000b3ab4 : xor al, 0xe9 ; ret 6
0x0000000000197a48 : xor al, 0xec ; out dx, eax ; jmp rsp
0x00000000001a5b69 : xor al, 0xee ; jmp qword ptr [rdx]
0x0000000000194d69 : xor al, 0xfc ; call qword ptr [rax]
0x0000000000195371 : xor al, 0xfc ; jmp qword ptr [rax + 0x20fffc35]
0x0000000000194e4d : xor al, 0xfc ; jmp qword ptr [rax]
0x00000000001ae73d : xor al, 1 ; add byte ptr [rax], ah ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000000ab0f8 : xor al, 1 ; add byte ptr [rax], al ; ret
0x00000000001ae725 : xor al, 1 ; add byte ptr [rax], cl ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x000000000004ba6f : xor al, 2 ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000106cab : xor al, al ; or eax, edi ; ret
0x0000000000194a30 : xor al, bl ; sti ; push rax ; fsincos ; call rax
0x00000000001ae51d : xor al, byte ptr [rcx] ; add al, dh ; out 0xf4, al ; jmp qword ptr [rcx]
0x00000000001ae56d : xor al, byte ptr [rcx] ; add byte ptr [rax - 0x19], al ; hlt ; jmp qword ptr [rcx]
0x0000000000104aa8 : xor al, ch ; ret 0xf6bf
0x00000000000face8 : xor ax, ax ; ret
0x0000000000194e49 : xor bh, ah ; call qword ptr [rax + 0x20fffc34]
0x0000000000194d65 : xor bh, ah ; call qword ptr [rax]
0x0000000000194e29 : xor bh, ah ; call rax
0x00000000001a50a0 : xor bh, bh ; in eax, dx ; call qword ptr [rsi]
0x000000000018782c : xor bh, bh ; int1 ; jmp rax
0x0000000000194661 : xor bh, bl ; jmp qword ptr [rax]
0x00000000001b5d79 : xor bh, dh ; call rcx
0x00000000001ac5a0 : xor bh, dl ; jmp qword ptr [rcx]
0x00000000001115ea : xor bl, 0xff ; dec dword ptr [rax - 0x75] ; cmp byte ptr [rax - 0x77], cl ; ret
0x000000000008e16c : xor bl, al ; nop ; xor rax, rax ; ret
0x0000000000195be4 : xor bl, byte ptr [rdi - 0x615d0004] ; cld ; call qword ptr [rdx]
0x0000000000128718 : xor byte ptr [eax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x00000000000ab1ec : xor byte ptr [r11], r15b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x000000000008e02d : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x0000000000047b77 : xor byte ptr [r8 - 0x75], r9b ; jg 0x47bed ; xor eax, eax ; ret
0x000000000012e0d2 : xor byte ptr [r8 - 0x77], cl ; ret 0x8b48
0x0000000000133c12 : xor byte ptr [r8], r8b ; add byte ptr [rax], al ; add al, ch ; ret
0x00000000001103c1 : xor byte ptr [rax + 0x39], cl ; ret 0xe975
0x00000000000c3bbb : xor byte ptr [rax + 0x63], cl ; ret 0x894c
0x00000000000f543f : xor byte ptr [rax + 0x63], cl ; ret 0xc283
0x00000000000890d1 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x000000000009e6f6 : xor byte ptr [rax + 1], cl ; ret 0x547c
0x000000000012b1c7 : xor byte ptr [rax - 0x73], cl ; add eax, 0x29cbd1 ; pop rbx ; ret
0x000000000012b18f : xor byte ptr [rax - 0x73], cl ; add eax, 0x29cc09 ; pop rbx ; ret
0x000000000012b0d0 : xor byte ptr [rax - 0x73], cl ; add eax, 0x29ccc8 ; pop rbx ; ret
0x00000000000a7d07 : xor byte ptr [rax - 0x73], cl ; ret
0x0000000000047f08 : xor byte ptr [rax - 0x75], cl ; jbe 0x47f84 ; xor eax, eax ; ret
0x00000000000bda14 : xor byte ptr [rax - 0x75], cl ; je 0xbda45 ; cmp byte ptr [rcx + 1], cl ; ret
0x0000000000047b78 : xor byte ptr [rax - 0x75], cl ; jg 0x47bec ; xor eax, eax ; ret
0x0000000000047f07 : xor byte ptr [rax - 0x75], r9b ; jbe 0x47f85 ; xor eax, eax ; ret
0x0000000000088fff : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000000000013bb1a : xor byte ptr [rax - 0x77], cl ; and al, 8 ; xor eax, eax ; call rdx
0x00000000000afb90 : xor byte ptr [rax - 0x77], cl ; call 0x4ccd90ad
0x00000000000b5038 : xor byte ptr [rax - 0x77], cl ; call 0x4ccde555
0x00000000000c80d9 : xor byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x00000000000acb2d : xor byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x0000000000076ae3 : xor byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000306c1 : xor byte ptr [rax - 0x77], cl ; ret
0x00000000000cf1c6 : xor byte ptr [rax - 0x77], cl ; ret 0x8040
0x00000000000e04ec : xor byte ptr [rax - 0x77], cl ; ret 0x8041
0x000000000012e0d3 : xor byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000d674e : xor byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000072aa2 : xor byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x0000000000128719 : xor byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x00000000000332e5 : xor byte ptr [rax - 0x7d], cl ; ret
0x0000000000195d70 : xor byte ptr [rax - 0x7eaf0004], al ; cld ; call rax
0x00000000000745ed : xor byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000133c13 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000020b89 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x28 ; jmp rax
0x000000000008ce28 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x000000000002084e : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000039fba : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x0000000000035313 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000003a5e4 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr fs:[rbp], rdx ; call rax
0x000000000002f6d4 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x00000000000aa285 : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000114fab : xor byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x114fe9 ; call rax
0x000000000004d359 : xor byte ptr [rax], al ; add byte ptr [rax], al ; xor esi, esi ; call rax
0x00000000000bc65a : xor byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000badb1 : xor byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000729ea : xor byte ptr [rax], al ; je 0x729f4 ; ret
0x00000000000be131 : xor byte ptr [rax], al ; lea rcx, qword ptr [rax + r12] ; mov rdx, rax ; jmp 0xbe148
0x00000000000a9587 : xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000ab1f0 : xor byte ptr [rbp + 0x3d], dh ; ret
0x00000000000ab1ef : xor byte ptr [rbp + 0x3d], r14b ; ret
0x000000000007bb90 : xor byte ptr [rbp + 0xd], 0x48 ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001731bb : xor byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret
0x00000000001baff0 : xor byte ptr [rbp - 8], dl ; call qword ptr [rax]
0x0000000000084b4c : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012124c : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001a4b77 : xor byte ptr [rbx + 0xaea0206], al ; ret
0x00000000000e855e : xor byte ptr [rbx + r9*4 + 0x46], r8b ; xor al, 0x89 ; ret 0x4489
0x00000000000e855f : xor byte ptr [rbx + rcx*4 + 0x46], al ; xor al, 0x89 ; ret 0x4489
0x000000000008ed2b : xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x000000000007befe : xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x000000000012b09d : xor byte ptr [rbx - 0x3d], bl ; ret
0x00000000001b09a0 : xor byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x00000000001b0500 : xor byte ptr [rbx - 0xb], dh ; jmp qword ptr [rcx]
0x0000000000194c58 : xor byte ptr [rbx], al ; cld ; call qword ptr [rax]
0x00000000000ab1ed : xor byte ptr [rbx], bh ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x00000000001a8e30 : xor byte ptr [rbx], dh ; int1 ; jmp rdi
0x0000000000001b24 : xor byte ptr [rcx + 0x3a6d4813], ah ; ret
0x000000000003ce8e : xor byte ptr [rcx - 0x77], al ; ret 0x8d48
0x0000000000051347 : xor byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000010eedf : xor byte ptr [rcx - 0x7d], cl ; ret 0x4801
0x00000000000e052e : xor byte ptr [rcx - 0x80], al ; stc ; adc dword ptr [rsi + rsi + 0x48], esi ; mov edx, eax ; jmp 0xe04d8
0x00000000001946a0 : xor byte ptr [rcx - 5], dl ; call qword ptr [rax]
0x00000000000fbb0c : xor byte ptr [rcx], 0xc0 ; ret
0x00000000001ae365 : xor byte ptr [rcx], al ; add al, bh ; loop 0x1ae365 ; call qword ptr [rsi]
0x00000000001ae37d : xor byte ptr [rcx], al ; add byte ptr [rax], al ; jrcxz 0x1ae37d ; jmp qword ptr [rcx]
0x00000000000745ee : xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000000783e7 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000006dc69 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000000668aa : xor byte ptr [rcx], dh ; imul cl ; ret
0x000000000012127b : xor byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000109e1a : xor byte ptr [rcx], dh ; rol byte ptr [rbx - 0x69f0f601], 0xc0 ; ret
0x00000000001b60c0 : xor byte ptr [rdi - 9], al ; jmp qword ptr [rsi]
0x00000000001012b1 : xor byte ptr [rdi], cl ; lahf ; ret 0xe883
0x0000000000071c00 : xor byte ptr [rdi], cl ; ret 0x4389
0x00000000001945f4 : xor byte ptr [rdi], cl ; sti ; jmp qword ptr [rax]
0x0000000000051312 : xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000000f9b1d : xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8445
0x000000000008a9c6 : xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf201
0x00000000000952cc : xor byte ptr [rdx + 0xe], 0x2a ; ret
0x000000000018b9cc : xor byte ptr [rdx - 0x75cf0006], cl ; cli ; call qword ptr [rax]
0x0000000000194680 : xor byte ptr [rdx - 5], al ; call qword ptr [rax]
0x0000000000194660 : xor byte ptr [rdx], 0xfb ; jmp qword ptr [rax]
0x0000000000194bd4 : xor byte ptr [rdx], al ; cld ; call qword ptr [rax]
0x00000000001a5437 : xor byte ptr [rdx], al ; ret
0x00000000001a94d7 : xor byte ptr [rdx], al ; ret 0xe0a
0x0000000000194ca8 : xor byte ptr [rdx], cl ; cld ; push qword ptr [rax] ; or al, 0xfc ; jmp rax
0x000000000016dd2f : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008cafc : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000008e02e : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000038fda : xor byte ptr [rsi - 0x73], cl ; cmp al, 0x33 ; call rax
0x00000000001b06b0 : xor byte ptr [rsi - 0xb], dh ; jmp qword ptr [rcx]
0x000000000019cfc0 : xor byte ptr [rsi], 0xe9 ; call qword ptr [rsi]
0x0000000000194b9c : xor byte ptr [rsi], al ; cld ; call qword ptr [rax]
0x0000000000194bb8 : xor byte ptr [rsp + rdi*8], al ; call qword ptr [rax]
0x0000000000194cac : xor byte ptr [rsp + rdi*8], cl ; jmp rax
0x00000000001969f1 : xor ch, bl ; jmp rsp
0x00000000000e4c30 : xor ch, byte ptr [rcx] ; ret
0x00000000000a9318 : xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a932e : xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a9350 : xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a936e : xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a938e : xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a93b4 : xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a93d0 : xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a93f0 : xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000a9410 : xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a9436 : xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a9458 : xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a9476 : xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000a9496 : xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000a94b2 : xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000a94d2 : xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000a94f2 : xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000a9512 : xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a9538 : xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a9588 : xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a925e : xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a927c : xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a929c : xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a92be : xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a92de : xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a92fe : xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000a9194 : xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000a91a6 : xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000a91bc : xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a91d4 : xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000a91ea : xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a91fc : xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000a921a : xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000a9226 : xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000a923c : xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000a9180 : xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x00000000001a5a11 : xor ch, dh ; jmp qword ptr [rcx]
0x00000000000957bb : xor cl, byte ptr [rax + 0x39] ; ret
0x00000000000c3bb6 : xor cl, byte ptr [rax - 0x75] ; jl 0xc3be7 ; xor byte ptr [rax + 0x63], cl ; ret 0x894c
0x00000000000fd792 : xor cl, byte ptr [rax - 0x76b7ffd4] ; ret 0xb6e9
0x0000000000131b3f : xor cl, byte ptr [rax - 0x77] ; jp 0x131b51 ; ret
0x00000000001348af : xor cl, byte ptr [rax - 0x77] ; jp 0x1348c1 ; ret
0x00000000001348c7 : xor cl, byte ptr [rax - 0x77] ; jp 0x1348d9 ; ret
0x00000000001350ff : xor cl, byte ptr [rax - 0x77] ; jp 0x135111 ; ret
0x0000000000135117 : xor cl, byte ptr [rax - 0x77] ; jp 0x135129 ; ret
0x0000000000135147 : xor cl, byte ptr [rax - 0x77] ; jp 0x135159 ; ret
0x0000000000082d35 : xor cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00000000000e6c7d : xor cl, byte ptr [rax - 0x7d] ; ret 0x4908
0x000000000013054c : xor cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000188b68 : xor cl, byte ptr [rbp - 0xc] ; lcall ptr [rcx] ; push rdx ; hlt ; jmp qword ptr [rbx]
0x000000000010d5a1 : xor cl, byte ptr [rdi] ; mov dh, 0x4f ; add dword ptr [rcx - 0x7d], ecx ; ret 0x8408
0x0000000000102eb2 : xor cl, byte ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x000000000002db92 : xor cl, byte ptr [rip - 0x77cb800] ; dec dword ptr [rax - 0x77] ; ret
0x00000000001a9a10 : xor cl, ch ; int1 ; call rdi
0x00000000001101c1 : xor cl, ch ; ret
0x00000000000a4ca0 : xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000001949bc : xor dh, bl ; sti ; call qword ptr [rax]
0x000000000012f014 : xor dh, dh ; ret 0xc707
0x000000000018681c : xor dl, bl ; in eax, dx ; call qword ptr [rcx]
0x000000000002d8ff : xor dword ptr [rax + 0x39], ecx ; ror byte ptr [rax - 0x39], 1 ; ret 0xffff
0x0000000000086875 : xor dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x0000000000101678 : xor dword ptr [rax + rax], ebp ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009e2ee : xor dword ptr [rax - 0x7c], eax ; div byte ptr [rbp - 0x14] ; mov qword ptr [rdx], rcx ; ret
0x00000000000d0e2e : xor dword ptr [rax - 0x7d], ecx ; ret
0x000000000009c1b9 : xor dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000103353 : xor dword ptr [rsi], eax ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000004e5d8 : xor eax, 0x1304 ; add rax, rsi ; jmp rax
0x00000000000450d0 : xor eax, 0x1cb ; call rax
0x00000000000fb913 : xor eax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x0000000000194dcd : xor eax, 0x2820fffc ; cld ; jmp rax
0x0000000000194dad : xor eax, 0x2850fffc ; cld ; call qword ptr [rax]
0x000000000006f15b : xor eax, 0x30 ; call rax
0x0000000000063b18 : xor eax, 0x35f453 ; call rax
0x000000000005be0a : xor eax, 0x367161 ; call rax
0x000000000005b7b4 : xor eax, 0x3677b7 ; call rax
0x000000000005000c : xor eax, 0x372f5f ; call rax
0x000000000004d390 : xor eax, 0x375bdb ; call rax
0x00000000000780b1 : xor eax, 0x39480000 ; ret
0x00000000000419ba : xor eax, 0x40b9 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000006c3cd : xor eax, 0x48b4800 ; ret 0x8548
0x0000000000101677 : xor eax, 0x59002c31 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001bbe13 : xor eax, 0x78d0000 ; rol byte ptr [rcx], cl ; ret 0xa
0x00000000000e77ab : xor eax, 0x894cfffa ; jmp 0x48d10105
0x00000000000e77aa : xor eax, 0x894cfffa ; jmp 0x48d10106
0x000000000018174c : xor eax, 0x8ffeb22 ; and ebx, ebp ; call qword ptr [rbx]
0x00000000000202f7 : xor eax, 0xbf00089d ; ret 0
0x0000000000002479 : xor eax, 0xdd410018 ; out 0xa9, al ; ret 0xbd07
0x0000000000058295 : xor eax, 0xf6ffffee ; ret 0xf10
0x00000000001980fd : xor eax, 0xfb40001 ; call rsp
0x000000000007c67b : xor eax, 0xffffe1e0 ; call rax
0x000000000007c22b : xor eax, 0xffffe630 ; call rax
0x000000000007be3b : xor eax, 0xffffea20 ; call rax
0x000000000007addb : xor eax, 0xfffffa80 ; call rax
0x000000000007ab6b : xor eax, 0xfffffcf0 ; call rax
0x000000000006f454 : xor eax, 0xfffffd37 ; call rax
0x000000000002084b : xor eax, dword ptr [0x30] ; call rax
0x0000000000035310 : xor eax, dword ptr [0x30] ; jmp rax
0x000000000004d356 : xor eax, dword ptr [0x30] ; xor esi, esi ; call rax
0x000000000019e64d : xor eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000019e5e5 : xor eax, dword ptr [rax] ; add byte ptr [rax], bh ; ret 0xffe9
0x0000000000087a52 : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x0000000000087cd8 : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000087bc1 : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000008dd0c : xor eax, dword ptr [rax] ; add rsp, 0x100 ; ret
0x0000000000087c74 : xor eax, dword ptr [rax] ; add rsp, 0x18 ; ret
0x000000000008cdaa : xor eax, dword ptr [rax] ; add rsp, 8 ; ret
0x0000000000083533 : xor eax, dword ptr [rax] ; mov qword ptr [rax], rdi ; ret
0x00000000000887ed : xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x0000000000088b5d : xor eax, dword ptr [rax] ; mov qword ptr [rsp], rax ; call qword ptr [rdx]
0x0000000000084de4 : xor eax, dword ptr [rax] ; test eax, eax ; js 0x84df7 ; ret
0x00000000001ae5fd : xor eax, dword ptr [rcx] ; add byte ptr [rax - 0x18], al ; hlt ; jmp qword ptr [rcx]
0x00000000001ae615 : xor eax, dword ptr [rcx] ; add byte ptr [rax - 0x18], bl ; hlt ; jmp qword ptr [rcx]
0x000000000005941e : xor eax, dword ptr [rip - 0x77cb800] ; dec dword ptr [rcx - 0x77] ; ret
0x00000000000c6e80 : xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013301c : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000bed52 : xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000121a25 : xor eax, eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000011e228 : xor eax, eax ; add rsp, 0x28 ; ret
0x0000000000136905 : xor eax, eax ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000143638 : xor eax, eax ; add rsp, 0x38 ; ret
0x0000000000142e9f : xor eax, eax ; add rsp, 0x48 ; ret
0x000000000003a07c : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000badde : xor eax, eax ; add rsp, 8 ; ret
0x000000000002df30 : xor eax, eax ; and edi, 0xffffff80 ; sete al ; ret
0x00000000000e976c : xor eax, eax ; call 0x55984
0x000000000013acc1 : xor eax, eax ; call r8
0x00000000000751d7 : xor eax, eax ; call rbx
0x000000000013ad0b : xor eax, eax ; call rcx
0x000000000013bb20 : xor eax, eax ; call rdx
0x000000000003a6b6 : xor eax, eax ; cmp byte ptr [rdi], 0 ; jne 0x3a6c8 ; pop rbx ; ret
0x00000000000d683c : xor eax, eax ; cmp cl, byte ptr [rsi] ; je 0xd67dd ; pop rbx ; ret
0x0000000000109e1b : xor eax, eax ; cmp edi, 9 ; setbe al ; ret
0x00000000000d0c14 : xor eax, eax ; cmp edx, 1 ; sete al ; ret
0x0000000000101c2a : xor eax, eax ; cmp qword ptr [rsi], 0 ; je 0x101c41 ; pop rbx ; ret
0x00000000000fc56e : xor eax, eax ; cmp rdi, rdx ; ja 0xfc5a8 ; ret
0x000000000013b5dc : xor eax, eax ; cmp rdx, rcx ; je 0x13b5f8 ; ret
0x00000000001141e7 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x00000000000ad5a2 : xor eax, eax ; jmp 0xad389
0x00000000000ad9b1 : xor eax, eax ; jmp 0xad7e9
0x000000000012d950 : xor eax, eax ; jmp rcx
0x00000000001152b5 : xor eax, eax ; leave ; ret
0x0000000000123948 : xor eax, eax ; mov byte ptr [rsi + 3], r11b ; pop rbx ; ret
0x000000000012285d : xor eax, eax ; mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x00000000000fbaa0 : xor eax, eax ; mov dword ptr [rdi + 8], esi ; ret
0x000000000003ac72 : xor eax, eax ; mov qword ptr [rdi + 8], rdx ; ret
0x000000000009e318 : xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x0000000000115111 : xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x0000000000129b2a : xor eax, eax ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x0000000000139fb8 : xor eax, eax ; mov rdi, rbp ; add rbx, r12 ; call r14
0x00000000000d46d6 : xor eax, eax ; mov rdx, r8 ; jmp 0xd46fb
0x00000000001325d7 : xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x000000000003b360 : xor eax, eax ; mov word ptr [rdi + 2], dx ; ret
0x000000000006e729 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000001fb75 : xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000cc987 : xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000012b772 : xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000012cf5f : xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x0000000000022b4f : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000bab38 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000003a25d : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006ac04 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000033ed6 : xor eax, eax ; pop rbx ; ret
0x0000000000123636 : xor eax, eax ; rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x000000000001fb7b : xor eax, eax ; ret
0x000000000009edde : xor eax, eax ; sub eax, ecx ; ret
0x0000000000077350 : xor eax, eax ; test byte ptr [rdi], 4 ; sete al ; ret
0x0000000000077360 : xor eax, eax ; test byte ptr [rdi], 8 ; sete al ; ret
0x00000000000aa1d8 : xor eax, eax ; test dh, 0xf0 ; je 0xaa1ab ; movzx eax, dl ; pop rbx ; ret
0x0000000000036258 : xor eax, eax ; test edx, edx ; sete al ; ret
0x000000000007a2c0 : xor eax, eax ; test rdx, rdx ; jne 0x7a2d7 ; ret
0x000000000018890c : xor eax, ecx ; inc dword ptr [rdi - 0x1d000c28] ; ret 0xfff3
0x000000000003afae : xor eax, ecx ; ret
0x0000000000133639 : xor eax, edx ; out dx, al ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x000000000003a627 : xor eax, edx ; sub eax, edx ; ret
0x000000000003a63b : xor eax, edx ; sub rax, rdx ; ret
0x00000000000c74ba : xor ebp, 0xffffffff ; nop dword ptr [rax] ; pop rbx ; ret
0x00000000000bc1f3 : xor ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000087aea : xor ebx, ebx ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x00000000000c7a6d : xor ecx, dword ptr [rax + 0x39] ; ret 0xdd72
0x0000000000025041 : xor ecx, dword ptr [rax - 0x77] ; ret
0x00000000000f29c9 : xor ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000096475 : xor ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000008883c : xor ecx, dword ptr [rcx + rcx*4 + 0x4b] ; call rcx
0x000000000002c4b2 : xor ecx, eax ; ret 0x4809
0x0000000000029a73 : xor ecx, ecx ; call r15
0x0000000000034a60 : xor ecx, ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000000ac644 : xor ecx, ecx ; xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x0000000000044dd7 : xor edi, 0x89480014 ; ret 0xc148
0x00000000001288a4 : xor edi, dword ptr [0x30] ; call rax
0x0000000000104071 : xor edi, dword ptr [rax + 0x1f0ffff1] ; add bl, dh ; ret
0x00000000001123d1 : xor edi, edi ; call 0x2e624
0x000000000007d889 : xor edi, edi ; call qword ptr [r15]
0x00000000000811d5 : xor edi, edi ; call qword ptr [rax]
0x00000000000c6b65 : xor edi, edi ; call rax
0x000000000007d85a : xor edi, edi ; mov r13, rdx ; call qword ptr [r15]
0x0000000000194dc9 : xor edi, esp ; call qword ptr [rax + 0x20fffc35]
0x0000000000194e09 : xor edi, esp ; call qword ptr [rax]
0x0000000000039fb7 : xor edx, dword ptr [0x30] ; call rdx
0x0000000000001b10 : xor edx, dword ptr [rdx - 0x7b] ; mov bl, 0xee ; enter 0x59e7, 0x5b ; ret 0x2a63
0x000000000019ee99 : xor edx, ebp ; jmp rax
0x00000000000218e3 : xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x00000000000bf401 : xor edx, edx ; add rsp, 8 ; mov rax, rdx ; ret
0x0000000000050483 : xor edx, edx ; div ecx ; add eax, r8d ; ret
0x00000000000780b9 : xor edx, edx ; div rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000780fc : xor edx, edx ; div rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000117059 : xor edx, edx ; div rbx ; pop rbx ; pop rbp ; ret
0x00000000000c7a8e : xor edx, edx ; jmp 0xc7a58
0x00000000000ac646 : xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x000000000009e3ad : xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000007b939 : xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000007dcf4 : xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000008cd83 : xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x000000000010c117 : xor edx, edx ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000000f6220 : xor edx, edx ; xor esi, esi ; lea rdi, qword ptr [rsp + 0xc] ; call rax
0x0000000000102d21 : xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x0000000000187289 : xor esi, eax ; jmp qword ptr [rax]
0x00000000001a8e31 : xor esi, ecx ; jmp rdi
0x00000000001aab39 : xor esi, edx ; call qword ptr [rax]
0x00000000000e454e : xor esi, esi ; call 0x8e816
0x000000000004d35d : xor esi, esi ; call rax
0x00000000000f6222 : xor esi, esi ; lea rdi, qword ptr [rsp + 0xc] ; call rax
0x0000000000101f71 : xor esi, esi ; mov r12d, edx ; mov rbp, rax ; call rax
0x0000000000102d23 : xor esi, esi ; mov rbx, rax ; call rax
0x0000000000102d48 : xor esi, esi ; mov rdi, r12 ; call rbx
0x0000000000102d6d : xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000102d91 : xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000102db1 : xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000000e814e : xor esi, esi ; ret
0x00000000000eb45d : xor esi, esi ; ret 0x4002
0x0000000000173de4 : xor esp, dword ptr [rip - 0x7cb800] ; add dword ptr [rdi + 3], esi ; ret
0x0000000000173dd5 : xor esp, dword ptr [rip] ; add bl, dh ; ret
0x0000000000194e05 : xor esp, edi ; call qword ptr [rax]
0x0000000000065b39 : xor esp, esp ; jmp 0x636b4
0x0000000000065b38 : xor r12d, r12d ; jmp 0x636b5
0x00000000001ae51c : xor r8b, byte ptr [rcx] ; add al, dh ; out 0xf4, al ; jmp qword ptr [rcx]
0x00000000001ae614 : xor r8d, dword ptr [rcx] ; add byte ptr [rax - 0x18], bl ; hlt ; jmp qword ptr [rcx]
0x00000000000751d6 : xor r8d, r8d ; call rbx
0x00000000001101c0 : xor r9b, bpl ; ret
0x0000000000029a72 : xor r9d, r9d ; call r15
0x00000000000fb912 : xor rax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x000000000002084a : xor rax, qword ptr [0x30] ; call rax
0x000000000003530f : xor rax, qword ptr [0x30] ; jmp rax
0x0000000000020849 : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000003530e : xor rax, qword ptr fs:[0x30] ; jmp rax
0x000000000008ae95 : xor rax, rax ; ret
0x000000000003a63a : xor rax, rdx ; sub rax, rdx ; ret
0x00000000001288a3 : xor rdi, qword ptr [0x30] ; call rax
0x00000000001288a2 : xor rdi, qword ptr fs:[0x30] ; call rax
0x0000000000039fb6 : xor rdx, qword ptr [0x30] ; call rdx
0x0000000000039fb5 : xor rdx, qword ptr fs:[0x30] ; call rdx
0x00000000001aab38 : xor rsi, rdx ; call qword ptr [rax]

Unique gadgets found: 21630
