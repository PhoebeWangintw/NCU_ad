Gadgets information
============================================================
0x0000000000400633 : adc al, 0x55 ; mov edi, 0x600e20 ; mov rbp, rsp ; call rax
0x000000000040072b : adc al, 0xdc ; add rbx, 1 ; cmp rbx, rbp ; jne 0x400739 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000400599 : adc byte ptr [rax], ah ; cmp rax, 0xe ; mov rbp, rsp ; ja 0x4005b4 ; pop rbp ; ret
0x00000000004005b4 : adc byte ptr [rax], ah ; jmp rax
0x00000000004005f4 : adc byte ptr [rax], ah ; jmp rdx
0x0000000000400592 : adc byte ptr [rax], ah ; push rbp ; sub rax, 0x601058 ; cmp rax, 0xe ; mov rbp, rsp ; ja 0x4005bb ; pop rbp ; ret
0x00000000004005c9 : adc byte ptr [rax], ah ; sar rax, 3 ; mov rbp, rsp ; mov rdx, rax ; shr rdx, 0x3f ; add rax, rdx ; sar rax, 1 ; jne 0x4005fe ; pop rbp ; ret
0x00000000004005a4 : add bl, byte ptr [rbp - 0x3d] ; mov eax, 0 ; test rax, rax ; je 0x4005b8 ; pop rbp ; mov edi, 0x601058 ; jmp rax
0x00000000004005e1 : add bl, byte ptr [rbp - 0x3d] ; mov edx, 0 ; test rdx, rdx ; je 0x4005f8 ; pop rbp ; mov rsi, rax ; mov edi, 0x601058 ; jmp rdx
0x000000000040074f : add bl, dh ; ret
0x000000000040058f : add byte ptr [rax + 0x60105f], bh ; push rbp ; sub rax, 0x601058 ; cmp rax, 0xe ; mov rbp, rsp ; ja 0x4005be ; pop rbp ; ret
0x00000000004005cb : add byte ptr [rax - 0x3f], cl ; clc ; add ecx, dword ptr [rax - 0x77] ; in eax, 0x48 ; mov edx, eax ; shr rdx, 0x3f ; add rax, rdx ; sar rax, 1 ; jne 0x4005fc ; pop rbp ; ret
0x00000000004005ab : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rsi*8 + 0x5d], 0xbf ; pop rax ; adc byte ptr [rax], ah ; jmp rax
0x00000000004005e8 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rsi*8 + 0x5d], cl ; mov rsi, rax ; mov edi, 0x601058 ; jmp rdx
0x000000000040074d : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004005a9 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rsi*8 + 0x5d], 0xbf ; pop rax ; adc byte ptr [rax], ah ; jmp rax
0x00000000004005e6 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rsi*8 + 0x5d], cl ; mov rsi, rax ; mov edi, 0x601058 ; jmp rdx
0x000000000040074b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040071b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r14 ; mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004006d0 : add byte ptr [rax], al ; add byte ptr [rax], al ; leave ; ret
0x000000000040071c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdx, r13 ; mov rsi, r14 ; mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000040074c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004005a8 : add byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x4005b4 ; pop rbp ; mov edi, 0x601058 ; jmp rax
0x000000000040062b : add byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x40065a ; push rbp ; mov edi, 0x600e20 ; mov rbp, rsp ; call rax
0x00000000004005e5 : add byte ptr [rax], al ; add byte ptr [rax], al ; test rdx, rdx ; je 0x4005f4 ; pop rbp ; mov rsi, rax ; mov edi, 0x601058 ; jmp rdx
0x000000000040071d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r14 ; mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004006d1 : add byte ptr [rax], al ; add cl, cl ; ret
0x00000000004004db : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000400626 : add byte ptr [rax], al ; je 0x40065f ; mov eax, 0 ; test rax, rax ; je 0x40065f ; push rbp ; mov edi, 0x600e20 ; mov rbp, rsp ; call rax
0x00000000004006d2 : add byte ptr [rax], al ; leave ; ret
0x000000000040058e : add byte ptr [rax], al ; mov eax, 0x60105f ; push rbp ; sub rax, 0x601058 ; cmp rax, 0xe ; mov rbp, rsp ; ja 0x4005bf ; pop rbp ; ret
0x000000000040071e : add byte ptr [rax], al ; mov rdx, r13 ; mov rsi, r14 ; mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000040074e : add byte ptr [rax], al ; ret
0x0000000000400752 : add byte ptr [rax], al ; sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004005aa : add byte ptr [rax], al ; test rax, rax ; je 0x4005b2 ; pop rbp ; mov edi, 0x601058 ; jmp rax
0x000000000040062d : add byte ptr [rax], al ; test rax, rax ; je 0x400658 ; push rbp ; mov edi, 0x600e20 ; mov rbp, rsp ; call rax
0x00000000004005e7 : add byte ptr [rax], al ; test rdx, rdx ; je 0x4005f2 ; pop rbp ; mov rsi, rax ; mov edi, 0x601058 ; jmp rdx
0x000000000040058d : add byte ptr [rax], r8b ; mov eax, 0x60105f ; push rbp ; sub rax, 0x601058 ; cmp rax, 0xe ; mov rbp, rsp ; ja 0x4005c0 ; pop rbp ; ret
0x0000000000400594 : add byte ptr [rbp + 0x48], dl ; sub eax, 0x601058 ; cmp rax, 0xe ; mov rbp, rsp ; ja 0x4005b9 ; pop rbp ; ret
0x000000000040071f : add byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r14 ; mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000400618 : add byte ptr [rcx], al ; ret
0x0000000000400627 : add byte ptr [rsi + rbx - 0x48], dh ; add byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x40065e ; push rbp ; mov edi, 0x600e20 ; mov rbp, rsp ; call rax
0x00000000004006d3 : add cl, cl ; ret
0x0000000000400730 : add dword ptr [rax + 0x39], ecx ; jmp 0x4007be
0x0000000000400614 : add eax, 0x200a4e ; add ebx, esi ; ret
0x00000000004005db : add eax, edx ; sar rax, 1 ; jne 0x4005ec ; pop rbp ; ret
0x000000000040072e : add ebx, 1 ; cmp rbx, rbp ; jne 0x400736 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000400619 : add ebx, esi ; ret
0x00000000004005cf : add ecx, dword ptr [rax - 0x77] ; in eax, 0x48 ; mov edx, eax ; shr rdx, 0x3f ; add rax, rdx ; sar rax, 1 ; jne 0x4005f8 ; pop rbp ; ret
0x0000000000400737 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004004de : add esp, 8 ; ret
0x00000000004005da : add rax, rdx ; sar rax, 1 ; jne 0x4005ed ; pop rbp ; ret
0x000000000040072d : add rbx, 1 ; cmp rbx, rbp ; jne 0x400737 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000400736 : add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004004dd : add rsp, 8 ; ret
0x0000000000400625 : and byte ptr [rax], al ; add byte ptr [rsi + rbx - 0x48], dh ; add byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x400660 ; push rbp ; mov edi, 0x600e20 ; mov rbp, rsp ; call rax
0x0000000000400617 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000400729 : call qword ptr [r12 + rbx*8]
0x000000000040072a : call qword ptr [rsp + rbx*8]
0x000000000040063d : call rax
0x00000000004005ce : clc ; add ecx, dword ptr [rax - 0x77] ; in eax, 0x48 ; mov edx, eax ; shr rdx, 0x3f ; add rax, rdx ; sar rax, 1 ; jne 0x4005f9 ; pop rbp ; ret
0x00000000004005df : clc ; jne 0x4005e8 ; pop rbp ; ret
0x0000000000400621 : cmp dword ptr [rip + 0x2007f8], 0 ; je 0x400664 ; mov eax, 0 ; test rax, rax ; je 0x400664 ; push rbp ; mov edi, 0x600e20 ; mov rbp, rsp ; call rax
0x0000000000400622 : cmp eax, 0x2007f8 ; add byte ptr [rsi + rbx - 0x48], dh ; add byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x400663 ; push rbp ; mov edi, 0x600e20 ; mov rbp, rsp ; call rax
0x000000000040059d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x4005b0 ; pop rbp ; ret
0x0000000000400732 : cmp ebx, ebp ; jne 0x400732 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000400620 : cmp qword ptr [rip + 0x2007f8], 0 ; je 0x400665 ; mov eax, 0 ; test rax, rax ; je 0x400665 ; push rbp ; mov edi, 0x600e20 ; mov rbp, rsp ; call rax
0x000000000040059c : cmp rax, 0xe ; mov rbp, rsp ; ja 0x4005b1 ; pop rbp ; ret
0x0000000000400731 : cmp rbx, rbp ; jne 0x400733 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000400712 : dec dword ptr [rax - 0x7b] ; in eax, dx ; je 0x400753 ; nop dword ptr [rax + rax] ; mov rdx, r13 ; mov rsi, r14 ; mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000040072c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000400589 : hlt ; nop word ptr [rax + rax] ; mov eax, 0x60105f ; push rbp ; sub rax, 0x601058 ; cmp rax, 0xe ; mov rbp, rsp ; ja 0x4005c4 ; pop rbp ; ret
0x00000000004005b0 : hlt ; pop rbp ; mov edi, 0x601058 ; jmp rax
0x00000000004005ed : hlt ; pop rbp ; mov rsi, rax ; mov edi, 0x601058 ; jmp rdx
0x00000000004005d2 : in eax, 0x48 ; mov edx, eax ; shr rdx, 0x3f ; add rax, rdx ; sar rax, 1 ; jne 0x4005f5 ; pop rbp ; ret
0x00000000004005a2 : in eax, 0x77 ; add bl, byte ptr [rbp - 0x3d] ; mov eax, 0 ; test rax, rax ; je 0x4005ba ; pop rbp ; mov edi, 0x601058 ; jmp rax
0x0000000000400715 : in eax, dx ; je 0x400750 ; nop dword ptr [rax + rax] ; mov rdx, r13 ; mov rsi, r14 ; mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000400728 : inc dword ptr [rcx - 1] ; adc al, 0xdc ; add rbx, 1 ; cmp rbx, rbp ; jne 0x40073c ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004005a3 : ja 0x4005aa ; pop rbp ; ret
0x00000000004005af : je 0x4005ad ; pop rbp ; mov edi, 0x601058 ; jmp rax
0x00000000004005ec : je 0x4005ed ; pop rbp ; mov rsi, rax ; mov edi, 0x601058 ; jmp rdx
0x0000000000400632 : je 0x400653 ; push rbp ; mov edi, 0x600e20 ; mov rbp, rsp ; call rax
0x0000000000400628 : je 0x40065d ; mov eax, 0 ; test rax, rax ; je 0x40065d ; push rbp ; mov edi, 0x600e20 ; mov rbp, rsp ; call rax
0x0000000000400716 : je 0x40074f ; nop dword ptr [rax + rax] ; mov rdx, r13 ; mov rsi, r14 ; mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000400733 : jmp 0x4007bb
0x00000000004005b7 : jmp rax
0x00000000004005f7 : jmp rdx
0x00000000004005e0 : jne 0x4005e7 ; pop rbp ; ret
0x0000000000400734 : jne 0x400730 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000400611 : lcall ptr [rbp - 0x3a] ; add eax, 0x200a4e ; add ebx, esi ; ret
0x00000000004006d4 : leave ; ret
0x0000000000400613 : mov byte ptr [rip + 0x200a4e], 1 ; ret
0x00000000004006cf : mov eax, 0 ; leave ; ret
0x00000000004005a7 : mov eax, 0 ; test rax, rax ; je 0x4005b5 ; pop rbp ; mov edi, 0x601058 ; jmp rax
0x000000000040062a : mov eax, 0 ; test rax, rax ; je 0x40065b ; push rbp ; mov edi, 0x600e20 ; mov rbp, rsp ; call rax
0x0000000000400590 : mov eax, 0x60105f ; push rbp ; sub rax, 0x601058 ; cmp rax, 0xe ; mov rbp, rsp ; ja 0x4005bd ; pop rbp ; ret
0x000000000040063b : mov ebp, esp ; call rax
0x00000000004005a1 : mov ebp, esp ; ja 0x4005ac ; pop rbp ; ret
0x00000000004005d1 : mov ebp, esp ; mov rdx, rax ; shr rdx, 0x3f ; add rax, rdx ; sar rax, 1 ; jne 0x4005f6 ; pop rbp ; ret
0x0000000000400635 : mov edi, 0x600e20 ; mov rbp, rsp ; call rax
0x00000000004005b2 : mov edi, 0x601058 ; jmp rax
0x00000000004005f2 : mov edi, 0x601058 ; jmp rdx
0x0000000000400727 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000400726 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004005e4 : mov edx, 0 ; test rdx, rdx ; je 0x4005f5 ; pop rbp ; mov rsi, rax ; mov edi, 0x601058 ; jmp rdx
0x00000000004005d4 : mov edx, eax ; shr rdx, 0x3f ; add rax, rdx ; sar rax, 1 ; jne 0x4005f3 ; pop rbp ; ret
0x0000000000400721 : mov edx, ebp ; mov rsi, r14 ; mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004005f0 : mov esi, eax ; mov edi, 0x601058 ; jmp rdx
0x0000000000400724 : mov esi, esi ; mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000040063a : mov rbp, rsp ; call rax
0x00000000004005a0 : mov rbp, rsp ; ja 0x4005ad ; pop rbp ; ret
0x00000000004005d0 : mov rbp, rsp ; mov rdx, rax ; shr rdx, 0x3f ; add rax, rdx ; sar rax, 1 ; jne 0x4005f7 ; pop rbp ; ret
0x0000000000400720 : mov rdx, r13 ; mov rsi, r14 ; mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004005d3 : mov rdx, rax ; shr rdx, 0x3f ; add rax, rdx ; sar rax, 1 ; jne 0x4005f4 ; pop rbp ; ret
0x0000000000400723 : mov rsi, r14 ; mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004005ef : mov rsi, rax ; mov edi, 0x601058 ; jmp rdx
0x00000000004006c6 : movabs al, byte ptr [0xfffffe31e8004007] ; mov eax, 0 ; leave ; ret
0x000000000040058b : nop dword ptr [rax + rax] ; mov eax, 0x60105f ; push rbp ; sub rax, 0x601058 ; cmp rax, 0xe ; mov rbp, rsp ; ja 0x4005c2 ; pop rbp ; ret
0x0000000000400718 : nop dword ptr [rax + rax] ; mov rdx, r13 ; mov rsi, r14 ; mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000400748 : nop dword ptr [rax + rax] ; ret
0x0000000000400747 : nop dword ptr cs:[rax + rax] ; ret
0x000000000040058a : nop word ptr [rax + rax] ; mov eax, 0x60105f ; push rbp ; sub rax, 0x601058 ; cmp rax, 0xe ; mov rbp, rsp ; ja 0x4005c3 ; pop rbp ; ret
0x0000000000400746 : nop word ptr cs:[rax + rax] ; ret
0x0000000000400616 : or ah, byte ptr [rax] ; add byte ptr [rcx], al ; ret
0x0000000000400739 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000400615 : or r12b, byte ptr [rax] ; add byte ptr [rcx], al ; ret
0x000000000040073c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040073e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000400740 : pop r14 ; pop r15 ; ret
0x0000000000400742 : pop r15 ; ret
0x0000000000400598 : pop rax ; adc byte ptr [rax], ah ; cmp rax, 0xe ; mov rbp, rsp ; ja 0x4005b5 ; pop rbp ; ret
0x00000000004005b3 : pop rax ; adc byte ptr [rax], ah ; jmp rax
0x00000000004005f3 : pop rax ; adc byte ptr [rax], ah ; jmp rdx
0x00000000004005c8 : pop rax ; adc byte ptr [rax], ah ; sar rax, 3 ; mov rbp, rsp ; mov rdx, rax ; shr rdx, 0x3f ; add rax, rdx ; sar rax, 1 ; jne 0x4005ff ; pop rbp ; ret
0x0000000000400612 : pop rbp ; mov byte ptr [rip + 0x200a4e], 1 ; ret
0x00000000004005b1 : pop rbp ; mov edi, 0x601058 ; jmp rax
0x00000000004005ee : pop rbp ; mov rsi, rax ; mov edi, 0x601058 ; jmp rdx
0x000000000040073b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040073f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004005a5 : pop rbp ; ret
0x000000000040073a : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000400591 : pop rdi ; adc byte ptr [rax], ah ; push rbp ; sub rax, 0x601058 ; cmp rax, 0xe ; mov rbp, rsp ; ja 0x4005bc ; pop rbp ; ret
0x0000000000400743 : pop rdi ; ret
0x0000000000400741 : pop rsi ; pop r15 ; ret
0x000000000040073d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000400634 : push rbp ; mov edi, 0x600e20 ; mov rbp, rsp ; call rax
0x0000000000400595 : push rbp ; sub rax, 0x601058 ; cmp rax, 0xe ; mov rbp, rsp ; ja 0x4005b8 ; pop rbp ; ret
0x00000000004004e1 : ret
0x00000000004005d5 : ret 0xc148
0x00000000004005dc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x4005eb ; pop rbp ; ret
0x00000000004005ae : sal byte ptr [rsp + rsi*8 + 0x5d], 0xbf ; pop rax ; adc byte ptr [rax], ah ; jmp rax
0x00000000004005eb : sal byte ptr [rsp + rsi*8 + 0x5d], cl ; mov rsi, rax ; mov edi, 0x601058 ; jmp rdx
0x00000000004005de : sar eax, 1 ; jne 0x4005e9 ; pop rbp ; ret
0x00000000004005cd : sar eax, 3 ; mov rbp, rsp ; mov rdx, rax ; shr rdx, 0x3f ; add rax, rdx ; sar rax, 1 ; jne 0x4005fa ; pop rbp ; ret
0x00000000004005dd : sar rax, 1 ; jne 0x4005ea ; pop rbp ; ret
0x00000000004005cc : sar rax, 3 ; mov rbp, rsp ; mov rdx, rax ; shr rdx, 0x3f ; add rax, rdx ; sar rax, 1 ; jne 0x4005fb ; pop rbp ; ret
0x00000000004005d7 : shr edx, 0x3f ; add rax, rdx ; sar rax, 1 ; jne 0x4005f0 ; pop rbp ; ret
0x00000000004005d6 : shr rdx, 0x3f ; add rax, rdx ; sar rax, 1 ; jne 0x4005f1 ; pop rbp ; ret
0x0000000000400597 : sub eax, 0x601058 ; cmp rax, 0xe ; mov rbp, rsp ; ja 0x4005b6 ; pop rbp ; ret
0x00000000004005c7 : sub eax, 0x601058 ; sar rax, 3 ; mov rbp, rsp ; mov rdx, rax ; shr rdx, 0x3f ; add rax, rdx ; sar rax, 1 ; jne 0x400600 ; pop rbp ; ret
0x0000000000400755 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000400596 : sub rax, 0x601058 ; cmp rax, 0xe ; mov rbp, rsp ; ja 0x4005b7 ; pop rbp ; ret
0x00000000004005c6 : sub rax, 0x601058 ; sar rax, 3 ; mov rbp, rsp ; mov rdx, rax ; shr rdx, 0x3f ; add rax, rdx ; sar rax, 1 ; jne 0x400601 ; pop rbp ; ret
0x0000000000400754 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040071a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdx, r13 ; mov rsi, r14 ; mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000040074a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400725 : test byte ptr [rcx + rcx*4 - 1], 0x41 ; call qword ptr [rsp + rbx*8]
0x00000000004005ad : test eax, eax ; je 0x4005af ; pop rbp ; mov edi, 0x601058 ; jmp rax
0x0000000000400630 : test eax, eax ; je 0x400655 ; push rbp ; mov edi, 0x600e20 ; mov rbp, rsp ; call rax
0x0000000000400714 : test ebp, ebp ; je 0x400751 ; nop dword ptr [rax + rax] ; mov rdx, r13 ; mov rsi, r14 ; mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004005ea : test edx, edx ; je 0x4005ef ; pop rbp ; mov rsi, rax ; mov edi, 0x601058 ; jmp rdx
0x00000000004005ac : test rax, rax ; je 0x4005b0 ; pop rbp ; mov edi, 0x601058 ; jmp rax
0x000000000040062f : test rax, rax ; je 0x400656 ; push rbp ; mov edi, 0x600e20 ; mov rbp, rsp ; call rax
0x0000000000400713 : test rbp, rbp ; je 0x400752 ; nop dword ptr [rax + rax] ; mov rdx, r13 ; mov rsi, r14 ; mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004005e9 : test rdx, rdx ; je 0x4005f0 ; pop rbp ; mov rsi, rax ; mov edi, 0x601058 ; jmp rdx

Unique gadgets found: 175
